{"version":3,"sources":["../node_modules/react/index.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@ckeditor/ckeditor5-utils/src/ckeditorerror.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/range.js","../node_modules/lodash-es/last.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/position.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/position.js","../node_modules/@ckeditor/ckeditor5-utils/src/mix.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@ckeditor/ckeditor5-utils/src/emittermixin.js","../node_modules/@ckeditor/ckeditor5-core/src/plugin.js","../node_modules/axios/index.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/range.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/filler.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/element.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/text.js","../node_modules/@ckeditor/ckeditor5-ui/src/view.js","../node_modules/@ckeditor/ckeditor5-utils/src/log.js","../node_modules/@ckeditor/ckeditor5-utils/src/keyboard.js","../node_modules/react-router-dom/esm/react-router-dom.js","../node_modules/@ckeditor/ckeditor5-utils/src/observablemixin.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/text.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/moveoperation.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/splitoperation.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/react-redux/es/components/Context.js","../node_modules/react-redux/es/utils/batch.js","../node_modules/react-redux/es/utils/Subscription.js","../node_modules/react-redux/es/components/Provider.js","../node_modules/react-redux/es/components/connectAdvanced.js","../node_modules/react-redux/es/utils/shallowEqual.js","../node_modules/react-redux/es/connect/wrapMapToProps.js","../node_modules/react-redux/es/connect/mapDispatchToProps.js","../node_modules/react-redux/es/connect/mapStateToProps.js","../node_modules/react-redux/es/connect/mergeProps.js","../node_modules/react-redux/es/connect/selectorFactory.js","../node_modules/react-redux/es/connect/connect.js","../node_modules/react-redux/es/index.js","../node_modules/lodash-es/_root.js","../node_modules/@ckeditor/ckeditor5-utils/src/comparearrays.js","../node_modules/@ckeditor/ckeditor5-utils/src/dom/istext.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/mergeoperation.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/operation.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/lodash-es/isObjectLike.js","../node_modules/lodash-es/isObject.js","../node_modules/@ckeditor/ckeditor5-utils/src/isiterable.js","../node_modules/lodash-es/isEqual.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/attributeoperation.js","../node_modules/@ckeditor/ckeditor5-core/src/command.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/textproxy.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/utils.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/element.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/insertoperation.js","../node_modules/lodash-es/_coreJsData.js","../node_modules/lodash-es/_isMasked.js","../node_modules/lodash-es/_baseIsNative.js","../node_modules/lodash-es/_getValue.js","../node_modules/lodash-es/_getNative.js","../node_modules/@ckeditor/ckeditor5-utils/src/dom/global.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/selection.js","../node_modules/@ckeditor/ckeditor5-utils/src/collection.js","../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/axios/lib/utils.js","../node_modules/@ckeditor/ckeditor5-utils/src/uid.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/observer.js","../node_modules/@ckeditor/ckeditor5-ui/src/tooltip/tooltipview.js","../node_modules/@ckeditor/ckeditor5-ui/src/button/buttonview.js","../node_modules/lodash-es/_Symbol.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/treewalker.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/textproxy.js","../node_modules/@ckeditor/ckeditor5-utils/src/dom/rect.js","../node_modules/@ckeditor/ckeditor5-utils/src/diff.js","../node_modules/tiny-invariant/dist/tiny-invariant.esm.js","../node_modules/resolve-pathname/index.js","../node_modules/value-equal/index.js","../node_modules/history/esm/history.js","../node_modules/lodash-es/_copyObject.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/node.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/node.js","../node_modules/prop-types/index.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/nodelist.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/treewalker.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/markeroperation.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/renameoperation.js","../node_modules/lodash-es/isArray.js","../node_modules/lodash-es/_DataView.js","../node_modules/lodash-es/_Promise.js","../node_modules/lodash-es/_Set.js","../node_modules/lodash-es/_WeakMap.js","../node_modules/lodash-es/_getTag.js","../node_modules/lodash-es/_nodeUtil.js","../node_modules/@ckeditor/ckeditor5-utils/src/dom/isnode.js","../node_modules/@ckeditor/ckeditor5-utils/src/tomap.js","../node_modules/@ckeditor/ckeditor5-ui/src/template.js","../node_modules/lodash-es/_toSource.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/documentfragment.js","../node_modules/lodash-es/eq.js","../node_modules/@ckeditor/ckeditor5-utils/src/dom/emittermixin.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/domeventobserver.js","../node_modules/@ckeditor/ckeditor5-utils/src/keystrokehandler.js","../node_modules/@ckeditor/ckeditor5-utils/src/focustracker.js","../node_modules/lodash-es/_listCacheClear.js","../node_modules/lodash-es/_assocIndexOf.js","../node_modules/lodash-es/_listCacheDelete.js","../node_modules/lodash-es/_listCacheGet.js","../node_modules/lodash-es/_listCacheHas.js","../node_modules/lodash-es/_listCacheSet.js","../node_modules/lodash-es/_ListCache.js","../node_modules/lodash-es/_Map.js","../node_modules/redux/es/redux.js","../node_modules/react-router/esm/react-router.js","../node_modules/lodash-es/isBuffer.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/documentfragment.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/liverange.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/lodash-es/_getPrototype.js","../node_modules/lodash-es/_isPrototype.js","../node_modules/lodash-es/isArrayLike.js","../node_modules/lodash-es/_baseUnary.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/editableelement.js","../node_modules/@ckeditor/ckeditor5-utils/src/env.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/domeventdata.js","../node_modules/lodash-es/_arrayEach.js","../node_modules/lodash-es/_baseAssign.js","../node_modules/lodash-es/_baseAssignIn.js","../node_modules/lodash-es/_copyArray.js","../node_modules/lodash-es/_copySymbols.js","../node_modules/lodash-es/_getSymbolsIn.js","../node_modules/lodash-es/_copySymbolsIn.js","../node_modules/lodash-es/_getAllKeysIn.js","../node_modules/lodash-es/_initCloneArray.js","../node_modules/lodash-es/_cloneArrayBuffer.js","../node_modules/lodash-es/_cloneDataView.js","../node_modules/lodash-es/_cloneRegExp.js","../node_modules/lodash-es/_cloneSymbol.js","../node_modules/lodash-es/_cloneTypedArray.js","../node_modules/lodash-es/_initCloneByTag.js","../node_modules/lodash-es/_baseCreate.js","../node_modules/lodash-es/_initCloneObject.js","../node_modules/lodash-es/_baseIsMap.js","../node_modules/lodash-es/isMap.js","../node_modules/lodash-es/_baseIsSet.js","../node_modules/lodash-es/isSet.js","../node_modules/lodash-es/_baseClone.js","../node_modules/@ckeditor/ckeditor5-utils/src/dom/indexof.js","../node_modules/@ckeditor/ckeditor5-utils/src/dom/getancestors.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/domconverter.js","../node_modules/@ckeditor/ckeditor5-utils/src/dom/getcommonancestor.js","../node_modules/lodash-es/_nativeKeysIn.js","../node_modules/lodash-es/_baseKeysIn.js","../node_modules/lodash-es/keysIn.js","../node_modules/lodash-es/_nativeKeys.js","../node_modules/lodash-es/_baseKeys.js","../node_modules/lodash-es/keys.js","../node_modules/lodash-es/_arrayFilter.js","../node_modules/lodash-es/_getSymbols.js","../node_modules/lodash-es/_defineProperty.js","../node_modules/lodash-es/_Uint8Array.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/containerelement.js","../node_modules/@ckeditor/ckeditor5-utils/src/dom/iswindow.js","../node_modules/lodash-es/_stackClear.js","../node_modules/lodash-es/_stackDelete.js","../node_modules/lodash-es/_stackGet.js","../node_modules/lodash-es/_stackHas.js","../node_modules/lodash-es/_stackSet.js","../node_modules/lodash-es/_Stack.js","../node_modules/@ckeditor/ckeditor5-utils/src/spy.js","../node_modules/@ckeditor/ckeditor5-utils/src/eventinfo.js","../node_modules/webpack/buildin/global.js","../node_modules/@ckeditor/ckeditor5-utils/src/version.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/lodash-es/_getAllKeys.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/matcher.js","../node_modules/@ckeditor/ckeditor5-utils/src/count.js","../node_modules/@ckeditor/ckeditor5-utils/src/dom/isrange.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/rootattributeoperation.js","../node_modules/invariant/browser.js","../node_modules/lodash-es/isPlainObject.js","../node_modules/webpack/buildin/harmony-module.js","../node_modules/react-dom/index.js","../node_modules/react-is/index.js","../node_modules/lodash-es/_freeGlobal.js","../node_modules/lodash-es/_overArg.js","../node_modules/lodash-es/isFunction.js","../node_modules/lodash-es/_baseAssignValue.js","../node_modules/lodash-es/_assignValue.js","../node_modules/lodash-es/stubArray.js","../node_modules/lodash-es/_arrayPush.js","../node_modules/lodash-es/isLength.js","../node_modules/lodash-es/_isIndex.js","../node_modules/lodash-es/_baseGetAllKeys.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@ckeditor/ckeditor5-utils/src/priorities.js","../node_modules/@ckeditor/ckeditor5-utils/src/objecttomap.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/documentselection.js","../node_modules/@ckeditor/ckeditor5-utils/src/fastdiff.js","../node_modules/@ckeditor/ckeditor5-utils/src/dom/getborderwidths.js","../node_modules/@ckeditor/ckeditor5-ui/src/viewcollection.js","../node_modules/@ckeditor/ckeditor5-ui/src/focuscycler.js","../node_modules/@ckeditor/ckeditor5-ui/src/icon/iconview.js","../node_modules/@ckeditor/ckeditor5-basic-styles/src/attributecommand.js","../node_modules/@ckeditor/ckeditor5-utils/src/first.js","../node_modules/jwt-decode/lib/index.js","../node_modules/lodash-es/_nativeCreate.js","../node_modules/lodash-es/_hashClear.js","../node_modules/lodash-es/_hashDelete.js","../node_modules/lodash-es/_hashGet.js","../node_modules/lodash-es/_hashHas.js","../node_modules/lodash-es/_hashSet.js","../node_modules/lodash-es/_Hash.js","../node_modules/lodash-es/_mapCacheClear.js","../node_modules/lodash-es/_isKeyable.js","../node_modules/lodash-es/_getMapData.js","../node_modules/lodash-es/_mapCacheDelete.js","../node_modules/lodash-es/_mapCacheGet.js","../node_modules/lodash-es/_mapCacheHas.js","../node_modules/lodash-es/_mapCacheSet.js","../node_modules/lodash-es/_MapCache.js","../node_modules/lodash-es/_setCacheAdd.js","../node_modules/lodash-es/_setCacheHas.js","../node_modules/lodash-es/_SetCache.js","../node_modules/lodash-es/_arraySome.js","../node_modules/lodash-es/_cacheHas.js","../node_modules/lodash-es/_equalArrays.js","../node_modules/lodash-es/_mapToArray.js","../node_modules/lodash-es/_setToArray.js","../node_modules/lodash-es/_equalByTag.js","../node_modules/lodash-es/_equalObjects.js","../node_modules/lodash-es/_baseIsEqualDeep.js","../node_modules/lodash-es/_baseIsEqual.js","../node_modules/lodash-es/_baseTimes.js","../node_modules/lodash-es/_baseIsArguments.js","../node_modules/lodash-es/isArguments.js","../node_modules/lodash-es/_arrayLikeKeys.js","../node_modules/@ckeditor/ckeditor5-ui/src/toolbar/toolbarseparatorview.js","../node_modules/@ckeditor/ckeditor5-ui/src/toolbar/toolbarview.js","../node_modules/@ckeditor/ckeditor5-ui/src/bindings/preventdefault.js","../node_modules/@ckeditor/ckeditor5-engine/src/dataprocessor/basichtmlwriter.js","../node_modules/@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor.js","../node_modules/lodash-es/_baseIsTypedArray.js","../node_modules/lodash-es/isTypedArray.js","../node_modules/@ckeditor/ckeditor5-paragraph/src/paragraphcommand.js","../node_modules/@ckeditor/ckeditor5-paragraph/src/paragraph.js","../node_modules/lodash-es/identity.js","../node_modules/lodash-es/_apply.js","../node_modules/lodash-es/_overRest.js","../node_modules/lodash-es/constant.js","../node_modules/lodash-es/_baseSetToString.js","../node_modules/lodash-es/_shortOut.js","../node_modules/lodash-es/_setToString.js","../node_modules/lodash-es/_baseRest.js","../node_modules/lodash-es/_isIterateeCall.js","../node_modules/lodash-es/_createAssigner.js","../node_modules/lodash-es/assignIn.js","../node_modules/axios/lib/defaults.js","../node_modules/symbol-observable/es/index.js","../node_modules/react-router/node_modules/path-to-regexp/index.js","../node_modules/object-assign/index.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/core/createError.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/cancel/Cancel.js","../node_modules/symbol-observable/es/ponyfill.js","../node_modules/create-react-context/lib/index.js","../node_modules/lodash-es/stubFalse.js","../node_modules/lodash-es/_cloneBuffer.js","../node_modules/@ckeditor/ckeditor5-undo/theme/icons/undo.svg","../node_modules/@ckeditor/ckeditor5-undo/theme/icons/redo.svg","../node_modules/@ckeditor/ckeditor5-basic-styles/theme/icons/bold.svg","../node_modules/@ckeditor/ckeditor5-basic-styles/theme/icons/italic.svg","../node_modules/@ckeditor/ckeditor5-ui/theme/icons/dropdown-arrow.svg","../node_modules/redux-thunk/es/index.js","../node_modules/@ckeditor/ckeditor5-utils/src/config.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/rooteditableelement.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/document.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/attributeelement.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/emptyelement.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/uielement.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/downcastwriter.js","../node_modules/@ckeditor/ckeditor5-utils/src/dom/insertat.js","../node_modules/@ckeditor/ckeditor5-utils/src/dom/remove.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/renderer.js","../node_modules/lodash-es/isEqualWith.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/mutationobserver.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/keyobserver.js","../node_modules/lodash-es/now.js","../node_modules/lodash-es/isSymbol.js","../node_modules/lodash-es/toNumber.js","../node_modules/lodash-es/debounce.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/fakeselectionobserver.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/selectionobserver.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/focusobserver.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/observer/compositionobserver.js","../node_modules/@ckeditor/ckeditor5-utils/src/dom/scroll.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/view.js","../node_modules/@ckeditor/ckeditor5-engine/src/conversion/mapper.js","../node_modules/@ckeditor/ckeditor5-engine/src/conversion/modelconsumable.js","../node_modules/@ckeditor/ckeditor5-engine/src/conversion/downcastdispatcher.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/selection.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/documentselection.js","../node_modules/@ckeditor/ckeditor5-engine/src/conversion/conversionhelpers.js","../node_modules/lodash-es/cloneDeep.js","../node_modules/@ckeditor/ckeditor5-engine/src/conversion/downcasthelpers.js","../node_modules/@ckeditor/ckeditor5-engine/src/conversion/upcasthelpers.js","../node_modules/@ckeditor/ckeditor5-engine/src/controller/editingcontroller.js","../node_modules/@ckeditor/ckeditor5-core/src/plugincollection.js","../node_modules/@ckeditor/ckeditor5-core/src/commandcollection.js","../node_modules/@ckeditor/ckeditor5-utils/src/translation-service.js","../node_modules/@ckeditor/ckeditor5-utils/src/locale.js","../node_modules/@ckeditor/ckeditor5-engine/src/conversion/viewconsumable.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/schema.js","../node_modules/@ckeditor/ckeditor5-engine/src/conversion/upcastdispatcher.js","../node_modules/@ckeditor/ckeditor5-engine/src/controller/datacontroller.js","../node_modules/@ckeditor/ckeditor5-engine/src/conversion/conversion.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/batch.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/detachoperation.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/rootelement.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/writer.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/differ.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/history.js","../node_modules/@ckeditor/ckeditor5-utils/src/unicode.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/document.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/markercollection.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/liveposition.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/utils/insertcontent.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/utils/deletecontent.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/utils/modifyselection.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/utils/getselectedcontent.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/utils/selection-post-fixer.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/model.js","../node_modules/@ckeditor/ckeditor5-core/src/editingkeystrokehandler.js","../node_modules/@ckeditor/ckeditor5-core/src/editor/editor.js","../node_modules/@ckeditor/ckeditor5-core/src/editor/utils/dataapimixin.js","../node_modules/@ckeditor/ckeditor5-core/src/editor/utils/elementapimixin.js","../node_modules/@ckeditor/ckeditor5-utils/src/dom/setdatainelement.js","../node_modules/@ckeditor/ckeditor5-ui/src/componentfactory.js","../node_modules/@ckeditor/ckeditor5-core/src/editor/editorui.js","../node_modules/@ckeditor/ckeditor5-engine/src/view/placeholder.js","../node_modules/@ckeditor/ckeditor5-utils/src/elementreplacer.js","../node_modules/@ckeditor/ckeditor5-editor-classic/src/classiceditorui.js","../node_modules/@ckeditor/ckeditor5-ui/src/toolbar/normalizetoolbarconfig.js","../node_modules/@ckeditor/ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus.js","../node_modules/@ckeditor/ckeditor5-ui/src/editorui/editoruiview.js","../node_modules/@ckeditor/ckeditor5-ui/src/label/labelview.js","../node_modules/@ckeditor/ckeditor5-ui/src/editorui/boxed/boxededitoruiview.js","../node_modules/@ckeditor/ckeditor5-ui/src/editableui/inline/inlineeditableuiview.js","../node_modules/@ckeditor/ckeditor5-ui/src/editableui/editableuiview.js","../node_modules/@ckeditor/ckeditor5-utils/src/dom/tounit.js","../node_modules/@ckeditor/ckeditor5-ui/src/panel/sticky/stickypanelview.js","../node_modules/@ckeditor/ckeditor5-editor-classic/src/classiceditoruiview.js","../node_modules/@ckeditor/ckeditor5-editor-classic/src/classiceditor.js","../node_modules/@ckeditor/ckeditor5-core/src/editor/utils/attachtoform.js","../node_modules/@ckeditor/ckeditor5-utils/src/dom/getdatafromelement.js","../node_modules/@ckeditor/ckeditor5-clipboard/src/datatransfer.js","../node_modules/@ckeditor/ckeditor5-clipboard/src/clipboardobserver.js","../node_modules/@ckeditor/ckeditor5-clipboard/src/utils/viewtoplaintext.js","../node_modules/@ckeditor/ckeditor5-clipboard/src/clipboard.js","../node_modules/@ckeditor/ckeditor5-clipboard/src/utils/plaintexttohtml.js","../node_modules/@ckeditor/ckeditor5-clipboard/src/utils/normalizeclipboarddata.js","../node_modules/@ckeditor/ckeditor5-enter/src/entercommand.js","../node_modules/@ckeditor/ckeditor5-enter/src/enterobserver.js","../node_modules/@ckeditor/ckeditor5-enter/src/enter.js","../node_modules/@ckeditor/ckeditor5-enter/src/shiftentercommand.js","../node_modules/@ckeditor/ckeditor5-enter/src/shiftenter.js","../node_modules/@ckeditor/ckeditor5-typing/src/utils/changebuffer.js","../node_modules/@ckeditor/ckeditor5-typing/src/inputcommand.js","../node_modules/@ckeditor/ckeditor5-typing/src/utils/injectunsafekeystrokeshandling.js","../node_modules/@ckeditor/ckeditor5-typing/src/utils/utils.js","../node_modules/@ckeditor/ckeditor5-utils/src/difftochanges.js","../node_modules/@ckeditor/ckeditor5-typing/src/utils/injecttypingmutationshandling.js","../node_modules/@ckeditor/ckeditor5-typing/src/input.js","../node_modules/@ckeditor/ckeditor5-typing/src/deletecommand.js","../node_modules/@ckeditor/ckeditor5-typing/src/deleteobserver.js","../node_modules/@ckeditor/ckeditor5-typing/src/utils/injectandroidbackspacemutationshandling.js","../node_modules/@ckeditor/ckeditor5-typing/src/delete.js","../node_modules/@ckeditor/ckeditor5-typing/src/typing.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/nooperation.js","../node_modules/@ckeditor/ckeditor5-engine/src/model/operation/transform.js","../node_modules/@ckeditor/ckeditor5-undo/src/basecommand.js","../node_modules/@ckeditor/ckeditor5-undo/src/undocommand.js","../node_modules/@ckeditor/ckeditor5-undo/src/redocommand.js","../node_modules/@ckeditor/ckeditor5-undo/src/undoediting.js","../node_modules/@ckeditor/ckeditor5-undo/src/undoui.js","../node_modules/@ckeditor/ckeditor5-undo/src/undo.js","../node_modules/@ckeditor/ckeditor5-essentials/src/essentials.js","../node_modules/@ckeditor/ckeditor5-heading/src/headingcommand.js","../node_modules/@ckeditor/ckeditor5-heading/src/headingediting.js","../node_modules/@ckeditor/ckeditor5-ui/src/model.js","../node_modules/@ckeditor/ckeditor5-ui/src/dropdown/dropdownpanelview.js","../node_modules/@ckeditor/ckeditor5-utils/src/dom/position.js","../node_modules/@ckeditor/ckeditor5-utils/src/dom/getpositionedancestor.js","../node_modules/@ckeditor/ckeditor5-ui/src/dropdown/dropdownview.js","../node_modules/@ckeditor/ckeditor5-ui/src/dropdown/button/dropdownbuttonview.js","../node_modules/@ckeditor/ckeditor5-ui/src/list/listview.js","../node_modules/@ckeditor/ckeditor5-ui/src/list/listitemview.js","../node_modules/@ckeditor/ckeditor5-ui/src/list/listseparatorview.js","../node_modules/@ckeditor/ckeditor5-ui/src/button/switchbuttonview.js","../node_modules/@ckeditor/ckeditor5-ui/src/dropdown/utils.js","../node_modules/@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler.js","../node_modules/@ckeditor/ckeditor5-heading/src/headingui.js","../node_modules/@ckeditor/ckeditor5-heading/src/utils.js","../node_modules/@ckeditor/ckeditor5-heading/src/heading.js","../node_modules/@ckeditor/ckeditor5-basic-styles/src/bold/boldediting.js","../node_modules/@ckeditor/ckeditor5-basic-styles/src/bold/boldui.js","../node_modules/@ckeditor/ckeditor5-basic-styles/src/bold.js","../node_modules/@ckeditor/ckeditor5-basic-styles/src/italic/italicediting.js","../node_modules/@ckeditor/ckeditor5-basic-styles/src/italic/italicui.js","../node_modules/@ckeditor/ckeditor5-basic-styles/src/italic.js","../node_modules/@ckeditor/ckeditor5-autoformat/src/blockautoformatediting.js","../node_modules/@ckeditor/ckeditor5-autoformat/src/inlineautoformatediting.js","../node_modules/@ckeditor/ckeditor5-autoformat/src/autoformat.js","../node_modules/lodash-es/isElement.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/axios/lib/axios.js","../node_modules/axios/node_modules/is-buffer/index.js","../node_modules/axios/lib/core/Axios.js","../node_modules/process/browser.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/core/enhanceError.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/btoa.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/create-react-context/lib/implementation.js","../node_modules/gud/index.js","../node_modules/fbjs/lib/warning.js","../node_modules/fbjs/lib/emptyFunction.js","../node_modules/react-router/node_modules/isarray/index.js","../node_modules/@ckeditor/ckeditor5-react/dist/ckeditor.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/classnames/index.js","../node_modules/jwt-decode/lib/base64_url_decode.js","../node_modules/jwt-decode/lib/atob.js","../node_modules/lodash-es/cloneDeepWith.js","../node_modules/lodash-es/clone.js"],"names":["module","exports","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","d","__webpack_exports__","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","_setPrototypeOf__WEBPACK_IMPORTED_MODULE_0__","subClass","superClass","create","constructor","value","_typeof2","obj","Symbol","iterator","_typeof","_possibleConstructorReturn","self","call","assertThisInitialized","wrapNativeSuper_wrapNativeSuper","Class","_cache","Map","undefined","fn","Function","toString","indexOf","has","get","set","Wrapper","construct","arguments","this","ckeditorerror_CKEditorError","attachLinkToDocumentation","DOCUMENTATION_URL","_Error","CKEditorError","message","data","_this","classCallCheck","JSON","stringify","possibleConstructorReturn","name","inherits","createClass","error","Error","matchedErrorName","match","concat","Range","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","n","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","_position__WEBPACK_IMPORTED_MODULE_4__","_treewalker__WEBPACK_IMPORTED_MODULE_5__","_ckeditor_ckeditor5_utils_src_ckeditorerror__WEBPACK_IMPORTED_MODULE_6__","_ckeditor_ckeditor5_utils_src_comparearrays__WEBPACK_IMPORTED_MODULE_7__","start","end","_createAt","stickiness","isCollapsed","a","mark","wrap","_context","prev","next","delegateYield","boundaries","ignoreElementEnd","stop","position","isAfter","isBefore","otherRange","loose","containsStart","containsPosition","isEqual","containsEnd","item","pos","_createBefore","ranges","isIntersecting","push","commonRangeStart","commonRangeEnd","diffAt","getCommonPath","posParent","parent","path","howMany","maxOffset","offset","getShiftedBy","slice","_howMany","options","getItems","treeWalker","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_value","_args2","_context2","done","t0","return","finish","getPositions","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_value2","_args3","_context3","nextPosition","operation","type","_getTransformedByInsertOperation","_getTransformedByMoveOperation","_getTransformedBySplitOperation","_getTransformedByMergeOperation","operations","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_i","result","getTransformedByOperation","splice","apply","err","range","j","containsRange","getCommonAncestor","toJSON","spread","_getTransformedByInsertion","sourcePosition","targetPosition","_getTransformedByMove","insertionPosition","root","deletionPosition","insertPosition","moveRange","_createFromPositionAndShift","_getTransformedByDeletion","differenceSet","getDifference","difference","common","getIntersection","transformedCommon","_getCombined","deletePosition","newStart","newEnd","startParentPath","getParentPath","endParentPath","shift","element","offsetSize","clone","ref","sort","b","refIndex","_i2","json","doc","fromJSON","lodash_es_last","array","position_Position","Position","is","ckeditorerror","Array","getPath","otherPosition","comparearrays","skip","startPosition","treewalker","getAncestors","includeSelf","cmp","Math","min","ancestorsA","ancestorsB","shifted","compareWith","left","right","leftParent","thisParentPath","posParentPath","movedRange","splitPosition","moveTargetPosition","graveyardPosition","transformed","source","combined","from","newOffset","getChild","offsetToIndex","node","index","model_text","startOffset","textNode","itemOrPosition","_createAfter","endOffset","graveyard","getRoot","rootName","get_get","property","receiver","Reflect","base","object","hasOwnProperty","_superPropBase","desc","getOwnPropertyDescriptor","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","_treewalker__WEBPACK_IMPORTED_MODULE_2__","_ckeditor_ckeditor5_utils_src_comparearrays__WEBPACK_IMPORTED_MODULE_3__","_ckeditor_ckeditor5_utils_src_ckeditorerror__WEBPACK_IMPORTED_MODULE_4__","_editableelement__WEBPACK_IMPORTED_MODULE_5__","thisPath","otherPath","childCount","editable","offsetInText","mix","baseClass","_len","mixins","_key","forEach","mixin","getOwnPropertyNames","getOwnPropertySymbols","sourceDescriptor","_toConsumableArray","arr","isArray","arr2","_arrayWithoutHoles","iter","_iterableToArray","_nonIterableSpread","_getEmitterListenedTo","_setEmitterId","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_eventinfo__WEBPACK_IMPORTED_MODULE_2__","_uid__WEBPACK_IMPORTED_MODULE_3__","_priorities__WEBPACK_IMPORTED_MODULE_4__","_listeningTo","_emitterId","EmitterMixin","on","event","callback","listenTo","once","wasFired","off","args","stopListening","emitter","emitterInfo","eventCallbacks","emitters","_getEmitterId","emitterId","callbacks","eventName","events","getEvents","childEventName","newEventNodes","childEvents","substr","lastIndexOf","_newEventNodes","createEventNamespace","lists","getCallbacksListsForNamespace","priority","callbackDefinition","added","removeCallback","pop","fire","eventOrInfo","eventInfo","getCallbacksForEvent","_events","_len2","_key2","callbackArgs","called","_delegations","destinations","passAllDestinations","fireDelegatedEvents","delegate","_len3","_key3","to","nameOrFunction","stopDelegating","delete","clear","listeningEmitter","listenedToEmitterId","id","eventNode","callbacksLists","childCallbacksLists","fireArgs","_step2$value","delegatedInfo","Plugin","_ckeditor_ckeditor5_utils_src_observablemixin__WEBPACK_IMPORTED_MODULE_2__","_ckeditor_ckeditor5_utils_src_mix__WEBPACK_IMPORTED_MODULE_3__","editor","_slicedToArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_iterableToArrayLimit","_nonIterableRest","_assertThisInitialized","ReferenceError","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","_position__WEBPACK_IMPORTED_MODULE_3__","_treewalker__WEBPACK_IMPORTED_MODULE_4__","getLastMatchingPosition","enlargeTrimSkip","direction","isAtStart","isAtEnd","nodeAfterStart","nodeAfter","nodeBeforeEnd","nodeBefore","startElement","endElement","_createFromParentsAndOffsets","size","BR_FILLER","NBSP_FILLER","INLINE_FILLER_LENGTH","INLINE_FILLER","startsWithFiller","isInlineFiller","getDataWithoutFiller","isBlockFiller","injectQuirksHandling","_ckeditor_ckeditor5_utils_src_keyboard__WEBPACK_IMPORTED_MODULE_0__","_ckeditor_ckeditor5_utils_src_dom_istext__WEBPACK_IMPORTED_MODULE_1__","domDocument","fillerBr","createElement","dataset","ckeFiller","createTextNode","domNode","domText","templateBlockFillers","WeakMap","blockFiller","templateBlockFiller","window","document","isEqualNode","view","jumpOverInlineFiller","evt","keyCode","arrowleft","domSelection","domTarget","ownerDocument","defaultView","getSelection","rangeCount","getRangeAt","collapsed","domParent","startContainer","domOffset","collapse","Element","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_4__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","_node__WEBPACK_IMPORTED_MODULE_6__","_nodelist__WEBPACK_IMPORTED_MODULE_7__","_text__WEBPACK_IMPORTED_MODULE_8__","_textproxy__WEBPACK_IMPORTED_MODULE_9__","_ckeditor_ckeditor5_utils_src_isiterable__WEBPACK_IMPORTED_MODULE_10__","_Node","attrs","children","_children","_insertChild","getNode","getNodeIndex","getNodeStartOffset","relativePath","map","_clone","getAttributes","nodes","items","normalize","_remove","_insertNodes","_removeNodes","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","child","attributes","Text","_data","View","_ckeditor_ckeditor5_utils_src_ckeditorerror__WEBPACK_IMPORTED_MODULE_2__","_viewcollection__WEBPACK_IMPORTED_MODULE_3__","_template__WEBPACK_IMPORTED_MODULE_4__","_ckeditor_ckeditor5_utils_src_dom_emittermixin__WEBPACK_IMPORTED_MODULE_5__","_ckeditor_ckeditor5_utils_src_observablemixin__WEBPACK_IMPORTED_MODULE_6__","_ckeditor_ckeditor5_utils_src_collection__WEBPACK_IMPORTED_MODULE_7__","_ckeditor_ckeditor5_utils_src_mix__WEBPACK_IMPORTED_MODULE_8__","_ckeditor_ckeditor5_utils_src_isiterable__WEBPACK_IMPORTED_MODULE_9__","locale","isRendered","t","_viewCollections","_unboundChildren","createCollection","collection","decorate","add","remove","definition","template","extend","render","registerChild","getViews","c","destroy","_revertData","revert","_bindTemplate","bind","_ckeditorerror__WEBPACK_IMPORTED_MODULE_0__","log","console","warn","keyCodes","getCode","parseKeystroke","getEnvKeystrokeText","_env__WEBPACK_IMPORTED_MODULE_1__","macGlyphsToModifiers","⌘","⇧","⌥","modifiersToMacGlyphs","ctrl","alt","arrowup","arrowright","arrowdown","backspace","enter","space","esc","tab","cmd","code","letter","String","fromCharCode","toLowerCase","_code","_code2","generateKnownKeyCodes","altKey","ctrlKey","shiftKey","keystroke","splitKeystrokeText","reduce","sum","isMac","split","BrowserRouter","Link","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","react_router__WEBPACK_IMPORTED_MODULE_2__","history__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_6__","tiny_invariant__WEBPACK_IMPORTED_MODULE_7__","_React$Component","history","Component","_proto","handleClick","onClick","defaultPrevented","button","metaKey","isModifiedEvent","preventDefault","replace","_this$props","innerRef","rest","Consumer","context","location","href","createHref","_emittermixin__WEBPACK_IMPORTED_MODULE_1__","_ckeditorerror__WEBPACK_IMPORTED_MODULE_2__","lodash_es__WEBPACK_IMPORTED_MODULE_3__","lodash_es__WEBPACK_IMPORTED_MODULE_4__","observablePropertiesSymbol","boundObservablesSymbol","boundPropertiesSymbol","ObservableMixin","keys","initObservable","properties","oldValue","newValue","bindProperties","isStringArray","Set","boundProperties","propertyName","bindings","binding","bindTo","toMany","bindToMany","_observable","_bindProperties","_to","_bindings","unbind","_this2","boundObservables","unbindProperties","toObservable","toProperty","toProperties","toPropertyBindings","boundObservable","methodName","_this3","originalMethod","observable","_this4","parsedArgs","_len4","_key4","lastObservable","parsed","bindingsKeys","numberOfBindings","updateBoundObservableProperty","chain","toPropertyName","bindingsToObservable","updateBoundObservables","updateBindToBound","observables","attribute","observableAndAttributePairs","getBindingTargets","every","propertyValue","_textData","otherNode","_fireChange","MoveOperation","_operation__WEBPACK_IMPORTED_MODULE_6__","_position__WEBPACK_IMPORTED_MODULE_7__","_range__WEBPACK_IMPORTED_MODULE_8__","_ckeditor_ckeditor5_utils_src_ckeditorerror__WEBPACK_IMPORTED_MODULE_9__","_ckeditor_ckeditor5_utils_src_comparearrays__WEBPACK_IMPORTED_MODULE_10__","_utils__WEBPACK_IMPORTED_MODULE_11__","_Operation","baseVersion","newTargetPosition","getMovedRangeStart","sourceElement","targetElement","sourceOffset","targetOffset","SplitOperation","_mergeoperation__WEBPACK_IMPORTED_MODULE_7__","_position__WEBPACK_IMPORTED_MODULE_8__","_range__WEBPACK_IMPORTED_MODULE_9__","_utils__WEBPACK_IMPORTED_MODULE_10__","_ckeditor_ckeditor5_utils_src_ckeditorerror__WEBPACK_IMPORTED_MODULE_11__","getInsertionPosition","splitElement","newElement","sourceRange","Number","POSITIVE_INFINITY","_extends","assign","ReactReduxContext","react_default","createContext","batch_batch","getBatch","CLEARED","nullListeners","notify","Subscription","store","parentSub","unsubscribe","listeners","handleChangeWrapper","addNestedSub","listener","trySubscribe","subscribe","notifyNestedSubs","onStateChange","isSubscribed","Boolean","batch","current","createListenerCollection","tryUnsubscribe","Provider_Provider","_Component","Provider","notifySubscribers","subscription","state","previousState","getState","inheritsLoose","componentDidMount","_isMounted","componentWillUnmount","componentDidUpdate","prevProps","setState","Context","react","propTypes","prop_types_default","shape","func","isRequired","dispatch","any","components_Provider","EMPTY_ARRAY","NO_SUBSCRIPTION_ARRAY","storeStateUpdatesReducer","action","updateCount","payload","initStateUpdates","useIsomorphicLayoutEffect","connectAdvanced","selectorFactory","_ref","_ref2","_ref2$getDisplayName","getDisplayName","_ref2$methodName","_ref2$renderCountProp","renderCountProp","_ref2$shouldHandleSta","shouldHandleStateChanges","_ref2$storeKey","storeKey","_ref2$withRef","withRef","_ref2$forwardRef","forwardRef","_ref2$context","connectOptions","objectWithoutPropertiesLoose","browser_default","WrappedComponent","wrappedComponentName","displayName","selectorFactoryOptions","esm_extends","pure","usePureOnlyMemo","ConnectFunction","_useMemo","forwardedRef","propsContext","wrapperProps","ContextToUse","react_is","contextValue","didStoreComeFromProps","didStoreComeFromContext","childPropsSelector","createChildSelector","_useMemo2","overriddenContextValue","_useReducer","previousStateUpdateResult","forceComponentUpdateDispatch","lastChildProps","lastWrapperProps","childPropsFromStoreUpdate","renderIsScheduled","actualChildProps","didUnsubscribe","lastThrownError","checkForUpdates","newChildProps","latestStoreState","e","renderedWrappedComponent","Connect","memo","forwarded","hoist_non_react_statics_cjs_default","hasOwn","x","y","shallowEqual","objA","objB","keysA","keysB","wrapMapToPropsConstant","getConstant","constant","constantSelector","dependsOnOwnProps","getDependsOnOwnProps","mapToProps","wrapMapToPropsFunc","proxy","stateOrDispatch","ownProps","connect_mapDispatchToProps","mapDispatchToProps","redux","connect_mapStateToProps","mapStateToProps","defaultMergeProps","stateProps","dispatchProps","connect_mergeProps","mergeProps","mergedProps","areMergedPropsEqual","hasRunOnce","nextMergedProps","wrapMergePropsFunc","impureFinalPropsSelectorFactory","pureFinalPropsSelectorFactory","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","hasRunAtLeastOnce","handleSubsequentCalls","nextState","nextOwnProps","propsChanged","stateChanged","nextStateProps","statePropsChanged","handleNewState","finalPropsSelectorFactory","initMapStateToProps","initMapDispatchToProps","initMergeProps","arg","factories","strictEqual","newBatch","connect_connect","_temp","_ref$connectHOC","connectHOC","_ref$mapStateToPropsF","mapStateToPropsFactories","_ref$mapDispatchToPro","mapDispatchToPropsFactories","_ref$mergePropsFactor","mergePropsFactories","_ref$selectorFactory","_ref3","_ref3$pure","_ref3$areStatesEqual","_ref3$areOwnPropsEqua","_ref3$areStatePropsEq","_ref3$areMergedPropsE","extraOptions","react_dom","_freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__","freeSelf","compareArrays","minLen","isText","MergeOperation","_splitoperation__WEBPACK_IMPORTED_MODULE_7__","mergedElement","_createIn","_createOn","Operation","isDocumentOperation","__className","className","_defineProperty","isIterable","lodash_es_isEqual","other","_baseIsEqual","attributeoperation_AttributeOperation","AttributeOperation","isFlat","shallow","getAttribute","hasAttribute","utils","model_range","Command","_disableStack","model","refresh","isEnabled","forceDisabled","clearForceDisabled","forceDisable","TextProxy","substring","parentFirst","ancestors","getAttributeKeys","_insert","_move","_setAttribute","_normalizeNodes","_node__WEBPACK_IMPORTED_MODULE_0__","_text__WEBPACK_IMPORTED_MODULE_1__","_textproxy__WEBPACK_IMPORTED_MODULE_2__","_range__WEBPACK_IMPORTED_MODULE_3__","_documentfragment__WEBPACK_IMPORTED_MODULE_4__","_nodelist__WEBPACK_IMPORTED_MODULE_5__","_splitNodeAtPosition","_mergeNodesAtIndex","removed","_removeChildren","_removeAttribute","normalized","_haveSameAttributes","mergedNode","offsetDiff","firstPart","secondPart","nodeA","nodeB","iteratorA","iteratorB","attr","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_construct__WEBPACK_IMPORTED_MODULE_0__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_8__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_9__","_node__WEBPACK_IMPORTED_MODULE_10__","_text__WEBPACK_IMPORTED_MODULE_11__","_textproxy__WEBPACK_IMPORTED_MODULE_12__","_ckeditor_ckeditor5_utils_src_objecttomap__WEBPACK_IMPORTED_MODULE_13__","_ckeditor_ckeditor5_utils_src_isiterable__WEBPACK_IMPORTED_MODULE_14__","_matcher__WEBPACK_IMPORTED_MODULE_15__","lodash_es__WEBPACK_IMPORTED_MODULE_16__","_attrs","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_step7$value","parseAttributes","_classes","classString","parseClasses","_styles","parseInlineStyles","_customProperties","entries","join","styleString","_step$value","otherElement","_step4$value","_className","_property","patterns","matcher","getCustomProperties","classes","styles","deep","childrenClone","getChildren","cloned","getFillerOffset","count","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_i3","_keys","stylesMap","stylesString","quoteType","propertyNameStart","propertyValueStart","charAt","char","trim","classesSet","classesString","classArray","InsertOperation","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_5__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_operation__WEBPACK_IMPORTED_MODULE_7__","_nodelist__WEBPACK_IMPORTED_MODULE_9__","_moveoperation__WEBPACK_IMPORTED_MODULE_10__","_text__WEBPACK_IMPORTED_MODULE_12__","_element__WEBPACK_IMPORTED_MODULE_13__","_ckeditor_ckeditor5_utils_src_ckeditorerror__WEBPACK_IMPORTED_MODULE_14__","shouldReceiveAttributes","insert","gyPosition","originalNodes","_coreJsData","maskSrcKey","uid","exec","IE_PROTO","_isMasked","reIsHostCtor","funcProto","objectProto","funcToString","_baseIsNative_hasOwnProperty","reIsNative","RegExp","_baseIsNative","isObject","isFunction","test","_toSource","_getValue","Selection","_ckeditor_ckeditor5_utils_src_ckeditorerror__WEBPACK_IMPORTED_MODULE_3__","_range__WEBPACK_IMPORTED_MODULE_4__","_position__WEBPACK_IMPORTED_MODULE_5__","_ckeditor_ckeditor5_utils_src_mix__WEBPACK_IMPORTED_MODULE_6__","_ckeditor_ckeditor5_utils_src_emittermixin__WEBPACK_IMPORTED_MODULE_7__","_node__WEBPACK_IMPORTED_MODULE_8__","_element__WEBPACK_IMPORTED_MODULE_9__","_ckeditor_ckeditor5_utils_src_count__WEBPACK_IMPORTED_MODULE_10__","_ckeditor_ckeditor5_utils_src_isiterable__WEBPACK_IMPORTED_MODULE_11__","_documentselection__WEBPACK_IMPORTED_MODULE_12__","selectable","placeOrOffset","_ranges","_lastRangeBackward","_isFake","_fakeSelectionLabel","setTo","getRanges","first","last","firstRange","getFirstRange","lastRange","getLastRange","otherSelection","isFake","fakeSelectionLabel","anchor","focus","thisRange","found","isBackward","numOfRangesA","rangeA","getTrimmed","rangeB","nextSibling","previousSibling","_setRanges","_setFakeOptions","fake","label","backward","newFocus","_addRange","newRanges","isLastBackward","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_pushRange","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","storedRange","addedRange","intersectingRange","editableElement","Collection","_emittermixin__WEBPACK_IMPORTED_MODULE_2__","_ckeditorerror__WEBPACK_IMPORTED_MODULE_3__","_uid__WEBPACK_IMPORTED_MODULE_4__","_mix__WEBPACK_IMPORTED_MODULE_5__","_items","_itemMap","_idProperty","idProperty","_bindToExternalToInternalMap","_bindToInternalToExternalMap","_skippedIndexesFromExternal","itemId","idOrIndex","itemOrId","subject","itemDoesNotExist","externalItem","ctx","find","filter","_bindToCollection","externalCollection","as","_setUpBindToBinding","using","callbackOrProperty","factory","addItem","isExternalBoundToThis","externalItemBound","finalIndex","getIndex","skipped","_getRawTag_hasOwnProperty","nativeObjectToString","symToStringTag","_Symbol","toStringTag","_getRawTag","isOwn","tag","unmasked","_objectToString_nativeObjectToString","_objectToString","nullTag","undefinedTag","_baseGetTag_symToStringTag","_objectWithoutPropertiesLoose","excluded","sourceKeys","_objectSpread","_defineProperty__WEBPACK_IMPORTED_MODULE_0__","ownKeys","sym","_inheritsLoose","isBuffer","val","l","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","merge","assignValue","thisArg","str","uuid","floor","random","Observer","_ckeditor_ckeditor5_utils_src_dom_emittermixin__WEBPACK_IMPORTED_MODULE_2__","disable","tooltipview_TooltipView","_View","TooltipView","bindTemplate","setTemplate","class","if","text","buttonview_ButtonView","ButtonView","ariaLabelUid","tooltipView","_createTooltipView","labelView","_createLabelView","iconView","iconview","extendTemplate","_getTooltipString","tabindex","aria-labelledby","aria-disabled","aria-pressed","mousedown","click","icon","style","tooltip","keyboard","TreeWalker","_text__WEBPACK_IMPORTED_MODULE_2__","_textproxy__WEBPACK_IMPORTED_MODULE_3__","_element__WEBPACK_IMPORTED_MODULE_4__","singleCharacters","_boundaryStartParent","_boundaryEndParent","_visitedParent","_skip","prevPosition","prevVisitedParent","_this$next","_next","_previous","previousPosition","formatReturnValue","charactersCount","offsetInTextNode","Rect","_isrange__WEBPACK_IMPORTED_MODULE_2__","_iswindow__WEBPACK_IMPORTED_MODULE_3__","_getborderwidths__WEBPACK_IMPORTED_MODULE_4__","_log__WEBPACK_IMPORTED_MODULE_5__","_istext__WEBPACK_IMPORTED_MODULE_6__","lodash_es__WEBPACK_IMPORTED_MODULE_7__","rectProperties","isSourceRange","_source","sourceNode","body","contains","copyRectProperties","getDomRangeRects","getBoundingClientRect","innerWidth","innerHeight","top","bottom","width","height","anotherRect","rect","max","getArea","visibleRect","isBody","parentNode","commonAncestorContainer","parentRect","intersectionRect","_rectProperties","prop","intersectRect","scrollBarWidth","scrollBarHeight","documentElement","clientWidth","clientHeight","borderWidths","offsetWidth","offsetHeight","moveBy","rects","clientRects","getClientRects","_clientRects","_rect","_rectProperties2","p","elementOrRange","diff","_src_fastdiff__WEBPACK_IMPORTED_MODULE_0__","_delete","aLength","bLength","fastDiff","tmp","m","delta","es","fp","snake","k","y1","y2","dir","isProduction","prefix","condition","isAbsolute","pathname","spliceOne","list","resolve_pathname","toParts","fromParts","isToAbs","isFromAbs","mustEndAbs","hasTrailingSlash","up","part","unshift","value_equal","valueEqual","aType","aValue","valueOf","bValue","aKeys","bKeys","addLeadingSlash","stripLeadingSlash","stripBasename","hasBasename","stripTrailingSlash","createPath","search","hash","createLocation","currentLocation","hashIndex","searchIndex","parsePath","decodeURI","URIError","locationsAreEqual","createTransitionManager","prompt","setPrompt","nextPrompt","confirmTransitionTo","getUserConfirmation","appendListener","isActive","notifyListeners","createBrowserHistory","createHashHistory","createMemoryHistory","canUseDOM","getConfirmation","confirm","PopStateEvent","HashChangeEvent","getHistoryState","tiny_invariant_esm","globalHistory","canUseHistory","ua","userAgent","supportsHistory","needsHashChangeListener","_props","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_window$location","createKey","transitionManager","handlePopState","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","ok","fromLocation","toLocation","toIndex","allKeys","fromIndex","go","revertPop","initialLocation","listenerCount","checkDOMListeners","addEventListener","removeEventListener","isBlocked","pushState","prevIndex","nextKeys","replaceState","goBack","goForward","block","unblock","listen","unlisten","HashChangeEvent$1","HashPathCoders","hashbang","encodePath","decodePath","noslash","slash","getHashPath","replaceHashPath","_props$hashType","hashType","_HashPathCoders$hashT","ignorePath","encodedPath","prevLocation","allPaths","pushHashPath","nextPaths","clamp","lowerBound","upperBound","_props$initialEntries","initialEntries","_props$initialIndex","initialIndex","entry","nextIndex","nextEntries","canGo","_assignValue_js__WEBPACK_IMPORTED_MODULE_0__","_baseAssignValue_js__WEBPACK_IMPORTED_MODULE_1__","customizer","isNew","Node","_ckeditor_ckeditor5_utils_src_emittermixin__WEBPACK_IMPORTED_MODULE_3__","_ckeditor_ckeditor5_utils_src_mix__WEBPACK_IMPORTED_MODULE_4__","_ckeditor_ckeditor5_utils_src_comparearrays__WEBPACK_IMPORTED_MODULE_5__","lodash_es__WEBPACK_IMPORTED_MODULE_6__","nodePath","getChildIndex","_ckeditor_ckeditor5_utils_src_tomap__WEBPACK_IMPORTED_MODULE_2__","_ckeditor_ckeditor5_utils_src_comparearrays__WEBPACK_IMPORTED_MODULE_4__","getChildStartOffset","NodeList","_node__WEBPACK_IMPORTED_MODULE_3__","_nodes","totalOffset","nodeList","_this$_nodes","indexStart","_element__WEBPACK_IMPORTED_MODULE_2__","_text__WEBPACK_IMPORTED_MODULE_3__","_textproxy__WEBPACK_IMPORTED_MODULE_4__","_formatReturnValue","textLength","textProxy","MarkerOperation","_range__WEBPACK_IMPORTED_MODULE_7__","oldRange","newRange","markers","affectsData","_markers","RenameOperation","_element__WEBPACK_IMPORTED_MODULE_7__","_ckeditor_ckeditor5_utils_src_ckeditorerror__WEBPACK_IMPORTED_MODULE_8__","_position__WEBPACK_IMPORTED_MODULE_9__","oldName","newName","_DataView","_getNative","_root","_Promise","_Set","_WeakMap","dataViewCtorString","mapCtorString","_Map","promiseCtorString","setCtorString","weakMapCtorString","_getTag_getTag","_baseGetTag","resolve","Ctor","ctorString","freeExports","nodeType","freeModule","freeProcess","process","nodeUtil","types","require","isNode","Document","toMap","_objecttomap__WEBPACK_IMPORTED_MODULE_0__","lodash_es__WEBPACK_IMPORTED_MODULE_1__","Template","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_5__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_7__","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_8__","_ckeditor_ckeditor5_utils_src_mix__WEBPACK_IMPORTED_MODULE_10__","_ckeditor_ckeditor5_utils_src_emittermixin__WEBPACK_IMPORTED_MODULE_11__","_view__WEBPACK_IMPORTED_MODULE_12__","_viewcollection__WEBPACK_IMPORTED_MODULE_13__","_ckeditor_ckeditor5_utils_src_dom_isnode__WEBPACK_IMPORTED_MODULE_14__","_ckeditor_ckeditor5_utils_src_log__WEBPACK_IMPORTED_MODULE_15__","lodash_es__WEBPACK_IMPORTED_MODULE_17__","def","_isRendered","_renderNode","intoFragment","isApplying","revertData","_revertTemplateFromNode","_marked","isTemplate","t1","_renderText","_renderElement","createElementNS","ns","_renderAttributes","_renderElementChildren","_setUpListeners","textContent","hasTemplateBinding","_bindToObservable","schema","updater","getTextUpdater","attrName","attrValue","domAttrValue","attrNs","valueToBind","shouldExtend","getAttributeUpdater","_renderStyleAttribute","isFalsy","arrayValueReducer","setAttributeNS","styleName","styleValue","getStyleUpdater","container","createDocumentFragment","childIndex","isViewCollection","setParent","appendChild","childRevertData","childNodes","eventListeners","_loop","revertBindings","schemaItem","_key$split","_key$split2","domEvtName","domSelector","activateDomEventListener","syncValueSchemaValue","templateBinding","activateAttributeListener","revertBinding","removeAttribute","setAttribute","eventNameOrFunctionOrAttribute","TemplateToBinding","eventNameOrFunction","valueIfTrue","TemplateIfBinding","extendObjectValueArray","_template$text","childDef","TemplateBinding","_TemplateBinding","domEvt","matches","_TemplateBinding2","some","getValue","getValueSchemaValue","el","removeAttributeNS","normalizePlainTextDefinition","normalizeTextDefinition","arrayify","normalizeListeners","normalizeAttributes","cur","ext","_obj$a","DocumentFragment","_nodelist__WEBPACK_IMPORTED_MODULE_2__","_element__WEBPACK_IMPORTED_MODULE_3__","_text__WEBPACK_IMPORTED_MODULE_4__","_textproxy__WEBPACK_IMPORTED_MODULE_5__","_ckeditor_ckeditor5_utils_src_isiterable__WEBPACK_IMPORTED_MODULE_6__","_uid__WEBPACK_IMPORTED_MODULE_2__","_isnode__WEBPACK_IMPORTED_MODULE_3__","_iswindow__WEBPACK_IMPORTED_MODULE_4__","lodash_es__WEBPACK_IMPORTED_MODULE_5__","DomEmitterMixin","_EmitterMixin$listenT","_getProxyEmitter","ProxyEmitter","attach","detach","getNodeUID","_domNode","_domListeners","domListener","_createDomListener","useCapture","removeListener","DomEventObserver","_observer__WEBPACK_IMPORTED_MODULE_5__","_domeventdata__WEBPACK_IMPORTED_MODULE_6__","_Observer","domElement","domEventType","domEvent","onDomEvent","eventType","additionalData","KeystrokeHandler","_dom_emittermixin__WEBPACK_IMPORTED_MODULE_2__","_keyboard__WEBPACK_IMPORTED_MODULE_3__","_listener","keyEvtData","stopPropagation","FocusTracker","_observablemixin__WEBPACK_IMPORTED_MODULE_3__","_ckeditorerror__WEBPACK_IMPORTED_MODULE_4__","_elements","_nextEventLoopTimeout","_focus","_blur","focusedElement","clearTimeout","isFocused","setTimeout","_listCacheClear","__data__","_assocIndexOf","eq","_listCacheDelete","_listCacheGet","_listCacheHas","_listCacheSet","ListCache","_getNative_js__WEBPACK_IMPORTED_MODULE_0__","_root_js__WEBPACK_IMPORTED_MODULE_1__","createStore","combineReducers","bindActionCreators","applyMiddleware","symbol_observable__WEBPACK_IMPORTED_MODULE_0__","randomString","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","proto","reducer","preloadedState","enhancer","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","replaceReducer","nextReducer","outerSubscribe","observer","observeState","getUndefinedStateErrorMessage","actionType","reducers","reducerKeys","finalReducers","shapeAssertionError","finalReducerKeys","assertReducerShape","hasChanged","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","actionCreators","boundActionCreators","middlewares","_dispatch","middlewareAPI","middleware","funcs","compose","Route","Router","withRouter","create_react_context__WEBPACK_IMPORTED_MODULE_0__","create_react_context__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","history__WEBPACK_IMPORTED_MODULE_4__","tiny_invariant__WEBPACK_IMPORTED_MODULE_5__","path_to_regexp__WEBPACK_IMPORTED_MODULE_6__","path_to_regexp__WEBPACK_IMPORTED_MODULE_6___default","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_7__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_9__","hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_10__","hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_10___default","createNamedContext","_pendingLocation","staticContext","computeRootMatch","url","params","isExact","cache$1","cacheLimit$1","cacheCount$1","matchPath","_options","_options$exact","exact","_options$strict","strict","_options$sensitive","sensitive","matched","_compilePath","cacheKey","pathCache","regexp","compilePath$1","values","context$$1","computedMatch","component","Children","isEmptyChildren","createURL","staticHandler","noop","C","wrappedComponentRef","remainingProps","routeComponentProps","_root_js__WEBPACK_IMPORTED_MODULE_0__","_stubFalse_js__WEBPACK_IMPORTED_MODULE_1__","Buffer","_ckeditor_ckeditor5_utils_src_isiterable__WEBPACK_IMPORTED_MODULE_5__","_ckeditor_ckeditor5_utils_src_emittermixin__WEBPACK_IMPORTED_MODULE_6__","LiveRange","D_Coding_Folder_ideaspace_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","_range__WEBPACK_IMPORTED_MODULE_6__","_Range","_createFromRanges","boundariesChanged","contentChanged","doesOperationChangeRangeContent","toRange","_setPrototypeOf","_overArg_js__WEBPACK_IMPORTED_MODULE_0__","getPrototype","_isFunction_js__WEBPACK_IMPORTED_MODULE_0__","_isLength_js__WEBPACK_IMPORTED_MODULE_1__","EditableElement","_containerelement__WEBPACK_IMPORTED_MODULE_6__","_ckeditor_ckeditor5_utils_src_ckeditorerror__WEBPACK_IMPORTED_MODULE_7__","_ckeditor_ckeditor5_utils_src_observablemixin__WEBPACK_IMPORTED_MODULE_9__","documentSymbol","_ContainerElement","getCustomProperty","_setCustomProperty","selection","env","isEdge","isGecko","isSafari","DomEventData","lodash_es__WEBPACK_IMPORTED_MODULE_2__","domConverter","mapDomToView","_arrayEach","iteratee","_baseAssign","_copyObject","_baseAssignIn","lodash_es_keysIn","_copyArray","_copySymbols","_getSymbols","_getSymbolsIn","_arrayPush","_getPrototype","stubArray","_copySymbolsIn","_getAllKeysIn","_baseGetAllKeys","_initCloneArray_hasOwnProperty","_initCloneArray","input","_cloneArrayBuffer","arrayBuffer","byteLength","_Uint8Array","_cloneDataView","dataView","isDeep","byteOffset","reFlags","_cloneRegExp","lastIndex","symbolProto","symbolValueOf","_cloneSymbol","symbol","_cloneTypedArray","typedArray","boolTag","dateTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","_initCloneByTag","objectCreate","_baseCreate","_initCloneObject","_isPrototype","_baseIsMap_mapTag","_baseIsMap","isObjectLike","_getTag","nodeIsMap","_nodeUtil","isMap","lodash_es_isMap","_baseUnary","_baseIsSet_setTag","_baseIsSet","nodeIsSet","isSet","lodash_es_isSet","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","argsTag","funcTag","genTag","objectTag","cloneableTags","baseClone","bitmask","stack","isFull","isArr","isFunc","_cloneBuffer","_Stack","stacked","subValue","keysFunc","_getAllKeys","keysIn","_assignValue","DOCUMENT_NODE","domconverter_DomConverter","DomConverter","filler","preElements","blockElements","_domToViewMapping","_viewToDomMapping","_fakeSelectionMapping","viewDocumentSelection","viewElement","_Array$from","unbindDomElement","domFragment","viewFragment","viewNode","textData","_processDataFromViewText","mapViewToDom","bindDocumentFragments","bindElements","withChildren","viewChildrenToDom","regenerator_default","fillerPositionOffset","childView","_args","viewToDom","viewRange","domStart","viewPositionToDom","domEnd","domRange","createRange","setStart","setEnd","viewPosition","_domParent","domBefore","domAfter","viewParent","findCorrespondingDomText","istext","uiElement","getParentUIElement","_processDataFromDomText","view_text","isComment","isDocumentFragment","documentfragment","viewName","keepOriginalCase","tagName","view_element","domChildrenToView","_appendChild","domChild","viewChild","domToView","viewSelection","fakeSelectionToView","isDomSelectionBackward","viewRanges","domRangeToView","viewStart","domPositionToView","viewEnd","endContainer","findCorrespondingViewText","_viewParent","viewBefore","domElementOrDocumentFragment","isElement","_viewElement","firstChild","documentFragmentOrElement","viewText","viewEditable","domEditable","activeElement","_global$window","global","scrollX","scrollY","scrollPositions","forEachDomNodeAncestor","scrollLeft","scrollTop","_scrollPositions$shif","_scrollPositions$shif2","slicedToArray","scrollTo","ELEMENT_NODE","DOCUMENT_FRAGMENT_NODE","COMMENT_NODE","anchorNode","anchorOffset","focusNode","focusOffset","_isDomSelectionPositionCorrect","includes","prevNode","_getTouchingViewTextNode","_nodeEndsWithSpace","_hasDomParentOfType","_getTouchingInlineDomNode","nextNode","shouldLeftTrim","_checkShouldLeftTrimDomText","shouldRightTrim","_checkShouldRightTrimDomText","getNext","topmostParent","createTreeWalker","NodeFilter","SHOW_TEXT","SHOW_ELEMENT","acceptNode","FILTER_ACCEPT","FILTER_SKIP","currentNode","touchingNode","lca","boundaryParent","parents","_nativeKeysIn","_baseKeysIn_hasOwnProperty","_baseKeysIn","isProto","isArrayLike","_arrayLikeKeys","_nativeKeys","_overArg","_baseKeys_hasOwnProperty","_baseKeys","_arrayFilter","predicate","resIndex","propertyIsEnumerable","nativeGetSymbols","getSymbols","Uint8Array","ContainerElement","_Element","lastChild","isWindow","stringifiedObject","_stackClear","_ListCache","_stackDelete","_stackGet","_stackHas","LARGE_ARRAY_SIZE","_stackSet","pairs","_MapCache","Stack","src_spy","spy","eventinfo_EventInfo","EventInfo","g","_log__WEBPACK_IMPORTED_MODULE_0__","ckeditor5_package_json__WEBPACK_IMPORTED_MODULE_1__","windowOrGlobal","CKEDITOR_VERSION","ReactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","$$typeof","compare","TYPE_STATICS","getStatics","isMemo","ForwardRef","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","_baseGetAllKeys_js__WEBPACK_IMPORTED_MODULE_0__","_getSymbols_js__WEBPACK_IMPORTED_MODULE_1__","_keys_js__WEBPACK_IMPORTED_MODULE_2__","Matcher","_patterns","pattern","_pattern","_element","singleElement","isElementMatching","results","_element2","matchName","matchAttributes","getClassNames","hasClass","matchClasses","hasStyle","getStyle","matchStyles","isRange","RootAttributeOperation","format","f","argIndex","framesToPop","_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__","_getPrototype_js__WEBPACK_IMPORTED_MODULE_1__","_isObjectLike_js__WEBPACK_IMPORTED_MODULE_2__","objectCtorString","originalModule","webpackPolyfill","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","freeGlobal","transform","_isObject_js__WEBPACK_IMPORTED_MODULE_1__","asyncTag","proxyTag","_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__","_baseAssignValue_js__WEBPACK_IMPORTED_MODULE_0__","_eq_js__WEBPACK_IMPORTED_MODULE_1__","objValue","MAX_SAFE_INTEGER","reIsUint","_arrayPush_js__WEBPACK_IMPORTED_MODULE_0__","_isArray_js__WEBPACK_IMPORTED_MODULE_1__","symbolsFunc","_construct","Parent","sham","Proxy","Date","isNativeReflectConstruct","normal","highest","high","low","lowest","objectToMap","DocumentSelection","_selection__WEBPACK_IMPORTED_MODULE_3__","_ckeditor_ckeditor5_utils_src_emittermixin__WEBPACK_IMPORTED_MODULE_5__","_selection","getFirstPosition","getLastPosition","getSelectedElement","isSimilar","setFocus","atomicChanges","changeIndexes","arr1","firstIndex","findFirstDifferenceIndex","lastIndexOld","lastIndexNew","oldArrayReversed","cutAndReverse","newArrayReversed","findChangeBoundaryIndexes","newLength","fill","changeIndexesToAtomicChanges","newArray","changeIndexesToChanges","reverse","getBorderWidths","getComputedStyle","parseInt","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","ViewCollection","_ckeditor_ckeditor5_utils_src_ckeditorerror__WEBPACK_IMPORTED_MODULE_5__","_Collection","_parentElement","insertBefore","elementOrDocFragment","dest","_events3","evtName","_events2","FocusCycler","_ckeditor_ckeditor5_utils_src_dom_global__WEBPACK_IMPORTED_MODULE_2__","actions","keystrokeHandler","cancel","previous","step","collectionLength","focusables","isFocusable","_getFocusableItem","focusTracker","viewIndex","focused","display","IconView","_view__WEBPACK_IMPORTED_MODULE_6__","viewBox","_updateXMLContent","_colorFillPaths","content","svg","DOMParser","parseFromString","querySelector","innerHTML","fillColor","querySelectorAll","AttributeCommand","_Command","attributeKey","_getValueFromFirstAllowedNode","checkAttributeInSelection","forceValue","change","writer","setSelectionAttribute","removeSelectionAttribute","getValidRanges","checkAttribute","iterable","iteratorItem","base64_url_decode","InvalidTokenError","token","header","parse","_nativeCreate","_hashClear","_hashDelete","HASH_UNDEFINED","_hashGet_hasOwnProperty","_hashGet","_hashHas_hasOwnProperty","_hashHas","_hashSet_HASH_UNDEFINED","_hashSet","Hash","_Hash","_mapCacheClear","string","_isKeyable","_getMapData","_mapCacheDelete","_mapCacheGet","_mapCacheHas","_mapCacheSet","MapCache","_setCacheAdd","_setCacheHas","SetCache","_SetCache","_arraySome","_cacheHas","cache","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","_equalArrays","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","_mapToArray","_setToArray","_equalByTag_COMPARE_PARTIAL_FLAG","_equalByTag_COMPARE_UNORDERED_FLAG","errorTag","_equalByTag","convert","_equalObjects_COMPARE_PARTIAL_FLAG","_equalObjects_hasOwnProperty","_equalObjects","objProps","objLength","skipCtor","objCtor","othCtor","_baseIsEqualDeep_COMPARE_PARTIAL_FLAG","arrayTag","_baseIsEqualDeep_hasOwnProperty","_baseIsEqualDeep","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","isTypedArray","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","baseIsEqual","_baseTimes","_baseIsArguments","isArguments_hasOwnProperty","lodash_es_isArguments","_arrayLikeKeys_hasOwnProperty","inherited","isArg","isBuff","isType","skipIndexes","_isIndex","toolbarseparatorview_ToolbarSeparatorView","ToolbarSeparatorView","toolbarview_ToolbarView","ToolbarView","focustracker","keystrokes","keystrokehandler","_focusCycler","focuscycler","focusPrevious","focusNext","focusFirst","focusLast","config","basichtmlwriter_BasicHtmlWriter","BasicHtmlWriter","fragment","implementation","createHTMLDocument","htmldataprocessor_HtmlDataProcessor","HtmlDataProcessor","_domParser","_domConverter","domconverter","_htmlWriter","getHtml","_toDom","typedArrayTags","_baseIsTypedArray","isLength","nodeIsTypedArray","paragraphcommand_ParagraphCommand","ParagraphCommand","getSelectedBlocks","checkCanBecomeParagraph","blocks","rename","command","checkChild","paragraph_Paragraph","_Plugin","Paragraph","commands","register","inheritAllFrom","conversion","elementToElement","for","modelWriter","paragraphLikeElements","isEmpty","converterPriority","upcastDispatcher","conversionApi","consumable","viewItem","isParagraphable","modelCursor","wrapInParagraph","modelRange","registerPostFixer","_autoparagraphEmptyRoots","enqueueChange","getRootNames","insertElement","src_plugin","paragraph","convertItem","createPositionAt","lodash_es_identity","_apply","nativeMax","_overRest","otherArgs","lodash_es_constant","_baseSetToString","HOT_COUNT","HOT_SPAN","nativeNow","now","_setToString","lastCalled","stamp","remaining","_shortOut","_baseRest","_isIterateeCall","_createAssigner","assigner","sources","guard","assignIn","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","headers","defaults","adapter","XMLHttpRequest","getDefaultAdapter","transformRequest","transformResponse","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","Accept","method","_ponyfill_js__WEBPACK_IMPORTED_MODULE_0__","isarray","pathToRegexp","compile","tokensToFunction","tokensToRegExp","PATH_REGEXP","res","tokens","defaultDelimiter","delimiter","escaped","capture","group","modifier","asterisk","partial","repeat","optional","escapeGroup","escapeString","encodeURIComponentPretty","encodeURI","charCodeAt","toUpperCase","opts","encode","pretty","encodeURIComponent","segment","attachKeys","re","flags","route","endsWithDelimiter","groups","regexpToRegexp","parts","arrayToRegexp","stringToRegexp","propIsEnumerable","test1","test2","test3","shouldUseNative","symbols","toObject","s","settle","buildURL","parseHeaders","isURLSameOrigin","createError","btoa","Promise","reject","requestData","requestHeaders","request","loadEvent","xDomain","XDomainRequest","onprogress","ontimeout","auth","username","password","Authorization","open","paramsSerializer","readyState","responseURL","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onerror","cookies","xsrfValue","withCredentials","read","setRequestHeader","onDownloadProgress","onUploadProgress","upload","cancelToken","promise","then","abort","send","enhanceError","__CANCEL__","Cancel","symbolObservablePonyfill","__esModule","_react2","_interopRequireDefault","_implementation2","default","allocUnsafe","copy","createThunkMiddleware","extraArgument","thunk","withExtraArgument","config_Config","Config","configurations","defaultConfigurations","_config","define","_setObjectToTarget","_setToTarget","_getFromSource","isDefine","cloneDeepWith","leaveDOMReferences","cloneConfig","configuration","rootNameSymbol","rooteditableelement_RootEditableElement","_EditableElement","RootEditableElement","esm_get","editableelement","document_Document","documentselection","roots","_postFixers","postFixer","wasFixed","observablemixin","DEFAULT_PRIORITY","attributeelement_AttributeElement","AttributeElement","_priority","_id","_clonesGroup","nonUiChildrenCount","emptyelement_EmptyElement","EmptyElement","emptyelement_getFillerOffset","view_node","uielement_UIElement","UIElement","uielement_getFillerOffset","toDomElement","injectUiElementHandling","domSelectionCollapsed","jumpedOverAnyUiElement","nextViewPosition","newDomPosition","jumpOverUiElement","downcastwriter_DowncastWriter","DowncastWriter","_cloneGroups","_setTo","_setFocus","attributeElement","containerelement","_document","renderFunction","_addClass","_removeClass","_setStyle","_removeStyle","_removeCustomProperty","positionOrRange","view_position","_breakAttributes","_breakAttributesRange","view_range","move","positionOffset","positionParent","_removeFromClonedElementsGroup","mergeAttributes","mergeTextNodes","newPosition","validateNodesToInsert","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","validNodesToInsert","validNode","_iterator14","isiterable","toConsumableArray","getParentContainer","_addToClonedElementsGroup","endPosition","rangeOrItem","validateRangeContainer","_this$_breakAttribute","breakStart","breakEnd","parentContainer","mergePosition","walker","getWalker","rangeToRemove","parentElement","ancestor","countBefore","_wrapPosition","setSelection","_wrapRange","_this$_breakAttribute2","_unwrapChildren","groupName","view_selection","wrapElement","wrapPositions","isAttribute","isUI","_wrapAttributeElement","shouldABeOutsideB","newAttribute","_wrapChildren","offsetChange","_wrapPositions","unwrapElement","unwrapPositions","unwrapped","_unwrapAttributeElement","_unwrapPositions","_this$_breakAttribute3","movePositionToTextNode","breakTextNode","fakePosition","createAttributeElement","wrapRange","wrapper","toWrap","canBeJoined","getStyleNames","setStyle","addClass","toUnwrap","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_key5","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_key6","removeClass","removeStyle","forceSplitText","rangeStart","rangeEnd","isContainerOrFragment","_newPosition","offsetAfter","clonedNode","nodesToMove","_newPosition2","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","getIdentity","textToMove","t2","nodeBeforeLength","insertAt","nodeToInsert","remove_remove","removeChild","renderer_Renderer","Renderer","domDocuments","markedAttributes","markedChildren","markedTexts","_inlineFiller","_fakeSelectionContainer","inlineFillerPosition","_updateChildrenMappings","_isSelectionInInlineFiller","_removeInlineFiller","_getInlineFillerPosition","_needsInlineFillerAtSelection","_updateAttrs","_updateChildren","_updateText","fillerDomPosition","view_filler","addInlineFiller","_updateSelection","_updateFocus","actualDomChildren","expectedDomChildren","_diffNodeLists","_findReplaceActions","counter","equal","insertIndex","deleteIndex","_updateElementMappings","firstPos","selectionPosition","domFillerNode","selectionParent","selectionOffset","findAncestor","isEditable","newDomText","actualText","expectedText","fastdiff","insertData","deleteData","domAttrKeys","viewAttrKeys","nodesToUnbind","_markDescendantTextToSync","domChildList","fakeSelectionContainer","childList","filterOutFakeSelectionContainer","src_diff","actualDomChild","expectedDomChild","actualDom","expectedDom","newActions","actualSlice","expectedSlice","areSimilar","_removeDomSelection","_removeFakeSelection","domRoot","_updateFakeSelection","_updateDomSelection","removeAllRanges","selectNodeContents","addRange","bindFakeSelection","_domSelectionNeedsUpdate","childAtOffset","fixGeckoSelectionAfterBr","isDomSelectionCorrect","oldViewSelection","domSelectionToView","activeDomElement","domParentOrArray","nodeAfterFiller","fillerNode","node1","node2","isnode","lodash_es_isEqualWith","mutationobserver_MutationObserver","MutationObserver","characterData","characterDataOldValue","subtree","renderer","_renderer","_domElements","_mutationObserver","_onMutations","takeRecords","observe","disconnect","domMutations","mutatedTexts","mutatedElements","mutation","_isBogusBrMutation","_mutation","oldText","newText","viewMutations","mutatedText","markToSync","viewChildren","newViewChildren","sameNodes","oldChildren","newChildren","viewSelectionAnchor","viewSelectionFocus","forceRender","child1","child2","addedNode","removedNodes","addedNodes","observer_observer","keyobserver_KeyObserver","_DomEventObserver","KeyObserver","domeventobserver","lodash_es_now","lodash_es_isSymbol","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","lodash_es_toNumber","isBinary","FUNC_ERROR_TEXT","nativeMin","lodash_es_debounce","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","flush","fakeselectionobserver_FakeSelectionObserver","FakeSelectionObserver","_fireSelectionChangeDoneDebounced","_handleSelectionMove","newSelection","oldSelection","selectionobserver_SelectionObserver","SelectionObserver","mutationObserver","getObserver","_documents","WeakSet","_clearInfiniteLoopInterval","setInterval","_clearInfiniteLoop","_loopbackCounter","_handleSelectionChange","clearInterval","isReadOnly","newViewSelection","focusobserver_FocusObserver","FocusObserver","_renderTimeoutId","selectedEditable","compositionobserver_CompositionObserver","CompositionObserver","isComposing","scrollViewportToShowTarget","_ref$viewportOffset","viewportOffset","targetWindow","getWindow","currentWindow","currentFrame","scrollAncestorsToShowRect","getParentElement","getRectRelativeToWindow","targetRect","scrollWindowToShowRect","frameElement","targetShiftedDownRect","targetShiftedUpRect","viewportRect","dom_rect","excludeScrollbarsAndBorders","isAbove","isBelow","isLeftOf","isRightOf","getRect","parentWindow","firstRect","secondRect","isrange","relativeWindow","frame","frameRect","scrollAncestorsToShowTarget","view_View","domRoots","_initialDomRootAttributes","_observers","_ongoingChange","_postFixersInProgress","_renderingDisabled","_hasChangedSinceTheLastRendering","_writer","addObserver","_render","viewRoot","_name","initialDomRootAttributes","_Array$from$_i","updateContenteditableAttribute","enable","viewRangeToDom","isRenderingInProgress","callbackResult","_callPostFixers","flag","disableObservers","enableObservers","mapper_Mapper","Mapper","_modelToViewMapping","_viewToModelMapping","_viewToModelLengthCallbacks","_markerNameToElements","viewContainer","modelPosition","_findPositionIn","viewBlock","findMappedViewAncestor","modelParent","modelOffset","_toModelOffset","model_position","modelElement","toModelElement","toViewElement","elements","toModelPosition","toViewPosition","mapper","isPhantom","boundElements","getElementsWithSameId","viewElementName","lengthCallback","viewOffset","getModelLength","len","expectedOffset","lastLength","_moveViewPositionToTextNode","emittermixin","modelconsumable_ModelConsumable","ModelConsumable","_consumable","_textProxyRegistry","_normalizeConsumableType","textproxy","_getSymbolForTextProxy","itemConsumables","startMap","endMap","_addSymbolForTextProxy","downcastdispatcher_DowncastDispatcher","DowncastDispatcher","dispatcher","differ","getMarkersToRemove","convertMarkerRemove","getChanges","convertInsert","convertRemove","convertAttribute","attributeOldValue","attributeNewValue","getMarkersToAdd","_change","convertMarkerAdd","_createInsertConsumable","_testAndFire","_clearConversionApi","_createConsumableForRange","markersAtSelection","getMarkersAtPosition","_createSelectionConsumable","_markersAtSelection","marker","markerRange","getRange","shouldMarkerChangeBeConverted","markerName","containsItem","selection_Selection","model_node","anyNewRange","_removeAllRanges","directChange","_popRange","attributeKeys","model_element","visited","startBlock","endBlock","getParentBlock","isUnvisitedBlockContainer","isTouching","getTopMostBlocks","selected","_selected","parentBlock","findAncestorBlock","limitStartPosition","limitEndPosition","_checkRange","isBlock","hasParentLimit","isLimit","storePrefix","documentselection_DocumentSelection","documentselection_LiveSelection","containsEntireContent","_getStoredAttributes","overrideGravity","restoreGravity","hasOwnRange","isGravityOverridden","startsWith","_Selection","LiveSelection","_model","_attributePriority","_fixGraveyardRangesData","_hasChangedRange","_overriddenGravityRegister","_validateSelectionRange","_updateMarkers","_updateAttributes","_this$_fixGraveyardRa","liveRange","_fixGraveyardSelection","changeParent","isNoLongerEmpty","storedAttributes","clearAttributesStoredInElement","_getDefaultRange","optionsOrPlaceOrOffset","_refreshAttributes","overrideUid","src_uid","_prepareRange","liverange","fromRange","selectionRange","_marker","_marker2","clearAll","newAttributes","tomap","_getSurroundingAttributes","oldAttributes","_setAttributesTo","changed","_step5$value","newKey","oldKey","_step8$value","realKey","getAttrsIfCharacter","_node","removedRangeStart","positionCandidate","getNearestSelectionRange","conversionhelpers_ConversionHelpers","ConversionHelpers","dispatchers","_dispatchers","conversionHelper","lodash_es_cloneDeep","_baseClone","downcasthelpers_DowncastHelpers","_ConversionHelpers","DowncastHelpers","normalizeToElementConfig","elementCreator","consume","downcastElementToElement","modelValue","getFromAttributeCreator","oldViewElement","newViewElement","viewWriter","toViewRange","unwrap","downcasthelpers_wrap","downcastAttributeToElement","normalizeToAttributeConfig","attributeCreator","oldAttribute","_keys2","_keys3","downcastAttributeToAttribute","isOpening","viewStartElement","viewEndElement","bindElementToMarker","markerNameToElements","unbindElementsFromMarkerName","createRangeOn","clearClonedElementsGroup","downcastMarkerToElement","highlightDescriptor","prepareDescriptor","createViewElementFromHighlightDescriptor","rangeAfterWrap","highlightElement","viewHighlightElement","removeHighlight","downcastMarkerToHighlight","viewElementType","modelData","viewElementDefinition","createContainerElement","createUIElement","_keys4","createViewElementFromDefinition","modelAttributeValue","upcasthelpers_UpcastHelpers","UpcastHelpers","upcastElementToElement","normalizeModelAttributeConfig","converter","prepareToAttributeConverter","elementName","getViewElementNameFromConfig","upcastElementToAttribute","viewKey","keyName","normalizeViewAttributeKeyValueConfig","upcastAttributeToAttribute","oldModel","data-name","normalizeToMarkerConfig","upcastElementToMarker","view_matcher","matcherResult","splitResult","splitToAllowedParent","convertChildren","getSplitParts","createPositionBefore","createPositionAfter","cursorParent","prepareToElementConverter","viewAttributeKeyToCopy","defaultModelValue","modelKey","onlyViewNameIsDefined","modelAttribute","setAttributeOn","editingcontroller_EditingController","EditingController","downcastDispatcher","_disableRendering","convertChanges","convertSelection","modelSelection","toModelRange","convertSelectionChange","createText","modelEnd","createRangeIn","unbindViewElement","brokenPosition","breakAttributes","plugincollection_PluginCollection","PluginCollection","availablePlugins","_editor","_availablePlugins","_plugins","PluginConstructor","pluginName","plugin","plugins","removePlugins","that","loading","loaded","pluginConstructors","mapToAvailableConstructors","removePluginConstructors","missingPlugins","pluginNameOrConstructor","getPluginConstructor","getMissingPluginNames","errorMsg","all","loadPlugin","initPlugins","requires","RequiredPluginConstructorOrName","RequiredPluginConstructor","requiredBy","_add","instantiatePlugin","catch","loadedPlugins","PluginConstructorOrName","promises","pluginInstance","plugin1","plugin2","commandcollection_CommandCollection","CommandCollection","_commands","commandName","execute","names","translate","language","translationKey","numberOfLanguages","CKEDITOR_TRANSLATIONS","hasTranslation","locale_Locale","Locale","_t","translatedString","viewconsumable_ViewConsumable","ViewConsumable","_consumables","consumables","elementConsumables","viewconsumable_ViewElementConsumables","consumablesFromElement","createFrom","ViewElementConsumables","_canConsumeName","_test","_consume","_revert","consumableName","combineWalkers","_marked2","convertToMinimalFlatRanges","schema_Schema","Schema","_sourceDefinitions","_attributeProperties","schema_SchemaContext","getDefinition","itemName","_clearCache","_compiledDefinitions","_compile","getDefinitions","isInline","_checkContextMatch","attributeName","allowAttributes","positionOrBaseElement","elementToMerge","checkMerge","retValue","_ref4","getAttributeProperties","selectionOrRangeOrPosition","rangeCommonAncestor","firstPosition","_getValidRangesForRange","backwardWalker","forwardWalker","removeDisallowedAttributes","compiledDefinitions","sourceRules","itemNames","_itemNames","compileBaseItemRule","_itemNames2","compileAllowContentOf","_itemNames3","compileAllowWhere","_i4","_itemNames4","_itemName3","compileAllowAttributesOf","compileInheritPropertiesFrom","_i5","_itemNames5","_itemName4","cleanUpAllowIn","cleanUpAllowAttributes","contextItemIndex","contextItem","getItem","allowIn","parentRule","SchemaContext","mapContextItem","getNames","query","endsWith","sourceItemRules","itemRule","allowContentOf","allowWhere","allowAttributesOf","inheritTypesFrom","sourceItemRule","typeNames","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","copyTypes","copyProperty","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","inheritFrom","makeInheritAllWork","allowContentOfItemName","getAllowedChildren","allowedItem","_compiledDefinitions$","allowedIn","_compiledDefinitions$2","inheritAttributes","existingItems","itemToCheck","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_itemRule$propertyNam","ctxItem","_context4","_context5","forward","_step18","_context6","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_iterator18","_step19","_context7","getMinimalFlatRanges","upcastdispatcher_UpcastDispatcher","UpcastDispatcher","_splitParts","_modelCursor","_convertItem","_convertChildren","_splitToAllowedParent","_getSplitParts","contextDefinition","append","createContextTree","documentFragment","_removeEmptyElements","modelItem","markerElements","markerElement","currentPosition","extractMarkersFromModelFragment","nextModelCursor","_Array$from2","allowedParent","findAllowedParent","treeWalkerValue","originalPart","splitPart","_registerSplitPair","anyRemoved","datacontroller_DataController","DataController","dataProcessor","processor","_conversionApi$conver","_ref$rootName","_ref$trim","_checkIfRootsExists","hasContent","ignoreWhitespaces","modelElementOrFragment","viewDocumentFragment","toView","toData","clearBindings","elementRange","intersection","_getMarkersRelativeToElement","version","initialData","main","_Object$keys","modelRoot","newData","_Object$keys2","toModel","viewElementOrFragment","rootNames","conversion_marked","_getAllUpcastDefinitions","conversion_marked2","_getUpcastDefinition","conversion_Conversion","Conversion","downcastDispatchers","upcastDispatchers","_helpers","_downcast","_createConversionHelpers","isDowncast","_upcast","alias","attributeToElement","elementToAttribute","attributeToAttribute","_step3$value","helpers","upcastAlso","upcastAlsoItem","batch_Batch","Batch","op","detachoperation_DetachOperation","DetachOperation","operation_utils","operation_operation","rootelement_RootElement","RootElement","_doc","writer_Writer","Writer","model_documentfragment","_assertWriterUsedCorrectly","isSameTree","insertoperation","addOperation","applyOperation","rangeRootPosition","addMarker","usingOperation","itemOrRange","setAttributeOnRange","setAttributeOnItem","removeAttributesFromItem","_addOperationForAffectedMarkers","moveoperation","flat","applyRemoveOperation","_merge","_mergeDetached","createPositionFromPath","createSelection","mergeoperation","renameOperation","renameoperation","limitElement","firstSplitElement","firstCopyElement","splitoperation","elementOrString","shiftedRange","applyMarkerOperation","_set","markerOrName","currentMarker","hasUsingOperationDefined","affectsDataDefined","currentRange","updatedRange","managedUsingOperations","_refresh","keyOrObjectOrIterable","_setSelectionAttribute","keyOrIterableOfKeys","_removeSelectionAttribute","_overrideGravity","_restoreGravity","_getStoreAttributeKey","_currentWriter","isAffected","elementBefore","elementAfter","affectedOnLeft","affectedOnRight","updateMarker","valueBefore","valueAfter","lastSplitPosition","attributeoperation","previousValue","rootattributeoperation","_version","markeroperation","rootA","rootB","differ_Differ","Differ","markerCollection","_markerCollection","_changesInElement","_elementSnapshots","_changedMarkers","_changeCount","_cachedChanges","_cachedChangesWithGraveyard","_isInInsertedElement","_markInsert","_markAttribute","sourceParentInserted","targetParentInserted","_markRemove","getMarkersIntersectingRange","bufferMarkerChange","graveyardParent","mergedIntoElement","buffered","includeChangesInGraveyard","diffSet","changes","snapshotChildren","elementChildren","_getChildrenSnapshot","_generateActionsFromChanges","_getInsertDiff","_getRemoveDiff","elementAttributes","snapshotAttributes","_getAttributesDiff","changeCount","prevDiff","thisDiff","isConsecutiveTextRemove","isConsecutiveTextAdd","isConsecutiveAttributeChange","_diffSet","_changesInGraveyardFilter","changeItem","_markChange","_removeAllNestedChanges","_makeSnapshot","_getChangesForElement","_handleChange","inc","nodesToHandle","old","incEnd","oldEnd","intersectionLength","_intersectionLength","_intersectionLength2","howManyAfter","attributePart","_attributePart","diffs","_step9$value","_step10$value","_newValue","snapshot","oldChildrenLength","oldChildrenHandled","posInGy","rangeInGy","history_History","History","_operations","_undoPairs","_undoneOperations","undoneOperation","undoingOperation","isInsideSurrogatePair","character","isLowSurrogateHalf","isInsideCombinedSymbol","graveyardName","model_document_Document","_hasSelectionChangedFromTheLastChangeBlock","createRoot","bufferOperation","_hasDocumentChangedFromTheLastChangeBlock","hasDataChanges","reset","defaultRoot","_getDefaultRoot","validateTextNodePosition","rangeBoundary","markercollection_MarkerCollection","MarkerCollection","markercollection_Marker","oldMarker","_attachLiveRange","_managedUsingOperations","_affectsData","_destroyMarker","getMarkersGroup","_detachLiveRange","Marker","_liveRange","liveposition_LivePosition","_Position","LivePosition","oldPosition","toPosition","insertcontent_Insertion","Insertion","canMergeWith","_filterAttributesOf","_affectedStart","_affectedEnd","parentContext","_handleNode","isFirst","isLast","nodeToSelect","_handleObject","_checkAndSplitToAllowedPosition","_mergeSiblingsOf","_handleDisallowedNode","_tryAutoparagraphing","handleNodes","livePos","fromPosition","_setAffectedBoundaries","mergeLeft","_canMergeLeft","mergeRight","_canMergeRight","mergePosLeft","mergePosRight","livePosition","_livePosition","_getAllowedIn","tempPos","deletecontent_deleteContent","selRange","doNotResetEntireContent","getLimitElement","shouldEntireContentBeReplacedWithParagraph","startPos","endPos","leaveUnmerged","mergeBranches","startParent","endParent","leftPos","rightPos","rangeToCheck","checkCanBeMerged","parentToRemove","collapseSelectionAt","isTextAllowed","isParagraphAllowed","shouldAutoparagraph","validSelectionRange","doNotAutoparagraph","insertParagraph","replaceEntireContentWithParagraph","wordBoundaryCharacters","modifyselection_modifySelection","isForward","unit","getSearchRange","v","isAtWordBoundary","isAtNodeBoundary","boundaryChar","getCorrectWordBreakPosition","getCorrectPosition","tryExtendingTo","setSelectionFocus","_ret","searchEnd","offsetToCheck","removeRangeContent","parentsToCheck","itemRange","parentToCheck","removeRange","injectSelectionPostFixer","correctedRange","tryFixingRange","fixedRanges","selectionStart","selectionEnd","selectionPostFixer","originalPosition","nearestSelectionRange","fixedPosition","tryFixingCollapsedRange","isTextAllowedOnStart","isTextAllowedOnEnd","startLimitElement","endLimitElement","startIsOnBlock","endIsOnBlock","checkSelectionOnNonLimitElements","isStartObject","fixedStart","isEndObject","fixedEnd","isStartInLimit","isEndInLimit","bothInSameParent","expandStart","isInObject","expandEnd","_fixedStart","_fixedEnd","findOutermostLimitAncestor","tryFixingNonCollapsedRage","startingNode","isLimitNode","model_Model","Model","_pendingChanges","_validate","addChildCheck","childDefinition","_runPendingChanges","batchOrType","_execute","deleteContent","nodesToInsert","insertion","getSelectionRange","affectedRange","getAffectedRange","insertcontent_insertContent","frag","flatSubtreeRange","commonPath","commonParent","getNodeByPath","appendText","leftExcessRange","getselectedcontent_getSelectedContent","rangeOrElement","_ref$ignoreWhitespace","ret","currentBatch","callbackReturnValue","_handleChangeBlock","editingkeystrokehandler_EditingKeystrokeHandler","_KeystrokeHandler","EditingKeystrokeHandler","evtData","editor_Editor","Editor","builtinPlugins","defaultConfig","editing","addAlias","extraPlugins","init","readyPromise","_this$commands","dataapimixin","setData","getData","elementapimixin","updateSourceElement","HTMLTextAreaElement","componentfactory_ComponentFactory","ComponentFactory","_components","originalName","getNormalized","editorui_EditorUI","EditorUI","componentFactory","_editableElements","update","documentPlaceholders","hidePlaceholder","updateDocumentPlaceholders","placeholders","wasViewModified","updatePlaceholder","hostElement","isDirectHost","getChildPlaceholderHostSubstitute","isEmptyish","selectionAnchor","needsPlaceholder","showPlaceholder","elementreplacer_ElementReplacer","ElementReplacer","_replacedElements","classiceditorui_ClassicEditorUI","_EditorUI","ClassicEditorUI","_toolbarConfig","_elementReplacer","replacementElement","editingView","editingRoot","attachDomRoot","_initPlaceholder","_initToolbar","restore","detachDomRoot","stickyPanel","limiterElement","viewportTopOffset","toolbar","fillFromConfig","origin","originKeystrokeHandler","originFocusTracker","beforeFocus","afterBlur","enableToolbarKeyboardFocus","placeholderText","_options$isDirectHost","enablePlaceholder","editoruiview_EditorUIView","EditorUIView","_renderBodyCollection","_bodyCollectionContainer","bodyElement","src_view","labelview_LabelView","LabelView","boxededitoruiview_BoxedEditorUIView","_EditorUIView","BoxedEditorUIView","_voiceLabelView","_createVoiceLabel","role","lang","voiceLabel","inlineeditableuiview_InlineEditableUIView","_EditableUIView","InlineEditableUIView","_editingView","EditableUIView","_editableElement","_hasExternalElement","_updateIsFocusedClasses","updateAfterRender","toPx","stickypanelview_StickyPanelView","StickyPanelView","_contentPanelPlaceholder","isSticky","_panelRect","_contentPanel","_hasViewportTopOffset","_isStickyToTheLimiter","limiterBottomOffset","marginLeft","_checkIfShouldBeSticky","limiterRect","panelRect","_limiterRect","_marginLeft","classiceditoruiview_ClassicEditorUIView","_BoxedEditorUIView","ClassicEditorUIView","toolbarview","classiceditor_ClassicEditor","_Editor","ClassicEditor","sourceElementOrData","htmldataprocessor","ui","form","originalSubmit","onSubmit","submit","attachToForm","getInitialData","datatransfer_DataTransfer","DataTransfer","nativeDataTransfer","files","kind","getAsFile","getFiles","_native","clipboardobserver_ClipboardObserver","ClipboardObserver","viewDocument","handleInput","targetRanges","dropRange","eventinfo","dataTransfer","clipboardData","domDoc","clientX","clientY","caretRangeFromPoint","rangeParent","rangeOffset","getDropViewRange","smallPaddingElements","clipboard_Clipboard","Clipboard","modelDocument","onCopyCut","getSelectedContent","_htmlDataProcessor","fullMatch","spaces","normalizeClipboardData","scrollToTheSelection","dataController","modelFragment","insertContent","viewToPlainText","childText","entercommand_EnterCommand","EnterCommand","isSelectionEmpty","splitBlock","isContainedWithinOneElement","enterBlock","src_command","splitPos","enterobserver_EnterObserver","EnterObserver","domeventdata","isSoft","enter_Enter","Enter","shiftentercommand_ShiftEnterCommand","ShiftEnterCommand","insertBreak","softBreakAction","anchorPos","isInsideLimitElement","breakLineElement","shiftenter_ShiftEnter","ShiftEnter","createEmptyElement","changebuffer_ChangeBuffer","ChangeBuffer","limit","isLocked","_changeCallback","_batch","_reset","_selectionChangeCallback","ignoreLock","createBatch","inputcommand_InputCommand","InputCommand","undoStepSize","_buffer","textInsertions","resultRange","isCollapsedRange","lock","insertText","unlock","injectUnsafeKeystrokesHandling","latestCompositionSelection","inputCommand","deleteSelectionContent","isSelectionUnchanged","keyData","safeKeycodes","isSafeKeystroke","handleKeydown","isFlatSelection","containerChildrenMutated","mutations","getSingleTextNodeChange","output","lastOperation","pushLast","isContinuationOf","expected","diffToChanges","compareChildNodes","oldChild","newChild","injecttypingmutationshandling_MutationHandler","MutationHandler","_handleContainerChildrenMutations","_handleTextMutation","_handleTextNodeInsertion","mutationsCommonAncestor","commonAncestor","getMutationsContainer","domMutationCommonAncestor","freshDomConverter","modelFromCurrentDom","currentModel","modelFromDomChildren","currentModelChildren","lastDomChild","lastCurrentChild","isSafeForTextMutation","_calculateChanges","calculateChanges","firstChangeAt","insertions","deletions","modelSelectionRange","_calculateChanges2","viewPos","modelPos","insertedText","diffResult","lastChangeAt","input_Input","Input","handle","injectTypingMutationsHandling","deletecommand_DeleteCommand","DeleteCommand","modifySelection","_shouldEntireContentBeReplacedWithParagraph","sequence","_replaceEntireContentWithParagraph","limitElementFirstChild","deleteobserver_DeleteObserver","DeleteObserver","hasWordModifier","domEvtData","injectAndroidBackspaceMutationsHandling","selectionChangeToleranceMs","previousSelection","currentSelection","latestSelectionChangeMs","childrenBefore","childrenAfter","hasDelete","hasInsert","containsContainersRemoval","handleContainerRemovalMutations","delete_Delete","Delete","typing_Typing","Typing","nooperation_NoOperation","NoOperation","transformations","setTransformation","OperationA","OperationB","transformationFunction","aGroup","noUpdateTransformation","getTransformation","aIsStrong","aWasUndone","bWasUndone","abRelation","baRelation","transformSets","operationsA","operationsB","nextTransformIndex","nextBaseVersionA","nextBaseVersionB","originalOperationsACount","originalOperationsBCount","contextFactory","transform_ContextFactory","useRelations","forceWeakRemove","setOriginalOperations","_operationsA","_operationsB","opA","indexB","opB","newOpsA","getContext","newOpsB","updateRelation","newOpA","padWithNoOps","brokenOperationsACount","brokenOperationsBCount","updateBaseVersions","ContextFactory","_history","_useRelations","_forceWeakRemove","_originalOperations","_relations","takeFrom","originalOperation","_setRelation","affectedLeft","affectedRight","side","wasInLeftElement","wasStartBeforeMergedElement","wasEndBeforeMergedElement","wasInRightElement","_wasUndone","_getRelation","originalOp","wasUndone","isUndoneOperation","origB","undoneB","getUndoneOperation","origA","relationsA","relation","_getComplementaryAttributeOperations","insertOperation","insertValue","_moveTargetIntoMovedRange","_makeMoveOperationsFromRanges","hasSameParentAs","r","moveOp","_breakRangeByMoveOperation","aNewRange","aToGraveyard","bToGraveyard","removedRange","mergeInside","mergeSplittingElement","getReversed","aCompB","shouldSpread","rightRange","movesGraveyardElement","gyMoveSource","splitNodesMoveSource","gyMoveTarget","gyMove","splitNodesMoveTargetPath","splitNodesMoveTarget","splitNodesMove","renamePath","splitPath","extraRename","additionalSplit","rangeToMove","gyElementMoved","newParentPosition","newTargetPath","howManyRemoved","aInGraveyard","bInGraveyard","newPositionPath","basecommand_BaseCommand","BaseCommand","_stack","_createdBatches","docSelection","selectionRanges","transformSelectionRange","batchToUndo","undoingBatch","operationsToUndo","operationToUndo","nextBaseVersion","historyOperations","getOperations","reversedOperations","setOperationAsUndone","getTransformedByOperations","undocommand_UndoCommand","_BaseCommand","UndoCommand","batchIndex","findIndex","_undo","_restoreSelection","redocommand_RedoCommand","RedoCommand","redoingBatch","undoediting_UndoEditing","UndoEditing","_batchRegistry","_undoCommand","_redoCommand","addBatch","clearStack","undoneBatch","undoui_UndoUI","UndoUI","_addButton","undo_default","redo_default","Icon","buttonview","undo_Undo","Undo","essentials_Essentials","Essentials","headingcommand_HeadingCommand","HeadingCommand","modelElements","heading","checkCanBecomeHeading","headingediting_HeadingEditing","HeadingEditing","title","option","_addDefaultH1Conversion","enterCommand","priorities","dropdownpanelview_DropdownPanelView","DropdownPanelView","selectstart","getOptimalPosition","positions","limiter","fitInViewport","bestPosition","positionedElementAncestor","getPositionedAncestor","elementRect","bestPositionRect","bestPositionName","maxLimiterIntersectArea","maxViewportIntersectArea","elementRectArea","limiterIntersectArea","viewportIntersectArea","_getPosition3","getPosition","_getPosition4","positionName","positionRect","limiterViewportIntersectRect","getIntersectionArea","setBestPosition","getBestPosition","getVisible","_getPosition","_getPosition2","_getAbsoluteRectCoord","getAbsoluteRectCoordinates","ancestorPosition","ancestorBorderWidths","getborderwidths","_position","moveTo","dropdownview_DropdownView","DropdownView","buttonView","panelView","isOpen","panelPosition","defaultPanelPositions","southEast","southWest","northEast","northWest","closeDropdown","buttonRect","dropdownbuttonview_DropdownButtonView","_ButtonView","DropdownButtonView","arrowView","_createArrowView","aria-haspopup","dropdown_arrow_default","listview_ListView","ListView","listitemview_ListItemView","ListItemView","listseparatorview_ListSeparatorView","ListSeparatorView","switchbuttonview_SwitchButtonView","SwitchButtonView","toggleSwitchView","_createToggleView","createDropdown","dropdownView","activator","contextElements","clickOutsideHandler","closeDropdownOnBlur","closeDropdownOnExecute","focusDropdownContentsOnArrows","addDefaultBehavior","headingui_HeadingUI","HeadingUI","localizedTitles","Heading 1","Heading 2","Heading 3","Heading 4","Heading 5","Heading 6","getLocalizedOptions","defaultTitle","dropdownTooltip","titles","itemDefinitions","headingCommand","paragraphCommand","withText","commandValue","listView","_buttonView","listItemView","addListToDropdown","isOn","areEnabled","para","whichModel","heading_Heading","Heading","boldediting_BoldEditing","BoldEditing","setAttributeProperties","isFormatting","font-weight","attributecommand","boldui_BoldUI","BoldUI","bold_default","bold_Bold","Bold","italicediting_ItalicEditing","ItalicEditing","font-style","italicui_ItalicUI","ItalicUI","italic_default","italic_Italic","Italic","blockautoformatediting_BlockAutoformatEditing","BlockAutoformatEditing","callbackOrCommand","inlineautoformatediting_InlineAutoformatEditing","InlineAutoformatEditing","testRegexpOrCallback","attributeOrCallback","regExp","testCallback","formatCallback","_result","leftDel","rightDel","delStart","delEnd","rangesToFormat","validRanges","testOutput","testOutputToRanges","rangesToRemove","arrays","autoformat_Autoformat","Autoformat","_addListAutoformats","_addBasicStylesAutoformats","_addHeadingAutoformats","_addBlockQuoteAutoformats","boldCallback","getCallbackFunctionForInlineAutoformat","italicCallback","codeCallback","level","_isObjectLike_js__WEBPACK_IMPORTED_MODULE_0__","_isPlainObject_js__WEBPACK_IMPORTED_MODULE_1__","q","u","w","z","aa","ba","A","B","h","ca","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","D","E","refs","F","G","isReactComponent","forceUpdate","H","isPureReactComponent","I","J","K","L","__self","__source","M","_owner","N","O","P","Q","keyPrefix","R","U","S","T","=",":","escape","ea","fa","V","da","W","X","toArray","only","createRef","PureComponent","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","lazy","_ctor","_status","useCallback","useContext","useEffect","useImperativeHandle","useDebugValue","useLayoutEffect","useMemo","useReducer","useRef","useState","Fragment","StrictMode","Suspense","cloneElement","createFactory","isValidElement","unstable_ConcurrentMode","unstable_Profiler","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","ReactCurrentOwner","Y","Z","ha","ia","onError","ja","la","ma","na","oa","extractEvents","eventTypes","pa","phasedRegistrationNames","qa","registrationName","ra","sa","dependencies","ta","va","wa","currentTarget","ka","xa","ya","za","Aa","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Ba","injectEventPluginOrder","injectEventPluginsByName","Ca","stateNode","disabled","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","dispatchConfig","Na","_targetInst","Oa","Pa","Qa","Ra","Sa","Ta","animationend","animationiteration","animationstart","transitionend","Ua","Va","Wa","animation","transition","Xa","Ya","Za","$a","ab","bb","cb","db","eb","fb","gb","nativeEvent","Interface","isDefaultPrevented","returnValue","ib","eventPool","jb","destructor","hb","getPooled","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","isTrusted","kb","lb","mb","nb","ob","documentMode","pb","qb","rb","sb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","tb","ub","vb","detail","wb","zb","which","xb","yb","Ab","Bb","Cb","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","color","date","datetime","datetime-local","email","month","number","tel","week","Mb","nodeName","Nb","srcElement","correspondingUseElement","Ob","Pb","Rb","_valueTracker","setValue","stopTracking","Qb","Sb","checked","Tb","Ub","Vb","Wb","Xb","Yb","Zb","$b","ac","bc","cc","dc","ec","fc","gc","hc","ic","jc","_debugOwner","_debugSource","fileName","lineNumber","kc","lc","mc","nc","acceptsBooleans","attributeNamespace","mustUseProperty","rc","sc","tc","pc","isNaN","qc","oc","uc","vc","defaultChecked","defaultValue","_wrapperState","initialChecked","wc","initialValue","controlled","xc","yc","zc","Ac","Bc","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","detachEvent","Kc","Lc","attachEvent","Mc","Nc","Oc","Pc","_isInputEventSupported","Qc","Rc","Alt","Control","Meta","Shift","Sc","getModifierState","Tc","Uc","Vc","Wc","Xc","Yc","screenX","screenY","pageX","pageY","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Zc","pointerId","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","$c","mouseEnter","mouseLeave","pointerEnter","pointerLeave","ad","alternate","bd","cd","dd","ed","effectTag","fd","hd","sibling","gd","animationName","elapsedTime","pseudoElement","jd","kd","ld","charCode","md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","nd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","od","pd","qd","touches","targetTouches","changedTouches","rd","sd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","td","ud","vd","wd","isInteractive","xd","isInteractiveTopLevelEventType","yd","zd","Ad","targetInst","containerInfo","topLevelType","Bd","Cd","Dd","Ed","Fd","Gd","Hd","Id","Jd","Kd","Ld","Nd","HTMLIFrameElement","contentWindow","Od","contentEditable","Qd","focusedElem","Md","compareDocumentPosition","Rd","Sd","select","Td","Ud","Vd","Wd","Xd","Yd","onSelect","$d","Zd","ae","defaultSelected","be","dangerouslySetInnerHTML","ce","de","ee","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","fe","html","mathml","ge","he","ie","je","namespaceURI","MSApp","execUnsafeLocalFunction","ke","nodeValue","le","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","me","ne","oe","setProperty","pe","menuitem","area","br","col","embed","hr","img","keygen","link","meta","param","track","wbr","qe","se","blur","te","ue","ve","we","autoFocus","xe","__html","ye","ze","Ae","unstable_scheduleCallback","Be","unstable_cancelCallback","De","Ee","Fe","Ge","He","Ie","Je","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Ke","Le","Me","Ne","getChildContext","Oe","__reactInternalMemoizedMergedChildContext","Pe","Qe","Re","Se","Ue","elementType","pendingProps","contextDependencies","memoizedState","updateQueue","memoizedProps","mode","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","Ve","Xe","Ye","Ze","$e","af","bf","pendingChildren","cf","didError","earliestPendingTime","latestPendingTime","df","ff","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","gf","nextExpirationTimeToWorkOn","jf","kf","baseState","tf","_reactInternalFiber","lf","nf","mf","of","pf","qf","rf","sf","uf","shouldComponentUpdate","vf","wf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","xf","yf","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","zf","Af","_stringRef","Bf","Cf","Df","Ef","Ff","Gf","Hf","If","Jf","Kf","Lf","Mf","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","queue","baseUpdate","ng","og","pg","lastRenderedReducer","qg","lastRenderedState","eagerReducer","eagerState","rg","deps","sg","tg","ug","vg","wg","readContext","xg","yg","zg","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","UNSAFE_componentWillUpdate","componentWillUpdate","Qg","Rg","pendingContext","Sg","timedOutAt","fallback","Tg","Ug","hf","We","hydrate","hidden","observedBits","unstable_observedBits","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","ch","dh","eh","fh","gh","hh","ih","jh","kh","lh","mh","nh","oh","onclick","ph","qh","rh","sh","th","vh","wh","xh","yh","_reactRootContainer","zh","wasMultiple","multiple","Ce","uh","hi","Xh","Bh","Ch","Dh","Eh","componentDidCatch","Fh","componentStack","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","Uh","__reactInternalSnapshotBeforeUpdate","Vh","Zh","pendingCommitExpirationTime","ef","Pd","Yh","unstable_runWithPriority","unstable_NormalPriority","finishedWork","$h","ai","bi","ci","di","maxDuration","pingCache","ei","fi","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_LowPriority","unstable_IdlePriority","gi","ii","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","unstable_now","vi","wi","xi","yi","zi","timeoutHandle","Bi","Ci","nextScheduledRoot","Di","Ei","unstable_shouldYield","_onComplete","Fi","firstBatch","_expirationTime","_defer","Gi","Hi","Ii","Ji","Ki","Li","Ni","_callbacks","_hasChildren","_didComplete","Oi","_didCommit","_onCommit","Pi","_internalRoot","Qi","Si","legacy_renderSubtreeIntoContainer","Ri","Ti","Mi","commit","unmount","Vi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","Events","findFiberByHostInstance","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Te","overrideProps","currentDispatcherRef","findHostInstanceByFiber","bundleType","rendererPackageName","Wi","Xi","_r","priorityLevel","requestAnimationFrame","cancelAnimationFrame","performance","_schedMock","MessageChannel","port2","port1","onmessage","postMessage","unstable_next","unstable_wrapCallback","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","getShim","ReactPropTypes","bool","arrayOf","instanceOf","objectOf","oneOf","oneOfType","checkPropTypes","PropTypes","typeOf","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Lazy","Memo","Portal","Profiler","isValidElementType","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","Axios","createInstance","axios","instanceConfig","CancelToken","isCancel","readFloatLE","isSlowBuffer","_isBuffer","InterceptorManager","dispatchRequest","interceptors","interceptor","fulfilled","rejected","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","run","runClearTimeout","Item","nextTick","browser","argv","versions","addListener","removeAllListeners","emit","prependListener","prependOnceListener","cwd","chdir","umask","normalizedName","serializedParams","toISOString","ignoreDuplicateOf","line","originURL","msie","urlParsingNode","resolveURL","protocol","host","hostname","port","requestURL","chars","idx","write","expires","domain","secure","cookie","toGMTString","decodeURIComponent","handlers","use","eject","transformData","isAbsoluteURL","combineURLs","throwIfCancellationRequested","throwIfRequested","baseURL","reason","fns","relativeURL","executor","resolvePromise","_react","_propTypes2","_gud2","MAX_SIGNED_31_BIT_INT","calculateChangedBits","_Provider$childContex","_Consumer$contextType","contextProp","handler","changedBits","createEventEmitter","nextProps","_Component2","_temp2","onUpdate","warning","makeEmptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","domContainer","_shouldUpdateContent","_initializeEditor","_destroyEditor","onInit","onChange","onFocus","onBlur","runtime","Op","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","_invoke","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","__await","info","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iteratorMethod","isGeneratorFunction","genFun","ctor","awrap","async","skipTempReset","rootRecord","rval","exception","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","regeneratorRuntime","accidentalStrictMode","__WEBPACK_AMD_DEFINE_RESULT__","classNames","argType","inner","atob","b64DecodeUnicode","InvalidCharacterError","bs","_baseClone_js__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/2.c4b5040e.chunk.js","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeFunction from \"./isNativeFunction\";\nimport construct from \"./construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _wrapNativeSuper from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/wrapNativeSuper\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/ckeditorerror\n */\n\n/**\n * URL to the documentation with error codes.\n */\nexport var DOCUMENTATION_URL = 'https://ckeditor.com/docs/ckeditor5/latest/framework/guides/support/error-codes.html';\n/**\n * The CKEditor error class.\n *\n * All errors will be shortened during the minification process in order to reduce the code size.\n * Therefore, all error messages should be documented in the same way as those in {@link module:utils/log}.\n *\n * Read more in the {@link module:utils/log} module.\n *\n * @extends Error\n */\n\nvar CKEditorError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(CKEditorError, _Error);\n\n  /**\n   * Creates an instance of the CKEditorError class.\n   *\n   * Read more about error logging in the {@link module:utils/log} module.\n   *\n   * @param {String} message The error message in an `error-name: Error message.` format.\n   * During the minification process the \"Error message\" part will be removed to limit the code size\n   * and a link to this error documentation will be added to the `message`.\n   * @param {Object} [data] Additional data describing the error. A stringified version of this object\n   * will be appended to the error message, so the data are quickly visible in the console. The original\n   * data object will also be later available under the {@link #data} property.\n   */\n  function CKEditorError(message, data) {\n    var _this;\n\n    _classCallCheck(this, CKEditorError);\n\n    message = attachLinkToDocumentation(message);\n\n    if (data) {\n      message += ' ' + JSON.stringify(data);\n    }\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CKEditorError).call(this, message));\n    /**\n     * @member {String}\n     */\n\n    _this.name = 'CKEditorError';\n    /**\n     * The additional error data passed to the constructor. Undefined if none was passed.\n     *\n     * @member {Object|undefined}\n     */\n\n    _this.data = data;\n    return _this;\n  }\n  /**\n   * Checks if error is an instance of CKEditorError class.\n   *\n   * @param {Object} error Object to check.\n   * @returns {Boolean}\n   */\n\n\n  _createClass(CKEditorError, null, [{\n    key: \"isCKEditorError\",\n    value: function isCKEditorError(error) {\n      return error instanceof CKEditorError;\n    }\n  }]);\n\n  return CKEditorError;\n}(_wrapNativeSuper(Error));\n/**\n * Attaches link to the documentation at the end of the error message.\n *\n * @param {String} message Message to be logged.\n * @returns {String}\n */\n\n\nexport { CKEditorError as default };\nexport function attachLinkToDocumentation(message) {\n  var matchedErrorName = message.match(/^([^:]+):/);\n\n  if (!matchedErrorName) {\n    return message;\n  }\n\n  return message + \" Read more: \".concat(DOCUMENTATION_URL, \"#error-\").concat(matchedErrorName[1], \"\\n\");\n}","import _toConsumableArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/range\n */\nimport Position from './position';\nimport TreeWalker from './treewalker';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\n/**\n * Represents a range in the model tree.\n *\n * A range is defined by its {@link module:engine/model/range~Range#start} and {@link module:engine/model/range~Range#end}\n * positions.\n *\n * You can create range instances via its constructor or the `createRange*()` factory methods of\n * {@link module:engine/model/model~Model} and {@link module:engine/model/writer~Writer}.\n */\n\nvar Range =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a range spanning from `start` position to `end` position.\n   *\n   * @param {module:engine/model/position~Position} start Start position.\n   * @param {module:engine/model/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n   */\n  function Range(start) {\n    var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, Range);\n\n    /**\n     * Start position.\n     *\n     * @readonly\n     * @member {module:engine/model/position~Position}\n     */\n    this.start = Position._createAt(start);\n    /**\n     * End position.\n     *\n     * @readonly\n     * @member {module:engine/model/position~Position}\n     */\n\n    this.end = end ? Position._createAt(end) : Position._createAt(start); // If the range is collapsed, treat in a similar way as a position and set its boundaries stickiness to 'toNone'.\n    // In other case, make the boundaries stick to the \"inside\" of the range.\n\n    this.start.stickiness = this.isCollapsed ? 'toNone' : 'toNext';\n    this.end.stickiness = this.isCollapsed ? 'toNone' : 'toPrevious';\n  }\n  /**\n   * Iterable interface.\n   *\n   * Iterates over all {@link module:engine/model/item~Item items} that are in this range and returns\n   * them together with additional information like length or {@link module:engine/model/position~Position positions},\n   * grouped as {@link module:engine/model/treewalker~TreeWalkerValue}.\n   * It iterates over all {@link module:engine/model/textproxy~TextProxy text contents} that are inside the range\n   * and all the {@link module:engine/model/element~Element}s that are entered into when iterating over this range.\n   *\n   * This iterator uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range\n   * and `ignoreElementEnd` option set to `true`.\n   *\n   * @returns {Iterable.<module:engine/model/treewalker~TreeWalkerValue>}\n   */\n\n\n  _createClass(Range, [{\n    key: Symbol.iterator,\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function value() {\n      return _regeneratorRuntime.wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.delegateYield(new TreeWalker({\n                boundaries: this,\n                ignoreElementEnd: true\n              }), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this);\n    })\n    /**\n     * Returns whether the range is collapsed, that is if {@link #start} and\n     * {@link #end} positions are equal.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"containsPosition\",\n\n    /**\n     * Checks whether this range contains given {@link module:engine/model/position~Position position}.\n     *\n     * @param {module:engine/model/position~Position} position Position to check.\n     * @returns {Boolean} `true` if given {@link module:engine/model/position~Position position} is contained\n     * in this range,`false` otherwise.\n     */\n    value: function containsPosition(position) {\n      return position.isAfter(this.start) && position.isBefore(this.end);\n    }\n    /**\n     * Checks whether this range contains given {@link ~Range range}.\n     *\n     * @param {module:engine/model/range~Range} otherRange Range to check.\n     * @param {Boolean} [loose=false] Whether the check is loose or strict. If the check is strict (`false`), compared range cannot\n     * start or end at the same position as this range boundaries. If the check is loose (`true`), compared range can start, end or\n     * even be equal to this range. Note that collapsed ranges are always compared in strict mode.\n     * @returns {Boolean} `true` if given {@link ~Range range} boundaries are contained by this range, `false` otherwise.\n     */\n\n  }, {\n    key: \"containsRange\",\n    value: function containsRange(otherRange) {\n      var loose = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (otherRange.isCollapsed) {\n        loose = false;\n      }\n\n      var containsStart = this.containsPosition(otherRange.start) || loose && this.start.isEqual(otherRange.start);\n      var containsEnd = this.containsPosition(otherRange.end) || loose && this.end.isEqual(otherRange.end);\n      return containsStart && containsEnd;\n    }\n    /**\n     * Checks whether given {@link module:engine/model/item~Item} is inside this range.\n     *\n     * @param {module:engine/model/item~Item} item Model item to check.\n     */\n\n  }, {\n    key: \"containsItem\",\n    value: function containsItem(item) {\n      var pos = Position._createBefore(item);\n\n      return this.containsPosition(pos) || this.start.isEqual(pos);\n    }\n    /**\n     * Two ranges are equal if their {@link #start} and {@link #end} positions are equal.\n     *\n     * @param {module:engine/model/range~Range} otherRange Range to compare with.\n     * @returns {Boolean} `true` if ranges are equal, `false` otherwise.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherRange) {\n      return this.start.isEqual(otherRange.start) && this.end.isEqual(otherRange.end);\n    }\n    /**\n     * Checks and returns whether this range intersects with given range.\n     *\n     * @param {module:engine/model/range~Range} otherRange Range to compare with.\n     * @returns {Boolean} `true` if ranges intersect, `false` otherwise.\n     */\n\n  }, {\n    key: \"isIntersecting\",\n    value: function isIntersecting(otherRange) {\n      return this.start.isBefore(otherRange.end) && this.end.isAfter(otherRange.start);\n    }\n    /**\n     * Computes which part(s) of this {@link ~Range range} is not a part of given {@link ~Range range}.\n     * Returned array contains zero, one or two {@link ~Range ranges}.\n     *\n     * Examples:\n     *\n     *\t\tlet range = model.createRange(\n     *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\n     *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\n     *\t\t);\n     *\t\tlet otherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 5 ] ) );\n     *\t\tlet transformed = range.getDifference( otherRange );\n     *\t\t// transformed array has no ranges because `otherRange` contains `range`\n     *\n     *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 3 ] ) );\n     *\t\ttransformed = range.getDifference( otherRange );\n     *\t\t// transformed array has one range: from [ 3 ] to [ 4, 0, 1 ]\n     *\n     *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 3 ] ), model.createPositionFromPath( root, [ 4 ] ) );\n     *\t\ttransformed = range.getDifference( otherRange );\n     *\t\t// transformed array has two ranges: from [ 2, 7 ] to [ 3 ] and from [ 4 ] to [ 4, 0, 1 ]\n     *\n     * @param {module:engine/model/range~Range} otherRange Range to differentiate against.\n     * @returns {Array.<module:engine/model/range~Range>} The difference between ranges.\n     */\n\n  }, {\n    key: \"getDifference\",\n    value: function getDifference(otherRange) {\n      var ranges = [];\n\n      if (this.isIntersecting(otherRange)) {\n        // Ranges intersect.\n        if (this.containsPosition(otherRange.start)) {\n          // Given range start is inside this range. This means that we have to\n          // add shrunken range - from the start to the middle of this range.\n          ranges.push(new Range(this.start, otherRange.start));\n        }\n\n        if (this.containsPosition(otherRange.end)) {\n          // Given range end is inside this range. This means that we have to\n          // add shrunken range - from the middle of this range to the end.\n          ranges.push(new Range(otherRange.end, this.end));\n        }\n      } else {\n        // Ranges do not intersect, return the original range.\n        ranges.push(new Range(this.start, this.end));\n      }\n\n      return ranges;\n    }\n    /**\n     * Returns an intersection of this {@link ~Range range} and given {@link ~Range range}.\n     * Intersection is a common part of both of those ranges. If ranges has no common part, returns `null`.\n     *\n     * Examples:\n     *\n     *\t\tlet range = model.createRange(\n     *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\n     *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\n     *\t\t);\n     *\t\tlet otherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 2 ] ) );\n     *\t\tlet transformed = range.getIntersection( otherRange ); // null - ranges have no common part\n     *\n     *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 3 ] ), model.createPositionFromPath( root, [ 5 ] ) );\n     *\t\ttransformed = range.getIntersection( otherRange ); // range from [ 3 ] to [ 4, 0, 1 ]\n     *\n     * @param {module:engine/model/range~Range} otherRange Range to check for intersection.\n     * @returns {module:engine/model/range~Range|null} A common part of given ranges or `null` if ranges have no common part.\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(otherRange) {\n      if (this.isIntersecting(otherRange)) {\n        // Ranges intersect, so a common range will be returned.\n        // At most, it will be same as this range.\n        var commonRangeStart = this.start;\n        var commonRangeEnd = this.end;\n\n        if (this.containsPosition(otherRange.start)) {\n          // Given range start is inside this range. This means thaNt we have to\n          // shrink common range to the given range start.\n          commonRangeStart = otherRange.start;\n        }\n\n        if (this.containsPosition(otherRange.end)) {\n          // Given range end is inside this range. This means that we have to\n          // shrink common range to the given range end.\n          commonRangeEnd = otherRange.end;\n        }\n\n        return new Range(commonRangeStart, commonRangeEnd);\n      } // Ranges do not intersect, so they do not have common part.\n\n\n      return null;\n    }\n    /**\n     * Computes and returns the smallest set of {@link #isFlat flat} ranges, that covers this range in whole.\n     *\n     * See an example of a model structure (`[` and `]` are range boundaries):\n     *\n     *\t\troot                                                            root\n     *\t\t |- element DIV                         DIV             P2              P3             DIV\n     *\t\t |   |- element H                   H        P1        f o o           b a r       H         P4\n     *\t\t |   |   |- \"fir[st\"             fir[st     lorem                               se]cond     ipsum\n     *\t\t |   |- element P1\n     *\t\t |   |   |- \"lorem\"                                              ||\n     *\t\t |- element P2                                                   ||\n     *\t\t |   |- \"foo\"                                                    VV\n     *\t\t |- element P3\n     *\t\t |   |- \"bar\"                                                   root\n     *\t\t |- element DIV                         DIV             [P2             P3]             DIV\n     *\t\t |   |- element H                   H       [P1]       f o o           b a r        H         P4\n     *\t\t |   |   |- \"se]cond\"            fir[st]    lorem                               [se]cond     ipsum\n     *\t\t |   |- element P4\n     *\t\t |   |   |- \"ipsum\"\n     *\n     * As it can be seen, letters contained in the range are: `stloremfoobarse`, spread across different parents.\n     * We are looking for minimal set of flat ranges that contains the same nodes.\n     *\n     * Minimal flat ranges for above range `( [ 0, 0, 3 ], [ 3, 0, 2 ] )` will be:\n     *\n     *\t\t( [ 0, 0, 3 ], [ 0, 0, 5 ] ) = \"st\"\n     *\t\t( [ 0, 1 ], [ 0, 2 ] ) = element P1 (\"lorem\")\n     *\t\t( [ 1 ], [ 3 ] ) = element P2, element P3 (\"foobar\")\n     *\t\t( [ 3, 0, 0 ], [ 3, 0, 2 ] ) = \"se\"\n     *\n     * **Note:** if an {@link module:engine/model/element~Element element} is not wholly contained in this range, it won't be returned\n     * in any of the returned flat ranges. See in the example how `H` elements at the beginning and at the end of the range\n     * were omitted. Only their parts that were wholly in the range were returned.\n     *\n     * **Note:** this method is not returning flat ranges that contain no nodes.\n     *\n     * @returns {Array.<module:engine/model/range~Range>} Array of flat ranges covering this range.\n     */\n\n  }, {\n    key: \"getMinimalFlatRanges\",\n    value: function getMinimalFlatRanges() {\n      var ranges = [];\n      var diffAt = this.start.getCommonPath(this.end).length;\n\n      var pos = Position._createAt(this.start);\n\n      var posParent = pos.parent; // Go up.\n\n      while (pos.path.length > diffAt + 1) {\n        var howMany = posParent.maxOffset - pos.offset;\n\n        if (howMany !== 0) {\n          ranges.push(new Range(pos, pos.getShiftedBy(howMany)));\n        }\n\n        pos.path = pos.path.slice(0, -1);\n        pos.offset++;\n        posParent = posParent.parent;\n      } // Go down.\n\n\n      while (pos.path.length <= this.end.path.length) {\n        var offset = this.end.path[pos.path.length - 1];\n\n        var _howMany = offset - pos.offset;\n\n        if (_howMany !== 0) {\n          ranges.push(new Range(pos, pos.getShiftedBy(_howMany)));\n        }\n\n        pos.offset = offset;\n        pos.path.push(0);\n      }\n\n      return ranges;\n    }\n    /**\n     * Creates a {@link module:engine/model/treewalker~TreeWalker TreeWalker} instance with this range as a boundary.\n     *\n     * For example, to iterate over all items in the entire document root:\n     *\n     *\t\t// Create a range spanning over the entire root content:\n     *\t\tconst range = editor.model.createRangeIn( editor.model.document.getRoot() );\n     *\n     *\t\t// Iterate over all items in this range:\n     *\t\tfor ( const value of range.getWalker() ) {\n     *\t\t\tconsole.log( value.item );\n     *\t\t}\n     *\n     * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n     * @param {module:engine/model/position~Position} [options.startPosition]\n     * @param {Boolean} [options.singleCharacters=false]\n     * @param {Boolean} [options.shallow=false]\n     * @param {Boolean} [options.ignoreElementEnd=false]\n     */\n\n  }, {\n    key: \"getWalker\",\n    value: function getWalker() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      options.boundaries = this;\n      return new TreeWalker(options);\n    }\n    /**\n     * Returns an iterator that iterates over all {@link module:engine/model/item~Item items} that are in this range and returns\n     * them.\n     *\n     * This method uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range and `ignoreElementEnd` option\n     * set to `true`. However it returns only {@link module:engine/model/item~Item model items},\n     * not {@link module:engine/model/treewalker~TreeWalkerValue}.\n     *\n     * You may specify additional options for the tree walker. See {@link module:engine/model/treewalker~TreeWalker} for\n     * a full list of available options.\n     *\n     * @method getItems\n     * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n     * @returns {Iterable.<module:engine/model/item~Item>}\n     */\n\n  }, {\n    key: \"getItems\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getItems() {\n      var options,\n          treeWalker,\n          _iteratorNormalCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          _value,\n          _args2 = arguments;\n\n      return _regeneratorRuntime.wrap(function getItems$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              options = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n              options.boundaries = this;\n              options.ignoreElementEnd = true;\n              treeWalker = new TreeWalker(options);\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context2.prev = 7;\n              _iterator = treeWalker[Symbol.iterator]();\n\n            case 9:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context2.next = 16;\n                break;\n              }\n\n              _value = _step.value;\n              _context2.next = 13;\n              return _value.item;\n\n            case 13:\n              _iteratorNormalCompletion = true;\n              _context2.next = 9;\n              break;\n\n            case 16:\n              _context2.next = 22;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](7);\n              _didIteratorError = true;\n              _iteratorError = _context2.t0;\n\n            case 22:\n              _context2.prev = 22;\n              _context2.prev = 23;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 25:\n              _context2.prev = 25;\n\n              if (!_didIteratorError) {\n                _context2.next = 28;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 28:\n              return _context2.finish(25);\n\n            case 29:\n              return _context2.finish(22);\n\n            case 30:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, getItems, this, [[7, 18, 22, 30], [23,, 25, 29]]);\n    })\n    /**\n     * Returns an iterator that iterates over all {@link module:engine/model/position~Position positions} that are boundaries or\n     * contained in this range.\n     *\n     * This method uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range. However it returns only\n     * {@link module:engine/model/position~Position positions}, not {@link module:engine/model/treewalker~TreeWalkerValue}.\n     *\n     * You may specify additional options for the tree walker. See {@link module:engine/model/treewalker~TreeWalker} for\n     * a full list of available options.\n     *\n     * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n     * @returns {Iterable.<module:engine/model/position~Position>}\n     */\n\n  }, {\n    key: \"getPositions\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getPositions() {\n      var options,\n          treeWalker,\n          _iteratorNormalCompletion2,\n          _didIteratorError2,\n          _iteratorError2,\n          _iterator2,\n          _step2,\n          _value2,\n          _args3 = arguments;\n\n      return _regeneratorRuntime.wrap(function getPositions$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n              options.boundaries = this;\n              treeWalker = new TreeWalker(options);\n              _context3.next = 5;\n              return treeWalker.position;\n\n            case 5:\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _iteratorError2 = undefined;\n              _context3.prev = 8;\n              _iterator2 = treeWalker[Symbol.iterator]();\n\n            case 10:\n              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                _context3.next = 17;\n                break;\n              }\n\n              _value2 = _step2.value;\n              _context3.next = 14;\n              return _value2.nextPosition;\n\n            case 14:\n              _iteratorNormalCompletion2 = true;\n              _context3.next = 10;\n              break;\n\n            case 17:\n              _context3.next = 23;\n              break;\n\n            case 19:\n              _context3.prev = 19;\n              _context3.t0 = _context3[\"catch\"](8);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context3.t0;\n\n            case 23:\n              _context3.prev = 23;\n              _context3.prev = 24;\n\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n\n            case 26:\n              _context3.prev = 26;\n\n              if (!_didIteratorError2) {\n                _context3.next = 29;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 29:\n              return _context3.finish(26);\n\n            case 30:\n              return _context3.finish(23);\n\n            case 31:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, getPositions, this, [[8, 19, 23, 31], [24,, 26, 30]]);\n    })\n    /**\n     * Returns a range that is a result of transforming this range by given `operation`.\n     *\n     * **Note:** transformation may break one range into multiple ranges (for example, when a part of the range is\n     * moved to a different part of document tree). For this reason, an array is returned by this method and it\n     * may contain one or more `Range` instances.\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation Operation to transform range by.\n     * @returns {Array.<module:engine/model/range~Range>} Range which is the result of transformation.\n     */\n\n  }, {\n    key: \"getTransformedByOperation\",\n    value: function getTransformedByOperation(operation) {\n      switch (operation.type) {\n        case 'insert':\n          return this._getTransformedByInsertOperation(operation);\n\n        case 'move':\n        case 'remove':\n        case 'reinsert':\n          return this._getTransformedByMoveOperation(operation);\n\n        case 'split':\n          return [this._getTransformedBySplitOperation(operation)];\n\n        case 'merge':\n          return [this._getTransformedByMergeOperation(operation)];\n      }\n\n      return [new Range(this.start, this.end)];\n    }\n    /**\n     * Returns a range that is a result of transforming this range by multiple `operations`.\n     *\n     * @see ~Range#getTransformedByOperation\n     * @param {Iterable.<module:engine/model/operation/operation~Operation>} operations Operations to transform the range by.\n     * @returns {Array.<module:engine/model/range~Range>} Range which is the result of transformation.\n     */\n\n  }, {\n    key: \"getTransformedByOperations\",\n    value: function getTransformedByOperations(operations) {\n      var ranges = [new Range(this.start, this.end)];\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = operations[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var operation = _step3.value;\n\n          for (var _i = 0; _i < ranges.length; _i++) {\n            var result = ranges[_i].getTransformedByOperation(operation);\n\n            ranges.splice.apply(ranges, [_i, 1].concat(_toConsumableArray(result)));\n            _i += result.length - 1;\n          }\n        } // It may happen that a range is split into two, and then the part of second \"piece\" is moved into first\n        // \"piece\". In this case we will have incorrect third range, which should not be included in the result --\n        // because it is already included in the first \"piece\". In this loop we are looking for all such ranges that\n        // are inside other ranges and we simply remove them.\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n\n        for (var j = i + 1; j < ranges.length; j++) {\n          var next = ranges[j];\n\n          if (range.containsRange(next) || next.containsRange(range) || range.isEqual(next)) {\n            ranges.splice(j, 1);\n          }\n        }\n      }\n\n      return ranges;\n    }\n    /**\n     * Returns an {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n     * which is a common ancestor of the range's both ends (in which the entire range is contained).\n     *\n     * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor() {\n      return this.start.getCommonAncestor(this.end);\n    }\n    /**\n     * Converts `Range` to plain object and returns it.\n     *\n     * @returns {Object} `Node` converted to plain object.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        start: this.start.toJSON(),\n        end: this.end.toJSON()\n      };\n    }\n    /**\n     * Returns a new range that is equal to current range.\n     *\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this.start, this.end);\n    }\n    /**\n     * Returns a result of transforming a copy of this range by insert operation.\n     *\n     * One or more ranges may be returned as a result of this transformation.\n     *\n     * @protected\n     * @param {module:engine/model/operation/insertoperation~InsertOperation} operation\n     * @returns {Array.<module:engine/model/range~Range>}\n     */\n\n  }, {\n    key: \"_getTransformedByInsertOperation\",\n    value: function _getTransformedByInsertOperation(operation) {\n      var spread = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return this._getTransformedByInsertion(operation.position, operation.howMany, spread);\n    }\n    /**\n     * Returns a result of transforming a copy of this range by move operation.\n     *\n     * One or more ranges may be returned as a result of this transformation.\n     *\n     * @protected\n     * @param {module:engine/model/operation/moveoperation~MoveOperation} operation\n     * @returns {Array.<module:engine/model/range~Range>}\n     */\n\n  }, {\n    key: \"_getTransformedByMoveOperation\",\n    value: function _getTransformedByMoveOperation(operation) {\n      var spread = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var sourcePosition = operation.sourcePosition;\n      var howMany = operation.howMany;\n      var targetPosition = operation.targetPosition;\n      return this._getTransformedByMove(sourcePosition, targetPosition, howMany, spread);\n    }\n    /**\n     * Returns a result of transforming a copy of this range by split operation.\n     *\n     * Always one range is returned. The transformation is done in a way to not break the range.\n     *\n     * @protected\n     * @param {module:engine/model/operation/splitoperation~SplitOperation} operation\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"_getTransformedBySplitOperation\",\n    value: function _getTransformedBySplitOperation(operation) {\n      var start = this.start._getTransformedBySplitOperation(operation);\n\n      var end = this.end._getTransformedBySplitOperation(operation);\n\n      if (this.end.isEqual(operation.insertionPosition)) {\n        end = this.end.getShiftedBy(1);\n      } // Below may happen when range contains graveyard element used by split operation.\n\n\n      if (start.root != end.root) {\n        // End position was next to the moved graveyard element and was moved with it.\n        // Fix it by using old `end` which has proper `root`.\n        end = this.end.getShiftedBy(-1);\n      }\n\n      return new Range(start, end);\n    }\n    /**\n     * Returns a result of transforming a copy of this range by merge operation.\n     *\n     * Always one range is returned. The transformation is done in a way to not break the range.\n     *\n     * @protected\n     * @param {module:engine/model/operation/mergeoperation~MergeOperation} operation\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"_getTransformedByMergeOperation\",\n    value: function _getTransformedByMergeOperation(operation) {\n      // Special case when the marker is set on \"the closing tag\" of an element. Marker can be set like that during\n      // transformations, especially when a content of a few block elements were removed. For example:\n      //\n      // {} is the transformed range, [] is the removed range.\n      // <p>F[o{o</p><p>B}ar</p><p>Xy]z</p>\n      //\n      // <p>Fo{o</p><p>B}ar</p><p>z</p>\n      // <p>F{</p><p>B}ar</p><p>z</p>\n      // <p>F{</p>}<p>z</p>\n      // <p>F{}z</p>\n      //\n      if (this.start.isEqual(operation.targetPosition) && this.end.isEqual(operation.deletionPosition)) {\n        return new Range(this.start);\n      }\n\n      var start = this.start._getTransformedByMergeOperation(operation);\n\n      var end = this.end._getTransformedByMergeOperation(operation);\n\n      if (start.root != end.root) {\n        // This happens when the end position was next to the merged (deleted) element.\n        // Then, the end position was moved to the graveyard root. In this case we need to fix\n        // the range cause its boundaries would be in different roots.\n        end = this.end.getShiftedBy(-1);\n      }\n\n      if (start.isAfter(end)) {\n        // This happens in three following cases:\n        //\n        // Case 1: Merge operation source position is before the target position (due to some transformations, OT, etc.)\n        //         This means that start can be moved before the end of the range.\n        //\n        // Before: <p>a{a</p><p>b}b</p><p>cc</p>\n        // Merge:  <p>b}b</p><p>cca{a</p>\n        // Fix:    <p>{b}b</p><p>ccaa</p>\n        //\n        // Case 2: Range start is before merged node but not directly.\n        //         Result should include all nodes that were in the original range.\n        //\n        // Before: <p>aa</p>{<p>cc</p><p>b}b</p>\n        // Merge:  <p>aab}b</p>{<p>cc</p>\n        // Fix:    <p>aa{bb</p><p>cc</p>}\n        //\n        //         The range is expanded by an additional `b` letter but it is better than dropping the whole `cc` paragraph.\n        //\n        // Case 3: Range start is directly before merged node.\n        //         Resulting range should include only nodes from the merged element:\n        //\n        // Before: <p>aa</p>{<p>b}b</p><p>cc</p>\n        // Merge:  <p>aab}b</p>{<p>cc</p>\n        // Fix:    <p>aa{b}b</p><p>cc</p>\n        //\n        if (operation.sourcePosition.isBefore(operation.targetPosition)) {\n          // Case 1.\n          start = Position._createAt(end);\n          start.offset = 0;\n        } else {\n          if (!operation.deletionPosition.isEqual(start)) {\n            // Case 2.\n            end = operation.deletionPosition;\n          } // In both case 2 and 3 start is at the end of the merge-to element.\n\n\n          start = operation.targetPosition;\n        }\n\n        return new Range(start, end);\n      }\n\n      return new Range(start, end);\n    }\n    /**\n     * Returns an array containing one or two {@link ~Range ranges} that are a result of transforming this\n     * {@link ~Range range} by inserting `howMany` nodes at `insertPosition`. Two {@link ~Range ranges} are\n     * returned if the insertion was inside this {@link ~Range range} and `spread` is set to `true`.\n     *\n     * Examples:\n     *\n     *\t\tlet range = model.createRange(\n     *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\n     *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\n     *\t\t);\n     *\t\tlet transformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 1 ] ), 2 );\n     *\t\t// transformed array has one range from [ 4, 7 ] to [ 6, 0, 1 ]\n     *\n     *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 4, 0, 0 ] ), 4 );\n     *\t\t// transformed array has one range from [ 2, 7 ] to [ 4, 0, 5 ]\n     *\n     *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 3, 2 ] ), 4 );\n     *\t\t// transformed array has one range, which is equal to original range\n     *\n     *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 3, 2 ] ), 4, true );\n     *\t\t// transformed array has two ranges: from [ 2, 7 ] to [ 3, 2 ] and from [ 3, 6 ] to [ 4, 0, 1 ]\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} insertPosition Position where nodes are inserted.\n     * @param {Number} howMany How many nodes are inserted.\n     * @param {Boolean} [spread] Flag indicating whether this {~Range range} should be spread if insertion\n     * was inside the range. Defaults to `false`.\n     * @returns {Array.<module:engine/model/range~Range>} Result of the transformation.\n     */\n\n  }, {\n    key: \"_getTransformedByInsertion\",\n    value: function _getTransformedByInsertion(insertPosition, howMany) {\n      var spread = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (spread && this.containsPosition(insertPosition)) {\n        // Range has to be spread. The first part is from original start to the spread point.\n        // The other part is from spread point to the original end, but transformed by\n        // insertion to reflect insertion changes.\n        return [new Range(this.start, insertPosition), new Range(insertPosition.getShiftedBy(howMany), this.end._getTransformedByInsertion(insertPosition, howMany))];\n      } else {\n        var range = new Range(this.start, this.end);\n        range.start = range.start._getTransformedByInsertion(insertPosition, howMany);\n        range.end = range.end._getTransformedByInsertion(insertPosition, howMany);\n        return [range];\n      }\n    }\n    /**\n     * Returns an array containing {@link ~Range ranges} that are a result of transforming this\n     * {@link ~Range range} by moving `howMany` nodes from `sourcePosition` to `targetPosition`.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} sourcePosition Position from which nodes are moved.\n     * @param {module:engine/model/position~Position} targetPosition Position to where nodes are moved.\n     * @param {Number} howMany How many nodes are moved.\n     * @param {Boolean} [spread=false] Whether the range should be spread if the move points inside the range.\n     * @returns {Array.<module:engine/model/range~Range>} Result of the transformation.\n     */\n\n  }, {\n    key: \"_getTransformedByMove\",\n    value: function _getTransformedByMove(sourcePosition, targetPosition, howMany) {\n      var spread = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      // Special case for transforming a collapsed range. Just transform it like a position.\n      if (this.isCollapsed) {\n        var newPos = this.start._getTransformedByMove(sourcePosition, targetPosition, howMany);\n\n        return [new Range(newPos)];\n      } // Special case for transformation when a part of the range is moved towards the range.\n      //\n      // Examples:\n      //\n      // <div><p>ab</p><p>c[d</p></div><p>e]f</p> --> <div><p>ab</p></div><p>c[d</p><p>e]f</p>\n      // <p>e[f</p><div><p>a]b</p><p>cd</p></div> --> <p>e[f</p><p>a]b</p><div><p>cd</p></div>\n      //\n      // Without this special condition, the default algorithm leaves an \"artifact\" range from one of `differenceSet` parts:\n      //\n      // <div><p>ab</p><p>c[d</p></div><p>e]f</p> --> <div><p>ab</p>{</div>}<p>c[d</p><p>e]f</p>\n      //\n      // This special case is applied only if the range is to be kept together (not spread).\n\n\n      var moveRange = Range._createFromPositionAndShift(sourcePosition, howMany);\n\n      var insertPosition = targetPosition._getTransformedByDeletion(sourcePosition, howMany);\n\n      if (this.containsPosition(targetPosition) && !spread) {\n        if (moveRange.containsPosition(this.start) || moveRange.containsPosition(this.end)) {\n          var start = this.start._getTransformedByMove(sourcePosition, targetPosition, howMany);\n\n          var end = this.end._getTransformedByMove(sourcePosition, targetPosition, howMany);\n\n          return [new Range(start, end)];\n        }\n      } // Default algorithm.\n\n\n      var result;\n      var differenceSet = this.getDifference(moveRange);\n      var difference = null;\n      var common = this.getIntersection(moveRange);\n\n      if (differenceSet.length == 1) {\n        // `moveRange` and this range may intersect but may be separate.\n        difference = new Range(differenceSet[0].start._getTransformedByDeletion(sourcePosition, howMany), differenceSet[0].end._getTransformedByDeletion(sourcePosition, howMany));\n      } else if (differenceSet.length == 2) {\n        // `moveRange` is inside this range.\n        difference = new Range(this.start, this.end._getTransformedByDeletion(sourcePosition, howMany));\n      } // else, `moveRange` contains this range.\n\n\n      if (difference) {\n        result = difference._getTransformedByInsertion(insertPosition, howMany, common !== null || spread);\n      } else {\n        result = [];\n      }\n\n      if (common) {\n        var transformedCommon = new Range(common.start._getCombined(moveRange.start, insertPosition), common.end._getCombined(moveRange.start, insertPosition));\n\n        if (result.length == 2) {\n          result.splice(1, 0, transformedCommon);\n        } else {\n          result.push(transformedCommon);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Returns a copy of this range that is transformed by deletion of `howMany` nodes from `deletePosition`.\n     *\n     * If the deleted range is intersecting with the transformed range, the transformed range will be shrank.\n     *\n     * If the deleted range contains transformed range, `null` will be returned.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} deletionPosition Position from which nodes are removed.\n     * @param {Number} howMany How many nodes are removed.\n     * @returns {module:engine/model/range~Range|null} Result of the transformation.\n     */\n\n  }, {\n    key: \"_getTransformedByDeletion\",\n    value: function _getTransformedByDeletion(deletePosition, howMany) {\n      var newStart = this.start._getTransformedByDeletion(deletePosition, howMany);\n\n      var newEnd = this.end._getTransformedByDeletion(deletePosition, howMany);\n\n      if (newStart == null && newEnd == null) {\n        return null;\n      }\n\n      if (newStart == null) {\n        newStart = deletePosition;\n      }\n\n      if (newEnd == null) {\n        newEnd = deletePosition;\n      }\n\n      return new Range(newStart, newEnd);\n    }\n    /**\n     * Creates a new range, spreading from specified {@link module:engine/model/position~Position position} to a position moved by\n     * given `shift`. If `shift` is a negative value, shifted position is treated as the beginning of the range.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} position Beginning of the range.\n     * @param {Number} shift How long the range should be.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      return this.start.isEqual(this.end);\n    }\n    /**\n     * Returns whether this range is flat, that is if {@link #start} position and\n     * {@link #end} position are in the same {@link module:engine/model/position~Position#parent}.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isFlat\",\n    get: function get() {\n      var startParentPath = this.start.getParentPath();\n      var endParentPath = this.end.getParentPath();\n      return compareArrays(startParentPath, endParentPath) == 'same';\n    }\n    /**\n     * Range root element.\n     *\n     * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this.start.root;\n    }\n  }], [{\n    key: \"_createFromPositionAndShift\",\n    value: function _createFromPositionAndShift(position, shift) {\n      var start = position;\n      var end = position.getShiftedBy(shift);\n      return shift > 0 ? new this(start, end) : new this(end, start);\n    }\n    /**\n     * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     * @protected\n     * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"_createIn\",\n    value: function _createIn(element) {\n      return new this(Position._createAt(element, 0), Position._createAt(element, element.maxOffset));\n    }\n    /**\n     * Creates a range that starts before given {@link module:engine/model/item~Item model item} and ends after it.\n     *\n     * @protected\n     * @param {module:engine/model/item~Item} item\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"_createOn\",\n    value: function _createOn(item) {\n      return this._createFromPositionAndShift(Position._createBefore(item), item.offsetSize);\n    }\n    /**\n     * Combines all ranges from the passed array into a one range. At least one range has to be passed.\n     * Passed ranges must not have common parts.\n     *\n     * The first range from the array is a reference range. If other ranges start or end on the exactly same position where\n     * the reference range, they get combined into one range.\n     *\n     *\t\t[  ][]  [    ][ ][             ][ ][]  [  ]  // Passed ranges, shown sorted\n     *\t\t[    ]                                       // The result of the function if the first range was a reference range.\n     *\t            [                           ]        // The result of the function if the third-to-seventh range was a reference range.\n     *\t                                           [  ]  // The result of the function if the last range was a reference range.\n     *\n     * @param {Array.<module:engine/model/range~Range>} ranges Ranges to combine.\n     * @returns {module:engine/model/range~Range} Combined range.\n     */\n\n  }, {\n    key: \"_createFromRanges\",\n    value: function _createFromRanges(ranges) {\n      if (ranges.length === 0) {\n        /**\n         * At least one range has to be passed to\n         * {@link module:engine/model/range~Range._createFromRanges `Range._createFromRanges()`}.\n         *\n         * @error range-create-from-ranges-empty-array\n         */\n        throw new CKEditorError('range-create-from-ranges-empty-array: At least one range has to be passed.');\n      } else if (ranges.length == 1) {\n        return ranges[0].clone();\n      } // 1. Set the first range in `ranges` array as a reference range.\n      // If we are going to return just a one range, one of the ranges need to be the reference one.\n      // Other ranges will be stuck to that range, if possible.\n\n\n      var ref = ranges[0]; // 2. Sort all the ranges so it's easier to process them.\n\n      ranges.sort(function (a, b) {\n        return a.start.isAfter(b.start) ? 1 : -1;\n      }); // 3. Check at which index the reference range is now.\n\n      var refIndex = ranges.indexOf(ref); // 4. At this moment we don't need the original range.\n      // We are going to modify the result and we need to return a new instance of Range.\n      // We have to create a copy of the reference range.\n\n      var result = new this(ref.start, ref.end); // 5. Ranges should be checked and glued starting from the range that is closest to the reference range.\n      // Since ranges are sorted, start with the range with index that is closest to reference range index.\n\n      if (refIndex > 0) {\n        for (var i = refIndex - 1; true; i++) {\n          if (ranges[i].end.isEqual(result.start)) {\n            result.start = Position._createAt(ranges[i].start);\n          } else {\n            // If ranges are not starting/ending at the same position there is no point in looking further.\n            break;\n          }\n        }\n      } // 6. Ranges should be checked and glued starting from the range that is closest to the reference range.\n      // Since ranges are sorted, start with the range with index that is closest to reference range index.\n\n\n      for (var _i2 = refIndex + 1; _i2 < ranges.length; _i2++) {\n        if (ranges[_i2].start.isEqual(result.end)) {\n          result.end = Position._createAt(ranges[_i2].end);\n        } else {\n          // If ranges are not starting/ending at the same position there is no point in looking further.\n          break;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Creates a `Range` instance from given plain object (i.e. parsed JSON string).\n     *\n     * @param {Object} json Plain object to be converted to `Range`.\n     * @param {module:engine/model/document~Document} doc Document object that will be range owner.\n     * @returns {module:engine/model/element~Element} `Range` instance created using given plain object.\n     */\n\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json, doc) {\n      return new this(Position.fromJSON(json.start, doc), Position.fromJSON(json.end, doc));\n    }\n  }]);\n\n  return Range;\n}();\n\nexport { Range as default };","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/position\n */\nimport TreeWalker from './treewalker';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Text from './text';\nimport { last } from 'lodash-es'; // To check if component is loaded more than once.\n\nimport '@ckeditor/ckeditor5-utils/src/version';\n/**\n * Represents a position in the model tree.\n *\n * A position is represented by its {@link module:engine/model/position~Position#root} and\n * a {@link module:engine/model/position~Position#path} in that root.\n *\n * You can create position instances via its constructor or the `createPosition*()` factory methods of\n * {@link module:engine/model/model~Model} and {@link module:engine/model/writer~Writer}.\n *\n * **Note:** Position is based on offsets, not indexes. This means that a position between two text nodes\n * `foo` and `bar` has offset `3`, not `1`. See {@link module:engine/model/position~Position#path} for more information.\n *\n * Since a position in the model is represented by a {@link module:engine/model/position~Position#root position root} and\n * {@link module:engine/model/position~Position#path position path} it is possible to create positions placed in non-existing places.\n * This requirement is important for operational transformation algorithms.\n *\n * Also, {@link module:engine/model/operation/operation~Operation operations}\n * kept in the {@link module:engine/model/document~Document#history document history}\n * are storing positions (and ranges) which were correct when those operations were applied, but may not be correct\n * after the document has changed.\n *\n * When changes are applied to the model, it may also happen that {@link module:engine/model/position~Position#parent position parent}\n * will change even if position path has not changed. Keep in mind, that if a position leads to non-existing element,\n * {@link module:engine/model/position~Position#parent} and some other properties and methods will throw errors.\n *\n * In most cases, position with wrong path is caused by an error in code, but it is sometimes needed, as described above.\n */\n\nvar Position =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a position.\n   *\n   * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n   * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n   * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n   * See {@link module:engine/model/position~PositionStickiness}.\n   */\n  function Position(root, path) {\n    var stickiness = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'toNone';\n\n    _classCallCheck(this, Position);\n\n    if (!root.is('element') && !root.is('documentFragment')) {\n      /**\n       * Position root is invalid.\n       *\n       * Positions can only be anchored in elements or document fragments.\n       *\n       * @error model-position-root-invalid\n       */\n      throw new CKEditorError('model-position-root-invalid: Position root invalid.');\n    }\n\n    if (!(path instanceof Array) || path.length === 0) {\n      /**\n       * Position path must be an array with at least one item.\n       *\n       * @error model-position-path-incorrect\n       * @param path\n       */\n      throw new CKEditorError('model-position-path-incorrect: Position path must be an array with at least one item.', {\n        path: path\n      });\n    } // Normalize the root and path (if element was passed).\n\n\n    path = root.getPath().concat(path);\n    root = root.root;\n    /**\n     * Root of the position path.\n     *\n     * @readonly\n     * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n     * module:engine/model/position~Position#root\n     */\n\n    this.root = root;\n    /**\n     * Position of the node in the tree. **Path contains offsets, not indexes.**\n     *\n     * Position can be placed before, after or in a {@link module:engine/model/node~Node node} if that node has\n     * {@link module:engine/model/node~Node#offsetSize} greater than `1`. Items in position path are\n     * {@link module:engine/model/node~Node#startOffset starting offsets} of position ancestors, starting from direct root children,\n     * down to the position offset in it's parent.\n     *\n     *\t\t ROOT\n     *\t\t  |- P            before: [ 0 ]         after: [ 1 ]\n     *\t\t  |- UL           before: [ 1 ]         after: [ 2 ]\n     *\t\t     |- LI        before: [ 1, 0 ]      after: [ 1, 1 ]\n     *\t\t     |  |- foo    before: [ 1, 0, 0 ]   after: [ 1, 0, 3 ]\n     *\t\t     |- LI        before: [ 1, 1 ]      after: [ 1, 2 ]\n     *\t\t        |- bar    before: [ 1, 1, 0 ]   after: [ 1, 1, 3 ]\n     *\n     * `foo` and `bar` are representing {@link module:engine/model/text~Text text nodes}. Since text nodes has offset size\n     * greater than `1` you can place position offset between their start and end:\n     *\n     *\t\t ROOT\n     *\t\t  |- P\n     *\t\t  |- UL\n     *\t\t     |- LI\n     *\t\t     |  |- f^o|o  ^ has path: [ 1, 0, 1 ]   | has path: [ 1, 0, 2 ]\n     *\t\t     |- LI\n     *\t\t        |- b^a|r  ^ has path: [ 1, 1, 1 ]   | has path: [ 1, 1, 2 ]\n     *\n     * @readonly\n     * @member {Array.<Number>} module:engine/model/position~Position#path\n     */\n\n    this.path = path;\n    /**\n     * Position stickiness. See {@link module:engine/model/position~PositionStickiness}.\n     *\n     * @member {module:engine/model/position~PositionStickiness} module:engine/model/position~Position#stickiness\n     */\n\n    this.stickiness = stickiness;\n  }\n  /**\n   * Offset at which this position is located in its {@link module:engine/model/position~Position#parent parent}. It is equal\n   * to the last item in position {@link module:engine/model/position~Position#path path}.\n   *\n   * @type {Number}\n   */\n\n\n  _createClass(Position, [{\n    key: \"compareWith\",\n\n    /**\n     * Checks whether this position is before or after given position.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n     * @returns {module:engine/model/position~PositionRelation}\n     */\n    value: function compareWith(otherPosition) {\n      if (this.root != otherPosition.root) {\n        return 'different';\n      }\n\n      var result = compareArrays(this.path, otherPosition.path);\n\n      switch (result) {\n        case 'same':\n          return 'same';\n\n        case 'prefix':\n          return 'before';\n\n        case 'extension':\n          return 'after';\n\n        default:\n          return this.path[result] < otherPosition.path[result] ? 'before' : 'after';\n      }\n    }\n    /**\n     * Gets the farthest position which matches the callback using\n     * {@link module:engine/model/treewalker~TreeWalker TreeWalker}.\n     *\n     * For example:\n     *\n     * \t\tgetLastMatchingPosition( value => value.type == 'text' );\n     * \t\t// <paragraph>[]foo</paragraph> -> <paragraph>foo[]</paragraph>\n     *\n     * \t\tgetLastMatchingPosition( value => value.type == 'text', { direction: 'backward' } );\n     * \t\t// <paragraph>foo[]</paragraph> -> <paragraph>[]foo</paragraph>\n     *\n     * \t\tgetLastMatchingPosition( value => false );\n     * \t\t// Do not move the position.\n     *\n     * @param {Function} skip Callback function. Gets {@link module:engine/model/treewalker~TreeWalkerValue} and should\n     * return `true` if the value should be skipped or `false` if not.\n     * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n     *\n     * @returns {module:engine/model/position~Position} The position after the last item which matches the `skip` callback test.\n     */\n\n  }, {\n    key: \"getLastMatchingPosition\",\n    value: function getLastMatchingPosition(skip) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      options.startPosition = this;\n      var treeWalker = new TreeWalker(options);\n      treeWalker.skip(skip);\n      return treeWalker.position;\n    }\n    /**\n     * Returns a path to this position's parent. Parent path is equal to position {@link module:engine/model/position~Position#path path}\n     * but without the last item.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @returns {Array.<Number>} Path to the parent.\n     */\n\n  }, {\n    key: \"getParentPath\",\n    value: function getParentPath() {\n      return this.path.slice(0, -1);\n    }\n    /**\n     * Returns ancestors array of this position, that is this position's parent and its ancestors.\n     *\n     * @returns {Array.<module:engine/model/item~Item>} Array with ancestors.\n     */\n\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      if (this.parent.is('documentFragment')) {\n        return [this.parent];\n      } else {\n        return this.parent.getAncestors({\n          includeSelf: true\n        });\n      }\n    }\n    /**\n     * Returns the slice of two position {@link #path paths} which is identical. The {@link #root roots}\n     * of these two paths must be identical.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {module:engine/model/position~Position} position The second position.\n     * @returns {Array.<Number>} The common path.\n     */\n\n  }, {\n    key: \"getCommonPath\",\n    value: function getCommonPath(position) {\n      if (this.root != position.root) {\n        return [];\n      } // We find on which tree-level start and end have the lowest common ancestor\n\n\n      var cmp = compareArrays(this.path, position.path); // If comparison returned string it means that arrays are same.\n\n      var diffAt = typeof cmp == 'string' ? Math.min(this.path.length, position.path.length) : cmp;\n      return this.path.slice(0, diffAt);\n    }\n    /**\n     * Returns an {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n     * which is a common ancestor of both positions. The {@link #root roots} of these two positions must be identical.\n     *\n     * @param {module:engine/model/position~Position} position The second position.\n     * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor(position) {\n      var ancestorsA = this.getAncestors();\n      var ancestorsB = position.getAncestors();\n      var i = 0;\n\n      while (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n        i++;\n      }\n\n      return i === 0 ? null : ancestorsA[i - 1];\n    }\n    /**\n     * Returns a new instance of `Position`, that has same {@link #parent parent} but it's offset\n     * is shifted by `shift` value (can be a negative value).\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {Number} shift Offset shift. Can be a negative value.\n     * @returns {module:engine/model/position~Position} Shifted position.\n     */\n\n  }, {\n    key: \"getShiftedBy\",\n    value: function getShiftedBy(shift) {\n      var shifted = this.clone();\n      var offset = shifted.offset + shift;\n      shifted.offset = offset < 0 ? 0 : offset;\n      return shifted;\n    }\n    /**\n     * Checks whether this position is after given position.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @see module:engine/model/position~Position#isBefore\n     * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} True if this position is after given position.\n     */\n\n  }, {\n    key: \"isAfter\",\n    value: function isAfter(otherPosition) {\n      return this.compareWith(otherPosition) == 'after';\n    }\n    /**\n     * Checks whether this position is before given position.\n     *\n     * **Note:** watch out when using negation of the value returned by this method, because the negation will also\n     * be `true` if positions are in different roots and you might not expect this. You should probably use\n     * `a.isAfter( b ) || a.isEqual( b )` or `!a.isBefore( p ) && a.root == b.root` in most scenarios. If your\n     * condition uses multiple `isAfter` and `isBefore` checks, build them so they do not use negated values, i.e.:\n     *\n     *\t\tif ( a.isBefore( b ) && c.isAfter( d ) ) {\n     *\t\t\t// do A.\n     *\t\t} else {\n     *\t\t\t// do B.\n     *\t\t}\n     *\n     * or, if you have only one if-branch:\n     *\n     *\t\tif ( !( a.isBefore( b ) && c.isAfter( d ) ) {\n     *\t\t\t// do B.\n     *\t\t}\n     *\n     * rather than:\n     *\n     *\t\tif ( !a.isBefore( b ) || && !c.isAfter( d ) ) {\n     *\t\t\t// do B.\n     *\t\t} else {\n     *\t\t\t// do A.\n     *\t\t}\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} True if this position is before given position.\n     */\n\n  }, {\n    key: \"isBefore\",\n    value: function isBefore(otherPosition) {\n      return this.compareWith(otherPosition) == 'before';\n    }\n    /**\n     * Checks whether this position is equal to given position.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} True if positions are same.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherPosition) {\n      return this.compareWith(otherPosition) == 'same';\n    }\n    /**\n     * Checks whether this position is touching given position. Positions touch when there are no text nodes\n     * or empty nodes in a range between them. Technically, those positions are not equal but in many cases\n     * they are very similar or even indistinguishable.\n     *\n     * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} True if positions touch.\n     */\n\n  }, {\n    key: \"isTouching\",\n    value: function isTouching(otherPosition) {\n      var left = null;\n      var right = null;\n      var compare = this.compareWith(otherPosition);\n\n      switch (compare) {\n        case 'same':\n          return true;\n\n        case 'before':\n          left = Position._createAt(this);\n          right = Position._createAt(otherPosition);\n          break;\n\n        case 'after':\n          left = Position._createAt(otherPosition);\n          right = Position._createAt(this);\n          break;\n\n        default:\n          return false;\n      } // Cached for optimization purposes.\n\n\n      var leftParent = left.parent;\n\n      while (left.path.length + right.path.length) {\n        if (left.isEqual(right)) {\n          return true;\n        }\n\n        if (left.path.length > right.path.length) {\n          if (left.offset !== leftParent.maxOffset) {\n            return false;\n          }\n\n          left.path = left.path.slice(0, -1);\n          leftParent = leftParent.parent;\n          left.offset++;\n        } else {\n          if (right.offset !== 0) {\n            return false;\n          }\n\n          right.path = right.path.slice(0, -1);\n        }\n      }\n    }\n    /**\n     * Checks if two positions are in the same parent.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {module:engine/model/position~Position} position Position to compare with.\n     * @returns {Boolean} `true` if positions have the same parent, `false` otherwise.\n     */\n\n  }, {\n    key: \"hasSameParentAs\",\n    value: function hasSameParentAs(position) {\n      if (this.root !== position.root) {\n        return false;\n      }\n\n      var thisParentPath = this.getParentPath();\n      var posParentPath = position.getParentPath();\n      return compareArrays(thisParentPath, posParentPath) == 'same';\n    }\n    /**\n     * Returns a copy of this position that is transformed by given `operation`.\n     *\n     * The new position's parameters are updated accordingly to the effect of the `operation`.\n     *\n     * For example, if `n` nodes are inserted before the position, the returned position {@link ~Position#offset} will be\n     * increased by `n`. If the position was in a merged element, it will be accordingly moved to the new element, etc.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation Operation to transform by.\n     * @returns {module:engine/model/position~Position} Transformed position.\n     */\n\n  }, {\n    key: \"getTransformedByOperation\",\n    value: function getTransformedByOperation(operation) {\n      var result;\n\n      switch (operation.type) {\n        case 'insert':\n          result = this._getTransformedByInsertOperation(operation);\n          break;\n\n        case 'move':\n        case 'remove':\n        case 'reinsert':\n          result = this._getTransformedByMoveOperation(operation);\n          break;\n\n        case 'split':\n          result = this._getTransformedBySplitOperation(operation);\n          break;\n\n        case 'merge':\n          result = this._getTransformedByMergeOperation(operation);\n          break;\n\n        default:\n          result = Position._createAt(this);\n          break;\n      }\n\n      return result;\n    }\n    /**\n     * Returns a copy of this position transformed by an insert operation.\n     *\n     * @protected\n     * @param {module:engine/model/operation/insertoperation~InsertOperation} operation\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"_getTransformedByInsertOperation\",\n    value: function _getTransformedByInsertOperation(operation) {\n      return this._getTransformedByInsertion(operation.position, operation.howMany);\n    }\n    /**\n     * Returns a copy of this position transformed by a move operation.\n     *\n     * @protected\n     * @param {module:engine/model/operation/moveoperation~MoveOperation} operation\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"_getTransformedByMoveOperation\",\n    value: function _getTransformedByMoveOperation(operation) {\n      return this._getTransformedByMove(operation.sourcePosition, operation.targetPosition, operation.howMany);\n    }\n    /**\n     * Returns a copy of this position transformed by a split operation.\n     *\n     * @protected\n     * @param {module:engine/model/operation/splitoperation~SplitOperation} operation\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"_getTransformedBySplitOperation\",\n    value: function _getTransformedBySplitOperation(operation) {\n      var movedRange = operation.movedRange;\n      var isContained = movedRange.containsPosition(this) || movedRange.start.isEqual(this) && this.stickiness == 'toNext';\n\n      if (isContained) {\n        return this._getCombined(operation.splitPosition, operation.moveTargetPosition);\n      } else {\n        if (operation.graveyardPosition) {\n          return this._getTransformedByMove(operation.graveyardPosition, operation.insertionPosition, 1);\n        } else {\n          return this._getTransformedByInsertion(operation.insertionPosition, 1);\n        }\n      }\n    }\n    /**\n     * Returns a copy of this position transformed by merge operation.\n     *\n     * @protected\n     * @param {module:engine/model/operation/mergeoperation~MergeOperation} operation\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"_getTransformedByMergeOperation\",\n    value: function _getTransformedByMergeOperation(operation) {\n      var movedRange = operation.movedRange;\n      var isContained = movedRange.containsPosition(this) || movedRange.start.isEqual(this);\n      var pos;\n\n      if (isContained) {\n        pos = this._getCombined(operation.sourcePosition, operation.targetPosition);\n\n        if (operation.sourcePosition.isBefore(operation.targetPosition)) {\n          // Above happens during OT when the merged element is moved before the merged-to element.\n          pos = pos._getTransformedByDeletion(operation.deletionPosition, 1);\n        }\n      } else if (this.isEqual(operation.deletionPosition)) {\n        pos = Position._createAt(operation.deletionPosition);\n      } else {\n        pos = this._getTransformedByMove(operation.deletionPosition, operation.graveyardPosition, 1);\n      }\n\n      return pos;\n    }\n    /**\n     * Returns a copy of this position that is updated by removing `howMany` nodes starting from `deletePosition`.\n     * It may happen that this position is in a removed node. If that is the case, `null` is returned instead.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} deletePosition Position before the first removed node.\n     * @param {Number} howMany How many nodes are removed.\n     * @returns {module:engine/model/position~Position|null} Transformed position or `null`.\n     */\n\n  }, {\n    key: \"_getTransformedByDeletion\",\n    value: function _getTransformedByDeletion(deletePosition, howMany) {\n      var transformed = Position._createAt(this); // This position can't be affected if deletion was in a different root.\n\n\n      if (this.root != deletePosition.root) {\n        return transformed;\n      }\n\n      if (compareArrays(deletePosition.getParentPath(), this.getParentPath()) == 'same') {\n        // If nodes are removed from the node that is pointed by this position...\n        if (deletePosition.offset < this.offset) {\n          // And are removed from before an offset of that position...\n          if (deletePosition.offset + howMany > this.offset) {\n            // Position is in removed range, it's no longer in the tree.\n            return null;\n          } else {\n            // Decrement the offset accordingly.\n            transformed.offset -= howMany;\n          }\n        }\n      } else if (compareArrays(deletePosition.getParentPath(), this.getParentPath()) == 'prefix') {\n        // If nodes are removed from a node that is on a path to this position...\n        var i = deletePosition.path.length - 1;\n\n        if (deletePosition.offset <= this.path[i]) {\n          // And are removed from before next node of that path...\n          if (deletePosition.offset + howMany > this.path[i]) {\n            // If the next node of that path is removed return null\n            // because the node containing this position got removed.\n            return null;\n          } else {\n            // Otherwise, decrement index on that path.\n            transformed.path[i] -= howMany;\n          }\n        }\n      }\n\n      return transformed;\n    }\n    /**\n     * Returns a copy of this position that is updated by inserting `howMany` nodes at `insertPosition`.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} insertPosition Position where nodes are inserted.\n     * @param {Number} howMany How many nodes are inserted.\n     * @returns {module:engine/model/position~Position} Transformed position.\n     */\n\n  }, {\n    key: \"_getTransformedByInsertion\",\n    value: function _getTransformedByInsertion(insertPosition, howMany) {\n      var transformed = Position._createAt(this); // This position can't be affected if insertion was in a different root.\n\n\n      if (this.root != insertPosition.root) {\n        return transformed;\n      }\n\n      if (compareArrays(insertPosition.getParentPath(), this.getParentPath()) == 'same') {\n        // If nodes are inserted in the node that is pointed by this position...\n        if (insertPosition.offset < this.offset || insertPosition.offset == this.offset && this.stickiness != 'toPrevious') {\n          // And are inserted before an offset of that position...\n          // \"Push\" this positions offset.\n          transformed.offset += howMany;\n        }\n      } else if (compareArrays(insertPosition.getParentPath(), this.getParentPath()) == 'prefix') {\n        // If nodes are inserted in a node that is on a path to this position...\n        var i = insertPosition.path.length - 1;\n\n        if (insertPosition.offset <= this.path[i]) {\n          // And are inserted before next node of that path...\n          // \"Push\" the index on that path.\n          transformed.path[i] += howMany;\n        }\n      }\n\n      return transformed;\n    }\n    /**\n     * Returns a copy of this position that is updated by moving `howMany` nodes from `sourcePosition` to `targetPosition`.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} sourcePosition Position before the first element to move.\n     * @param {module:engine/model/position~Position} targetPosition Position where moved elements will be inserted.\n     * @param {Number} howMany How many consecutive nodes to move, starting from `sourcePosition`.\n     * @returns {module:engine/model/position~Position} Transformed position.\n     */\n\n  }, {\n    key: \"_getTransformedByMove\",\n    value: function _getTransformedByMove(sourcePosition, targetPosition, howMany) {\n      // Update target position, as it could be affected by nodes removal.\n      targetPosition = targetPosition._getTransformedByDeletion(sourcePosition, howMany);\n\n      if (sourcePosition.isEqual(targetPosition)) {\n        // If `targetPosition` is equal to `sourcePosition` this isn't really any move. Just return position as it is.\n        return Position._createAt(this);\n      } // Moving a range removes nodes from their original position. We acknowledge this by proper transformation.\n\n\n      var transformed = this._getTransformedByDeletion(sourcePosition, howMany);\n\n      var isMoved = transformed === null || sourcePosition.isEqual(this) && this.stickiness == 'toNext' || sourcePosition.getShiftedBy(howMany).isEqual(this) && this.stickiness == 'toPrevious';\n\n      if (isMoved) {\n        // This position is inside moved range (or sticks to it).\n        // In this case, we calculate a combination of this position, move source position and target position.\n        return this._getCombined(sourcePosition, targetPosition);\n      } else {\n        // This position is not inside a removed range.\n        //\n        // In next step, we simply reflect inserting `howMany` nodes, which might further affect the position.\n        return transformed._getTransformedByInsertion(targetPosition, howMany);\n      }\n    }\n    /**\n     * Returns a new position that is a combination of this position and given positions.\n     *\n     * The combined position is a copy of this position transformed by moving a range starting at `source` position\n     * to the `target` position. It is expected that this position is inside the moved range.\n     *\n     * Example:\n     *\n     *\t\tlet original = model.createPositionFromPath( root, [ 2, 3, 1 ] );\n     *\t\tlet source = model.createPositionFromPath( root, [ 2, 2 ] );\n     *\t\tlet target = model.createPositionFromPath( otherRoot, [ 1, 1, 3 ] );\n     *\t\toriginal._getCombined( source, target ); // path is [ 1, 1, 4, 1 ], root is `otherRoot`\n     *\n     * Explanation:\n     *\n     * We have a position `[ 2, 3, 1 ]` and move some nodes from `[ 2, 2 ]` to `[ 1, 1, 3 ]`. The original position\n     * was inside moved nodes and now should point to the new place. The moved nodes will be after\n     * positions `[ 1, 1, 3 ]`, `[ 1, 1, 4 ]`, `[ 1, 1, 5 ]`. Since our position was in the second moved node,\n     * the transformed position will be in a sub-tree of a node at `[ 1, 1, 4 ]`. Looking at original path, we\n     * took care of `[ 2, 3 ]` part of it. Now we have to add the rest of the original path to the transformed path.\n     * Finally, the transformed position will point to `[ 1, 1, 4, 1 ]`.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} source Beginning of the moved range.\n     * @param {module:engine/model/position~Position} target Position where the range is moved.\n     * @returns {module:engine/model/position~Position} Combined position.\n     */\n\n  }, {\n    key: \"_getCombined\",\n    value: function _getCombined(source, target) {\n      var i = source.path.length - 1; // The first part of a path to combined position is a path to the place where nodes were moved.\n\n      var combined = Position._createAt(target);\n\n      combined.stickiness = this.stickiness; // Then we have to update the rest of the path.\n      // Fix the offset because this position might be after `from` position and we have to reflect that.\n\n      combined.offset = combined.offset + this.path[i] - source.offset; // Then, add the rest of the path.\n      // If this position is at the same level as `from` position nothing will get added.\n\n      combined.path = combined.path.concat(this.path.slice(i + 1));\n      return combined;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        root: this.root.toJSON(),\n        path: Array.from(this.path),\n        stickiness: this.stickiness\n      };\n    }\n    /**\n     * Returns a new position that is equal to current position.\n     *\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this.root, this.path, this.stickiness);\n    }\n    /**\n     * Creates position at the given location. The location can be specified as:\n     *\n     * * a {@link module:engine/model/position~Position position},\n     * * parent element and offset (offset defaults to `0`),\n     * * parent element and `'end'` (sets position at the end of that element),\n     * * {@link module:engine/model/item~Item model item} and `'before'` or `'after'` (sets position before or after given model item).\n     *\n     * This method is a shortcut to other factory methods such as:\n     *\n     * * {@link module:engine/model/position~Position._createBefore},\n     * * {@link module:engine/model/position~Position._createAfter}.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when the\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness. Used only when the\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     * @protected\n     */\n\n  }, {\n    key: \"offset\",\n    get: function get() {\n      return last(this.path);\n    }\n    /**\n     * @param {Number} newOffset\n     */\n    ,\n    set: function set(newOffset) {\n      this.path[this.path.length - 1] = newOffset;\n    }\n    /**\n     * Parent element of this position.\n     *\n     * Keep in mind that `parent` value is calculated when the property is accessed.\n     * If {@link module:engine/model/position~Position#path position path}\n     * leads to a non-existing element, `parent` property will throw error.\n     *\n     * Also it is a good idea to cache `parent` property if it is used frequently in an algorithm (i.e. in a long loop).\n     *\n     * @readonly\n     * @type {module:engine/model/element~Element}\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var parent = this.root;\n\n      for (var i = 0; i < this.path.length - 1; i++) {\n        parent = parent.getChild(parent.offsetToIndex(this.path[i]));\n      }\n\n      return parent;\n    }\n    /**\n     * Position {@link module:engine/model/position~Position#offset offset} converted to an index in position's parent node. It is\n     * equal to the {@link module:engine/model/node~Node#index index} of a node after this position. If position is placed\n     * in text node, position index is equal to the index of that text node.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this.parent.offsetToIndex(this.offset);\n    }\n    /**\n     * Returns {@link module:engine/model/text~Text text node} instance in which this position is placed or `null` if this\n     * position is not in a text node.\n     *\n     * @readonly\n     * @type {module:engine/model/text~Text|null}\n     */\n\n  }, {\n    key: \"textNode\",\n    get: function get() {\n      var node = this.parent.getChild(this.index);\n      return node instanceof Text && node.startOffset < this.offset ? node : null;\n    }\n    /**\n     * Node directly after this position or `null` if this position is in text node.\n     *\n     * @readonly\n     * @type {module:engine/model/node~Node|null}\n     */\n\n  }, {\n    key: \"nodeAfter\",\n    get: function get() {\n      return this.textNode === null ? this.parent.getChild(this.index) : null;\n    }\n    /**\n     * Node directly before this position or `null` if this position is in text node.\n     *\n     * @readonly\n     * @type {Node}\n     */\n\n  }, {\n    key: \"nodeBefore\",\n    get: function get() {\n      return this.textNode === null ? this.parent.getChild(this.index - 1) : null;\n    }\n    /**\n     * Is `true` if position is at the beginning of its {@link module:engine/model/position~Position#parent parent}, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isAtStart\",\n    get: function get() {\n      return this.offset === 0;\n    }\n    /**\n     * Is `true` if position is at the end of its {@link module:engine/model/position~Position#parent parent}, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isAtEnd\",\n    get: function get() {\n      return this.offset == this.parent.maxOffset;\n    }\n  }], [{\n    key: \"_createAt\",\n    value: function _createAt(itemOrPosition, offset) {\n      var stickiness = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'toNone';\n\n      if (itemOrPosition instanceof Position) {\n        return new Position(itemOrPosition.root, itemOrPosition.path, itemOrPosition.stickiness);\n      } else {\n        var node = itemOrPosition;\n\n        if (offset == 'end') {\n          offset = node.maxOffset;\n        } else if (offset == 'before') {\n          return this._createBefore(node, stickiness);\n        } else if (offset == 'after') {\n          return this._createAfter(node, stickiness);\n        } else if (offset !== 0 && !offset) {\n          /**\n           * {@link module:engine/model/model~Model#createPositionAt `Model#createPositionAt()`}\n           * requires the offset to be specified when the first parameter is a model item.\n           *\n           * @error model-createPositionAt-offset-required\n           */\n          throw new CKEditorError('model-createPositionAt-offset-required: ' + 'Model#createPositionAt() requires the offset when the first parameter is a model item.');\n        }\n\n        if (!node.is('element') && !node.is('documentFragment')) {\n          /**\n           * Position parent have to be a model element or model document fragment.\n           *\n           * @error model-position-parent-incorrect\n           */\n          throw new CKEditorError('model-position-parent-incorrect: Position parent have to be a element or document fragment.');\n        }\n\n        var path = node.getPath();\n        path.push(offset);\n        return new this(node.root, path, stickiness);\n      }\n    }\n    /**\n     * Creates a new position, after given {@link module:engine/model/item~Item model item}.\n     *\n     * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n     * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n     * @returns {module:engine/model/position~Position}\n     * @protected\n     */\n\n  }, {\n    key: \"_createAfter\",\n    value: function _createAfter(item, stickiness) {\n      if (!item.parent) {\n        /**\n         * You can not make a position after a root element.\n         *\n         * @error model-position-after-root\n         * @param {module:engine/model/item~Item} root\n         */\n        throw new CKEditorError('model-position-after-root: You cannot make a position after root.', {\n          root: item\n        });\n      }\n\n      return this._createAt(item.parent, item.endOffset, stickiness);\n    }\n    /**\n     * Creates a new position, before the given {@link module:engine/model/item~Item model item}.\n     *\n     * @param {module:engine/model/item~Item} item Item before which the position should be placed.\n     * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n     * @returns {module:engine/model/position~Position}\n     * @protected\n     */\n\n  }, {\n    key: \"_createBefore\",\n    value: function _createBefore(item, stickiness) {\n      if (!item.parent) {\n        /**\n         * You can not make a position before a root element.\n         *\n         * @error model-position-before-root\n         * @param {module:engine/model/item~Item} root\n         */\n        throw new CKEditorError('model-position-before-root: You cannot make a position before root.', {\n          root: item\n        });\n      }\n\n      return this._createAt(item.parent, item.startOffset, stickiness);\n    }\n    /**\n     * Creates a `Position` instance from given plain object (i.e. parsed JSON string).\n     *\n     * @param {Object} json Plain object to be converted to `Position`.\n     * @param {module:engine/model/document~Document} doc Document object that will be position owner.\n     * @returns {module:engine/model/position~Position} `Position` instance created using given plain object.\n     */\n\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json, doc) {\n      if (json.root === '$graveyard') {\n        var pos = new Position(doc.graveyard, json.path);\n        pos.stickiness = json.stickiness;\n        return pos;\n      }\n\n      if (!doc.getRoot(json.root)) {\n        /**\n         * Cannot create position for document. Root with specified name does not exist.\n         *\n         * @error model-position-fromjson-no-root\n         * @param {String} rootName\n         */\n        throw new CKEditorError('model-position-fromjson-no-root: Cannot create position for document. Root with specified name does not exist.', {\n          rootName: json.root\n        });\n      }\n\n      return new Position(doc.getRoot(json.root), json.path, json.stickiness);\n    }\n  }]);\n\n  return Position;\n}();\n/**\n * A flag indicating whether this position is `'before'` or `'after'` or `'same'` as given position.\n * If positions are in different roots `'different'` flag is returned.\n *\n * @typedef {String} module:engine/model/position~PositionRelation\n */\n\n/**\n * Represents how position is \"sticking\" with neighbour nodes. Used to define how position should be transformed (moved)\n * in edge cases. Possible values: `'toNone'`, `'toNext'`, `'toPrevious'`.\n *\n * Examples:\n *\n *\t\tInsert. Position is at | and nodes are inserted at the same position, marked as ^:\n *\n *\t\t- sticks to none:           <p>f^|oo</p>  ->  <p>fbar|oo</p>\n *\t\t- sticks to next node:      <p>f^|oo</p>  ->  <p>fbar|oo</p>\n *\t\t- sticks to previous node:  <p>f|^oo</p>  ->  <p>f|baroo</p>\n *\n *\n *\t\tMove. Position is at | and range [oo] is moved to position ^:\n *\n *\t\t- sticks to none:           <p>f|[oo]</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\t\t- sticks to none:           <p>f[oo]|</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\n *\t\t- sticks to next node:      <p>f|[oo]</p><p>b^ar</p>  ->  <p>f</p><p>b|ooar</p>\n *\t\t- sticks to next node:      <p>f[oo]|</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\n *\t\t- sticks to previous node:  <p>f|[oo]</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\t\t- sticks to previous node:  <p>f[oo]|</p><p>b^ar</p>  ->  <p>f</p><p>boo|ar</p>\n *\n * @typedef {String} module:engine/model/position~PositionStickiness\n */\n\n\nexport { Position as default };","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","module.exports = require(\"regenerator-runtime\");\n","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/position\n */\nimport TreeWalker from './treewalker';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EditableElement from './editableelement'; // To check if component is loaded more than once.\n\nimport '@ckeditor/ckeditor5-utils/src/version';\n/**\n * Position in the view tree. Position is represented by its parent node and an offset in this parent.\n *\n * In order to create a new position instance use the `createPosition*()` factory methods available in:\n *\n * * {@module:engine/view/view~View}\n * * {@module:engine/view/downcastwriter~DowncastWriter}\n * * {@module:engine/view/upcastwriter~UpcastWriter}\n */\n\nvar Position =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a position.\n   *\n   * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} parent Position parent.\n   * @param {Number} offset Position offset.\n   */\n  function Position(parent, offset) {\n    _classCallCheck(this, Position);\n\n    /**\n     * Position parent.\n     *\n     * @readonly\n     * @member {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n     * module:engine/view/position~Position#parent\n     */\n    this.parent = parent;\n    /**\n     * Position offset.\n     *\n     * @readonly\n     * @member {Number} module:engine/view/position~Position#offset\n     */\n\n    this.offset = offset;\n  }\n  /**\n   * Node directly after the position. Equals `null` when there is no node after position or position is located\n   * inside text node.\n   *\n   * @readonly\n   * @type {module:engine/view/node~Node|null}\n   */\n\n\n  _createClass(Position, [{\n    key: \"getShiftedBy\",\n\n    /**\n     * Returns a new instance of Position with offset incremented by `shift` value.\n     *\n     * @param {Number} shift How position offset should get changed. Accepts negative values.\n     * @returns {module:engine/view/position~Position} Shifted position.\n     */\n    value: function getShiftedBy(shift) {\n      var shifted = Position._createAt(this);\n\n      var offset = shifted.offset + shift;\n      shifted.offset = offset < 0 ? 0 : offset;\n      return shifted;\n    }\n    /**\n     * Gets the farthest position which matches the callback using\n     * {@link module:engine/view/treewalker~TreeWalker TreeWalker}.\n     *\n     * For example:\n     *\n     * \t\tgetLastMatchingPosition( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\n     * \t\tgetLastMatchingPosition( value => value.type == 'text', { direction: 'backward' } ); // <p>foo[]</p> -> <p>{}foo</p>\n     * \t\tgetLastMatchingPosition( value => false ); // Do not move the position.\n     *\n     * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~TreeWalkerValue} and should\n     * return `true` if the value should be skipped or `false` if not.\n     * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n     *\n     * @returns {module:engine/view/position~Position} The position after the last item which matches the `skip` callback test.\n     */\n\n  }, {\n    key: \"getLastMatchingPosition\",\n    value: function getLastMatchingPosition(skip) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      options.startPosition = this;\n      var treeWalker = new TreeWalker(options);\n      treeWalker.skip(skip);\n      return treeWalker.position;\n    }\n    /**\n     * Returns ancestors array of this position, that is this position's parent and it's ancestors.\n     *\n     * @returns {Array} Array with ancestors.\n     */\n\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      if (this.parent.is('documentFragment')) {\n        return [this.parent];\n      } else {\n        return this.parent.getAncestors({\n          includeSelf: true\n        });\n      }\n    }\n    /**\n     * Returns a {@link module:engine/view/node~Node} or {@link module:engine/view/documentfragment~DocumentFragment}\n     * which is a common ancestor of both positions.\n     *\n     * @param {module:engine/view/position~Position} position\n     * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor(position) {\n      var ancestorsA = this.getAncestors();\n      var ancestorsB = position.getAncestors();\n      var i = 0;\n\n      while (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n        i++;\n      }\n\n      return i === 0 ? null : ancestorsA[i - 1];\n    }\n    /**\n     * Checks whether this position equals given position.\n     *\n     * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} True if positions are same.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherPosition) {\n      return this.parent == otherPosition.parent && this.offset == otherPosition.offset;\n    }\n    /**\n     * Checks whether this position is located before given position. When method returns `false` it does not mean that\n     * this position is after give one. Two positions may be located inside separate roots and in that situation this\n     * method will still return `false`.\n     *\n     * @see module:engine/view/position~Position#isAfter\n     * @see module:engine/view/position~Position#compareWith\n     * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} Returns `true` if this position is before given position.\n     */\n\n  }, {\n    key: \"isBefore\",\n    value: function isBefore(otherPosition) {\n      return this.compareWith(otherPosition) == 'before';\n    }\n    /**\n     * Checks whether this position is located after given position. When method returns `false` it does not mean that\n     * this position is before give one. Two positions may be located inside separate roots and in that situation this\n     * method will still return `false`.\n     *\n     * @see module:engine/view/position~Position#isBefore\n     * @see module:engine/view/position~Position#compareWith\n     * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} Returns `true` if this position is after given position.\n     */\n\n  }, {\n    key: \"isAfter\",\n    value: function isAfter(otherPosition) {\n      return this.compareWith(otherPosition) == 'after';\n    }\n    /**\n     * Checks whether this position is before, after or in same position that other position. Two positions may be also\n     * different when they are located in separate roots.\n     *\n     * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n     * @returns {module:engine/view/position~PositionRelation}\n     */\n\n  }, {\n    key: \"compareWith\",\n    value: function compareWith(otherPosition) {\n      if (this.root !== otherPosition.root) {\n        return 'different';\n      }\n\n      if (this.isEqual(otherPosition)) {\n        return 'same';\n      } // Get path from root to position's parent element.\n\n\n      var thisPath = this.parent.is('node') ? this.parent.getPath() : [];\n      var otherPath = otherPosition.parent.is('node') ? otherPosition.parent.getPath() : []; // Add the positions' offsets to the parents offsets.\n\n      thisPath.push(this.offset);\n      otherPath.push(otherPosition.offset); // Compare both path arrays to find common ancestor.\n\n      var result = compareArrays(thisPath, otherPath);\n\n      switch (result) {\n        case 'prefix':\n          return 'before';\n\n        case 'extension':\n          return 'after';\n\n        default:\n          return thisPath[result] < otherPath[result] ? 'before' : 'after';\n      }\n    }\n    /**\n     * Creates a {@link module:engine/view/treewalker~TreeWalker TreeWalker} instance with this positions as a start position.\n     *\n     * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}\n     * @param {module:engine/view/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n     * @param {Boolean} [options.singleCharacters=false]\n     * @param {Boolean} [options.shallow=false]\n     * @param {Boolean} [options.ignoreElementEnd=false]\n     */\n\n  }, {\n    key: \"getWalker\",\n    value: function getWalker() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      options.startPosition = this;\n      return new TreeWalker(options);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Position(this.parent, this.offset);\n    }\n    /**\n     * Creates position at the given location. The location can be specified as:\n     *\n     * * a {@link module:engine/view/position~Position position},\n     * * parent element and offset (offset defaults to `0`),\n     * * parent element and `'end'` (sets position at the end of that element),\n     * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n     *\n     * This method is a shortcut to other constructors such as:\n     *\n     * * {@link module:engine/view/position~Position._createBefore},\n     * * {@link module:engine/view/position~Position._createAfter}.\n     *\n     * @protected\n     * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/view/item~Item view item}.\n     */\n\n  }, {\n    key: \"nodeAfter\",\n    get: function get() {\n      if (this.parent.is('text')) {\n        return null;\n      }\n\n      return this.parent.getChild(this.offset) || null;\n    }\n    /**\n     * Node directly before the position. Equals `null` when there is no node before position or position is located\n     * inside text node.\n     *\n     * @readonly\n     * @type {module:engine/view/node~Node|null}\n     */\n\n  }, {\n    key: \"nodeBefore\",\n    get: function get() {\n      if (this.parent.is('text')) {\n        return null;\n      }\n\n      return this.parent.getChild(this.offset - 1) || null;\n    }\n    /**\n     * Is `true` if position is at the beginning of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isAtStart\",\n    get: function get() {\n      return this.offset === 0;\n    }\n    /**\n     * Is `true` if position is at the end of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isAtEnd\",\n    get: function get() {\n      var endOffset = this.parent.is('text') ? this.parent.data.length : this.parent.childCount;\n      return this.offset === endOffset;\n    }\n    /**\n     * Position's root, that is the root of the position's parent element.\n     *\n     * @readonly\n     * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this.parent.root;\n    }\n    /**\n     * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this position, or `null` if\n     * position is not inside an editable element.\n     *\n     * @type {module:engine/view/editableelement~EditableElement|null}\n     */\n\n  }, {\n    key: \"editableElement\",\n    get: function get() {\n      var editable = this.parent;\n\n      while (!(editable instanceof EditableElement)) {\n        if (editable.parent) {\n          editable = editable.parent;\n        } else {\n          return null;\n        }\n      }\n\n      return editable;\n    }\n  }], [{\n    key: \"_createAt\",\n    value: function _createAt(itemOrPosition, offset) {\n      if (itemOrPosition instanceof Position) {\n        return new this(itemOrPosition.parent, itemOrPosition.offset);\n      } else {\n        var node = itemOrPosition;\n\n        if (offset == 'end') {\n          offset = node.is('text') ? node.data.length : node.childCount;\n        } else if (offset == 'before') {\n          return this._createBefore(node);\n        } else if (offset == 'after') {\n          return this._createAfter(node);\n        } else if (offset !== 0 && !offset) {\n          /**\n           * {@link module:engine/view/view~View#createPositionAt `View#createPositionAt()`}\n           * requires the offset to be specified when the first parameter is a view item.\n           *\n           * @error view-createPositionAt-offset-required\n           */\n          throw new CKEditorError('view-createPositionAt-offset-required: ' + 'View#createPositionAt() requires the offset when the first parameter is a view item.');\n        }\n\n        return new Position(node, offset);\n      }\n    }\n    /**\n     * Creates a new position after given view item.\n     *\n     * @protected\n     * @param {module:engine/view/item~Item} item View item after which the position should be located.\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"_createAfter\",\n    value: function _createAfter(item) {\n      // TextProxy is not a instance of Node so we need do handle it in specific way.\n      if (item.is('textProxy')) {\n        return new Position(item.textNode, item.offsetInText + item.data.length);\n      }\n\n      if (!item.parent) {\n        /**\n         * You can not make a position after a root.\n         *\n         * @error view-position-after-root\n         * @param {module:engine/view/node~Node} root\n         */\n        throw new CKEditorError('view-position-after-root: You can not make position after root.', {\n          root: item\n        });\n      }\n\n      return new Position(item.parent, item.index + 1);\n    }\n    /**\n     * Creates a new position before given view item.\n     *\n     * @protected\n     * @param {module:engine/view/item~Item} item View item before which the position should be located.\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"_createBefore\",\n    value: function _createBefore(item) {\n      // TextProxy is not a instance of Node so we need do handle it in specific way.\n      if (item.is('textProxy')) {\n        return new Position(item.textNode, item.offsetInText);\n      }\n\n      if (!item.parent) {\n        /**\n         * You cannot make a position before a root.\n         *\n         * @error view-position-before-root\n         * @param {module:engine/view/node~Node} root\n         */\n        throw new CKEditorError('view-position-before-root: You can not make position before root.', {\n          root: item\n        });\n      }\n\n      return new Position(item.parent, item.index);\n    }\n  }]);\n\n  return Position;\n}();\n/**\n * A flag indicating whether this position is `'before'` or `'after'` or `'same'` as given position.\n * If positions are in different roots `'different'` flag is returned.\n *\n * @typedef {String} module:engine/view/position~PositionRelation\n */\n\n\nexport { Position as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/mix\n */\n\n/**\n * Copies enumerable properties and symbols from the objects given as 2nd+ parameters to the\n * prototype of first object (a constructor).\n *\n *\t\tclass Editor {\n *\t\t\t...\n *\t\t}\n *\n *\t\tconst SomeMixin = {\n *\t\t\ta() {\n *\t\t\t\treturn 'a';\n *\t\t\t}\n *\t\t};\n *\n *\t\tmix( Editor, SomeMixin, ... );\n *\n *\t\tnew Editor().a(); // -> 'a'\n *\n * Note: Properties which already exist in the base class will not be overriden.\n *\n * @param {Function} [baseClass] Class which prototype will be extended.\n * @param {Object} [...mixins] Objects from which to get properties.\n */\nexport default function mix(baseClass) {\n  for (var _len = arguments.length, mixins = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    mixins[_key - 1] = arguments[_key];\n  }\n\n  mixins.forEach(function (mixin) {\n    Object.getOwnPropertyNames(mixin).concat(Object.getOwnPropertySymbols(mixin)).forEach(function (key) {\n      if (key in baseClass.prototype) {\n        return;\n      }\n\n      var sourceDescriptor = Object.getOwnPropertyDescriptor(mixin, key);\n      sourceDescriptor.enumerable = false;\n      Object.defineProperty(baseClass.prototype, key, sourceDescriptor);\n    });\n  });\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import _toConsumableArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/emittermixin\n */\nimport EventInfo from './eventinfo';\nimport uid from './uid';\nimport priorities from './priorities'; // To check if component is loaded more than once.\n\nimport './version';\n\nvar _listeningTo = Symbol('listeningTo');\n\nvar _emitterId = Symbol('emitterId');\n/**\n * Mixin that injects the {@link ~Emitter events API} into its host.\n *\n * @mixin EmitterMixin\n * @implements module:utils/emittermixin~Emitter\n */\n\n\nvar EmitterMixin = {\n  /**\n   * @inheritDoc\n   */\n  on: function on(event, callback) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.listenTo(this, event, callback, options);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  once: function once(event, callback, options) {\n    var wasFired = false;\n\n    var onceCallback = function onceCallback(event) {\n      // Ensure the callback is called only once even if the callback itself leads to re-firing the event\n      // (which would call the callback again).\n      if (!wasFired) {\n        wasFired = true; // Go off() at the first call.\n\n        event.off(); // Go with the original callback.\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        callback.call.apply(callback, [this, event].concat(args));\n      }\n    }; // Make a similar on() call, simply replacing the callback.\n\n\n    this.listenTo(this, event, onceCallback, options);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  off: function off(event, callback) {\n    this.stopListening(this, event, callback);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  listenTo: function listenTo(emitter, event, callback) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var emitterInfo, eventCallbacks; // _listeningTo contains a list of emitters that this object is listening to.\n    // This list has the following format:\n    //\n    // _listeningTo: {\n    //     emitterId: {\n    //         emitter: emitter,\n    //         callbacks: {\n    //             event1: [ callback1, callback2, ... ]\n    //             ....\n    //         }\n    //     },\n    //     ...\n    // }\n\n    if (!this[_listeningTo]) {\n      this[_listeningTo] = {};\n    }\n\n    var emitters = this[_listeningTo];\n\n    if (!_getEmitterId(emitter)) {\n      _setEmitterId(emitter);\n    }\n\n    var emitterId = _getEmitterId(emitter);\n\n    if (!(emitterInfo = emitters[emitterId])) {\n      emitterInfo = emitters[emitterId] = {\n        emitter: emitter,\n        callbacks: {}\n      };\n    }\n\n    if (!(eventCallbacks = emitterInfo.callbacks[event])) {\n      eventCallbacks = emitterInfo.callbacks[event] = [];\n    }\n\n    eventCallbacks.push(callback); // Finally register the callback to the event.\n\n    createEventNamespace(emitter, event);\n    var lists = getCallbacksListsForNamespace(emitter, event);\n    var priority = priorities.get(options.priority);\n    var callbackDefinition = {\n      callback: callback,\n      priority: priority\n    }; // Add the callback to all callbacks list.\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = lists[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var callbacks = _step.value;\n        // Add the callback to the list in the right priority position.\n        var added = false;\n\n        for (var i = 0; i < callbacks.length; i++) {\n          if (callbacks[i].priority < priority) {\n            callbacks.splice(i, 0, callbackDefinition);\n            added = true;\n            break;\n          }\n        } // Add at the end, if right place was not found.\n\n\n        if (!added) {\n          callbacks.push(callbackDefinition);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  stopListening: function stopListening(emitter, event, callback) {\n    var emitters = this[_listeningTo];\n\n    var emitterId = emitter && _getEmitterId(emitter);\n\n    var emitterInfo = emitters && emitterId && emitters[emitterId];\n    var eventCallbacks = emitterInfo && event && emitterInfo.callbacks[event]; // Stop if nothing has been listened.\n\n    if (!emitters || emitter && !emitterInfo || event && !eventCallbacks) {\n      return;\n    } // All params provided. off() that single callback.\n\n\n    if (callback) {\n      removeCallback(emitter, event, callback);\n    } // Only `emitter` and `event` provided. off() all callbacks for that event.\n    else if (eventCallbacks) {\n        while (callback = eventCallbacks.pop()) {\n          removeCallback(emitter, event, callback);\n        }\n\n        delete emitterInfo.callbacks[event];\n      } // Only `emitter` provided. off() all events for that emitter.\n      else if (emitterInfo) {\n          for (event in emitterInfo.callbacks) {\n            this.stopListening(emitter, event);\n          }\n\n          delete emitters[emitterId];\n        } // No params provided. off() all emitters.\n        else {\n            for (emitterId in emitters) {\n              this.stopListening(emitters[emitterId].emitter);\n            }\n\n            delete this[_listeningTo];\n          }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  fire: function fire(eventOrInfo) {\n    var eventInfo = eventOrInfo instanceof EventInfo ? eventOrInfo : new EventInfo(this, eventOrInfo);\n    var event = eventInfo.name;\n    var callbacks = getCallbacksForEvent(this, event); // Record that the event passed this emitter on its path.\n\n    eventInfo.path.push(this); // Handle event listener callbacks first.\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    if (callbacks) {\n      // Arguments passed to each callback.\n      var callbackArgs = [eventInfo].concat(args); // Copying callbacks array is the easiest and most secure way of preventing infinite loops, when event callbacks\n      // are added while processing other callbacks. Previous solution involved adding counters (unique ids) but\n      // failed if callbacks were added to the queue before currently processed callback.\n      // If this proves to be too inefficient, another method is to change `.on()` so callbacks are stored if same\n      // event is currently processed. Then, `.fire()` at the end, would have to add all stored events.\n\n      callbacks = Array.from(callbacks);\n\n      for (var i = 0; i < callbacks.length; i++) {\n        callbacks[i].callback.apply(this, callbackArgs); // Remove the callback from future requests if off() has been called.\n\n        if (eventInfo.off.called) {\n          // Remove the called mark for the next calls.\n          delete eventInfo.off.called;\n          removeCallback(this, event, callbacks[i].callback);\n        } // Do not execute next callbacks if stop() was called.\n\n\n        if (eventInfo.stop.called) {\n          break;\n        }\n      }\n    } // Delegate event to other emitters if needed.\n\n\n    if (this._delegations) {\n      var destinations = this._delegations.get(event);\n\n      var passAllDestinations = this._delegations.get('*');\n\n      if (destinations) {\n        fireDelegatedEvents(destinations, eventInfo, args);\n      }\n\n      if (passAllDestinations) {\n        fireDelegatedEvents(passAllDestinations, eventInfo, args);\n      }\n    }\n\n    return eventInfo.return;\n  },\n\n  /**\n   * @inheritDoc\n   */\n  delegate: function delegate() {\n    var _this = this;\n\n    for (var _len3 = arguments.length, events = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      events[_key3] = arguments[_key3];\n    }\n\n    return {\n      to: function to(emitter, nameOrFunction) {\n        if (!_this._delegations) {\n          _this._delegations = new Map();\n        } // Originally there was a for..of loop which unfortunately caused an error in Babel that didn't allow\n        // build an application. See: https://github.com/ckeditor/ckeditor5-react/issues/40.\n\n\n        events.forEach(function (eventName) {\n          var destinations = _this._delegations.get(eventName);\n\n          if (!destinations) {\n            _this._delegations.set(eventName, new Map([[emitter, nameOrFunction]]));\n          } else {\n            destinations.set(emitter, nameOrFunction);\n          }\n        });\n      }\n    };\n  },\n\n  /**\n   * @inheritDoc\n   */\n  stopDelegating: function stopDelegating(event, emitter) {\n    if (!this._delegations) {\n      return;\n    }\n\n    if (!event) {\n      this._delegations.clear();\n    } else if (!emitter) {\n      this._delegations.delete(event);\n    } else {\n      var destinations = this._delegations.get(event);\n\n      if (destinations) {\n        destinations.delete(emitter);\n      }\n    }\n  }\n};\nexport default EmitterMixin;\n/**\n * Emitter/listener interface.\n *\n * Can be easily implemented by a class by mixing the {@link module:utils/emittermixin~EmitterMixin} mixin.\n *\n * @interface Emitter\n */\n\n/**\n * Registers a callback function to be executed when an event is fired.\n *\n * Shorthand for {@link #listenTo `this.listenTo( this, event, callback, options )`} (it makes the emitter\n * listen on itself).\n *\n * @method #on\n * @param {String} event The name of the event.\n * @param {Function} callback The function to be called on event.\n * @param {Object} [options={}] Additional options.\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n * order they were added.\n */\n\n/**\n * Registers a callback function to be executed on the next time the event is fired only. This is similar to\n * calling {@link #on} followed by {@link #off} in the callback.\n *\n * @method #once\n * @param {String} event The name of the event.\n * @param {Function} callback The function to be called on event.\n * @param {Object} [options={}] Additional options.\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n * order they were added.\n */\n\n/**\n * Stops executing the callback on the given event.\n * Shorthand for {@link #stopListening `this.stopListening( this, event, callback )`}.\n *\n * @method #off\n * @param {String} event The name of the event.\n * @param {Function} callback The function to stop being called.\n */\n\n/**\n * Registers a callback function to be executed when an event is fired in a specific (emitter) object.\n *\n * Events can be grouped in namespaces using `:`.\n * When namespaced event is fired, it additionally fires all callbacks for that namespace.\n *\n *\t\t// myEmitter.on( ... ) is a shorthand for myEmitter.listenTo( myEmitter, ... ).\n *\t\tmyEmitter.on( 'myGroup', genericCallback );\n *\t\tmyEmitter.on( 'myGroup:myEvent', specificCallback );\n *\n *\t\t// genericCallback is fired.\n *\t\tmyEmitter.fire( 'myGroup' );\n *\t\t// both genericCallback and specificCallback are fired.\n *\t\tmyEmitter.fire( 'myGroup:myEvent' );\n *\t\t// genericCallback is fired even though there are no callbacks for \"foo\".\n *\t\tmyEmitter.fire( 'myGroup:foo' );\n *\n * An event callback can {@link module:utils/eventinfo~EventInfo#stop stop the event} and\n * set the {@link module:utils/eventinfo~EventInfo#return return value} of the {@link #fire} method.\n *\n * @method #listenTo\n * @param {module:utils/emittermixin~Emitter} emitter The object that fires the event.\n * @param {String} event The name of the event.\n * @param {Function} callback The function to be called on event.\n * @param {Object} [options={}] Additional options.\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n * order they were added.\n */\n\n/**\n * Stops listening for events. It can be used at different levels:\n *\n * * To stop listening to a specific callback.\n * * To stop listening to a specific event.\n * * To stop listening to all events fired by a specific object.\n * * To stop listening to all events fired by all objects.\n *\n * @method #stopListening\n * @param {module:utils/emittermixin~Emitter} [emitter] The object to stop listening to. If omitted, stops it for all objects.\n * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\n * for all events from `emitter`.\n * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\n * `event`.\n */\n\n/**\n * Fires an event, executing all callbacks registered for it.\n *\n * The first parameter passed to callbacks is an {@link module:utils/eventinfo~EventInfo} object,\n * followed by the optional `args` provided in the `fire()` method call.\n *\n * @method #fire\n * @param {String|module:utils/eventinfo~EventInfo} eventOrInfo The name of the event or `EventInfo` object if event is delegated.\n * @param {...*} [args] Additional arguments to be passed to the callbacks.\n * @returns {*} By default the method returns `undefined`. However, the return value can be changed by listeners\n * through modification of the {@link module:utils/eventinfo~EventInfo#return `evt.return`}'s property (the event info\n * is the first param of every callback).\n */\n\n/**\n * Delegates selected events to another {@link module:utils/emittermixin~Emitter}. For instance:\n *\n *\t\temitterA.delegate( 'eventX' ).to( emitterB );\n *\t\temitterA.delegate( 'eventX', 'eventY' ).to( emitterC );\n *\n * then `eventX` is delegated (fired by) `emitterB` and `emitterC` along with `data`:\n *\n *\t\temitterA.fire( 'eventX', data );\n *\n * and `eventY` is delegated (fired by) `emitterC` along with `data`:\n *\n *\t\temitterA.fire( 'eventY', data );\n *\n * @method #delegate\n * @param {...String} events Event names that will be delegated to another emitter.\n * @returns {module:utils/emittermixin~EmitterMixinDelegateChain}\n */\n\n/**\n * Stops delegating events. It can be used at different levels:\n *\n * * To stop delegating all events.\n * * To stop delegating a specific event to all emitters.\n * * To stop delegating a specific event to a specific emitter.\n *\n * @method #stopDelegating\n * @param {String} [event] The name of the event to stop delegating. If omitted, stops it all delegations.\n * @param {module:utils/emittermixin~Emitter} [emitter] (requires `event`) The object to stop delegating a particular event to.\n * If omitted, stops delegation of `event` to all emitters.\n */\n\n/**\n * Checks if `listeningEmitter` listens to an emitter with given `listenedToEmitterId` and if so, returns that emitter.\n * If not, returns `null`.\n *\n * @protected\n * @param {module:utils/emittermixin~EmitterMixin} listeningEmitter Emitter that listens.\n * @param {String} listenedToEmitterId Unique emitter id of emitter listened to.\n * @returns {module:utils/emittermixin~EmitterMixin|null}\n */\n\nexport function _getEmitterListenedTo(listeningEmitter, listenedToEmitterId) {\n  if (listeningEmitter[_listeningTo] && listeningEmitter[_listeningTo][listenedToEmitterId]) {\n    return listeningEmitter[_listeningTo][listenedToEmitterId].emitter;\n  }\n\n  return null;\n}\n/**\n * Sets emitter's unique id.\n *\n * **Note:** `_emitterId` can be set only once.\n *\n * @protected\n * @param {module:utils/emittermixin~EmitterMixin} emitter Emitter for which id will be set.\n * @param {String} [id] Unique id to set. If not passed, random unique id will be set.\n */\n\nexport function _setEmitterId(emitter, id) {\n  if (!emitter[_emitterId]) {\n    emitter[_emitterId] = id || uid();\n  }\n}\n/**\n * Returns emitter's unique id.\n *\n * @protected\n * @param {module:utils/emittermixin~EmitterMixin} emitter Emitter which id will be returned.\n */\n\nexport function _getEmitterId(emitter) {\n  return emitter[_emitterId];\n} // Gets the internal `_events` property of the given object.\n// `_events` property store all lists with callbacks for registered event names.\n// If there were no events registered on the object, empty `_events` object is created.\n\nfunction getEvents(source) {\n  if (!source._events) {\n    Object.defineProperty(source, '_events', {\n      value: {}\n    });\n  }\n\n  return source._events;\n} // Creates event node for generic-specific events relation architecture.\n\n\nfunction makeEventNode() {\n  return {\n    callbacks: [],\n    childEvents: []\n  };\n} // Creates an architecture for generic-specific events relation.\n// If needed, creates all events for given eventName, i.e. if the first registered event\n// is foo:bar:abc, it will create foo:bar:abc, foo:bar and foo event and tie them together.\n// It also copies callbacks from more generic events to more specific events when\n// specific events are created.\n\n\nfunction createEventNamespace(source, eventName) {\n  var events = getEvents(source); // First, check if the event we want to add to the structure already exists.\n\n  if (events[eventName]) {\n    // If it exists, we don't have to do anything.\n    return;\n  } // In other case, we have to create the structure for the event.\n  // Note, that we might need to create intermediate events too.\n  // I.e. if foo:bar:abc is being registered and we only have foo in the structure,\n  // we need to also register foo:bar.\n  // Currently processed event name.\n\n\n  var name = eventName; // Name of the event that is a child event for currently processed event.\n\n  var childEventName = null; // Array containing all newly created specific events.\n\n  var newEventNodes = []; // While loop can't check for ':' index because we have to handle generic events too.\n  // In each loop, we truncate event name, going from the most specific name to the generic one.\n  // I.e. foo:bar:abc -> foo:bar -> foo.\n\n  while (name !== '') {\n    if (events[name]) {\n      // If the currently processed event name is already registered, we can be sure\n      // that it already has all the structure created, so we can break the loop here\n      // as no more events need to be registered.\n      break;\n    } // If this event is not yet registered, create a new object for it.\n\n\n    events[name] = makeEventNode(); // Add it to the array with newly created events.\n\n    newEventNodes.push(events[name]); // Add previously processed event name as a child of this event.\n\n    if (childEventName) {\n      events[name].childEvents.push(childEventName);\n    }\n\n    childEventName = name; // If `.lastIndexOf()` returns -1, `.substr()` will return '' which will break the loop.\n\n    name = name.substr(0, name.lastIndexOf(':'));\n  }\n\n  if (name !== '') {\n    // If name is not empty, we found an already registered event that was a parent of the\n    // event we wanted to register.\n    // Copy that event's callbacks to newly registered events.\n    for (var _i = 0, _newEventNodes = newEventNodes; _i < _newEventNodes.length; _i++) {\n      var node = _newEventNodes[_i];\n      node.callbacks = events[name].callbacks.slice();\n    } // Add last newly created event to the already registered event.\n\n\n    events[name].childEvents.push(childEventName);\n  }\n} // Gets an array containing callbacks list for a given event and it's more specific events.\n// I.e. if given event is foo:bar and there is also foo:bar:abc event registered, this will\n// return callback list of foo:bar and foo:bar:abc (but not foo).\n\n\nfunction getCallbacksListsForNamespace(source, eventName) {\n  var eventNode = getEvents(source)[eventName];\n\n  if (!eventNode) {\n    return [];\n  }\n\n  var callbacksLists = [eventNode.callbacks];\n\n  for (var i = 0; i < eventNode.childEvents.length; i++) {\n    var childCallbacksLists = getCallbacksListsForNamespace(source, eventNode.childEvents[i]);\n    callbacksLists = callbacksLists.concat(childCallbacksLists);\n  }\n\n  return callbacksLists;\n} // Get the list of callbacks for a given event, but only if there any callbacks have been registered.\n// If there are no callbacks registered for given event, it checks if this is a specific event and looks\n// for callbacks for it's more generic version.\n\n\nfunction getCallbacksForEvent(source, eventName) {\n  var event;\n\n  if (!source._events || !(event = source._events[eventName]) || !event.callbacks.length) {\n    // There are no callbacks registered for specified eventName.\n    // But this could be a specific-type event that is in a namespace.\n    if (eventName.indexOf(':') > -1) {\n      // If the eventName is specific, try to find callback lists for more generic event.\n      return getCallbacksForEvent(source, eventName.substr(0, eventName.lastIndexOf(':')));\n    } else {\n      // If this is a top-level generic event, return null;\n      return null;\n    }\n  }\n\n  return event.callbacks;\n} // Fires delegated events for given map of destinations.\n//\n// @private\n// * @param {Map.<utils.Emitter>} destinations A map containing `[ {@link utils.Emitter}, \"event name\" ]` pair destinations.\n// * @param {utils.EventInfo} eventInfo The original event info object.\n// * @param {Array.<*>} fireArgs Arguments the original event was fired with.\n\n\nfunction fireDelegatedEvents(destinations, eventInfo, fireArgs) {\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = destinations[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _step2$value = _slicedToArray(_step2.value, 2),\n          emitter = _step2$value[0],\n          name = _step2$value[1];\n\n      if (!name) {\n        name = eventInfo.name;\n      } else if (typeof name == 'function') {\n        name = name(eventInfo.name);\n      }\n\n      var delegatedInfo = new EventInfo(eventInfo.source, name);\n      delegatedInfo.path = _toConsumableArray(eventInfo.path);\n      emitter.fire.apply(emitter, [delegatedInfo].concat(_toConsumableArray(fireArgs)));\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n} // Removes callback from emitter for given event.\n//\n// @param {module:utils/emittermixin~Emitter} emitter\n// @param {String} event\n// @param {Function} callback\n\n\nfunction removeCallback(emitter, event, callback) {\n  var lists = getCallbacksListsForNamespace(emitter, event);\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = lists[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var callbacks = _step3.value;\n\n      for (var i = 0; i < callbacks.length; i++) {\n        if (callbacks[i].callback == callback) {\n          // Remove the callback from the list (fixing the next index).\n          callbacks.splice(i, 1);\n          i--;\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n}\n/**\n * The return value of {@link ~EmitterMixin#delegate}.\n *\n * @interface module:utils/emittermixin~EmitterMixinDelegateChain\n */\n\n/**\n * Selects destination for {@link module:utils/emittermixin~EmitterMixin#delegate} events.\n *\n * @method #to\n * @param {module:utils/emittermixin~Emitter} emitter An `EmitterMixin` instance which is the destination for delegated events.\n * @param {String|Function} [nameOrFunction] A custom event name or function which converts the original name string.\n */","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/plugin\n */\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * The base class for CKEditor plugin classes.\n *\n * @implements module:core/plugin~PluginInterface\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @inheritDoc\n   */\n  function Plugin(editor) {\n    _classCallCheck(this, Plugin);\n\n    /**\n     * The editor instance.\n     *\n     * Note that most editors implement the {@link module:core/editor/editorwithui~EditorWithUI} interface in addition\n     * to the base {@link module:core/editor/editor~Editor} interface. However, editors with an external UI\n     * (i.e. Bootstrap-based) or a headless editor may not implement the {@link module:core/editor/editorwithui~EditorWithUI}\n     * interface.\n     *\n     * Because of above, to make plugins more universal, it is recommended to split features into:\n     *  - The \"editing\" part that only uses the {@link module:core/editor/editor~Editor} interface.\n     *  - The \"UI\" part that uses both the {@link module:core/editor/editor~Editor} interface and\n     *  the {@link module:core/editor/editorwithui~EditorWithUI} interface.\n     *\n     * @readonly\n     * @member {module:core/editor/editor~Editor} #editor\n     */\n    this.editor = editor;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(Plugin, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopListening();\n    }\n  }]);\n\n  return Plugin;\n}();\n\nexport { Plugin as default };\nmix(Plugin, ObservableMixin);\n/**\n * The base interface for CKEditor plugins.\n *\n * In its minimal form it can be a simple function (it will be used as a constructor) that accepts\n * {@link module:core/editor/editor~Editor the editor} as a parameter.\n * It can also implement a few methods which, when present, will be used to properly initialize and destroy the plugin.\n *\n *\t\t// A simple plugin that enables a data processor.\n *\t\tfunction MyPlugin( editor ) {\n *\t\t\teditor.data.processor = new MyDataProcessor();\n *\t\t}\n *\n * In most cases, however, you will want to inherit from the {@link module:core/plugin~Plugin} class which implements the\n * {@link module:utils/observablemixin~ObservableMixin} and is, therefore, more convenient:\n *\n *\t\tclass MyPlugin extends Plugin {\n *\t\t\tinit() {\n *\t\t\t\t// `listenTo()` and `editor` are available thanks to `Plugin`.\n *\t\t\t\t// By using `listenTo()` you will ensure that the listener is removed when\n *\t\t\t\t// the plugin is destroyed.\n *\t\t\t\tthis.listenTo( this.editor.data, 'ready', () => {\n *\t\t\t\t\t// Do something when the data is ready.\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n *\n * @interface PluginInterface\n */\n\n/**\n * Creates a new plugin instance. This is the first step of the plugin initialization.\n * See also {@link #init} and {@link #afterInit}.\n *\n * A plugin is always instantiated after its {@link module:core/plugin~PluginInterface.requires dependencies} and the\n * {@link #init} and {@link #afterInit} methods are called in the same order.\n *\n * Usually, you will want to put your plugin's initialization code in the {@link #init} method.\n * The constructor can be understood as \"before init\" and used in special cases, just like\n * {@link #afterInit} serves the special \"after init\" scenarios (e.g.the code which depends on other\n * plugins, but which does not {@link module:core/plugin~PluginInterface.requires explicitly require} them).\n *\n * @method #constructor\n * @param {module:core/editor/editor~Editor} editor\n */\n\n/**\n * An array of plugins required by this plugin.\n *\n * To keep the plugin class definition tight it is recommended to define this property as a static getter:\n *\n *\t\timport Image from './image.js';\n *\n *\t\texport default class ImageCaption {\n *\t\t\tstatic get requires() {\n *\t\t\t\treturn [ Image ];\n *\t\t\t}\n *\t\t}\n *\n * @static\n * @readonly\n * @member {Array.<Function>|undefined} module:core/plugin~PluginInterface.requires\n */\n\n/**\n * An optional name of the plugin. If set, the plugin will be available in\n * {@link module:core/plugincollection~PluginCollection#get} by its\n * name and its constructor. If not, then only by its constructor.\n *\n * The name should reflect the constructor name.\n *\n * To keep the plugin class definition tight it is recommended to define this property as a static getter:\n *\n *\t\texport default class ImageCaption {\n *\t\t\tstatic get pluginName() {\n *\t\t\t\treturn 'ImageCaption';\n *\t\t\t}\n *\t\t}\n *\n * Note: The native `Function.name` property could not be used to keep the plugin name because\n * it will be mangled during code minification.\n *\n * Naming a plugin is necessary to enable removing it through the\n * {@link module:core/editor/editorconfig~EditorConfig#removePlugins `config.removePlugins`} option.\n *\n * @static\n * @readonly\n * @member {String|undefined} module:core/plugin~PluginInterface.pluginName\n */\n\n/**\n * The second stage (after plugin {@link #constructor}) of plugin initialization.\n * Unlike the plugin constructor this method can be asynchronous.\n *\n * A plugin's `init()` method is called after its {@link module:core/plugin~PluginInterface.requires dependencies} are initialized,\n * so in the same order as constructors of these plugins.\n *\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\n *\n * @method #init\n * @returns {null|Promise}\n */\n\n/**\n * The third (and last) stage of plugin initialization. See also {@link #constructor} and {@link #init}.\n *\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\n *\n * @method #afterInit\n * @returns {null|Promise}\n */\n\n/**\n * Destroys the plugin.\n *\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\n *\n * @method #destroy\n * @returns {null|Promise}\n */\n\n/**\n * Array of loaded plugins.\n *\n * @typedef {Array.<module:core/plugin~PluginInterface>} module:core/plugin~LoadedPlugins\n */","module.exports = require('./lib/axios');","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _regeneratorRuntime from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/range\n */\nimport Position from './position';\nimport TreeWalker from './treewalker';\n/**\n * Range in the view tree. A range is represented by its start and end {@link module:engine/view/position~Position positions}.\n *\n * In order to create a new position instance use the `createPosition*()` factory methods available in:\n *\n * * {@module:engine/view/view~View}\n * * {@module:engine/view/downcastwriter~DowncastWriter}\n * * {@module:engine/view/upcastwriter~UpcastWriter}\n */\n\nvar Range =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a range spanning from `start` position to `end` position.\n   *\n   * **Note:** Constructor creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n   *\n   * @param {module:engine/view/position~Position} start Start position.\n   * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at the `start` position.\n   */\n  function Range(start) {\n    var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, Range);\n\n    /**\n     * Start position.\n     *\n     * @readonly\n     * @member {module:engine/view/position~Position}\n     */\n    this.start = start.clone();\n    /**\n     * End position.\n     *\n     * @readonly\n     * @member {module:engine/view/position~Position}\n     */\n\n    this.end = end ? end.clone() : start.clone();\n  }\n  /**\n   * Iterable interface.\n   *\n   * Iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\n   * them together with additional information like length or {@link module:engine/view/position~Position positions},\n   * grouped as {@link module:engine/view/treewalker~TreeWalkerValue}.\n   *\n   * This iterator uses {@link module:engine/view/treewalker~TreeWalker TreeWalker} with `boundaries` set to this range and\n   * `ignoreElementEnd` option\n   * set to `true`.\n   *\n   * @returns {Iterable.<module:engine/view/treewalker~TreeWalkerValue>}\n   */\n\n\n  _createClass(Range, [{\n    key: Symbol.iterator,\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function value() {\n      return _regeneratorRuntime.wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.delegateYield(new TreeWalker({\n                boundaries: this,\n                ignoreElementEnd: true\n              }), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this);\n    })\n    /**\n     * Returns whether the range is collapsed, that is it start and end positions are equal.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"getEnlarged\",\n\n    /**\n     * Creates a maximal range that has the same content as this range but is expanded in both ways (at the beginning\n     * and at the end).\n     *\n     * For example:\n     *\n     *\t\t<p>Foo</p><p><b>{Bar}</b></p> -> <p>Foo</p>[<p><b>Bar</b>]</p>\n     *\t\t<p><b>foo</b>{bar}<span></span></p> -> <p><b>foo[</b>bar<span></span>]</p>\n     *\n     * Note that in the sample above:\n     *\n     * - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\n     * - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\n     * - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\n     *\n     * @returns {module:engine/view/range~Range} Enlarged range.\n     */\n    value: function getEnlarged() {\n      var start = this.start.getLastMatchingPosition(enlargeTrimSkip, {\n        direction: 'backward'\n      });\n      var end = this.end.getLastMatchingPosition(enlargeTrimSkip); // Fix positions, in case if they are in Text node.\n\n      if (start.parent.is('text') && start.isAtStart) {\n        start = Position._createBefore(start.parent);\n      }\n\n      if (end.parent.is('text') && end.isAtEnd) {\n        end = Position._createAfter(end.parent);\n      }\n\n      return new Range(start, end);\n    }\n    /**\n     * Creates a minimum range that has the same content as this range but is trimmed in both ways (at the beginning\n     * and at the end).\n     *\n     * For example:\n     *\n     *\t\t<p>Foo</p>[<p><b>Bar</b>]</p> -> <p>Foo</p><p><b>{Bar}</b></p>\n     *\t\t<p><b>foo[</b>bar<span></span>]</p> -> <p><b>foo</b>{bar}<span></span></p>\n     *\n     * Note that in the sample above:\n     *\n     * - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\n     * - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\n     * - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\n     *\n     * @returns {module:engine/view/range~Range} Shrink range.\n     */\n\n  }, {\n    key: \"getTrimmed\",\n    value: function getTrimmed() {\n      var start = this.start.getLastMatchingPosition(enlargeTrimSkip);\n\n      if (start.isAfter(this.end) || start.isEqual(this.end)) {\n        return new Range(start, start);\n      }\n\n      var end = this.end.getLastMatchingPosition(enlargeTrimSkip, {\n        direction: 'backward'\n      });\n      var nodeAfterStart = start.nodeAfter;\n      var nodeBeforeEnd = end.nodeBefore; // Because TreeWalker prefers positions next to text node, we need to move them manually into these text nodes.\n\n      if (nodeAfterStart && nodeAfterStart.is('text')) {\n        start = new Position(nodeAfterStart, 0);\n      }\n\n      if (nodeBeforeEnd && nodeBeforeEnd.is('text')) {\n        end = new Position(nodeBeforeEnd, nodeBeforeEnd.data.length);\n      }\n\n      return new Range(start, end);\n    }\n    /**\n     * Two ranges are equal if their start and end positions are equal.\n     *\n     * @param {module:engine/view/range~Range} otherRange Range to compare with.\n     * @returns {Boolean} `true` if ranges are equal, `false` otherwise\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherRange) {\n      return this == otherRange || this.start.isEqual(otherRange.start) && this.end.isEqual(otherRange.end);\n    }\n    /**\n     * Checks whether this range contains given {@link module:engine/view/position~Position position}.\n     *\n     * @param {module:engine/view/position~Position} position Position to check.\n     * @returns {Boolean} `true` if given {@link module:engine/view/position~Position position} is contained in this range,\n     * `false` otherwise.\n     */\n\n  }, {\n    key: \"containsPosition\",\n    value: function containsPosition(position) {\n      return position.isAfter(this.start) && position.isBefore(this.end);\n    }\n    /**\n     * Checks whether this range contains given {@link module:engine/view/range~Range range}.\n     *\n     * @param {module:engine/view/range~Range} otherRange Range to check.\n     * @param {Boolean} [loose=false] Whether the check is loose or strict. If the check is strict (`false`), compared range cannot\n     * start or end at the same position as this range boundaries. If the check is loose (`true`), compared range can start, end or\n     * even be equal to this range. Note that collapsed ranges are always compared in strict mode.\n     * @returns {Boolean} `true` if given {@link module:engine/view/range~Range range} boundaries are contained by this range, `false`\n     * otherwise.\n     */\n\n  }, {\n    key: \"containsRange\",\n    value: function containsRange(otherRange) {\n      var loose = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (otherRange.isCollapsed) {\n        loose = false;\n      }\n\n      var containsStart = this.containsPosition(otherRange.start) || loose && this.start.isEqual(otherRange.start);\n      var containsEnd = this.containsPosition(otherRange.end) || loose && this.end.isEqual(otherRange.end);\n      return containsStart && containsEnd;\n    }\n    /**\n     * Computes which part(s) of this {@link module:engine/view/range~Range range} is not a part of given\n     * {@link module:engine/view/range~Range range}.\n     * Returned array contains zero, one or two {@link module:engine/view/range~Range ranges}.\n     *\n     * Examples:\n     *\n     *\t\tlet foo = downcastWriter.createText( 'foo' );\n     *\t\tlet img = downcastWriter.createContainerElement( 'img' );\n     *\t\tlet bar = downcastWriter.createText( 'bar' );\n     *\t\tlet p = downcastWriter.createContainerElement( 'p', null, [ foo, img, bar ] );\n     *\n     *\t\tlet range = view.createRange( view.createPositionAt( foo, 2 ), view.createPositionAt( bar, 1 ); // \"o\", img, \"b\" are in range.\n     *\t\tlet otherRange = view.createRange( // \"oo\", img, \"ba\" are in range.\n     *\t\t\tview.createPositionAt( foo, 1 ),\n     *\t\t\tview.createPositionAt( bar, 2 )\n     *\t\t);\n     *\t\tlet transformed = range.getDifference( otherRange );\n     *\t\t// transformed array has no ranges because `otherRange` contains `range`\n     *\n     *\t\totherRange = view.createRange( view.createPositionAt( foo, 1 ), view.createPositionAt( p, 2 ); // \"oo\", img are in range.\n     *\t\ttransformed = range.getDifference( otherRange );\n     *\t\t// transformed array has one range: from ( p, 2 ) to ( bar, 1 )\n     *\n     *\t\totherRange = view.createRange( view.createPositionAt( p, 1 ), view.createPositionAt( p, 2 ) ); // img is in range.\n     *\t\ttransformed = range.getDifference( otherRange );\n     *\t\t// transformed array has two ranges: from ( foo, 1 ) to ( p, 1 ) and from ( p, 2 ) to ( bar, 1 )\n     *\n     * @param {module:engine/view/range~Range} otherRange Range to differentiate against.\n     * @returns {Array.<module:engine/view/range~Range>} The difference between ranges.\n     */\n\n  }, {\n    key: \"getDifference\",\n    value: function getDifference(otherRange) {\n      var ranges = [];\n\n      if (this.isIntersecting(otherRange)) {\n        // Ranges intersect.\n        if (this.containsPosition(otherRange.start)) {\n          // Given range start is inside this range. This means that we have to\n          // add shrunken range - from the start to the middle of this range.\n          ranges.push(new Range(this.start, otherRange.start));\n        }\n\n        if (this.containsPosition(otherRange.end)) {\n          // Given range end is inside this range. This means that we have to\n          // add shrunken range - from the middle of this range to the end.\n          ranges.push(new Range(otherRange.end, this.end));\n        }\n      } else {\n        // Ranges do not intersect, return the original range.\n        ranges.push(this.clone());\n      }\n\n      return ranges;\n    }\n    /**\n     * Returns an intersection of this {@link module:engine/view/range~Range range} and given {@link module:engine/view/range~Range range}.\n     * Intersection is a common part of both of those ranges. If ranges has no common part, returns `null`.\n     *\n     * Examples:\n     *\n     *\t\tlet foo = downcastWriter.createText( 'foo' );\n     *\t\tlet img = downcastWriter.createContainerElement( 'img' );\n     *\t\tlet bar = downcastWriter.createText( 'bar' );\n     *\t\tlet p = downcastWriter.createContainerElement( 'p', null, [ foo, img, bar ] );\n     *\n     *\t\tlet range = view.createRange( view.createPositionAt( foo, 2 ), view.createPositionAt( bar, 1 ); // \"o\", img, \"b\" are in range.\n     *\t\tlet otherRange = view.createRange( view.createPositionAt( foo, 1 ), view.createPositionAt( p, 2 ); // \"oo\", img are in range.\n     *\t\tlet transformed = range.getIntersection( otherRange ); // range from ( foo, 1 ) to ( p, 2 ).\n     *\n     *\t\totherRange = view.createRange( view.createPositionAt( bar, 1 ), view.createPositionAt( bar, 3 ); \"ar\" is in range.\n     *\t\ttransformed = range.getIntersection( otherRange ); // null - no common part.\n     *\n     * @param {module:engine/view/range~Range} otherRange Range to check for intersection.\n     * @returns {module:engine/view/range~Range|null} A common part of given ranges or `null` if ranges have no common part.\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(otherRange) {\n      if (this.isIntersecting(otherRange)) {\n        // Ranges intersect, so a common range will be returned.\n        // At most, it will be same as this range.\n        var commonRangeStart = this.start;\n        var commonRangeEnd = this.end;\n\n        if (this.containsPosition(otherRange.start)) {\n          // Given range start is inside this range. This means thaNt we have to\n          // shrink common range to the given range start.\n          commonRangeStart = otherRange.start;\n        }\n\n        if (this.containsPosition(otherRange.end)) {\n          // Given range end is inside this range. This means that we have to\n          // shrink common range to the given range end.\n          commonRangeEnd = otherRange.end;\n        }\n\n        return new Range(commonRangeStart, commonRangeEnd);\n      } // Ranges do not intersect, so they do not have common part.\n\n\n      return null;\n    }\n    /**\n     * Creates a {@link module:engine/view/treewalker~TreeWalker TreeWalker} instance with this range as a boundary.\n     *\n     * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n     * @param {module:engine/view/position~Position} [options.startPosition]\n     * @param {Boolean} [options.singleCharacters=false]\n     * @param {Boolean} [options.shallow=false]\n     * @param {Boolean} [options.ignoreElementEnd=false]\n     * @returns {module:engine/view/treewalker~TreeWalker}\n     */\n\n  }, {\n    key: \"getWalker\",\n    value: function getWalker() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      options.boundaries = this;\n      return new TreeWalker(options);\n    }\n    /**\n     * Returns a {@link module:engine/view/node~Node} or {@link module:engine/view/documentfragment~DocumentFragment}\n     * which is a common ancestor of range's both ends (in which the entire range is contained).\n     *\n     * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor() {\n      return this.start.getCommonAncestor(this.end);\n    }\n    /**\n     * Clones this range.\n     *\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Range(this.start, this.end);\n    }\n    /**\n     * Returns an iterator that iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\n     * them.\n     *\n     * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range and `ignoreElementEnd` option\n     * set to `true`. However it returns only {@link module:engine/view/item~Item items},\n     * not {@link module:engine/view/treewalker~TreeWalkerValue}.\n     *\n     * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\n     * a full list of available options.\n     *\n     * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n     * @returns {Iterable.<module:engine/view/item~Item>}\n     */\n\n  }, {\n    key: \"getItems\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getItems() {\n      var options,\n          treeWalker,\n          _iteratorNormalCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          _value,\n          _args2 = arguments;\n\n      return _regeneratorRuntime.wrap(function getItems$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              options = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n              options.boundaries = this;\n              options.ignoreElementEnd = true;\n              treeWalker = new TreeWalker(options);\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context2.prev = 7;\n              _iterator = treeWalker[Symbol.iterator]();\n\n            case 9:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context2.next = 16;\n                break;\n              }\n\n              _value = _step.value;\n              _context2.next = 13;\n              return _value.item;\n\n            case 13:\n              _iteratorNormalCompletion = true;\n              _context2.next = 9;\n              break;\n\n            case 16:\n              _context2.next = 22;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](7);\n              _didIteratorError = true;\n              _iteratorError = _context2.t0;\n\n            case 22:\n              _context2.prev = 22;\n              _context2.prev = 23;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 25:\n              _context2.prev = 25;\n\n              if (!_didIteratorError) {\n                _context2.next = 28;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 28:\n              return _context2.finish(25);\n\n            case 29:\n              return _context2.finish(22);\n\n            case 30:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, getItems, this, [[7, 18, 22, 30], [23,, 25, 29]]);\n    })\n    /**\n     * Returns an iterator that iterates over all {@link module:engine/view/position~Position positions} that are boundaries or\n     * contained in this range.\n     *\n     * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range. However it returns only\n     * {@link module:engine/view/position~Position positions}, not {@link module:engine/view/treewalker~TreeWalkerValue}.\n     *\n     * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\n     * a full list of available options.\n     *\n     * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n     * @returns {Iterable.<module:engine/view/position~Position>}\n     */\n\n  }, {\n    key: \"getPositions\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getPositions() {\n      var options,\n          treeWalker,\n          _iteratorNormalCompletion2,\n          _didIteratorError2,\n          _iteratorError2,\n          _iterator2,\n          _step2,\n          _value2,\n          _args3 = arguments;\n\n      return _regeneratorRuntime.wrap(function getPositions$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n              options.boundaries = this;\n              treeWalker = new TreeWalker(options);\n              _context3.next = 5;\n              return treeWalker.position;\n\n            case 5:\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _iteratorError2 = undefined;\n              _context3.prev = 8;\n              _iterator2 = treeWalker[Symbol.iterator]();\n\n            case 10:\n              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                _context3.next = 17;\n                break;\n              }\n\n              _value2 = _step2.value;\n              _context3.next = 14;\n              return _value2.nextPosition;\n\n            case 14:\n              _iteratorNormalCompletion2 = true;\n              _context3.next = 10;\n              break;\n\n            case 17:\n              _context3.next = 23;\n              break;\n\n            case 19:\n              _context3.prev = 19;\n              _context3.t0 = _context3[\"catch\"](8);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context3.t0;\n\n            case 23:\n              _context3.prev = 23;\n              _context3.prev = 24;\n\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n\n            case 26:\n              _context3.prev = 26;\n\n              if (!_didIteratorError2) {\n                _context3.next = 29;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 29:\n              return _context3.finish(26);\n\n            case 30:\n              return _context3.finish(23);\n\n            case 31:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, getPositions, this, [[8, 19, 23, 31], [24,, 26, 30]]);\n    })\n    /**\n     * Checks and returns whether this range intersects with the given range.\n     *\n     * @param {module:engine/view/range~Range} otherRange Range to compare with.\n     * @returns {Boolean} True if ranges intersect.\n     */\n\n  }, {\n    key: \"isIntersecting\",\n    value: function isIntersecting(otherRange) {\n      return this.start.isBefore(otherRange.end) && this.end.isAfter(otherRange.start);\n    }\n    /**\n     * Creates a range from the given parents and offsets.\n     *\n     * @protected\n     * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} startElement Start position\n     * parent element.\n     * @param {Number} startOffset Start position offset.\n     * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} endElement End position\n     * parent element.\n     * @param {Number} endOffset End position offset.\n     * @returns {module:engine/view/range~Range} Created range.\n     */\n\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      return this.start.isEqual(this.end);\n    }\n    /**\n     * Returns whether this range is flat, that is if {@link module:engine/view/range~Range#start start} position and\n     * {@link module:engine/view/range~Range#end end} position are in the same {@link module:engine/view/position~Position#parent parent}.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isFlat\",\n    get: function get() {\n      return this.start.parent === this.end.parent;\n    }\n    /**\n     * Range root element.\n     *\n     * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this.start.root;\n    }\n  }], [{\n    key: \"_createFromParentsAndOffsets\",\n    value: function _createFromParentsAndOffsets(startElement, startOffset, endElement, endOffset) {\n      return new this(new Position(startElement, startOffset), new Position(endElement, endOffset));\n    }\n    /**\n     * Creates a new range, spreading from specified {@link module:engine/view/position~Position position} to a position moved by\n     * given `shift`. If `shift` is a negative value, shifted position is treated as the beginning of the range.\n     *\n     * @protected\n     * @param {module:engine/view/position~Position} position Beginning of the range.\n     * @param {Number} shift How long the range should be.\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"_createFromPositionAndShift\",\n    value: function _createFromPositionAndShift(position, shift) {\n      var start = position;\n      var end = position.getShiftedBy(shift);\n      return shift > 0 ? new this(start, end) : new this(end, start);\n    }\n    /**\n     * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     * @protected\n     * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"_createIn\",\n    value: function _createIn(element) {\n      return this._createFromParentsAndOffsets(element, 0, element, element.childCount);\n    }\n    /**\n     * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n     *\n     * @protected\n     * @param {module:engine/view/item~Item} item\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"_createOn\",\n    value: function _createOn(item) {\n      var size = item.is('textProxy') ? item.offsetSize : 1;\n      return this._createFromPositionAndShift(Position._createBefore(item), size);\n    }\n  }]);\n\n  return Range;\n}(); // Function used by getEnlarged and getTrimmed methods.\n\n\nexport { Range as default };\n\nfunction enlargeTrimSkip(value) {\n  if (value.item.is('attributeElement') || value.item.is('uiElement')) {\n    return true;\n  }\n\n  return false;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals window */\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\n/**\n * Set of utils related to block and inline fillers handling.\n *\n * Browsers do not allow to put caret in elements which does not have height. Because of it, we need to fill all\n * empty elements which should be selectable with elements or characters called \"fillers\". Unfortunately there is no one\n * universal filler, this is why two types are uses:\n *\n * * Block filler is an element which fill block elements, like `<p>`. CKEditor uses `<br>` as a block filler during the editing,\n * as browsers do natively. So instead of an empty `<p>` there will be `<p><br></p>`. The advantage of block filler is that\n * it is transparent for the selection, so when the caret is before the `<br>` and user presses right arrow he will be\n * moved to the next paragraph, not after the `<br>`. The disadvantage is that it breaks a block, so it can not be used\n * in the middle of a line of text. The {@link module:engine/view/filler~BR_FILLER `<br>` filler} can be replaced with any other\n * character in the data output, for instance {@link module:engine/view/filler~NBSP_FILLER non-breaking space}.\n *\n * * Inline filler is a filler which does not break a line of text, so it can be used inside the text, for instance in the empty\n * `<b>` surrendered by text: `foo<b></b>bar`, if we want to put the caret there. CKEditor uses a sequence of the zero-width\n * spaces as an {@link module:engine/view/filler~INLINE_FILLER inline filler} having the predetermined\n * {@link module:engine/view/filler~INLINE_FILLER_LENGTH length}. A sequence is used, instead of a single character to\n * avoid treating random zero-width spaces as the inline filler. Disadvantage of the inline filler is that it is not\n * transparent for the selection. The arrow key moves the caret between zero-width spaces characters, so the additional\n * code is needed to handle the caret.\n *\n * Both inline and block fillers are handled by the {@link module:engine/view/renderer~Renderer renderer} and are not present in the\n * view.\n *\n * @module engine/view/filler\n */\n\n/**\n * `<br>` filler creator. This is a function which creates `<br data-cke-filler=\"true\">` element.\n * It defines how the filler is created.\n *\n * @see module:engine/view/filler~NBSP_FILLER\n * @function\n */\n\nexport var BR_FILLER = function BR_FILLER(domDocument) {\n  var fillerBr = domDocument.createElement('br');\n  fillerBr.dataset.ckeFiller = true;\n  return fillerBr;\n};\n/**\n * Non-breaking space filler creator. This is a function which creates `&nbsp;` text node.\n * It defines how the filler is created.\n *\n * @see module:engine/view/filler~BR_FILLER\n * @function\n */\n\nexport var NBSP_FILLER = function NBSP_FILLER(domDocument) {\n  return domDocument.createTextNode(\"\\xA0\");\n};\n/**\n * Length of the {@link module:engine/view/filler~INLINE_FILLER INLINE_FILLER}.\n */\n\nexport var INLINE_FILLER_LENGTH = 7;\n/**\n * Inline filler which is sequence of the zero width spaces.\n */\n\nexport var INLINE_FILLER = '';\n\nfor (var i = 0; i < INLINE_FILLER_LENGTH; i++) {\n  INLINE_FILLER += \"\\u200B\";\n}\n/**\n * Checks if the node is a text node which starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n *\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER ) ); // true\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // true\n *\t\tstartsWithFiller( document.createTextNode( 'foo' ) ); // false\n *\t\tstartsWithFiller( document.createElement( 'p' ) ); // false\n *\n * @param {Node} domNode DOM node.\n * @returns {Boolean} True if the text node starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\n\n\nexport function startsWithFiller(domNode) {\n  return isText(domNode) && domNode.data.substr(0, INLINE_FILLER_LENGTH) === INLINE_FILLER;\n}\n/**\n * Checks if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n *\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER ) ); // true\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // false\n *\n * @param {Text} domText DOM text node.\n * @returns {Boolean} True if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\n\nexport function isInlineFiller(domText) {\n  return domText.data.length == INLINE_FILLER_LENGTH && startsWithFiller(domText);\n}\n/**\n * Get string data from the text node, removing an {@link module:engine/view/filler~INLINE_FILLER inline filler} from it,\n * if text node contains it.\n *\n *\t\tgetDataWithoutFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ) == 'foo' // true\n *\t\tgetDataWithoutFiller( document.createTextNode( 'foo' ) ) == 'foo' // true\n *\n * @param {Text} domText DOM text node, possible with inline filler.\n * @returns {String} Data without filler.\n */\n\nexport function getDataWithoutFiller(domText) {\n  if (startsWithFiller(domText)) {\n    return domText.data.slice(INLINE_FILLER_LENGTH);\n  } else {\n    return domText.data;\n  }\n} // Cache block fillers templates to improve performance.\n\nvar templateBlockFillers = new WeakMap();\n/**\n * Checks if the node is an instance of the block filler of the given type.\n *\n *\t\tconst brFillerInstance = BR_FILLER( document );\n *\t\tisBlockFiller( brFillerInstance, BR_FILLER ); // true\n *\n * @param {Node} domNode DOM node to check.\n * @param {Function} blockFiller Block filler creator.\n * @returns {Boolean} True if text node contains only {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\n\nexport function isBlockFiller(domNode, blockFiller) {\n  var templateBlockFiller = templateBlockFillers.get(blockFiller);\n\n  if (!templateBlockFiller) {\n    templateBlockFiller = blockFiller(window.document);\n    templateBlockFillers.set(blockFiller, templateBlockFiller);\n  }\n\n  return domNode.isEqualNode(templateBlockFiller);\n}\n/**\n * Assign key observer which move cursor from the end of the inline filler to the beginning of it when\n * the left arrow is pressed, so the filler does not break navigation.\n *\n * @param {module:engine/view/view~View} view View controller instance we should inject quirks handling on.\n */\n\nexport function injectQuirksHandling(view) {\n  view.document.on('keydown', jumpOverInlineFiller);\n} // Move cursor from the end of the inline filler to the beginning of it when, so the filler does not break navigation.\n\nfunction jumpOverInlineFiller(evt, data) {\n  if (data.keyCode == keyCodes.arrowleft) {\n    var domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\n    if (domSelection.rangeCount == 1 && domSelection.getRangeAt(0).collapsed) {\n      var domParent = domSelection.getRangeAt(0).startContainer;\n      var domOffset = domSelection.getRangeAt(0).startOffset;\n\n      if (startsWithFiller(domParent) && domOffset <= INLINE_FILLER_LENGTH) {\n        domSelection.collapse(domParent, 0);\n      }\n    }\n  }\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/element\n */\nimport Node from './node';\nimport NodeList from './nodelist';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n/**\n * Model element. Type of {@link module:engine/model/node~Node node} that has a {@link module:engine/model/element~Element#name name} and\n * {@link module:engine/model/element~Element#getChildren child nodes}.\n *\n * **Important**: see {@link module:engine/model/node~Node} to read about restrictions using `Element` and `Node` API.\n *\n * @extends {module:engine/model/node~Node}\n */\n\nvar Element =\n/*#__PURE__*/\nfunction (_Node) {\n  _inherits(Element, _Node);\n\n  /**\n   * Creates a model element.\n   *\n   * **Note:** Constructor of this class shouldn't be used directly in the code.\n   * Use the {@link module:engine/model/writer~Writer#createElement} method instead.\n   *\n   * @protected\n   * @param {String} name Element's name.\n   * @param {Object} [attrs] Element's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n   * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} [children]\n   * One or more nodes to be inserted as children of created element.\n   */\n  function Element(name, attrs, children) {\n    var _this;\n\n    _classCallCheck(this, Element);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Element).call(this, attrs));\n    /**\n     * Element name.\n     *\n     * @readonly\n     * @member {String} module:engine/model/element~Element#name\n     */\n\n    _this.name = name;\n    /**\n     * List of children nodes.\n     *\n     * @private\n     * @member {module:engine/model/nodelist~NodeList} module:engine/model/element~Element#_children\n     */\n\n    _this._children = new NodeList();\n\n    if (children) {\n      _this._insertChild(0, children);\n    }\n\n    return _this;\n  }\n  /**\n   * Number of this element's children.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\n  _createClass(Element, [{\n    key: \"is\",\n\n    /**\n     * Checks whether this model object is of the given type.\n     *\n     *\t\tobj.name; // 'listItem'\n     *\t\tobj instanceof Element; // true\n     *\n     *\t\tobj.is( 'element' ); // true\n     *\t\tobj.is( 'listItem' ); // true\n     *\t\tobj.is( 'element', 'listItem' ); // true\n     *\t\tobj.is( 'text' ); // false\n     *\t\tobj.is( 'element', 'image' ); // false\n     *\n     * Read more in {@link module:engine/model/node~Node#is `Node#is()`}.\n     *\n     * @param {String} type Type to check when `name` parameter is present.\n     * Otherwise, it acts like the `name` parameter.\n     * @param {String} [name] Element name.\n     * @returns {Boolean}\n     */\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'element' || type == this.name || _get(_getPrototypeOf(Element.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'element' && name == this.name;\n      }\n    }\n    /**\n     * Gets the child at the given index.\n     *\n     * @param {Number} index Index of child.\n     * @returns {module:engine/model/node~Node} Child node.\n     */\n\n  }, {\n    key: \"getChild\",\n    value: function getChild(index) {\n      return this._children.getNode(index);\n    }\n    /**\n     * Returns an iterator that iterates over all of this element's children.\n     *\n     * @returns {Iterable.<module:engine/model/node~Node>}\n     */\n\n  }, {\n    key: \"getChildren\",\n    value: function getChildren() {\n      return this._children[Symbol.iterator]();\n    }\n    /**\n     * Returns an index of the given child node. Returns `null` if given node is not a child of this element.\n     *\n     * @param {module:engine/model/node~Node} node Child node to look for.\n     * @returns {Number} Child node's index in this element.\n     */\n\n  }, {\n    key: \"getChildIndex\",\n    value: function getChildIndex(node) {\n      return this._children.getNodeIndex(node);\n    }\n    /**\n     * Returns the starting offset of given child. Starting offset is equal to the sum of\n     * {@link module:engine/model/node~Node#offsetSize offset sizes} of all node's siblings that are before it. Returns `null` if\n     * given node is not a child of this element.\n     *\n     * @param {module:engine/model/node~Node} node Child node to look for.\n     * @returns {Number} Child node's starting offset.\n     */\n\n  }, {\n    key: \"getChildStartOffset\",\n    value: function getChildStartOffset(node) {\n      return this._children.getNodeStartOffset(node);\n    }\n    /**\n     * Returns index of a node that occupies given offset. If given offset is too low, returns `0`. If given offset is\n     * too high, returns {@link module:engine/model/element~Element#getChildIndex index after last child}.\n     *\n     *\t\tconst textNode = new Text( 'foo' );\n     *\t\tconst pElement = new Element( 'p' );\n     *\t\tconst divElement = new Element( [ textNode, pElement ] );\n     *\t\tdivElement.offsetToIndex( -1 ); // Returns 0, because offset is too low.\n     *\t\tdivElement.offsetToIndex( 0 ); // Returns 0, because offset 0 is taken by `textNode` which is at index 0.\n     *\t\tdivElement.offsetToIndex( 1 ); // Returns 0, because `textNode` has `offsetSize` equal to 3, so it occupies offset 1 too.\n     *\t\tdivElement.offsetToIndex( 2 ); // Returns 0.\n     *\t\tdivElement.offsetToIndex( 3 ); // Returns 1.\n     *\t\tdivElement.offsetToIndex( 4 ); // Returns 2. There are no nodes at offset 4, so last available index is returned.\n     *\n     * @param {Number} offset Offset to look for.\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"offsetToIndex\",\n    value: function offsetToIndex(offset) {\n      return this._children.offsetToIndex(offset);\n    }\n    /**\n     * Returns a descendant node by its path relative to this element.\n     *\n     *\t\t// <this>a<b>c</b></this>\n     *\t\tthis.getNodeByPath( [ 0 ] );     // -> \"a\"\n     *\t\tthis.getNodeByPath( [ 1 ] );     // -> <b>\n     *\t\tthis.getNodeByPath( [ 1, 0 ] );  // -> \"c\"\n     *\n     * @param {Array.<Number>} relativePath Path of the node to find, relative to this element.\n     * @returns {module:engine/model/node~Node}\n     */\n\n  }, {\n    key: \"getNodeByPath\",\n    value: function getNodeByPath(relativePath) {\n      var node = this; // eslint-disable-line consistent-this\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = relativePath[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var index = _step.value;\n          node = node.getChild(node.offsetToIndex(index));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return node;\n    }\n    /**\n     * Converts `Element` instance to plain object and returns it. Takes care of converting all of this element's children.\n     *\n     * @returns {Object} `Element` instance converted to plain object.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(Element.prototype), \"toJSON\", this).call(this);\n\n      json.name = this.name;\n\n      if (this._children.length > 0) {\n        json.children = [];\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this._children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var node = _step2.value;\n            json.children.push(node.toJSON());\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      return json;\n    }\n    /**\n     * Creates a copy of this element and returns it. Created element has the same name and attributes as the original element.\n     * If clone is deep, the original element's children are also cloned. If not, then empty element is removed.\n     *\n     * @protected\n     * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n     * element will be cloned without any child.\n     */\n\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      var deep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var children = deep ? Array.from(this._children).map(function (node) {\n        return node._clone(true);\n      }) : null;\n      return new Element(this.name, this.getAttributes(), children);\n    }\n    /**\n     * {@link module:engine/model/element~Element#_insertChild Inserts} one or more nodes at the end of this element.\n     *\n     * @see module:engine/model/writer~Writer#append\n     * @protected\n     * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} nodes Nodes to be inserted.\n     */\n\n  }, {\n    key: \"_appendChild\",\n    value: function _appendChild(nodes) {\n      this._insertChild(this.childCount, nodes);\n    }\n    /**\n     * Inserts one or more nodes at the given index and sets {@link module:engine/model/node~Node#parent parent} of these nodes\n     * to this element.\n     *\n     * @see module:engine/model/writer~Writer#insert\n     * @protected\n     * @param {Number} index Index at which nodes should be inserted.\n     * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\n     */\n\n  }, {\n    key: \"_insertChild\",\n    value: function _insertChild(index, items) {\n      var nodes = normalize(items);\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = nodes[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var node = _step3.value;\n\n          // If node that is being added to this element is already inside another element, first remove it from the old parent.\n          if (node.parent !== null) {\n            node._remove();\n          }\n\n          node.parent = this;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this._children._insertNodes(index, nodes);\n    }\n    /**\n     * Removes one or more nodes starting at the given index and sets\n     * {@link module:engine/model/node~Node#parent parent} of these nodes to `null`.\n     *\n     * @see module:engine/model/writer~Writer#remove\n     * @protected\n     * @param {Number} index Index of the first node to remove.\n     * @param {Number} [howMany=1] Number of nodes to remove.\n     * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n     */\n\n  }, {\n    key: \"_removeChildren\",\n    value: function _removeChildren(index) {\n      var howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      var nodes = this._children._removeNodes(index, howMany);\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = nodes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var node = _step4.value;\n          node.parent = null;\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return nodes;\n    }\n    /**\n     * Creates an `Element` instance from given plain object (i.e. parsed JSON string).\n     * Converts `Element` children to proper nodes.\n     *\n     * @param {Object} json Plain object to be converted to `Element`.\n     * @returns {module:engine/model/element~Element} `Element` instance created using given plain object.\n     */\n\n  }, {\n    key: \"childCount\",\n    get: function get() {\n      return this._children.length;\n    }\n    /**\n     * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all of this element's children.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"maxOffset\",\n    get: function get() {\n      return this._children.maxOffset;\n    }\n    /**\n     * Is `true` if there are no nodes inside this element, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this.childCount === 0;\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      var children = null;\n\n      if (json.children) {\n        children = [];\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = json.children[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var child = _step5.value;\n\n            if (child.name) {\n              // If child has name property, it is an Element.\n              children.push(Element.fromJSON(child));\n            } else {\n              // Otherwise, it is a Text node.\n              children.push(Text.fromJSON(child));\n            }\n          }\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n              _iterator5.return();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n      }\n\n      return new Element(json.name, json.attributes, children);\n    }\n  }]);\n\n  return Element;\n}(Node); // Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/model/item~Item|Iterable.<String|module:engine/model/item~Item>}\n// @returns {Iterable.<module:engine/model/node~Node>}\n\n\nexport { Element as default };\n\nfunction normalize(nodes) {\n  // Separate condition because string is iterable.\n  if (typeof nodes == 'string') {\n    return [new Text(nodes)];\n  }\n\n  if (!isIterable(nodes)) {\n    nodes = [nodes];\n  } // Array.from to enable .map() on non-arrays.\n\n\n  return Array.from(nodes).map(function (node) {\n    if (typeof node == 'string') {\n      return new Text(node);\n    }\n\n    if (node instanceof TextProxy) {\n      return new Text(node.data, node.getAttributes());\n    }\n\n    return node;\n  });\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/text\n */\nimport Node from './node';\n/**\n * Model text node. Type of {@link module:engine/model/node~Node node} that contains {@link module:engine/model/text~Text#data text data}.\n *\n * **Important:** see {@link module:engine/model/node~Node} to read about restrictions using `Text` and `Node` API.\n *\n * **Note:** keep in mind that `Text` instances might indirectly got removed from model tree when model is changed.\n * This happens when {@link module:engine/model/writer~Writer model writer} is used to change model and the text node is merged with\n * another text node. Then, both text nodes are removed and a new text node is inserted into the model. Because of\n * this behavior, keeping references to `Text` is not recommended. Instead, consider creating\n * {@link module:engine/model/liveposition~LivePosition live position} placed before the text node.\n *\n * @extends {module:engine/model/node~Node}\n */\n\nvar Text =\n/*#__PURE__*/\nfunction (_Node) {\n  _inherits(Text, _Node);\n\n  /**\n   * Creates a text node.\n   *\n   * **Note:** Constructor of this class shouldn't be used directly in the code.\n   * Use the {@link module:engine/model/writer~Writer#createText} method instead.\n   *\n   * @protected\n   * @param {String} data Node's text.\n   * @param {Object} [attrs] Node's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n   */\n  function Text(data, attrs) {\n    var _this;\n\n    _classCallCheck(this, Text);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Text).call(this, attrs));\n    /**\n     * Text data contained in this text node.\n     *\n     * @protected\n     * @type {String}\n     */\n\n    _this._data = data || '';\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(Text, [{\n    key: \"is\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function is(type) {\n      return type == 'text' || _get(_getPrototypeOf(Text.prototype), \"is\", this).call(this, type);\n    }\n    /**\n     * Converts `Text` instance to plain object and returns it.\n     *\n     * @returns {Object} `Text` instance converted to plain object.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(Text.prototype), \"toJSON\", this).call(this);\n\n      json.data = this.data;\n      return json;\n    }\n    /**\n     * Creates a copy of this text node and returns it. Created text node has same text data and attributes as original text node.\n     *\n     * @protected\n     * @returns {module:engine/model/text~Text} `Text` instance created using given plain object.\n     */\n\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      return new Text(this.data, this.getAttributes());\n    }\n    /**\n     * Creates a `Text` instance from given plain object (i.e. parsed JSON string).\n     *\n     * @param {Object} json Plain object to be converted to `Text`.\n     * @returns {module:engine/model/text~Text} `Text` instance created using given plain object.\n     */\n\n  }, {\n    key: \"offsetSize\",\n    get: function get() {\n      return this.data.length;\n    }\n    /**\n     * Returns a text data contained in the node.\n     *\n     * @readonly\n     * @type {String}\n     */\n\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._data;\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new Text(json.data, json.attributes);\n    }\n  }]);\n\n  return Text;\n}(Node);\n\nexport { Text as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/view\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport ViewCollection from './viewcollection';\nimport Template from './template';\nimport DomEmitterMixin from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport '../theme/globals/globals.css';\n/**\n * The basic view class, which represents an HTML element created out of a\n * {@link module:ui/view~View#template}. Views are building blocks of the user interface and handle\n * interaction\n *\n * Views {@link module:ui/view~View#registerChild aggregate} children in\n * {@link module:ui/view~View#createCollection collections} and manage the life cycle of DOM\n * listeners e.g. by handling rendering and destruction.\n *\n * See the {@link module:ui/template~TemplateDefinition} syntax to learn more about shaping view\n * elements, attributes and listeners.\n *\n *\t\tclass SampleView extends View {\n *\t\t\tconstructor( locale ) {\n *\t\t\t\tsuper( locale );\n *\n *\t\t\t\tconst bind = this.bindTemplate;\n *\n *\t\t\t\t// Views define their interface (state) using observable attributes.\n *\t\t\t\tthis.set( 'elementClass', 'bar' );\n *\n *\t\t\t\tthis.setTemplate( {\n *\t\t\t\t\ttag: 'p',\n *\n *\t\t\t\t\t// The element of the view can be defined with its children.\n *\t\t\t\t\tchildren: [\n *\t\t\t\t\t\t'Hello',\n *\t\t\t\t\t\t{\n *\t\t\t\t\t\t\ttag: 'b',\n *\t\t\t\t\t\t\tchildren: [ 'world!' ]\n *\t\t\t\t\t\t}\n *\t\t\t\t\t],\n *\t\t\t\t\tattributes: {\n *\t\t\t\t\t\tclass: [\n *\t\t\t\t\t\t\t'foo',\n *\n *\t\t\t\t\t\t\t// Observable attributes control the state of the view in DOM.\n *\t\t\t\t\t\t\tbind.to( 'elementClass' )\n *\t\t\t\t\t\t]\n *\t\t\t\t\t},\n *\t\t\t\t\ton: {\n *\t\t\t\t\t\t// Views listen to DOM events and propagate them.\n *\t\t\t\t\t\tclick: bind.to( 'clicked' )\n *\t\t\t\t\t}\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n *\n *\t\tconst view = new SampleView( locale );\n *\n *\t\tview.render();\n *\n *\t\t// Append <p class=\"foo bar\">Hello<b>world</b></p> to the <body>\n *\t\tdocument.body.appendChild( view.element );\n *\n *\t\t// Change the class attribute to <p class=\"foo baz\">Hello<b>world</b></p>\n *\t\tview.elementClass = 'baz';\n *\n *\t\t// Respond to the \"click\" event in DOM by executing a custom action.\n *\t\tview.on( 'clicked', () => {\n *\t\t\tconsole.log( 'The view has been clicked!' );\n *\t\t} );\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar View =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the {@link module:ui/view~View} class.\n   *\n   * Also see {@link #render}.\n   *\n   * @param {module:utils/locale~Locale} [locale] The localization services instance.\n   */\n  function View(locale) {\n    _classCallCheck(this, View);\n\n    /**\n     * An HTML element of the view. `null` until {@link #render rendered}\n     * from the {@link #template}.\n     *\n     *\t\tclass SampleView extends View {\n     *\t\t\tconstructor() {\n     *\t\t\t\tsuper();\n     *\n     *\t\t\t\t// A template instance the #element will be created from.\n     *\t\t\t\tthis.setTemplate( {\n     *\t\t\t\t\ttag: 'p'\n     *\n     *\t\t\t\t\t// ...\n     *\t\t\t\t} );\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tconst view = new SampleView();\n     *\n     *\t\t// Renders the #template.\n     *\t\tview.render();\n     *\n     *\t\t// Append the HTML element of the view to <body>.\n     *\t\tdocument.body.appendChild( view.element );\n     *\n     * **Note**: The element of the view can also be assigned directly:\n     *\n     *\t\tview.element = document.querySelector( '#my-container' );\n     *\n     * @member {HTMLElement}\n     */\n    this.element = null;\n    /**\n     * Set `true` when the view has already been {@link module:ui/view~View#render rendered}.\n     *\n     * @readonly\n     * @member {Boolean} #isRendered\n     */\n\n    this.isRendered = false;\n    /**\n     * A set of tools to localize the user interface.\n     *\n     * Also see {@link module:core/editor/editor~Editor#locale}.\n     *\n     * @readonly\n     * @member {module:utils/locale~Locale}\n     */\n\n    this.locale = locale;\n    /**\n     * Shorthand for {@link module:utils/locale~Locale#t}.\n     *\n     * Note: If {@link #locale} instance hasn't been passed to the view this method may not\n     * be available.\n     *\n     * @see module:utils/locale~Locale#t\n     * @method\n     */\n\n    this.t = locale && locale.t;\n    /**\n     * Collections registered with {@link #createCollection}.\n     *\n     * @protected\n     * @member {Set.<module:ui/viewcollection~ViewCollection>}\n     */\n\n    this._viewCollections = new Collection();\n    /**\n     * A collection of view instances, which have been added directly\n     * into the {@link module:ui/template~Template#children}.\n     *\n     * @protected\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    this._unboundChildren = this.createCollection(); // Pass parent locale to its children.\n\n    this._viewCollections.on('add', function (evt, collection) {\n      collection.locale = locale;\n    });\n    /**\n     * Template of this view. It provides the {@link #element} representing\n     * the view in DOM, which is {@link #render rendered}.\n     *\n     * @member {module:ui/template~Template} #template\n     */\n\n    /**\n     * Cached {@link module:ui/template~BindChain bind chain} object created by the\n     * {@link #template}. See {@link #bindTemplate}.\n     *\n     * @private\n     * @member {Object} #_bindTemplate\n     */\n\n\n    this.decorate('render');\n  }\n  /**\n   * Shorthand for {@link module:ui/template~Template.bind}, a binding\n   * {@link module:ui/template~BindChain interface} pre–configured for the view instance.\n   *\n   * It provides {@link module:ui/template~BindChain#to `to()`} and\n   * {@link module:ui/template~BindChain#if `if()`} methods that initialize bindings with\n   * observable attributes and attach DOM listeners.\n   *\n   *\t\tclass SampleView extends View {\n   *\t\t\tconstructor( locale ) {\n   *\t\t\t\tsuper( locale );\n   *\n   *\t\t\t\tconst bind = this.bindTemplate;\n   *\n   *\t\t\t\t// These {@link module:utils/observablemixin~Observable observable} attributes will control\n   *\t\t\t\t// the state of the view in DOM.\n   *\t\t\t\tthis.set( {\n   *\t\t\t\t\telementClass: 'foo',\n   *\t\t\t\t \tisEnabled: true\n   *\t\t\t\t } );\n   *\n   *\t\t\t\tthis.setTemplate( {\n   *\t\t\t\t\ttag: 'p',\n   *\n   *\t\t\t\t\tattributes: {\n   *\t\t\t\t\t\t// The class HTML attribute will follow elementClass\n   *\t\t\t\t\t\t// and isEnabled view attributes.\n   *\t\t\t\t\t\tclass: [\n   *\t\t\t\t\t\t\tbind.to( 'elementClass' )\n   *\t\t\t\t\t\t\tbind.if( 'isEnabled', 'present-when-enabled' )\n   *\t\t\t\t\t\t]\n   *\t\t\t\t\t},\n   *\n   *\t\t\t\t\ton: {\n   *\t\t\t\t\t\t// The view will fire the \"clicked\" event upon clicking <p> in DOM.\n   *\t\t\t\t\t\tclick: bind.to( 'clicked' )\n   *\t\t\t\t\t}\n   *\t\t\t\t} );\n   *\t\t\t}\n   *\t\t}\n   *\n   * @method #bindTemplate\n   */\n\n\n  _createClass(View, [{\n    key: \"createCollection\",\n\n    /**\n     * Creates a new collection of views, which can be used as\n     * {@link module:ui/template~Template#children} of this view.\n     *\n     *\t\tclass SampleView extends View {\n     *\t\t\tconstructor( locale ) {\n     *\t\t\t\tsuper( locale );\n     *\n     *\t\t\t\tthis.items = this.createCollection();\n    \t *\n     *\t\t\t\tthis.setTemplate( {\n     *\t\t\t\t\ttag: 'p',\n     *\n     *\t\t\t\t\t// `items` collection will render here.\n     *\t\t\t\t\tchildren: this.items\n     *\t\t\t\t} );\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tconst view = new SampleView( locale );\n     *\t\tconst child = new ChildView( locale );\n     *\n     *\t\tview.render();\n     *\n     *\t\t// It will append <p></p> to the <body>.\n     *\t\tdocument.body.appendChild( view.element );\n     *\n     *\t\t// From now on the child is nested under its parent, which is also reflected in DOM.\n     *\t\t// <p><child#element></p>\n     *\t\tview.items.add( child );\n     *\n     * @returns {module:ui/viewcollection~ViewCollection} A new collection of view instances.\n     */\n    value: function createCollection() {\n      var collection = new ViewCollection();\n\n      this._viewCollections.add(collection);\n\n      return collection;\n    }\n    /**\n     * Registers a new child view under the view instance. Once registered, a child\n     * view is managed by its parent, including {@link #render rendering}\n     * and {@link #destroy destruction}.\n     *\n     * To revert this, use {@link #deregisterChild}.\n     *\n     *\t\tclass SampleView extends View {\n     *\t\t\tconstructor( locale ) {\n     *\t\t\t\tsuper( locale );\n     *\n     *\t\t\t\tthis.childA = new SomeChildView( locale );\n     *\t\t\t\tthis.childB = new SomeChildView( locale );\n     *\n     *\t\t\t\tthis.setTemplate( { tag: 'p' } );\n     *\n     *\t\t\t\t// Register the children.\n     *\t\t\t\tthis.registerChild( [ this.childA, this.childB ] );\n     *\t\t\t}\n     *\n     *\t\t\trender() {\n     *\t\t\t\tsuper.render();\n     *\n     *\t\t\t\tthis.element.appendChild( this.childA.element );\n     *\t\t\t\tthis.element.appendChild( this.childB.element );\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tconst view = new SampleView( locale );\n     *\n     *\t\tview.render();\n     *\n     *\t\t// Will append <p><childA#element><b></b><childB#element></p>.\n     *\t\tdocument.body.appendChild( view.element );\n     *\n     * **Note**: There's no need to add child views if they're already referenced in the\n     * {@link #template}:\n     *\n     *\t\tclass SampleView extends View {\n     *\t\t\tconstructor( locale ) {\n     *\t\t\t\tsuper( locale );\n     *\n     *\t\t\t\tthis.childA = new SomeChildView( locale );\n     *\t\t\t\tthis.childB = new SomeChildView( locale );\n     *\n     *\t\t\t\tthis.setTemplate( {\n     *\t\t\t\t\ttag: 'p',\n     *\n    \t *\t\t\t\t\t// These children will be added automatically. There's no\n    \t *\t\t\t\t\t// need to call {@link #registerChild} for any of them.\n     *\t\t\t\t\tchildren: [ this.childA, this.childB ]\n     *\t\t\t\t} );\n     *\t\t\t}\n     *\n     *\t\t\t// ...\n     *\t\t}\n     *\n     * @param {module:ui/view~View|Iterable.<module:ui/view~View>} children Children views to be registered.\n     */\n\n  }, {\n    key: \"registerChild\",\n    value: function registerChild(children) {\n      if (!isIterable(children)) {\n        children = [children];\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var child = _step.value;\n\n          this._unboundChildren.add(child);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n    /**\n     * The opposite of {@link #registerChild}. Removes a child view from this view instance.\n     * Once removed, the child is no longer managed by its parent, e.g. it can safely\n     * become a child of another parent view.\n     *\n     * @see #registerChild\n     * @param {module:ui/view~View|Iterable.<module:ui/view~View>} children Child views to be removed.\n     */\n\n  }, {\n    key: \"deregisterChild\",\n    value: function deregisterChild(children) {\n      if (!isIterable(children)) {\n        children = [children];\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var child = _step2.value;\n\n          this._unboundChildren.remove(child);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n    /**\n     * Sets the {@link #template} of the view with with given definition.\n     *\n     * A shorthand for:\n     *\n     *\t\tview.setTemplate( definition );\n     *\n     * @param {module:ui/template~TemplateDefinition} definition Definition of view's template.\n     */\n\n  }, {\n    key: \"setTemplate\",\n    value: function setTemplate(definition) {\n      this.template = new Template(definition);\n    }\n    /**\n     * {@link module:ui/template~Template.extend Extends} the {@link #template} of the view with\n     * with given definition.\n     *\n     * A shorthand for:\n     *\n     *\t\tTemplate.extend( view.template, definition );\n     *\n     * **Note**: Is requires the {@link #template} to be already set. See {@link #setTemplate}.\n     *\n     * @param {module:ui/template~TemplateDefinition} definition Definition which\n     * extends the {@link #template}.\n     */\n\n  }, {\n    key: \"extendTemplate\",\n    value: function extendTemplate(definition) {\n      Template.extend(this.template, definition);\n    }\n    /**\n     * Recursively renders the view.\n     *\n     * Once the view is rendered:\n     * * the {@link #element} becomes an HTML element out of {@link #template},\n     * * the {@link #isRendered} flag is set `true`.\n     *\n     * **Note**: The children of the view:\n     * * defined directly in the {@link #template}\n     * * residing in collections created by the {@link #createCollection} method,\n     * * and added by {@link #registerChild}\n     * are also rendered in the process.\n     *\n     * In general, `render()` method is the right place to keep the code which refers to the\n     * {@link #element} and should be executed at the very beginning of the view's life cycle.\n     *\n     * It is possible to {@link module:ui/template~Template.extend} the {@link #template} before\n     * the view is rendered. To allow an early customization of the view (e.g. by its parent),\n     * such references should be done in `render()`.\n     *\n     *\t\tclass SampleView extends View {\n     *\t\t\tconstructor() {\n     *\t\t\t\tthis.setTemplate( {\n     *\t\t\t\t\t// ...\n     *\t\t\t\t} );\n     *\t\t\t},\n     *\n     *\t\t\trender() {\n     *\t\t\t\t// View#element becomes available.\n     *\t\t\t\tsuper.render();\n     *\n     *\t\t\t\t// The \"scroll\" listener depends on #element.\n     *\t\t\t\tthis.listenTo( window, 'scroll', () => {\n     *\t\t\t\t\t// A reference to #element would render the #template and make it non-extendable.\n     *\t\t\t\t\tif ( window.scrollY > 0 ) {\n     *\t\t\t\t\t\tthis.element.scrollLeft = 100;\n     *\t\t\t\t\t} else {\n     *\t\t\t\t\t\tthis.element.scrollLeft = 0;\n     *\t\t\t\t\t}\n     *\t\t\t\t} );\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tconst view = new SampleView();\n     *\n     *\t\t// Let's customize the view before it gets rendered.\n     *\t\tview.extendTemplate( {\n     *\t\t\tattributes: {\n     *\t\t\t\tclass: [\n     *\t\t\t\t\t'additional-class'\n     *\t\t\t\t]\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\t// Late rendering allows customization of the view.\n     *\t\tview.render();\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.isRendered) {\n        /**\n         * This View has already been rendered.\n         *\n         * @error ui-view-render-rendered\n         */\n        throw new CKEditorError('ui-view-render-already-rendered: This View has already been rendered.');\n      } // Render #element of the view.\n\n\n      if (this.template) {\n        this.element = this.template.render(); // Auto–register view children from #template.\n\n        this.registerChild(this.template.getViews());\n      }\n\n      this.isRendered = true;\n    }\n    /**\n     * Recursively destroys the view instance and child views added by {@link #registerChild} and\n     * residing in collections created by the {@link #createCollection}.\n     *\n     * Destruction disables all event listeners:\n     * * created on the view, e.g. `view.on( 'event', () => {} )`,\n     * * defined in the {@link #template} for DOM events.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopListening();\n\n      this._viewCollections.map(function (c) {\n        return c.destroy();\n      }); // Template isn't obligatory for views.\n\n\n      if (this.template && this.template._revertData) {\n        this.template.revert(this.element);\n      }\n    }\n    /**\n     * Event fired by the {@link #render} method. Actual rendering is executed as a listener to\n     * this event with the default priority.\n     *\n     * See {@link module:utils/observablemixin~ObservableMixin#decorate} for more information and samples.\n     *\n     * @event render\n     */\n\n  }, {\n    key: \"bindTemplate\",\n    get: function get() {\n      if (this._bindTemplate) {\n        return this._bindTemplate;\n      }\n\n      return this._bindTemplate = Template.bind(this, this);\n    }\n  }]);\n\n  return View;\n}();\n\nexport { View as default };\nmix(View, DomEmitterMixin);\nmix(View, ObservableMixin);","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* global console */\n\n/**\n * @module utils/log\n */\nimport { attachLinkToDocumentation } from './ckeditorerror';\n/**\n * The logging module.\n *\n * This object features two functions that should be used across CKEditor code base to log errors and warnings.\n * Despite being an overridable interface for native `console.*` this module serves also the goal to limit the\n * code size of a minified CKEditor package. During minification process the messages will be shortened and\n * links to their documentation will be logged to the console.\n *\n * All errors and warning should be documented in the following way:\n *\n *\t\t/**\n *\t\t * Error thrown when a plugin cannot be loaded due to JavaScript errors, lack of plugins with a given name, etc.\n *\t\t *\n *\t\t * @error plugin-load\n *\t\t * @param pluginName The name of the plugin that could not be loaded.\n *\t\t * @param moduleName The name of the module which tried to load this plugin.\n *\t\t * /\n *\t\tlog.error( 'plugin-load: It was not possible to load the \"{$pluginName}\" plugin in module \"{$moduleName}', {\n *\t\t\tpluginName: 'foo',\n *\t\t\tmoduleName: 'bar'\n *\t\t} );\n *\n * ### Warning vs Error vs Throw\n *\n * * Whenever a potentially incorrect situation occurs, which does not directly lead to an incorrect behavior,\n * log a warning.\n * * Whenever an incorrect situation occurs, but the app may continue working (although perhaps incorrectly),\n * log an error.\n * * Whenever it's really bad and it does not make sense to continue working, throw a {@link module:utils/ckeditorerror~CKEditorError}.\n *\n * @namespace\n */\n\nvar log = {\n  /**\n   * Logs an error to the console.\n   *\n   * Read more about error logging in the {@link module:utils/log} module.\n   *\n   * @param {String} message The error message in an `error-name: Error message.` format.\n   * During the minification process the \"Error message\" part will be removed to limit the code size\n   * and a link to this error documentation will be logged to the console.\n   * @param {Object} [data] Additional data describing the error.\n   */\n  error: function error(message, data) {\n    console.error(attachLinkToDocumentation(message), data);\n  },\n\n  /**\n   * Logs a warning to the console.\n   *\n   * Read more about error logging in the {@link module:utils/log} module.\n   *\n   * @param {String} message The warning message in a `warning-name: Warning message.` format.\n   * During the minification process the \"Warning message\" part will be removed to limit the code size\n   * and a link to this error documentation will be logged to the console.\n   * @param {Object} [data] Additional data describing the warning.\n   */\n  warn: function warn(message, data) {\n    console.warn(attachLinkToDocumentation(message), data);\n  }\n};\nexport default log;","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * Set of utils related to keyboard support.\n *\n * @module utils/keyboard\n */\nimport CKEditorError from './ckeditorerror';\nimport env from './env';\nvar macGlyphsToModifiers = {\n  '⌘': 'ctrl',\n  '⇧': 'shift',\n  '⌥': 'alt'\n};\nvar modifiersToMacGlyphs = {\n  'ctrl': '⌘',\n  'shift': '⇧',\n  'alt': '⌥'\n};\n/**\n * Object with `keyName => keyCode` pairs for a set of known keys.\n *\n * Contains:\n *\n * * `a-z`,\n * * `0-9`,\n * * `f1-f12`,\n * * `arrow(left|up|right|bottom)`,\n * * `backspace`, `delete`, `enter`, `esc`, `tab`,\n * * `ctrl`, `cmd`, `shift`, `alt`.\n */\n\nexport var keyCodes = generateKnownKeyCodes();\n/**\n * Converts a key name or a {@link module:utils/keyboard~KeystrokeInfo keystroke info} into a key code.\n *\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\n *\n * @param {String|module:utils/keyboard~KeystrokeInfo} Key name (see {@link module:utils/keyboard~keyCodes})\n * or a keystroke data object.\n * @returns {Number} Key or keystroke code.\n */\n\nexport function getCode(key) {\n  var keyCode;\n\n  if (typeof key == 'string') {\n    keyCode = keyCodes[key.toLowerCase()];\n\n    if (!keyCode) {\n      /**\n       * Unknown key name. Only key names contained by the {@link module:utils/keyboard~keyCodes} can be used.\n       *\n       * @errror keyboard-unknown-key\n       * @param {String} key\n       */\n      throw new CKEditorError('keyboard-unknown-key: Unknown key name.', {\n        key: key\n      });\n    }\n  } else {\n    keyCode = key.keyCode + (key.altKey ? keyCodes.alt : 0) + (key.ctrlKey ? keyCodes.ctrl : 0) + (key.shiftKey ? keyCodes.shift : 0);\n  }\n\n  return keyCode;\n}\n/**\n * Parses keystroke and returns a keystroke code that will match the code returned by\n * link {@link module:utils/keyboard.getCode} for a corresponding {@link module:utils/keyboard~KeystrokeInfo keystroke info}.\n *\n * The keystroke can be passed in two formats:\n *\n * * as a single string – e.g. `ctrl + A`,\n * * as an array of {@link module:utils/keyboard~keyCodes known key names} and key codes – e.g.:\n *   * `[ 'ctrl', 32 ]` (ctrl + space),\n *   * `[ 'ctrl', 'a' ]` (ctrl + A).\n *\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\n *\n * Note: Only keystrokes with a single non-modifier key are supported (e.g. `ctrl+A` is OK, but `ctrl+A+B` is not).\n *\n * @param {String|Array.<Number|String>} keystroke Keystroke definition.\n * @returns {Number} Keystroke code.\n */\n\nexport function parseKeystroke(keystroke) {\n  if (typeof keystroke == 'string') {\n    keystroke = splitKeystrokeText(keystroke);\n  }\n\n  return keystroke.map(function (key) {\n    return typeof key == 'string' ? getCode(key) : key;\n  }).reduce(function (key, sum) {\n    return sum + key;\n  }, 0);\n}\n/**\n * It translates any keystroke string text like `\"CTRL+A\"` to an\n * environment–specific keystroke, i.e. `\"⌘A\"` on Mac OSX.\n *\n * @param {String} keystroke Keystroke text.\n * @returns {String} Keystroke text specific for the environment.\n */\n\nexport function getEnvKeystrokeText(keystroke) {\n  if (!env.isMac) {\n    return keystroke;\n  }\n\n  return splitKeystrokeText(keystroke) // Replace modifiers (e.g. \"ctrl\") with Mac glyphs (e.g. \"⌘\") first.\n  .map(function (key) {\n    return modifiersToMacGlyphs[key.toLowerCase()] || key;\n  }) // Decide whether to put \"+\" between keys in the keystroke or not.\n  .reduce(function (value, key) {\n    if (value.slice(-1) in macGlyphsToModifiers) {\n      return value + key;\n    } else {\n      return value + '+' + key;\n    }\n  });\n}\n\nfunction generateKnownKeyCodes() {\n  var keyCodes = {\n    arrowleft: 37,\n    arrowup: 38,\n    arrowright: 39,\n    arrowdown: 40,\n    backspace: 8,\n    delete: 46,\n    enter: 13,\n    space: 32,\n    esc: 27,\n    tab: 9,\n    // The idea about these numbers is that they do not collide with any real key codes, so we can use them\n    // like bit masks.\n    ctrl: 0x110000,\n    // Has the same code as ctrl, because their behaviour should be unified across the editor.\n    // See http://ckeditor.github.io/editor-recommendations/general-policies#ctrl-vs-cmd\n    cmd: 0x110000,\n    shift: 0x220000,\n    alt: 0x440000\n  }; // a-z\n\n  for (var code = 65; code <= 90; code++) {\n    var letter = String.fromCharCode(code);\n    keyCodes[letter.toLowerCase()] = code;\n  } // 0-9\n\n\n  for (var _code = 48; _code <= 57; _code++) {\n    keyCodes[_code - 48] = _code;\n  } // F1-F12\n\n\n  for (var _code2 = 112; _code2 <= 123; _code2++) {\n    keyCodes['f' + (_code2 - 111)] = _code2;\n  }\n\n  return keyCodes;\n}\n\nfunction splitKeystrokeText(keystroke) {\n  return keystroke.split(/\\s*\\+\\s*/);\n}\n/**\n * Information about a keystroke.\n *\n * @interface module:utils/keyboard~KeystrokeInfo\n */\n\n/**\n * The [key code](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode).\n *\n * @member {Number} module:utils/keyboard~KeystrokeInfo#keyCode\n */\n\n/**\n * Whether the <kbd>Alt</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#altKey\n */\n\n/**\n * Whether the <kbd>Ctrl</kbd> or <kbd>Cmd</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#ctrlKey\n */\n\n/**\n * Whether the <kbd>Shift</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#shiftKey\n */","import _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport React from 'react';\nimport { Router, __RouterContext, Route } from 'react-router';\nexport * from 'react-router';\nimport { createBrowserHistory, createHashHistory, createLocation } from 'history';\nimport PropTypes from 'prop-types';\nimport warning from 'tiny-warning';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport invariant from 'tiny-invariant';\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\n\nvar BrowserRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(BrowserRouter, _React$Component);\n\n  function BrowserRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = createBrowserHistory(_this.props);\n    return _this;\n  }\n\n  var _proto = BrowserRouter.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return BrowserRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<BrowserRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\") : void 0;\n  };\n}\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\n\n\nvar HashRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(HashRouter, _React$Component);\n\n  function HashRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = createHashHistory(_this.props);\n    return _this;\n  }\n\n  var _proto = HashRouter.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return HashRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<HashRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { HashRouter as Router }`.\") : void 0;\n  };\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\n\nvar Link =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Link, _React$Component);\n\n  function Link() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Link.prototype;\n\n  _proto.handleClick = function handleClick(event, history) {\n    if (this.props.onClick) this.props.onClick(event);\n\n    if (!event.defaultPrevented && // onClick prevented default\n    event.button === 0 && ( // ignore everything but left clicks\n    !this.props.target || this.props.target === \"_self\") && // let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // ignore clicks with modifier keys\n    ) {\n        event.preventDefault();\n        var method = this.props.replace ? history.replace : history.push;\n        method(this.props.to);\n      }\n  };\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props = this.props,\n        innerRef = _this$props.innerRef,\n        replace = _this$props.replace,\n        to = _this$props.to,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"innerRef\", \"replace\", \"to\"]); // eslint-disable-line no-unused-vars\n\n\n    return React.createElement(__RouterContext.Consumer, null, function (context) {\n      !context ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <Link> outside a <Router>\") : invariant(false) : void 0;\n      var location = typeof to === \"string\" ? createLocation(to, null, null, context.location) : to;\n      var href = location ? context.history.createHref(location) : \"\";\n      return React.createElement(\"a\", _extends({}, rest, {\n        onClick: function onClick(event) {\n          return _this.handleClick(event, context.history);\n        },\n        href: href,\n        ref: innerRef\n      }));\n    });\n  };\n\n  return Link;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  var toType = PropTypes.oneOfType([PropTypes.string, PropTypes.object]);\n  var innerRefType = PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]);\n  Link.propTypes = {\n    innerRef: innerRefType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nfunction joinClassnames() {\n  for (var _len = arguments.length, classnames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classnames[_key] = arguments[_key];\n  }\n\n  return classnames.filter(function (i) {\n    return i;\n  }).join(\" \");\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nfunction NavLink(_ref) {\n  var _ref$ariaCurrent = _ref[\"aria-current\"],\n      ariaCurrent = _ref$ariaCurrent === void 0 ? \"page\" : _ref$ariaCurrent,\n      _ref$activeClassName = _ref.activeClassName,\n      activeClassName = _ref$activeClassName === void 0 ? \"active\" : _ref$activeClassName,\n      activeStyle = _ref.activeStyle,\n      classNameProp = _ref.className,\n      exact = _ref.exact,\n      isActiveProp = _ref.isActive,\n      location = _ref.location,\n      strict = _ref.strict,\n      styleProp = _ref.style,\n      to = _ref.to,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"aria-current\", \"activeClassName\", \"activeStyle\", \"className\", \"exact\", \"isActive\", \"location\", \"strict\", \"style\", \"to\"]);\n\n  var path = typeof to === \"object\" ? to.pathname : to; // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n\n  var escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n  return React.createElement(Route, {\n    path: escapedPath,\n    exact: exact,\n    strict: strict,\n    location: location,\n    children: function children(_ref2) {\n      var location = _ref2.location,\n          match = _ref2.match;\n      var isActive = !!(isActiveProp ? isActiveProp(match, location) : match);\n      var className = isActive ? joinClassnames(classNameProp, activeClassName) : classNameProp;\n      var style = isActive ? _extends({}, styleProp, activeStyle) : styleProp;\n      return React.createElement(Link, _extends({\n        \"aria-current\": isActive && ariaCurrent || null,\n        className: className,\n        style: style,\n        to: to\n      }, rest));\n    }\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  var ariaCurrentType = PropTypes.oneOf([\"page\", \"step\", \"location\", \"date\", \"time\", \"true\"]);\n  NavLink.propTypes = _extends({}, Link.propTypes, {\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.string,\n    exact: Route.propTypes.exact,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    strict: Route.propTypes.strict,\n    style: PropTypes.object\n  });\n}\n\nexport { BrowserRouter, HashRouter, Link, NavLink };","import _toConsumableArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/observablemixin\n */\nimport EmitterMixin from './emittermixin';\nimport CKEditorError from './ckeditorerror';\nimport { extend, isObject } from 'lodash-es';\nvar observablePropertiesSymbol = Symbol('observableProperties');\nvar boundObservablesSymbol = Symbol('boundObservables');\nvar boundPropertiesSymbol = Symbol('boundProperties');\n/**\n * Mixin that injects the \"observable properties\" and data binding functionality described in the\n * {@link ~Observable} interface.\n *\n * Read more about the concept of observables in the:\n * * {@glink framework/guides/architecture/core-editor-architecture#event-system-and-observables \"Event system and observables\"}\n * section of the {@glink framework/guides/architecture/core-editor-architecture \"Core editor architecture\"} guide,\n * * {@glink framework/guides/deep-dive/observables \"Observables\" deep dive} guide.\n *\n * @mixin ObservableMixin\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/observablemixin~Observable\n */\n\nvar ObservableMixin = {\n  /**\n   * @inheritDoc\n   */\n  set: function set(name, value) {\n    var _this = this;\n\n    // If the first parameter is an Object, iterate over its properties.\n    if (isObject(name)) {\n      Object.keys(name).forEach(function (property) {\n        _this.set(property, name[property]);\n      }, this);\n      return;\n    }\n\n    initObservable(this);\n    var properties = this[observablePropertiesSymbol];\n\n    if (name in this && !properties.has(name)) {\n      /**\n       * Cannot override an existing property.\n       *\n       * This error is thrown when trying to {@link ~Observable#set set} an property with\n       * a name of an already existing property. For example:\n       *\n       *\t\tlet observable = new Model();\n       *\t\tobservable.property = 1;\n       *\t\tobservable.set( 'property', 2 );\t\t\t// throws\n       *\n       *\t\tobservable.set( 'property', 1 );\n       *\t\tobservable.set( 'property', 2 );\t\t\t// ok, because this is an existing property.\n       *\n       * @error observable-set-cannot-override\n       */\n      throw new CKEditorError('observable-set-cannot-override: Cannot override an existing property.');\n    }\n\n    Object.defineProperty(this, name, {\n      enumerable: true,\n      configurable: true,\n      get: function get() {\n        return properties.get(name);\n      },\n      set: function set(value) {\n        var oldValue = properties.get(name); // Fire `set` event before the new value will be set to make it possible\n        // to override observable property without affecting `change` event.\n        // See https://github.com/ckeditor/ckeditor5-utils/issues/171.\n\n        var newValue = this.fire('set:' + name, name, value, oldValue);\n\n        if (newValue === undefined) {\n          newValue = value;\n        } // Allow undefined as an initial value like A.define( 'x', undefined ) (#132).\n        // Note: When properties map has no such own property, then its value is undefined.\n\n\n        if (oldValue !== newValue || !properties.has(name)) {\n          properties.set(name, newValue);\n          this.fire('change:' + name, name, newValue, oldValue);\n        }\n      }\n    });\n    this[name] = value;\n  },\n\n  /**\n   * @inheritDoc\n   */\n  bind: function bind() {\n    for (var _len = arguments.length, bindProperties = new Array(_len), _key = 0; _key < _len; _key++) {\n      bindProperties[_key] = arguments[_key];\n    }\n\n    if (!bindProperties.length || !isStringArray(bindProperties)) {\n      /**\n       * All properties must be strings.\n       *\n       * @error observable-bind-wrong-properties\n       */\n      throw new CKEditorError('observable-bind-wrong-properties: All properties must be strings.');\n    }\n\n    if (new Set(bindProperties).size !== bindProperties.length) {\n      /**\n       * Properties must be unique.\n       *\n       * @error observable-bind-duplicate-properties\n       */\n      throw new CKEditorError('observable-bind-duplicate-properties: Properties must be unique.');\n    }\n\n    initObservable(this);\n    var boundProperties = this[boundPropertiesSymbol];\n    bindProperties.forEach(function (propertyName) {\n      if (boundProperties.has(propertyName)) {\n        /**\n         * Cannot bind the same property more that once.\n         *\n         * @error observable-bind-rebind\n         */\n        throw new CKEditorError('observable-bind-rebind: Cannot bind the same property more that once.');\n      }\n    });\n    var bindings = new Map(); // @typedef {Object} Binding\n    // @property {Array} property Property which is bound.\n    // @property {Array} to Array of observable–property components of the binding (`{ observable: ..., property: .. }`).\n    // @property {Array} callback A function which processes `to` components.\n\n    bindProperties.forEach(function (a) {\n      var binding = {\n        property: a,\n        to: []\n      };\n      boundProperties.set(a, binding);\n      bindings.set(a, binding);\n    }); // @typedef {Object} BindChain\n    // @property {Function} to See {@link ~ObservableMixin#_bindTo}.\n    // @property {Function} toMany See {@link ~ObservableMixin#_bindToMany}.\n    // @property {module:utils/observablemixin~Observable} _observable The observable which initializes the binding.\n    // @property {Array} _bindProperties Array of `_observable` properties to be bound.\n    // @property {Array} _to Array of `to()` observable–properties (`{ observable: toObservable, properties: ...toProperties }`).\n    // @property {Map} _bindings Stores bindings to be kept in\n    // {@link ~ObservableMixin#_boundProperties}/{@link ~ObservableMixin#_boundObservables}\n    // initiated in this binding chain.\n\n    return {\n      to: bindTo,\n      toMany: bindToMany,\n      _observable: this,\n      _bindProperties: bindProperties,\n      _to: [],\n      _bindings: bindings\n    };\n  },\n\n  /**\n   * @inheritDoc\n   */\n  unbind: function unbind() {\n    var _this2 = this;\n\n    // Nothing to do here if not inited yet.\n    if (!(observablePropertiesSymbol in this)) {\n      return;\n    }\n\n    var boundProperties = this[boundPropertiesSymbol];\n    var boundObservables = this[boundObservablesSymbol];\n\n    for (var _len2 = arguments.length, unbindProperties = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      unbindProperties[_key2] = arguments[_key2];\n    }\n\n    if (unbindProperties.length) {\n      if (!isStringArray(unbindProperties)) {\n        /**\n         * Properties must be strings.\n         *\n         * @error observable-unbind-wrong-properties\n         */\n        throw new CKEditorError('observable-unbind-wrong-properties: Properties must be strings.');\n      }\n\n      unbindProperties.forEach(function (propertyName) {\n        var binding = boundProperties.get(propertyName); // Nothing to do if the binding is not defined\n\n        if (!binding) {\n          return;\n        }\n\n        var toObservable, toProperty, toProperties, toPropertyBindings;\n        binding.to.forEach(function (to) {\n          // TODO: ES6 destructuring.\n          toObservable = to[0];\n          toProperty = to[1];\n          toProperties = boundObservables.get(toObservable);\n          toPropertyBindings = toProperties[toProperty];\n          toPropertyBindings.delete(binding);\n\n          if (!toPropertyBindings.size) {\n            delete toProperties[toProperty];\n          }\n\n          if (!Object.keys(toProperties).length) {\n            boundObservables.delete(toObservable);\n\n            _this2.stopListening(toObservable, 'change');\n          }\n        });\n        boundProperties.delete(propertyName);\n      });\n    } else {\n      boundObservables.forEach(function (bindings, boundObservable) {\n        _this2.stopListening(boundObservable, 'change');\n      });\n      boundObservables.clear();\n      boundProperties.clear();\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  decorate: function decorate(methodName) {\n    var _this3 = this;\n\n    var originalMethod = this[methodName];\n\n    if (!originalMethod) {\n      /**\n       * Cannot decorate an undefined method.\n       *\n       * @error observablemixin-cannot-decorate-undefined\n       * @param {Object} object The object which method should be decorated.\n       * @param {String} methodName Name of the method which does not exist.\n       */\n      throw new CKEditorError('observablemixin-cannot-decorate-undefined: Cannot decorate an undefined method.', {\n        object: this,\n        methodName: methodName\n      });\n    }\n\n    this.on(methodName, function (evt, args) {\n      evt.return = originalMethod.apply(_this3, args);\n    });\n\n    this[methodName] = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return this.fire(methodName, args);\n    };\n  }\n};\nextend(ObservableMixin, EmitterMixin);\nexport default ObservableMixin; // Init symbol properties needed to for the observable mechanism to work.\n//\n// @private\n// @param {module:utils/observablemixin~ObservableMixin} observable\n\nfunction initObservable(observable) {\n  // Do nothing if already inited.\n  if (observablePropertiesSymbol in observable) {\n    return;\n  } // The internal hash containing the observable's state.\n  //\n  // @private\n  // @type {Map}\n\n\n  Object.defineProperty(observable, observablePropertiesSymbol, {\n    value: new Map()\n  }); // Map containing bindings to external observables. It shares the binding objects\n  // (`{ observable: A, property: 'a', to: ... }`) with {@link module:utils/observablemixin~ObservableMixin#_boundProperties} and\n  // it is used to observe external observables to update own properties accordingly.\n  // See {@link module:utils/observablemixin~ObservableMixin#bind}.\n  //\n  //\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n  //\t\tconsole.log( A._boundObservables );\n  //\n  //\t\t\tMap( {\n  //\t\t\t\tB: {\n  //\t\t\t\t\tx: Set( [\n  //\t\t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n  //\t\t\t\t\t\t{ observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n  //\t\t\t\t\t] ),\n  //\t\t\t\t\ty: Set( [\n  //\t\t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n  //\t\t\t\t\t] )\n  //\t\t\t\t}\n  //\t\t\t} )\n  //\n  //\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n  //\t\tconsole.log( A._boundObservables );\n  //\n  //\t\t\tMap( {\n  //\t\t\t\tB: {\n  //\t\t\t\t\tx: Set( [\n  //\t\t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n  //\t\t\t\t\t\t{ observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n  //\t\t\t\t\t] ),\n  //\t\t\t\t\ty: Set( [\n  //\t\t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n  //\t\t\t\t\t] ),\n  //\t\t\t\t\tz: Set( [\n  //\t\t\t\t\t\t{ observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n  //\t\t\t\t\t] )\n  //\t\t\t\t},\n  //\t\t\t\tC: {\n  //\t\t\t\t\tw: Set( [\n  //\t\t\t\t\t\t{ observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n  //\t\t\t\t\t] )\n  //\t\t\t\t}\n  //\t\t\t} )\n  //\n  // @private\n  // @type {Map}\n\n  Object.defineProperty(observable, boundObservablesSymbol, {\n    value: new Map()\n  }); // Object that stores which properties of this observable are bound and how. It shares\n  // the binding objects (`{ observable: A, property: 'a', to: ... }`) with {@link utils.ObservableMixin#_boundObservables}.\n  // This data structure is a reverse of {@link utils.ObservableMixin#_boundObservables} and it is helpful for\n  // {@link utils.ObservableMixin#unbind}.\n  //\n  // See {@link utils.ObservableMixin#bind}.\n  //\n  //\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n  //\t\tconsole.log( A._boundProperties );\n  //\n  //\t\t\tMap( {\n  //\t\t\t\ta: { observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n  //\t\t\t\tb: { observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n  //\t\t\t\tc: { observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n  //\t\t\t} )\n  //\n  //\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n  //\t\tconsole.log( A._boundProperties );\n  //\n  //\t\t\tMap( {\n  //\t\t\t\ta: { observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n  //\t\t\t\tb: { observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n  //\t\t\t\tc: { observable: A, property: 'c', to: [ [ B, 'x' ] ] },\n  //\t\t\t\td: { observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n  //\t\t\t} )\n  //\n  // @private\n  // @type {Map}\n\n  Object.defineProperty(observable, boundPropertiesSymbol, {\n    value: new Map()\n  });\n} // A chaining for {@link module:utils/observablemixin~ObservableMixin#bind} providing `.to()` interface.\n//\n// @private\n// @param {...[Observable|String|Function]} args Arguments of the `.to( args )` binding.\n\n\nfunction bindTo() {\n  var _this4 = this;\n\n  var parsedArgs = parseBindToArgs.apply(void 0, arguments);\n  var bindingsKeys = Array.from(this._bindings.keys());\n  var numberOfBindings = bindingsKeys.length; // Eliminate A.bind( 'x' ).to( B, C )\n\n  if (!parsedArgs.callback && parsedArgs.to.length > 1) {\n    /**\n     * Binding multiple observables only possible with callback.\n     *\n     * @error observable-bind-no-callback\n     */\n    throw new CKEditorError('observable-bind-to-no-callback: Binding multiple observables only possible with callback.');\n  } // Eliminate A.bind( 'x', 'y' ).to( B, callback )\n\n\n  if (numberOfBindings > 1 && parsedArgs.callback) {\n    /**\n     * Cannot bind multiple properties and use a callback in one binding.\n     *\n     * @error observable-bind-to-extra-callback\n     */\n    throw new CKEditorError('observable-bind-to-extra-callback: Cannot bind multiple properties and use a callback in one binding.');\n  }\n\n  parsedArgs.to.forEach(function (to) {\n    // Eliminate A.bind( 'x', 'y' ).to( B, 'a' )\n    if (to.properties.length && to.properties.length !== numberOfBindings) {\n      /**\n       * The number of properties must match.\n       *\n       * @error observable-bind-to-properties-length\n       */\n      throw new CKEditorError('observable-bind-to-properties-length: The number of properties must match.');\n    } // When no to.properties specified, observing source properties instead i.e.\n    // A.bind( 'x', 'y' ).to( B ) -> Observe B.x and B.y\n\n\n    if (!to.properties.length) {\n      to.properties = _this4._bindProperties;\n    }\n  });\n  this._to = parsedArgs.to; // Fill {@link BindChain#_bindings} with callback. When the callback is set there's only one binding.\n\n  if (parsedArgs.callback) {\n    this._bindings.get(bindingsKeys[0]).callback = parsedArgs.callback;\n  }\n\n  attachBindToListeners(this._observable, this._to); // Update observable._boundProperties and observable._boundObservables.\n\n  updateBindToBound(this); // Set initial values of bound properties.\n\n  this._bindProperties.forEach(function (propertyName) {\n    updateBoundObservableProperty(_this4._observable, propertyName);\n  });\n} // Binds to an attribute in a set of iterable observables.\n//\n// @private\n// @param {Array.<Observable>} observables\n// @param {String} attribute\n// @param {Function} callback\n\n\nfunction bindToMany(observables, attribute, callback) {\n  if (this._bindings.size > 1) {\n    /**\n     * Binding one attribute to many observables only possible with one attribute.\n     *\n     * @error observable-bind-to-many-not-one-binding\n     */\n    throw new CKEditorError('observable-bind-to-many-not-one-binding: Cannot bind multiple properties with toMany().');\n  }\n\n  this.to.apply(this, _toConsumableArray(getBindingTargets(observables, attribute)).concat([// ...using given callback to parse attribute values.\n  callback]));\n} // Returns an array of binding components for\n// {@link Observable#bind} from a set of iterable observables.\n//\n// @param {Array.<Observable>} observables\n// @param {String} attribute\n// @returns {Array.<String|Observable>}\n\n\nfunction getBindingTargets(observables, attribute) {\n  var observableAndAttributePairs = observables.map(function (observable) {\n    return [observable, attribute];\n  }); // Merge pairs to one-dimension array of observables and attributes.\n\n  return Array.prototype.concat.apply([], observableAndAttributePairs);\n} // Check if all entries of the array are of `String` type.\n//\n// @private\n// @param {Array} arr An array to be checked.\n// @returns {Boolean}\n\n\nfunction isStringArray(arr) {\n  return arr.every(function (a) {\n    return typeof a == 'string';\n  });\n} // Parses and validates {@link Observable#bind}`.to( args )` arguments and returns\n// an object with a parsed structure. For example\n//\n//\t\tA.bind( 'x' ).to( B, 'a', C, 'b', call );\n//\n// becomes\n//\n//\t\t{\n//\t\t\tto: [\n//\t\t\t\t{ observable: B, properties: [ 'a' ] },\n//\t\t\t\t{ observable: C, properties: [ 'b' ] },\n//\t\t\t],\n//\t\t\tcallback: call\n// \t\t}\n//\n// @private\n// @param {...*} args Arguments of {@link Observable#bind}`.to( args )`.\n// @returns {Object}\n\n\nfunction parseBindToArgs() {\n  for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  // Eliminate A.bind( 'x' ).to()\n  if (!args.length) {\n    /**\n     * Invalid argument syntax in `to()`.\n     *\n     * @error observable-bind-to-parse-error\n     */\n    throw new CKEditorError('observable-bind-to-parse-error: Invalid argument syntax in `to()`.');\n  }\n\n  var parsed = {\n    to: []\n  };\n  var lastObservable;\n\n  if (typeof args[args.length - 1] == 'function') {\n    parsed.callback = args.pop();\n  }\n\n  args.forEach(function (a) {\n    if (typeof a == 'string') {\n      lastObservable.properties.push(a);\n    } else if (typeof a == 'object') {\n      lastObservable = {\n        observable: a,\n        properties: []\n      };\n      parsed.to.push(lastObservable);\n    } else {\n      throw new CKEditorError('observable-bind-to-parse-error: Invalid argument syntax in `to()`.');\n    }\n  });\n  return parsed;\n} // Synchronizes {@link module:utils/observablemixin#_boundObservables} with {@link Binding}.\n//\n// @private\n// @param {Binding} binding A binding to store in {@link Observable#_boundObservables}.\n// @param {Observable} toObservable A observable, which is a new component of `binding`.\n// @param {String} toPropertyName A name of `toObservable`'s property, a new component of the `binding`.\n\n\nfunction updateBoundObservables(observable, binding, toObservable, toPropertyName) {\n  var boundObservables = observable[boundObservablesSymbol];\n  var bindingsToObservable = boundObservables.get(toObservable);\n  var bindings = bindingsToObservable || {};\n\n  if (!bindings[toPropertyName]) {\n    bindings[toPropertyName] = new Set();\n  } // Pass the binding to a corresponding Set in `observable._boundObservables`.\n\n\n  bindings[toPropertyName].add(binding);\n\n  if (!bindingsToObservable) {\n    boundObservables.set(toObservable, bindings);\n  }\n} // Synchronizes {@link Observable#_boundProperties} and {@link Observable#_boundObservables}\n// with {@link BindChain}.\n//\n// Assuming the following binding being created\n//\n// \t\tA.bind( 'a', 'b' ).to( B, 'x', 'y' );\n//\n// the following bindings were initialized by {@link Observable#bind} in {@link BindChain#_bindings}:\n//\n// \t\t{\n// \t\t\ta: { observable: A, property: 'a', to: [] },\n// \t\t\tb: { observable: A, property: 'b', to: [] },\n// \t\t}\n//\n// Iterate over all bindings in this chain and fill their `to` properties with\n// corresponding to( ... ) arguments (components of the binding), so\n//\n// \t\t{\n// \t\t\ta: { observable: A, property: 'a', to: [ B, 'x' ] },\n// \t\t\tb: { observable: A, property: 'b', to: [ B, 'y' ] },\n// \t\t}\n//\n// Then update the structure of {@link Observable#_boundObservables} with updated\n// binding, so it becomes:\n//\n// \t\tMap( {\n// \t\t\tB: {\n// \t\t\t\tx: Set( [\n// \t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] }\n// \t\t\t\t] ),\n// \t\t\t\ty: Set( [\n// \t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n// \t\t\t\t] )\n//\t\t\t}\n// \t\t} )\n//\n// @private\n// @param {BindChain} chain The binding initialized by {@link Observable#bind}.\n\n\nfunction updateBindToBound(chain) {\n  var toProperty;\n\n  chain._bindings.forEach(function (binding, propertyName) {\n    // Note: For a binding without a callback, this will run only once\n    // like in A.bind( 'x', 'y' ).to( B, 'a', 'b' )\n    // TODO: ES6 destructuring.\n    chain._to.forEach(function (to) {\n      toProperty = to.properties[binding.callback ? 0 : chain._bindProperties.indexOf(propertyName)];\n      binding.to.push([to.observable, toProperty]);\n      updateBoundObservables(chain._observable, binding, to.observable, toProperty);\n    });\n  });\n} // Updates an property of a {@link Observable} with a value\n// determined by an entry in {@link Observable#_boundProperties}.\n//\n// @private\n// @param {Observable} observable A observable which property is to be updated.\n// @param {String} propertyName An property to be updated.\n\n\nfunction updateBoundObservableProperty(observable, propertyName) {\n  var boundProperties = observable[boundPropertiesSymbol];\n  var binding = boundProperties.get(propertyName);\n  var propertyValue; // When a binding with callback is created like\n  //\n  // \t\tA.bind( 'a' ).to( B, 'b', C, 'c', callback );\n  //\n  // collect B.b and C.c, then pass them to callback to set A.a.\n\n  if (binding.callback) {\n    propertyValue = binding.callback.apply(observable, binding.to.map(function (to) {\n      return to[0][to[1]];\n    }));\n  } else {\n    propertyValue = binding.to[0];\n    propertyValue = propertyValue[0][propertyValue[1]];\n  }\n\n  if (observable.hasOwnProperty(propertyName)) {\n    observable[propertyName] = propertyValue;\n  } else {\n    observable.set(propertyName, propertyValue);\n  }\n} // Starts listening to changes in {@link BindChain._to} observables to update\n// {@link BindChain._observable} {@link BindChain._bindProperties}. Also sets the\n// initial state of {@link BindChain._observable}.\n//\n// @private\n// @param {BindChain} chain The chain initialized by {@link Observable#bind}.\n\n\nfunction attachBindToListeners(observable, toBindings) {\n  toBindings.forEach(function (to) {\n    var boundObservables = observable[boundObservablesSymbol];\n    var bindings; // If there's already a chain between the observables (`observable` listens to\n    // `to.observable`), there's no need to create another `change` event listener.\n\n    if (!boundObservables.get(to.observable)) {\n      observable.listenTo(to.observable, 'change', function (evt, propertyName) {\n        bindings = boundObservables.get(to.observable)[propertyName]; // Note: to.observable will fire for any property change, react\n        // to changes of properties which are bound only.\n\n        if (bindings) {\n          bindings.forEach(function (binding) {\n            updateBoundObservableProperty(observable, binding.property);\n          });\n        }\n      });\n    }\n  });\n}\n/**\n * Interface which adds \"observable properties\" and data binding functionality.\n *\n * Can be easily implemented by a class by mixing the {@link module:utils/observablemixin~ObservableMixin} mixin.\n *\n * Read more about the usage of this interface in the:\n * * {@glink framework/guides/architecture/core-editor-architecture#event-system-and-observables \"Event system and observables\"}\n * section of the {@glink framework/guides/architecture/core-editor-architecture \"Core editor architecture\"} guide,\n * * {@glink framework/guides/deep-dive/observables \"Observables\" deep dive} guide.\n *\n * @interface Observable\n * @extends module:utils/emittermixin~Emitter\n */\n\n/**\n * Fired when a property changed value.\n *\n *\t\tobservable.set( 'prop', 1 );\n *\n *\t\tobservable.on( 'change:prop', ( evt, propertyName, newValue, oldValue ) => {\n *\t\t\tconsole.log( `${ propertyName } has changed from ${ oldValue } to ${ newValue }` );\n *\t\t} );\n *\n *\t\tobservable.prop = 2; // -> 'prop has changed from 1 to 2'\n *\n * @event change:{property}\n * @param {String} name The property name.\n * @param {*} value The new property value.\n * @param {*} oldValue The previous property value.\n */\n\n/**\n * Fired when a property value is going to be set but is not set yet (before the `change` event is fired).\n *\n * You can control the final value of the property by using\n * the {@link module:utils/eventinfo~EventInfo#return event's `return` property}.\n *\n *\t\tobservable.set( 'prop', 1 );\n *\n *\t\tobservable.on( 'set:prop', ( evt, propertyName, newValue, oldValue ) => {\n *\t\t\tconsole.log( `Value is going to be changed from ${ oldValue } to ${ newValue }` );\n *\t\t\tconsole.log( `Current property value is ${ observable[ propertyName ] }` );\n *\n *\t\t\t// Let's override the value.\n *\t\t\tevt.return = 3;\n *\t\t} );\n *\n *\t\tobservable.on( 'change:prop', ( evt, propertyName, newValue, oldValue ) => {\n *\t\t\tconsole.log( `Value has changed from ${ oldValue } to ${ newValue }` );\n *\t\t} );\n *\n *\t\tobservable.prop = 2; // -> 'Value is going to be changed from 1 to 2'\n *\t\t                     // -> 'Current property value is 1'\n *\t\t                     // -> 'Value has changed from 1 to 3'\n *\n * **Note:** Event is fired even when the new value is the same as the old value.\n *\n * @event set:{property}\n * @param {String} name The property name.\n * @param {*} value The new property value.\n * @param {*} oldValue The previous property value.\n */\n\n/**\n * Creates and sets the value of an observable property of this object. Such an property becomes a part\n * of the state and is be observable.\n *\n * It accepts also a single object literal containing key/value pairs with properties to be set.\n *\n * This method throws the `observable-set-cannot-override` error if the observable instance already\n * have a property with the given property name. This prevents from mistakenly overriding existing\n * properties and methods, but means that `foo.set( 'bar', 1 )` may be slightly slower than `foo.bar = 1`.\n *\n * @method #set\n * @param {String|Object} name The property's name or object with `name=>value` pairs.\n * @param {*} [value] The property's value (if `name` was passed in the first parameter).\n */\n\n/**\n * Binds {@link #set obvervable properties} to other objects implementing the\n * {@link module:utils/observablemixin~Observable} interface.\n *\n * Read more in the {@glink framework/guides/deep-dive/observables#property-bindings dedicated guide}\n * covering the topic of property bindings with some additional examples.\n *\n * Let's consider two objects: a `button` and an associated `command` (both `Observable`).\n *\n * A simple property binding could be as follows:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled' );\n *\n * or even shorter:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command );\n *\n * which works in the following way:\n *\n * * `button.isEnabled` **instantly equals** `command.isEnabled`,\n * * whenever `command.isEnabled` changes, `button.isEnabled` will immediately reflect its value.\n *\n * **Note**: To release the binding use {@link module:utils/observablemixin~Observable#unbind}.\n *\n * You can also \"rename\" the property in the binding by specifying the new name in the `to()` chain:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isWorking' );\n *\n * It is possible to bind more than one property at a time to shorten the code:\n *\n *\t\tbutton.bind( 'isEnabled', 'value' ).to( command );\n *\n * which corresponds to:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command );\n *\t\tbutton.bind( 'value' ).to( command );\n *\n * The binding can include more than one observable, combining multiple data sources in a custom callback:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled', ui, 'isVisible',\n *\t\t\t( isCommandEnabled, isUIVisible ) => isCommandEnabled && isUIVisible );\n *\n * It is also possible to bind to the same property in an array of observables.\n * To bind a `button` to multiple commands (also `Observables`) so that each and every one of them\n * must be enabled for the button to become enabled, use the following code:\n *\n *\t\tbutton.bind( 'isEnabled' ).toMany( [ commandA, commandB, commandC ], 'isEnabled',\n *\t\t\t( isAEnabled, isBEnabled, isCEnabled ) => isAEnabled && isBEnabled && isCEnabled );\n *\n * @method #bind\n * @param {...String} bindProperties Observable properties that will be bound to another observable(s).\n * @returns {Object} The bind chain with the `to()` and `toMany()` methods.\n */\n\n/**\n * Removes the binding created with {@link #bind}.\n *\n *\t\t// Removes the binding for the 'a' property.\n *\t\tA.unbind( 'a' );\n *\n *\t\t// Removes bindings for all properties.\n *\t\tA.unbind();\n *\n * @method #unbind\n * @param {...String} [unbindProperties] Observable properties to be unbound. All the bindings will\n * be released if no properties provided.\n */\n\n/**\n * Turns the given methods of this object into event-based ones. This means that the new method will fire an event\n * (named after the method) and the original action will be plugged as a listener to that event.\n *\n * Read more in the {@glink framework/guides/deep-dive/observables#decorating-object-methods dedicated guide}\n * covering the topic of decorating methods with some additional examples.\n *\n * Decorating the method does not change its behavior (it only adds an event),\n * but it allows to modify it later on by listening to the method's event.\n *\n * For example, to cancel the method execution the event can be {@link module:utils/eventinfo~EventInfo#stop stopped}:\n *\n *\t\tclass Foo {\n *\t\t\tconstructor() {\n *\t\t\t\tthis.decorate( 'method' );\n *\t\t\t}\n *\n *\t\t\tmethod() {\n *\t\t\t\tconsole.log( 'called!' );\n *\t\t\t}\n *\t\t}\n *\n *\t\tconst foo = new Foo();\n *\t\tfoo.on( 'method', ( evt ) => {\n *\t\t\tevt.stop();\n *\t\t}, { priority: 'high' } );\n *\n *\t\tfoo.method(); // Nothing is logged.\n *\n *\n * **Note**: The high {@link module:utils/priorities~PriorityString priority} listener\n * has been used to execute this particular callback before the one which calls the original method\n * (which uses the \"normal\" priority).\n *\n * It is also possible to change the returned value:\n *\n *\t\tfoo.on( 'method', ( evt ) => {\n *\t\t\tevt.return = 'Foo!';\n *\t\t} );\n *\n *\t\tfoo.method(); // -> 'Foo'\n *\n * Finally, it is possible to access and modify the arguments the method is called with:\n *\n *\t\tmethod( a, b ) {\n *\t\t\tconsole.log( `${ a }, ${ b }`  );\n *\t\t}\n *\n *\t\t// ...\n *\n *\t\tfoo.on( 'method', ( evt, args ) => {\n *\t\t\targs[ 0 ] = 3;\n *\n *\t\t\tconsole.log( args[ 1 ] ); // -> 2\n *\t\t}, { priority: 'high' } );\n *\n *\t\tfoo.method( 1, 2 ); // -> '3, 2'\n *\n * @method #decorate\n * @param {String} methodName Name of the method to decorate.\n */","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/text\n */\nimport Node from './node';\n/**\n * Tree view text node.\n *\n * The constructor of this class shouldn't be used directly. To create new Text instances\n * use the {@link module:engine/view/downcastwriter~DowncastWriter#createText `DowncastWriter#createText()`}\n * method when working on data downcasted from the model or the\n * {@link module:engine/view/upcastwriter~UpcastWriter#createText `UpcastWriter#createText()`}\n * method when working on non-semantic views.\n *\n * @extends module:engine/view/node~Node\n */\n\nvar Text =\n/*#__PURE__*/\nfunction (_Node) {\n  _inherits(Text, _Node);\n\n  /**\n   * Creates a tree view text node.\n   *\n   * @protected\n   * @param {String} data The text's data.\n   */\n  function Text(data) {\n    var _this;\n\n    _classCallCheck(this, Text);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Text).call(this));\n    /**\n     * The text content.\n     *\n     * Setting the data fires the {@link module:engine/view/node~Node#event:change:text change event}.\n     *\n     * @protected\n     * @member {String} module:engine/view/text~Text#_textData\n     */\n\n    _this._textData = data;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(Text, [{\n    key: \"is\",\n    value: function is(type) {\n      return type == 'text' || _get(_getPrototypeOf(Text.prototype), \"is\", this).call(this, type);\n    }\n    /**\n     * The text content.\n     *\n     * @readonly\n     * @type {String}\n     */\n\n  }, {\n    key: \"isSimilar\",\n\n    /**\n     * Checks if this text node is similar to other text node.\n     * Both nodes should have the same data to be considered as similar.\n     *\n     * @param {module:engine/view/text~Text} otherNode Node to check if it is same as this node.\n     * @returns {Boolean}\n     */\n    value: function isSimilar(otherNode) {\n      if (!(otherNode instanceof Text)) {\n        return false;\n      }\n\n      return this === otherNode || this.data === otherNode.data;\n    }\n    /**\n     * Clones this node.\n     *\n     * @protected\n     * @returns {module:engine/view/text~Text} Text node that is a clone of this node.\n     */\n\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      return new Text(this.data);\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._textData;\n    }\n    /**\n     * This getter is required when using the addition assignment operator on protected property:\n     *\n     *\t\tconst foo = downcastWriter.createText( 'foo' );\n     *\t\tconst bar = downcastWriter.createText( 'bar' );\n     *\n     *\t\tfoo._data += bar.data;   // executes: `foo._data = foo._data + bar.data`\n     *\t\tconsole.log( foo.data ); // prints: 'foobar'\n     *\n     * If the protected getter didn't exist, `foo._data` will return `undefined` and result of the merge will be invalid.\n     *\n     * @protected\n     * @type {String}\n     */\n\n  }, {\n    key: \"_data\",\n    get: function get() {\n      return this.data;\n    }\n    /**\n     * Sets data and fires the {@link module:engine/view/node~Node#event:change:text change event}.\n     *\n     * @protected\n     * @fires change:text\n     * @param {String} data New data for the text node.\n     */\n    ,\n    set: function set(data) {\n      this._fireChange('text', this);\n\n      this._textData = data;\n    }\n  }]);\n\n  return Text;\n}(Node);\n\nexport { Text as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/moveoperation\n */\nimport Operation from './operation';\nimport Position from '../position';\nimport Range from '../range';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport { _move } from './utils';\n/**\n * Operation to move a range of {@link module:engine/model/item~Item model items}\n * to given {@link module:engine/model/position~Position target position}.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar MoveOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(MoveOperation, _Operation);\n\n  /**\n   * Creates a move operation.\n   *\n   * @param {module:engine/model/position~Position} sourcePosition\n   * Position before the first {@link module:engine/model/item~Item model item} to move.\n   * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\n   * `sourcePosition` with offset shifted by `howMany`.\n   * @param {module:engine/model/position~Position} targetPosition Position at which moved nodes will be inserted.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function MoveOperation(sourcePosition, howMany, targetPosition, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, MoveOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MoveOperation).call(this, baseVersion));\n    /**\n     * Position before the first {@link module:engine/model/item~Item model item} to move.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#sourcePosition\n     */\n\n    _this.sourcePosition = sourcePosition.clone(); // `'toNext'` because `sourcePosition` is a bit like a start of the moved range.\n\n    _this.sourcePosition.stickiness = 'toNext';\n    /**\n     * Offset size of moved range.\n     *\n     * @member {Number} module:engine/model/operation/moveoperation~MoveOperation#howMany\n     */\n\n    _this.howMany = howMany;\n    /**\n     * Position at which moved nodes will be inserted.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#targetPosition\n     */\n\n    _this.targetPosition = targetPosition.clone();\n    _this.targetPosition.stickiness = 'toNone';\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(MoveOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/moveoperation~MoveOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new this.constructor(this.sourcePosition, this.howMany, this.targetPosition, this.baseVersion);\n    }\n    /**\n     * Returns the start position of the moved range after it got moved. This may be different than\n     * {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition} in some cases, i.e. when a range is moved\n     * inside the same parent but {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition targetPosition}\n     * is after {@link module:engine/model/operation/moveoperation~MoveOperation#sourcePosition sourcePosition}.\n     *\n     *\t\t vv              vv\n     *\t\tabcdefg ===> adefbcg\n     *\t\t     ^          ^\n     *\t\t     targetPos\tmovedRangeStart\n     *\t\t     offset 6\toffset 4\n     *\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"getMovedRangeStart\",\n    value: function getMovedRangeStart() {\n      return this.targetPosition._getTransformedByDeletion(this.sourcePosition, this.howMany);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      var newTargetPosition = this.sourcePosition._getTransformedByInsertion(this.targetPosition, this.howMany);\n\n      return new this.constructor(this.getMovedRangeStart(), this.howMany, newTargetPosition, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      var sourceElement = this.sourcePosition.parent;\n      var targetElement = this.targetPosition.parent;\n      var sourceOffset = this.sourcePosition.offset;\n      var targetOffset = this.targetPosition.offset; // Validate whether move operation has correct parameters.\n      // Validation is pretty complex but move operation is one of the core ways to manipulate the document state.\n      // We expect that many errors might be connected with one of scenarios described below.\n\n      if (!sourceElement || !targetElement) {\n        /**\n         * Source position or target position is invalid.\n         *\n         * @error move-operation-position-invalid\n         */\n        throw new CKEditorError('move-operation-position-invalid: Source position or target position is invalid.');\n      } else if (sourceOffset + this.howMany > sourceElement.maxOffset) {\n        /**\n         * The nodes which should be moved do not exist.\n         *\n         * @error move-operation-nodes-do-not-exist\n         */\n        throw new CKEditorError('move-operation-nodes-do-not-exist: The nodes which should be moved do not exist.');\n      } else if (sourceElement === targetElement && sourceOffset < targetOffset && targetOffset < sourceOffset + this.howMany) {\n        /**\n         * Trying to move a range of nodes into the middle of that range.\n         *\n         * @error move-operation-range-into-itself\n         */\n        throw new CKEditorError('move-operation-range-into-itself: Trying to move a range of nodes to the inside of that range.');\n      } else if (this.sourcePosition.root == this.targetPosition.root) {\n        if (compareArrays(this.sourcePosition.getParentPath(), this.targetPosition.getParentPath()) == 'prefix') {\n          var i = this.sourcePosition.path.length - 1;\n\n          if (this.targetPosition.path[i] >= sourceOffset && this.targetPosition.path[i] < sourceOffset + this.howMany) {\n            /**\n             * Trying to move a range of nodes into one of nodes from that range.\n             *\n             * @error move-operation-node-into-itself\n             */\n            throw new CKEditorError('move-operation-node-into-itself: Trying to move a range of nodes into one of nodes from that range.');\n          }\n        }\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      _move(Range._createFromPositionAndShift(this.sourcePosition, this.howMany), this.targetPosition);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(MoveOperation.prototype), \"toJSON\", this).call(this);\n\n      json.sourcePosition = this.sourcePosition.toJSON();\n      json.targetPosition = this.targetPosition.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      if (this.targetPosition.root.rootName == '$graveyard') {\n        return 'remove';\n      } else if (this.sourcePosition.root.rootName == '$graveyard') {\n        return 'reinsert';\n      }\n\n      return 'move';\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates `MoveOperation` object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n     */\n    value: function fromJSON(json, document) {\n      var sourcePosition = Position.fromJSON(json.sourcePosition, document);\n      var targetPosition = Position.fromJSON(json.targetPosition, document);\n      return new this(sourcePosition, json.howMany, targetPosition, json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'MoveOperation';\n    }\n  }]);\n\n  return MoveOperation;\n}(Operation);\n\nexport { MoveOperation as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/splitoperation\n */\nimport Operation from './operation';\nimport MergeOperation from './mergeoperation';\nimport Position from '../position';\nimport Range from '../range';\nimport { _insert, _move } from './utils';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Operation to split {@link module:engine/model/element~Element an element} at given\n * {@link module:engine/model/operation/splitoperation~SplitOperation#splitPosition split position} into two elements,\n * both containing a part of the element's original content.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar SplitOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(SplitOperation, _Operation);\n\n  /**\n   * Creates a split operation.\n   *\n   * @param {module:engine/model/position~Position} splitPosition Position at which an element should be split.\n   * @param {Number} howMany Total offset size of elements that are in the split element after `position`.\n   * @param {module:engine/model/position~Position|null} graveyardPosition Position in the graveyard root before the element which\n   * should be used as a parent of the nodes after `position`. If it is not set, a copy of the the `position` parent will be used.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function SplitOperation(splitPosition, howMany, graveyardPosition, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, SplitOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SplitOperation).call(this, baseVersion));\n    /**\n     * Position at which an element should be split.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/splitoperation~SplitOperation#splitPosition\n     */\n\n    _this.splitPosition = splitPosition.clone(); // Keep position sticking to the next node. This way any new content added at the place where the element is split\n    // will be left in the original element.\n\n    _this.splitPosition.stickiness = 'toNext';\n    /**\n     * Total offset size of elements that are in the split element after `position`.\n     *\n     * @member {Number} module:engine/model/operation/splitoperation~SplitOperation#howMany\n     */\n\n    _this.howMany = howMany;\n    /**\n     * Position at which the clone of split element (or element from graveyard) will be inserted.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/splitoperation~SplitOperation#insertionPosition\n     */\n\n    _this.insertionPosition = SplitOperation.getInsertionPosition(splitPosition);\n    _this.insertionPosition.stickiness = 'toNone';\n    /**\n     * Position in the graveyard root before the element which should be used as a parent of the nodes after `position`.\n     * If it is not set, a copy of the the `position` parent will be used.\n     *\n     * The default behavior is to clone the split element. Element from graveyard is used during undo.\n     *\n     * @member {module:engine/model/position~Position|null} #graveyardPosition\n     */\n\n    _this.graveyardPosition = graveyardPosition ? graveyardPosition.clone() : null;\n\n    if (_this.graveyardPosition) {\n      _this.graveyardPosition.stickiness = 'toNext';\n    }\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(SplitOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/splitoperation~SplitOperation} Clone of this operation.\n     */\n    value: function clone() {\n      var split = new this.constructor(this.splitPosition, this.howMany, this.graveyardPosition, this.baseVersion);\n      split.insertionPosition = this.insertionPosition;\n      return split;\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/mergeoperation~MergeOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      var graveyard = this.splitPosition.root.document.graveyard;\n      var graveyardPosition = new Position(graveyard, [0]);\n      return new MergeOperation(this.moveTargetPosition, this.howMany, this.splitPosition, graveyardPosition, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      var element = this.splitPosition.parent;\n      var offset = this.splitPosition.offset; // Validate whether split operation has correct parameters.\n\n      if (!element || element.maxOffset < offset) {\n        /**\n         * Split position is invalid.\n         *\n         * @error split-operation-position-invalid\n         */\n        throw new CKEditorError('split-operation-position-invalid: Split position is invalid.');\n      } else if (!element.parent) {\n        /**\n         * Cannot split root element.\n         *\n         * @error split-operation-split-in-root\n         */\n        throw new CKEditorError('split-operation-split-in-root: Cannot split root element.');\n      } else if (this.howMany != element.maxOffset - this.splitPosition.offset) {\n        /**\n         * Split operation specifies wrong number of nodes to move.\n         *\n         * @error split-operation-how-many-invalid\n         */\n        throw new CKEditorError('split-operation-how-many-invalid: Split operation specifies wrong number of nodes to move.');\n      } else if (this.graveyardPosition && !this.graveyardPosition.nodeAfter) {\n        /**\n         * Graveyard position invalid.\n         *\n         * @error split-operation-graveyard-position-invalid\n         */\n        throw new CKEditorError('split-operation-graveyard-position-invalid: Graveyard position invalid.');\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      var splitElement = this.splitPosition.parent;\n\n      if (this.graveyardPosition) {\n        _move(Range._createFromPositionAndShift(this.graveyardPosition, 1), this.insertionPosition);\n      } else {\n        var newElement = splitElement._clone();\n\n        _insert(this.insertionPosition, newElement);\n      }\n\n      var sourceRange = new Range(Position._createAt(splitElement, this.splitPosition.offset), Position._createAt(splitElement, splitElement.maxOffset));\n\n      _move(sourceRange, this.moveTargetPosition);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(SplitOperation.prototype), \"toJSON\", this).call(this);\n\n      json.splitPosition = this.splitPosition.toJSON();\n      json.insertionPosition = this.insertionPosition.toJSON();\n\n      if (this.graveyardPosition) {\n        json.graveyardPosition = this.graveyardPosition.toJSON();\n      }\n\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'split';\n    }\n    /**\n     * Position inside the new clone of a split element.\n     *\n     * This is a position where nodes that are after the split position will be moved to.\n     *\n     * @readonly\n     * @type {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"moveTargetPosition\",\n    get: function get() {\n      var path = this.insertionPosition.path.slice();\n      path.push(0);\n      return new Position(this.insertionPosition.root, path);\n    }\n    /**\n     * Artificial range that contains all the nodes from the split element that will be moved to the new element.\n     * The range starts at {@link ~#splitPosition} and ends in the same parent, at `POSITIVE_INFINITY` offset.\n     *\n     * @readonly\n     * @type {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"movedRange\",\n    get: function get() {\n      var end = this.splitPosition.getShiftedBy(Number.POSITIVE_INFINITY);\n      return new Range(this.splitPosition, end);\n    }\n  }], [{\n    key: \"getInsertionPosition\",\n\n    /**\n     * Helper function that returns a default insertion position basing on given `splitPosition`. The default insertion\n     * position is after the split element.\n     *\n     * @param {module:engine/model/position~Position} splitPosition\n     * @returns {module:engine/model/position~Position}\n     */\n    value: function getInsertionPosition(splitPosition) {\n      var path = splitPosition.path.slice(0, -1);\n      path[path.length - 1]++;\n      return new Position(splitPosition.root, path);\n    }\n    /**\n     * Creates `SplitOperation` object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/splitoperation~SplitOperation}\n     */\n\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json, document) {\n      var splitPosition = Position.fromJSON(json.splitPosition, document);\n      var insertionPosition = Position.fromJSON(json.insertionPosition, document);\n      var graveyardPosition = json.graveyardPosition ? Position.fromJSON(json.graveyardPosition, document) : null;\n      var split = new this(splitPosition, json.howMany, graveyardPosition, json.baseVersion);\n      split.insertionPosition = insertionPosition;\n      return split;\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'SplitOperation';\n    }\n  }]);\n\n  return SplitOperation;\n}(Operation);\n\nexport { SplitOperation as default };","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import React from 'react';\nexport var ReactReduxContext = React.createContext(null);\nexport default ReactReduxContext;","// Default to a dummy \"batch\" implementation that just runs the callback\nfunction defaultNoopBatch(callback) {\n  callback();\n}\n\nvar batch = defaultNoopBatch; // Allow injecting another batching function later\n\nexport var setBatch = function setBatch(newBatch) {\n  return batch = newBatch;\n}; // Supply a getter just to skip dealing with ESM bindings\n\nexport var getBatch = function getBatch() {\n  return batch;\n};","import { getBatch } from './batch'; // encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\nvar CLEARED = null;\nvar nullListeners = {\n  notify: function notify() {}\n};\n\nfunction createListenerCollection() {\n  var batch = getBatch(); // the current/next pattern is copied from redux's createStore code.\n  // TODO: refactor+expose that code to be reusable here?\n\n  var current = [];\n  var next = [];\n  return {\n    clear: function clear() {\n      next = CLEARED;\n      current = CLEARED;\n    },\n    notify: function notify() {\n      var listeners = current = next;\n      batch(function () {\n        for (var i = 0; i < listeners.length; i++) {\n          listeners[i]();\n        }\n      });\n    },\n    get: function get() {\n      return next;\n    },\n    subscribe: function subscribe(listener) {\n      var isSubscribed = true;\n      if (next === current) next = current.slice();\n      next.push(listener);\n      return function unsubscribe() {\n        if (!isSubscribed || current === CLEARED) return;\n        isSubscribed = false;\n        if (next === current) next = current.slice();\n        next.splice(next.indexOf(listener), 1);\n      };\n    }\n  };\n}\n\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription(store, parentSub) {\n    this.store = store;\n    this.parentSub = parentSub;\n    this.unsubscribe = null;\n    this.listeners = nullListeners;\n    this.handleChangeWrapper = this.handleChangeWrapper.bind(this);\n  }\n\n  var _proto = Subscription.prototype;\n\n  _proto.addNestedSub = function addNestedSub(listener) {\n    this.trySubscribe();\n    return this.listeners.subscribe(listener);\n  };\n\n  _proto.notifyNestedSubs = function notifyNestedSubs() {\n    this.listeners.notify();\n  };\n\n  _proto.handleChangeWrapper = function handleChangeWrapper() {\n    if (this.onStateChange) {\n      this.onStateChange();\n    }\n  };\n\n  _proto.isSubscribed = function isSubscribed() {\n    return Boolean(this.unsubscribe);\n  };\n\n  _proto.trySubscribe = function trySubscribe() {\n    if (!this.unsubscribe) {\n      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.handleChangeWrapper) : this.store.subscribe(this.handleChangeWrapper);\n      this.listeners = createListenerCollection();\n    }\n  };\n\n  _proto.tryUnsubscribe = function tryUnsubscribe() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n      this.unsubscribe = null;\n      this.listeners.clear();\n      this.listeners = nullListeners;\n    }\n  };\n\n  return Subscription;\n}();\n\nexport { Subscription as default };","import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactReduxContext } from './Context';\nimport Subscription from '../utils/Subscription';\n\nvar Provider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Provider, _Component);\n\n  function Provider(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    var store = props.store;\n    _this.notifySubscribers = _this.notifySubscribers.bind(_assertThisInitialized(_this));\n    var subscription = new Subscription(store);\n    subscription.onStateChange = _this.notifySubscribers;\n    _this.state = {\n      store: store,\n      subscription: subscription\n    };\n    _this.previousState = store.getState();\n    return _this;\n  }\n\n  var _proto = Provider.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._isMounted = true;\n    this.state.subscription.trySubscribe();\n\n    if (this.previousState !== this.props.store.getState()) {\n      this.state.subscription.notifyNestedSubs();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.unsubscribe) this.unsubscribe();\n    this.state.subscription.tryUnsubscribe();\n    this._isMounted = false;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.store !== prevProps.store) {\n      this.state.subscription.tryUnsubscribe();\n      var subscription = new Subscription(this.props.store);\n      subscription.onStateChange = this.notifySubscribers;\n      this.setState({\n        store: this.props.store,\n        subscription: subscription\n      });\n    }\n  };\n\n  _proto.notifySubscribers = function notifySubscribers() {\n    this.state.subscription.notifyNestedSubs();\n  };\n\n  _proto.render = function render() {\n    var Context = this.props.context || ReactReduxContext;\n    return React.createElement(Context.Provider, {\n      value: this.state\n    }, this.props.children);\n  };\n\n  return Provider;\n}(Component);\n\nProvider.propTypes = {\n  store: PropTypes.shape({\n    subscribe: PropTypes.func.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    getState: PropTypes.func.isRequired\n  }),\n  context: PropTypes.object,\n  children: PropTypes.any\n};\nexport default Provider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport hoistStatics from 'hoist-non-react-statics';\nimport invariant from 'invariant';\nimport React, { useContext, useMemo, useEffect, useLayoutEffect, useRef, useReducer } from 'react';\nimport { isValidElementType, isContextConsumer } from 'react-is';\nimport Subscription from '../utils/Subscription';\nimport { ReactReduxContext } from './Context'; // Define some constant arrays just to avoid re-creating these\n\nvar EMPTY_ARRAY = [];\nvar NO_SUBSCRIPTION_ARRAY = [null, null];\n\nvar stringifyComponent = function stringifyComponent(Comp) {\n  try {\n    return JSON.stringify(Comp);\n  } catch (err) {\n    return String(Comp);\n  }\n};\n\nfunction storeStateUpdatesReducer(state, action) {\n  var updateCount = state[1];\n  return [action.payload, updateCount + 1];\n}\n\nvar initStateUpdates = function initStateUpdates() {\n  return [null, 0];\n}; // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser. We need useLayoutEffect because we want\n// `connect` to perform sync updates to a ref to save the latest props after\n// a render is actually committed to the DOM.\n\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\nexport default function connectAdvanced(\n/*\r\n  selectorFactory is a func that is responsible for returning the selector function used to\r\n  compute new props from state, props, and dispatch. For example:\r\n      export default connectAdvanced((dispatch, options) => (state, props) => ({\r\n      thing: state.things[props.thingId],\r\n      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),\r\n    }))(YourComponent)\r\n    Access to dispatch is provided to the factory so selectorFactories can bind actionCreators\r\n  outside of their selector as an optimization. Options passed to connectAdvanced are passed to\r\n  the selectorFactory, along with displayName and WrappedComponent, as the second argument.\r\n    Note that selectorFactory is responsible for all caching/memoization of inbound and outbound\r\n  props. Do not use connectAdvanced directly without memoizing results between calls to your\r\n  selector, otherwise the Connect component will re-render on every state or props change.\r\n*/\nselectorFactory, // options object:\n_ref) {\n  if (_ref === void 0) {\n    _ref = {};\n  }\n\n  var _ref2 = _ref,\n      _ref2$getDisplayName = _ref2.getDisplayName,\n      getDisplayName = _ref2$getDisplayName === void 0 ? function (name) {\n    return \"ConnectAdvanced(\" + name + \")\";\n  } : _ref2$getDisplayName,\n      _ref2$methodName = _ref2.methodName,\n      methodName = _ref2$methodName === void 0 ? 'connectAdvanced' : _ref2$methodName,\n      _ref2$renderCountProp = _ref2.renderCountProp,\n      renderCountProp = _ref2$renderCountProp === void 0 ? undefined : _ref2$renderCountProp,\n      _ref2$shouldHandleSta = _ref2.shouldHandleStateChanges,\n      shouldHandleStateChanges = _ref2$shouldHandleSta === void 0 ? true : _ref2$shouldHandleSta,\n      _ref2$storeKey = _ref2.storeKey,\n      storeKey = _ref2$storeKey === void 0 ? 'store' : _ref2$storeKey,\n      _ref2$withRef = _ref2.withRef,\n      withRef = _ref2$withRef === void 0 ? false : _ref2$withRef,\n      _ref2$forwardRef = _ref2.forwardRef,\n      forwardRef = _ref2$forwardRef === void 0 ? false : _ref2$forwardRef,\n      _ref2$context = _ref2.context,\n      context = _ref2$context === void 0 ? ReactReduxContext : _ref2$context,\n      connectOptions = _objectWithoutPropertiesLoose(_ref2, [\"getDisplayName\", \"methodName\", \"renderCountProp\", \"shouldHandleStateChanges\", \"storeKey\", \"withRef\", \"forwardRef\", \"context\"]);\n\n  invariant(renderCountProp === undefined, \"renderCountProp is removed. render counting is built into the latest React Dev Tools profiling extension\");\n  invariant(!withRef, 'withRef is removed. To access the wrapped instance, use a ref on the connected component');\n  var customStoreWarningMessage = 'To use a custom Redux store for specific components, create a custom React context with ' + \"React.createContext(), and pass the context object to React Redux's Provider and specific components\" + ' like: <Provider context={MyContext}><ConnectedComponent context={MyContext} /></Provider>. ' + 'You may also pass a {context : MyContext} option to connect';\n  invariant(storeKey === 'store', 'storeKey has been removed and does not do anything. ' + customStoreWarningMessage);\n  var Context = context;\n  return function wrapWithConnect(WrappedComponent) {\n    if (process.env.NODE_ENV !== 'production') {\n      invariant(isValidElementType(WrappedComponent), \"You must pass a component to the function returned by \" + (methodName + \". Instead received \" + stringifyComponent(WrappedComponent)));\n    }\n\n    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    var displayName = getDisplayName(wrappedComponentName);\n\n    var selectorFactoryOptions = _extends({}, connectOptions, {\n      getDisplayName: getDisplayName,\n      methodName: methodName,\n      renderCountProp: renderCountProp,\n      shouldHandleStateChanges: shouldHandleStateChanges,\n      storeKey: storeKey,\n      displayName: displayName,\n      wrappedComponentName: wrappedComponentName,\n      WrappedComponent: WrappedComponent\n    });\n\n    var pure = connectOptions.pure;\n\n    function createChildSelector(store) {\n      return selectorFactory(store.dispatch, selectorFactoryOptions);\n    } // If we aren't running in \"pure\" mode, we don't want to memoize values.\n    // To avoid conditionally calling hooks, we fall back to a tiny wrapper\n    // that just executes the given callback immediately.\n\n\n    var usePureOnlyMemo = pure ? useMemo : function (callback) {\n      return callback();\n    };\n\n    function ConnectFunction(props) {\n      var _useMemo = useMemo(function () {\n        // Distinguish between actual \"data\" props that were passed to the wrapper component,\n        // and values needed to control behavior (forwarded refs, alternate context instances).\n        // To maintain the wrapperProps object reference, memoize this destructuring.\n        var context = props.context,\n            forwardedRef = props.forwardedRef,\n            wrapperProps = _objectWithoutPropertiesLoose(props, [\"context\", \"forwardedRef\"]);\n\n        return [context, forwardedRef, wrapperProps];\n      }, [props]),\n          propsContext = _useMemo[0],\n          forwardedRef = _useMemo[1],\n          wrapperProps = _useMemo[2];\n\n      var ContextToUse = useMemo(function () {\n        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.\n        // Memoize the check that determines which context instance we should use.\n        return propsContext && propsContext.Consumer && isContextConsumer(React.createElement(propsContext.Consumer, null)) ? propsContext : Context;\n      }, [propsContext, Context]); // Retrieve the store and ancestor subscription via context, if available\n\n      var contextValue = useContext(ContextToUse); // The store _must_ exist as either a prop or in context\n\n      var didStoreComeFromProps = Boolean(props.store);\n      var didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);\n      invariant(didStoreComeFromProps || didStoreComeFromContext, \"Could not find \\\"store\\\" in the context of \" + (\"\\\"\" + displayName + \"\\\". Either wrap the root component in a <Provider>, \") + \"or pass a custom React context provider to <Provider> and the corresponding \" + (\"React context consumer to \" + displayName + \" in connect options.\"));\n      var store = props.store || contextValue.store;\n      var childPropsSelector = useMemo(function () {\n        // The child props selector needs the store reference as an input.\n        // Re-create this selector whenever the store changes.\n        return createChildSelector(store);\n      }, [store]);\n\n      var _useMemo2 = useMemo(function () {\n        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY; // This Subscription's source should match where store came from: props vs. context. A component\n        // connected to the store via props shouldn't use subscription from context, or vice versa.\n\n        var subscription = new Subscription(store, didStoreComeFromProps ? null : contextValue.subscription); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in\n        // the middle of the notification loop, where `subscription` will then be null. This can\n        // probably be avoided if Subscription's listeners logic is changed to not call listeners\n        // that have been unsubscribed in the  middle of the notification loop.\n\n        var notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);\n        return [subscription, notifyNestedSubs];\n      }, [store, didStoreComeFromProps, contextValue]),\n          subscription = _useMemo2[0],\n          notifyNestedSubs = _useMemo2[1]; // Determine what {store, subscription} value should be put into nested context, if necessary,\n      // and memoize that value to avoid unnecessary context updates.\n\n\n      var overriddenContextValue = useMemo(function () {\n        if (didStoreComeFromProps) {\n          // This component is directly subscribed to a store from props.\n          // We don't want descendants reading from this store - pass down whatever\n          // the existing context value is from the nearest connected ancestor.\n          return contextValue;\n        } // Otherwise, put this component's subscription instance into context, so that\n        // connected descendants won't update until after this component is done\n\n\n        return _extends({}, contextValue, {\n          subscription: subscription\n        });\n      }, [didStoreComeFromProps, contextValue, subscription]); // We need to force this wrapper component to re-render whenever a Redux store update\n      // causes a change to the calculated child component props (or we caught an error in mapState)\n\n      var _useReducer = useReducer(storeStateUpdatesReducer, EMPTY_ARRAY, initStateUpdates),\n          _useReducer$ = _useReducer[0],\n          previousStateUpdateResult = _useReducer$[0],\n          forceComponentUpdateDispatch = _useReducer[1]; // Propagate any mapState/mapDispatch errors upwards\n\n\n      if (previousStateUpdateResult && previousStateUpdateResult.error) {\n        throw previousStateUpdateResult.error;\n      } // Set up refs to coordinate values between the subscription effect and the render logic\n\n\n      var lastChildProps = useRef();\n      var lastWrapperProps = useRef(wrapperProps);\n      var childPropsFromStoreUpdate = useRef();\n      var renderIsScheduled = useRef(false);\n      var actualChildProps = usePureOnlyMemo(function () {\n        // Tricky logic here:\n        // - This render may have been triggered by a Redux store update that produced new child props\n        // - However, we may have gotten new wrapper props after that\n        // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.\n        // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.\n        // So, we'll use the child props from store update only if the wrapper props are the same as last time.\n        if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {\n          return childPropsFromStoreUpdate.current;\n        } // TODO We're reading the store directly in render() here. Bad idea?\n        // This will likely cause Bad Things (TM) to happen in Concurrent Mode.\n        // Note that we do this because on renders _not_ caused by store updates, we need the latest store state\n        // to determine what the child props should be.\n\n\n        return childPropsSelector(store.getState(), wrapperProps);\n      }, [store, previousStateUpdateResult, wrapperProps]); // We need this to execute synchronously every time we re-render. However, React warns\n      // about useLayoutEffect in SSR, so we try to detect environment and fall back to\n      // just useEffect instead to avoid the warning, since neither will run anyway.\n\n      useIsomorphicLayoutEffect(function () {\n        // We want to capture the wrapper props and child props we used for later comparisons\n        lastWrapperProps.current = wrapperProps;\n        lastChildProps.current = actualChildProps;\n        renderIsScheduled.current = false; // If the render was from a store update, clear out that reference and cascade the subscriber update\n\n        if (childPropsFromStoreUpdate.current) {\n          childPropsFromStoreUpdate.current = null;\n          notifyNestedSubs();\n        }\n      }); // Our re-subscribe logic only runs when the store/subscription setup changes\n\n      useIsomorphicLayoutEffect(function () {\n        // If we're not subscribed to the store, nothing to do here\n        if (!shouldHandleStateChanges) return; // Capture values for checking if and when this component unmounts\n\n        var didUnsubscribe = false;\n        var lastThrownError = null; // We'll run this callback every time a store subscription update propagates to this component\n\n        var checkForUpdates = function checkForUpdates() {\n          if (didUnsubscribe) {\n            // Don't run stale listeners.\n            // Redux doesn't guarantee unsubscriptions happen until next dispatch.\n            return;\n          }\n\n          var latestStoreState = store.getState();\n          var newChildProps, error;\n\n          try {\n            // Actually run the selector with the most recent store state and wrapper props\n            // to determine what the child props should be\n            newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);\n          } catch (e) {\n            error = e;\n            lastThrownError = e;\n          }\n\n          if (!error) {\n            lastThrownError = null;\n          } // If the child props haven't changed, nothing to do here - cascade the subscription update\n\n\n          if (newChildProps === lastChildProps.current) {\n            if (!renderIsScheduled.current) {\n              notifyNestedSubs();\n            }\n          } else {\n            // Save references to the new child props.  Note that we track the \"child props from store update\"\n            // as a ref instead of a useState/useReducer because we need a way to determine if that value has\n            // been processed.  If this went into useState/useReducer, we couldn't clear out the value without\n            // forcing another re-render, which we don't want.\n            lastChildProps.current = newChildProps;\n            childPropsFromStoreUpdate.current = newChildProps;\n            renderIsScheduled.current = true; // If the child props _did_ change (or we caught an error), this wrapper component needs to re-render\n\n            forceComponentUpdateDispatch({\n              type: 'STORE_UPDATED',\n              payload: {\n                latestStoreState: latestStoreState,\n                error: error\n              }\n            });\n          }\n        }; // Actually subscribe to the nearest connected ancestor (or store)\n\n\n        subscription.onStateChange = checkForUpdates;\n        subscription.trySubscribe(); // Pull data from the store after first render in case the store has\n        // changed since we began.\n\n        checkForUpdates();\n\n        var unsubscribeWrapper = function unsubscribeWrapper() {\n          didUnsubscribe = true;\n          subscription.tryUnsubscribe();\n\n          if (lastThrownError) {\n            // It's possible that we caught an error due to a bad mapState function, but the\n            // parent re-rendered without this component and we're about to unmount.\n            // This shouldn't happen as long as we do top-down subscriptions correctly, but\n            // if we ever do those wrong, this throw will surface the error in our tests.\n            // In that case, throw the error from here so it doesn't get lost.\n            throw lastThrownError;\n          }\n        };\n\n        return unsubscribeWrapper;\n      }, [store, subscription, childPropsSelector]); // Now that all that's done, we can finally try to actually render the child component.\n      // We memoize the elements for the rendered child component as an optimization.\n\n      var renderedWrappedComponent = useMemo(function () {\n        return React.createElement(WrappedComponent, _extends({}, actualChildProps, {\n          ref: forwardedRef\n        }));\n      }, [forwardedRef, WrappedComponent, actualChildProps]); // If React sees the exact same element reference as last time, it bails out of re-rendering\n      // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.\n\n      var renderedChild = useMemo(function () {\n        if (shouldHandleStateChanges) {\n          // If this component is subscribed to store updates, we need to pass its own\n          // subscription instance down to our descendants. That means rendering the same\n          // Context instance, and putting a different value into the context.\n          return React.createElement(ContextToUse.Provider, {\n            value: overriddenContextValue\n          }, renderedWrappedComponent);\n        }\n\n        return renderedWrappedComponent;\n      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);\n      return renderedChild;\n    } // If we're in \"pure\" mode, ensure our wrapper component only re-renders when incoming props have changed.\n\n\n    var Connect = pure ? React.memo(ConnectFunction) : ConnectFunction;\n    Connect.WrappedComponent = WrappedComponent;\n    Connect.displayName = displayName;\n\n    if (forwardRef) {\n      var forwarded = React.forwardRef(function forwardConnectRef(props, ref) {\n        return React.createElement(Connect, _extends({}, props, {\n          forwardedRef: ref\n        }));\n      });\n      forwarded.displayName = displayName;\n      forwarded.WrappedComponent = WrappedComponent;\n      return hoistStatics(forwarded, WrappedComponent);\n    }\n\n    return hoistStatics(Connect, WrappedComponent);\n  };\n}","var hasOwn = Object.prototype.hasOwnProperty;\n\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nexport default function shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true;\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return false;\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}","import verifyPlainObject from '../utils/verifyPlainObject';\nexport function wrapMapToPropsConstant(getConstant) {\n  return function initConstantSelector(dispatch, options) {\n    var constant = getConstant(dispatch, options);\n\n    function constantSelector() {\n      return constant;\n    }\n\n    constantSelector.dependsOnOwnProps = false;\n    return constantSelector;\n  };\n} // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args\n// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine\n// whether mapToProps needs to be invoked when props have changed.\n//\n// A length of one signals that mapToProps does not depend on props from the parent component.\n// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and\n// therefore not reporting its length accurately..\n\nexport function getDependsOnOwnProps(mapToProps) {\n  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;\n} // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,\n// this function wraps mapToProps in a proxy function which does several things:\n//\n//  * Detects whether the mapToProps function being called depends on props, which\n//    is used by selectorFactory to decide if it should reinvoke on props changes.\n//\n//  * On first call, handles mapToProps if returns another function, and treats that\n//    new function as the true mapToProps for subsequent calls.\n//\n//  * On first call, verifies the first result is a plain object, in order to warn\n//    the developer that their mapToProps function is not returning a valid result.\n//\n\nexport function wrapMapToPropsFunc(mapToProps, methodName) {\n  return function initProxySelector(dispatch, _ref) {\n    var displayName = _ref.displayName;\n\n    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {\n      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);\n    }; // allow detectFactoryAndVerify to get ownProps\n\n\n    proxy.dependsOnOwnProps = true;\n\n    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {\n      proxy.mapToProps = mapToProps;\n      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);\n      var props = proxy(stateOrDispatch, ownProps);\n\n      if (typeof props === 'function') {\n        proxy.mapToProps = props;\n        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);\n        props = proxy(stateOrDispatch, ownProps);\n      }\n\n      if (process.env.NODE_ENV !== 'production') verifyPlainObject(props, displayName, methodName);\n      return props;\n    };\n\n    return proxy;\n  };\n}","import { bindActionCreators } from 'redux';\nimport { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps';\nexport function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {\n  return typeof mapDispatchToProps === 'function' ? wrapMapToPropsFunc(mapDispatchToProps, 'mapDispatchToProps') : undefined;\n}\nexport function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {\n  return !mapDispatchToProps ? wrapMapToPropsConstant(function (dispatch) {\n    return {\n      dispatch: dispatch\n    };\n  }) : undefined;\n}\nexport function whenMapDispatchToPropsIsObject(mapDispatchToProps) {\n  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? wrapMapToPropsConstant(function (dispatch) {\n    return bindActionCreators(mapDispatchToProps, dispatch);\n  }) : undefined;\n}\nexport default [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];","import { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps';\nexport function whenMapStateToPropsIsFunction(mapStateToProps) {\n  return typeof mapStateToProps === 'function' ? wrapMapToPropsFunc(mapStateToProps, 'mapStateToProps') : undefined;\n}\nexport function whenMapStateToPropsIsMissing(mapStateToProps) {\n  return !mapStateToProps ? wrapMapToPropsConstant(function () {\n    return {};\n  }) : undefined;\n}\nexport default [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport verifyPlainObject from '../utils/verifyPlainObject';\nexport function defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  return _extends({}, ownProps, stateProps, dispatchProps);\n}\nexport function wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(dispatch, _ref) {\n    var displayName = _ref.displayName,\n        pure = _ref.pure,\n        areMergedPropsEqual = _ref.areMergedPropsEqual;\n    var hasRunOnce = false;\n    var mergedProps;\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n      if (hasRunOnce) {\n        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n      } else {\n        hasRunOnce = true;\n        mergedProps = nextMergedProps;\n        if (process.env.NODE_ENV !== 'production') verifyPlainObject(mergedProps, displayName, 'mergeProps');\n      }\n\n      return mergedProps;\n    };\n  };\n}\nexport function whenMergePropsIsFunction(mergeProps) {\n  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;\n}\nexport function whenMergePropsIsOmitted(mergeProps) {\n  return !mergeProps ? function () {\n    return defaultMergeProps;\n  } : undefined;\n}\nexport default [whenMergePropsIsFunction, whenMergePropsIsOmitted];","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport verifySubselectors from './verifySubselectors';\nexport function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {\n  return function impureFinalPropsSelector(state, ownProps) {\n    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);\n  };\n}\nexport function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {\n  var areStatesEqual = _ref.areStatesEqual,\n      areOwnPropsEqual = _ref.areOwnPropsEqual,\n      areStatePropsEqual = _ref.areStatePropsEqual;\n  var hasRunAtLeastOnce = false;\n  var state;\n  var ownProps;\n  var stateProps;\n  var dispatchProps;\n  var mergedProps;\n\n  function handleFirstCall(firstState, firstOwnProps) {\n    state = firstState;\n    ownProps = firstOwnProps;\n    stateProps = mapStateToProps(state, ownProps);\n    dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    hasRunAtLeastOnce = true;\n    return mergedProps;\n  }\n\n  function handleNewPropsAndNewState() {\n    stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewProps() {\n    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewState() {\n    var nextStateProps = mapStateToProps(state, ownProps);\n    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);\n    stateProps = nextStateProps;\n    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleSubsequentCalls(nextState, nextOwnProps) {\n    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);\n    var stateChanged = !areStatesEqual(nextState, state);\n    state = nextState;\n    ownProps = nextOwnProps;\n    if (propsChanged && stateChanged) return handleNewPropsAndNewState();\n    if (propsChanged) return handleNewProps();\n    if (stateChanged) return handleNewState();\n    return mergedProps;\n  }\n\n  return function pureFinalPropsSelector(nextState, nextOwnProps) {\n    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);\n  };\n} // TODO: Add more comments\n// If pure is true, the selector returned by selectorFactory will memoize its results,\n// allowing connectAdvanced's shouldComponentUpdate to return false if final\n// props have not changed. If false, the selector will always return a new\n// object and shouldComponentUpdate will always return true.\n\nexport default function finalPropsSelectorFactory(dispatch, _ref2) {\n  var initMapStateToProps = _ref2.initMapStateToProps,\n      initMapDispatchToProps = _ref2.initMapDispatchToProps,\n      initMergeProps = _ref2.initMergeProps,\n      options = _objectWithoutPropertiesLoose(_ref2, [\"initMapStateToProps\", \"initMapDispatchToProps\", \"initMergeProps\"]);\n\n  var mapStateToProps = initMapStateToProps(dispatch, options);\n  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);\n  var mergeProps = initMergeProps(dispatch, options);\n\n  if (process.env.NODE_ENV !== 'production') {\n    verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);\n  }\n\n  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;\n  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport connectAdvanced from '../components/connectAdvanced';\nimport shallowEqual from '../utils/shallowEqual';\nimport defaultMapDispatchToPropsFactories from './mapDispatchToProps';\nimport defaultMapStateToPropsFactories from './mapStateToProps';\nimport defaultMergePropsFactories from './mergeProps';\nimport defaultSelectorFactory from './selectorFactory';\n/*\r\n  connect is a facade over connectAdvanced. It turns its args into a compatible\r\n  selectorFactory, which has the signature:\r\n\r\n    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps\r\n  \r\n  connect passes its args to connectAdvanced as options, which will in turn pass them to\r\n  selectorFactory each time a Connect component instance is instantiated or hot reloaded.\r\n\r\n  selectorFactory returns a final props selector from its mapStateToProps,\r\n  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,\r\n  mergePropsFactories, and pure args.\r\n\r\n  The resulting final props selector is called by the Connect component instance whenever\r\n  it receives new props or store state.\r\n */\n\nfunction match(arg, factories, name) {\n  for (var i = factories.length - 1; i >= 0; i--) {\n    var result = factories[i](arg);\n    if (result) return result;\n  }\n\n  return function (dispatch, options) {\n    throw new Error(\"Invalid value of type \" + typeof arg + \" for \" + name + \" argument when connecting component \" + options.wrappedComponentName + \".\");\n  };\n}\n\nfunction strictEqual(a, b) {\n  return a === b;\n} // createConnect with default args builds the 'official' connect behavior. Calling it with\n// different options opens up some testing and extensibility scenarios\n\n\nexport function createConnect(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$connectHOC = _ref.connectHOC,\n      connectHOC = _ref$connectHOC === void 0 ? connectAdvanced : _ref$connectHOC,\n      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,\n      mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? defaultMapStateToPropsFactories : _ref$mapStateToPropsF,\n      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,\n      mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? defaultMapDispatchToPropsFactories : _ref$mapDispatchToPro,\n      _ref$mergePropsFactor = _ref.mergePropsFactories,\n      mergePropsFactories = _ref$mergePropsFactor === void 0 ? defaultMergePropsFactories : _ref$mergePropsFactor,\n      _ref$selectorFactory = _ref.selectorFactory,\n      selectorFactory = _ref$selectorFactory === void 0 ? defaultSelectorFactory : _ref$selectorFactory;\n\n  return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {\n    if (_ref2 === void 0) {\n      _ref2 = {};\n    }\n\n    var _ref3 = _ref2,\n        _ref3$pure = _ref3.pure,\n        pure = _ref3$pure === void 0 ? true : _ref3$pure,\n        _ref3$areStatesEqual = _ref3.areStatesEqual,\n        areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual,\n        _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual,\n        areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? shallowEqual : _ref3$areOwnPropsEqua,\n        _ref3$areStatePropsEq = _ref3.areStatePropsEqual,\n        areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? shallowEqual : _ref3$areStatePropsEq,\n        _ref3$areMergedPropsE = _ref3.areMergedPropsEqual,\n        areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? shallowEqual : _ref3$areMergedPropsE,\n        extraOptions = _objectWithoutPropertiesLoose(_ref3, [\"pure\", \"areStatesEqual\", \"areOwnPropsEqual\", \"areStatePropsEqual\", \"areMergedPropsEqual\"]);\n\n    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');\n    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');\n    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');\n    return connectHOC(selectorFactory, _extends({\n      // used in error messages\n      methodName: 'connect',\n      // used to compute Connect's displayName from the wrapped component's displayName.\n      getDisplayName: function getDisplayName(name) {\n        return \"Connect(\" + name + \")\";\n      },\n      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes\n      shouldHandleStateChanges: Boolean(mapStateToProps),\n      // passed through to selectorFactory\n      initMapStateToProps: initMapStateToProps,\n      initMapDispatchToProps: initMapDispatchToProps,\n      initMergeProps: initMergeProps,\n      pure: pure,\n      areStatesEqual: areStatesEqual,\n      areOwnPropsEqual: areOwnPropsEqual,\n      areStatePropsEqual: areStatePropsEqual,\n      areMergedPropsEqual: areMergedPropsEqual\n    }, extraOptions));\n  };\n}\nexport default createConnect();","import Provider from './components/Provider';\nimport connectAdvanced from './components/connectAdvanced';\nimport { ReactReduxContext } from './components/Context';\nimport connect from './connect/connect';\nimport { setBatch } from './utils/batch';\nimport { unstable_batchedUpdates as batch } from './utils/reactBatchedUpdates';\nsetBatch(batch);\nexport { Provider, connectAdvanced, ReactReduxContext, connect, batch };","import freeGlobal from './_freeGlobal.js';\n/** Detect free variable `self`. */\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nexport default root;","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/comparearrays\n */\n\n/**\n * Compares how given arrays relate to each other. One array can be: same as another array, prefix of another array\n * or completely different. If arrays are different, first index at which they differ is returned. Otherwise,\n * a flag specifying the relation is returned. Flags are negative numbers, so whenever a number >= 0 is returned\n * it means that arrays differ.\n *\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2 ] );\t\t// 'same'\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2, 1 ] );\t\t// 'prefix'\n *\t\tcompareArrays( [ 0, 2 ], [ 0 ] );\t\t\t// 'extension'\n *\t\tcompareArrays( [ 0, 2 ], [ 1, 2 ] );\t\t// 0\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 1 ] );\t\t// 1\n *\n * @param {Array} a Array that is compared.\n * @param {Array} b Array to compare with.\n * @returns {module:utils/comparearrays~ArrayRelation} How array `a` is related to `b`.\n */\nexport default function compareArrays(a, b) {\n  var minLen = Math.min(a.length, b.length);\n\n  for (var i = 0; i < minLen; i++) {\n    if (a[i] != b[i]) {\n      // The arrays are different.\n      return i;\n    }\n  } // Both arrays were same at all points.\n\n\n  if (a.length == b.length) {\n    // If their length is also same, they are the same.\n    return 'same';\n  } else if (a.length < b.length) {\n    // Compared array is shorter so it is a prefix of the other array.\n    return 'prefix';\n  } else {\n    // Compared array is longer so it is an extension of the other array.\n    return 'extension';\n  }\n}\n/**\n * @typedef {'extension'|'same'|'prefix'} module:utils/comparearrays~ArrayRelation\n */","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/istext\n */\n\n/**\n * Checks if the object is a native DOM Text node.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isText(obj) {\n  return Object.prototype.toString.call(obj) == '[object Text]';\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/mergeoperation\n */\nimport Operation from './operation';\nimport SplitOperation from './splitoperation';\nimport Position from '../position';\nimport Range from '../range';\nimport { _move } from './utils';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Operation to merge two {@link module:engine/model/element~Element elements}.\n *\n * The merged element is the parent of {@link ~MergeOperation#sourcePosition} and it is merged into the parent of\n * {@link ~MergeOperation#targetPosition}. All nodes from the merged element are moved to {@link ~MergeOperation#targetPosition}.\n *\n * The merged element is moved to the graveyard at {@link ~MergeOperation#graveyardPosition}.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar MergeOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(MergeOperation, _Operation);\n\n  /**\n   * Creates a merge operation.\n   *\n   * @param {module:engine/model/position~Position} sourcePosition Position inside the merged element. All nodes from that\n   * element after that position will be moved to {@link ~#targetPosition}.\n   * @param {Number} howMany Summary offset size of nodes which will be moved from the merged element to the new parent.\n   * @param {module:engine/model/position~Position} targetPosition Position which the nodes from the merged elements will be moved to.\n   * @param {module:engine/model/position~Position} graveyardPosition Position in graveyard to which the merged element will be moved.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function MergeOperation(sourcePosition, howMany, targetPosition, graveyardPosition, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, MergeOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MergeOperation).call(this, baseVersion));\n    /**\n     * Position inside the merged element. All nodes from that element after that position will be moved to {@link ~#targetPosition}.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#sourcePosition\n     */\n\n    _this.sourcePosition = sourcePosition.clone(); // This is, and should always remain, the first position in its parent.\n\n    _this.sourcePosition.stickiness = 'toPrevious';\n    /**\n     * Summary offset size of nodes which will be moved from the merged element to the new parent.\n     *\n     * @member {Number} module:engine/model/operation/mergeoperation~MergeOperation#howMany\n     */\n\n    _this.howMany = howMany;\n    /**\n     * Position which the nodes from the merged elements will be moved to.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#targetPosition\n     */\n\n    _this.targetPosition = targetPosition.clone(); // Except of a rare scenario in `MergeOperation` x `MergeOperation` transformation,\n    // this is, and should always remain, the last position in its parent.\n\n    _this.targetPosition.stickiness = 'toNext';\n    /**\n     * Position in graveyard to which the merged element will be moved.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#graveyardPosition\n     */\n\n    _this.graveyardPosition = graveyardPosition.clone();\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(MergeOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/mergeoperation~MergeOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new this.constructor(this.sourcePosition, this.howMany, this.targetPosition, this.graveyardPosition, this.baseVersion);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/splitoperation~SplitOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      // Positions in this method are transformed by this merge operation because the split operation bases on\n      // the context after this merge operation happened (because split operation reverses it).\n      // So we need to acknowledge that the merge operation happened and those positions changed a little.\n      var targetPosition = this.targetPosition._getTransformedByMergeOperation(this);\n\n      var path = this.sourcePosition.path.slice(0, -1);\n\n      var insertionPosition = new Position(this.sourcePosition.root, path)._getTransformedByMergeOperation(this);\n\n      var split = new SplitOperation(targetPosition, this.howMany, this.graveyardPosition, this.baseVersion + 1);\n      split.insertionPosition = insertionPosition;\n      return split;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      var sourceElement = this.sourcePosition.parent;\n      var targetElement = this.targetPosition.parent; // Validate whether merge operation has correct parameters.\n\n      if (!sourceElement || !sourceElement.is('element') || !sourceElement.parent) {\n        /**\n         * Merge source position is invalid.\n         *\n         * @error merge-operation-source-position-invalid\n         */\n        throw new CKEditorError('merge-operation-source-position-invalid: Merge source position is invalid.');\n      } else if (!targetElement || !targetElement.is('element') || !targetElement.parent) {\n        /**\n         * Merge target position is invalid.\n         *\n         * @error merge-operation-target-position-invalid\n         */\n        throw new CKEditorError('merge-operation-target-position-invalid: Merge target position is invalid.');\n      } else if (this.howMany != sourceElement.maxOffset) {\n        /**\n         * Merge operation specifies wrong number of nodes to move.\n         *\n         * @error merge-operation-how-many-invalid\n         */\n        throw new CKEditorError('merge-operation-how-many-invalid: Merge operation specifies wrong number of nodes to move.');\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      var mergedElement = this.sourcePosition.parent;\n\n      var sourceRange = Range._createIn(mergedElement);\n\n      _move(sourceRange, this.targetPosition);\n\n      _move(Range._createOn(mergedElement), this.graveyardPosition);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(MergeOperation.prototype), \"toJSON\", this).call(this);\n\n      json.sourcePosition = json.sourcePosition.toJSON();\n      json.targetPosition = json.targetPosition.toJSON();\n      json.graveyardPosition = json.graveyardPosition.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'merge';\n    }\n    /**\n     * Position before the merged element (which will be deleted).\n     *\n     * @readonly\n     * @type {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"deletionPosition\",\n    get: function get() {\n      return new Position(this.sourcePosition.root, this.sourcePosition.path.slice(0, -1));\n    }\n    /**\n     * Artificial range that contains all the nodes from the merged element that will be moved to {@link ~MergeOperation#sourcePosition}.\n     * The range starts at {@link ~MergeOperation#sourcePosition} and ends in the same parent, at `POSITIVE_INFINITY` offset.\n     *\n     * @readonly\n     * @type {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"movedRange\",\n    get: function get() {\n      var end = this.sourcePosition.getShiftedBy(Number.POSITIVE_INFINITY);\n      return new Range(this.sourcePosition, end);\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates `MergeOperation` object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/mergeoperation~MergeOperation}\n     */\n    value: function fromJSON(json, document) {\n      var sourcePosition = Position.fromJSON(json.sourcePosition, document);\n      var targetPosition = Position.fromJSON(json.targetPosition, document);\n      var graveyardPosition = Position.fromJSON(json.graveyardPosition, document);\n      return new this(sourcePosition, json.howMany, targetPosition, graveyardPosition, json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'MergeOperation';\n    }\n  }]);\n\n  return MergeOperation;\n}(Operation);\n\nexport { MergeOperation as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/operation\n */\n\n/**\n * Abstract base operation class.\n *\n * @abstract\n */\nvar Operation =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Base operation constructor.\n   *\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function Operation(baseVersion) {\n    _classCallCheck(this, Operation);\n\n    /**\n     * {@link module:engine/model/document~Document#version} on which operation can be applied. If you try to\n     * {@link module:engine/model/model~Model#applyOperation apply} operation with different base version than the\n     * {@link module:engine/model/document~Document#version document version} the\n     * {@link module:utils/ckeditorerror~CKEditorError model-document-applyOperation-wrong-version} error is thrown.\n     *\n     * @member {Number}\n     */\n    this.baseVersion = baseVersion;\n    /**\n     * Defines whether operation is executed on attached or detached {@link module:engine/model/item~Item items}.\n     *\n     * @readonly\n     * @member {Boolean} #isDocumentOperation\n     */\n\n    this.isDocumentOperation = this.baseVersion !== null;\n    /**\n     * {@link module:engine/model/batch~Batch Batch} to which the operation is added or `null` if the operation is not\n     * added to any batch yet.\n     *\n     * @member {module:engine/model/batch~Batch|null} #batch\n     */\n\n    this.batch = null;\n    /**\n     * Operation type.\n     *\n     * @readonly\n     * @member {String} #type\n     */\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @method #clone\n     * @returns {module:engine/model/operation/operation~Operation} Clone of this operation.\n     */\n\n    /**\n     * Creates and returns a reverse operation. Reverse operation when executed right after\n     * the original operation will bring back tree model state to the point before the original\n     * operation execution. In other words, it reverses changes done by the original operation.\n     *\n     * Keep in mind that tree model state may change since executing the original operation,\n     * so reverse operation will be \"outdated\". In that case you will need to transform it by\n     * all operations that were executed after the original operation.\n     *\n     * @method #getReversed\n     * @returns {module:engine/model/operation/operation~Operation} Reversed operation.\n     */\n\n    /**\n     * Executes the operation - modifications described by the operation properties will be applied to the model tree.\n     *\n     * @protected\n     * @method #_execute\n     */\n  }\n  /**\n   * Checks whether the operation's parameters are correct and the operation can be correctly executed. Throws\n   * an error if operation is not valid.\n   *\n   * @protected\n   * @method #_validate\n   */\n\n\n  _createClass(Operation, [{\n    key: \"_validate\",\n    value: function _validate() {}\n    /**\n     * Custom toJSON method to solve child-parent circular dependencies.\n     *\n     * @method #toJSON\n     * @returns {Object} Clone of this object with the operation property replaced with string.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      // This method creates only a shallow copy, all nested objects should be defined separately.\n      // See https://github.com/ckeditor/ckeditor5-engine/issues/1477.\n      var json = Object.assign({}, this);\n      json.__className = this.constructor.className; // Remove reference to the parent `Batch` to avoid circular dependencies.\n\n      delete json.batch; // Only document operations are shared with other clients so it is not necessary to keep this information.\n\n      delete json.isDocumentOperation;\n      return json;\n    }\n    /**\n     * Name of the operation class used for serialization.\n     *\n     * @type {String}\n     */\n\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates Operation object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} doc Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/operation~Operation}\n     */\n    value: function fromJSON(json) {\n      return new this(json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'Operation';\n    }\n  }]);\n\n  return Operation;\n}();\n\nexport { Operation as default };","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/isiterable\n */\n\n/**\n * Checks if value implements iterator interface.\n *\n * @param {*} value The value to check.\n * @returns {Boolean} True if value implements iterator interface.\n */\nexport default function isIterable(value) {\n  return !!(value && value[Symbol.iterator]);\n}","import baseIsEqual from './_baseIsEqual.js';\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nexport default isEqual;","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/attributeoperation\n */\nimport Operation from './operation';\nimport Range from '../range';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport { _setAttribute } from './utils';\nimport { isEqual } from 'lodash-es';\n/**\n * Operation to change nodes' attribute.\n *\n * Using this class you can add, remove or change value of the attribute.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar AttributeOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(AttributeOperation, _Operation);\n\n  /**\n   * Creates an operation that changes, removes or adds attributes.\n   *\n   * If only `newValue` is set, attribute will be added on a node. Note that all nodes in operation's range must not\n   * have an attribute with the same key as the added attribute.\n   *\n   * If only `oldValue` is set, then attribute with given key will be removed. Note that all nodes in operation's range\n   * must have an attribute with that key added.\n   *\n   * If both `newValue` and `oldValue` are set, then the operation will change the attribute value. Note that all nodes in\n   * operation's ranges must already have an attribute with given key and `oldValue` as value\n   *\n   * @param {module:engine/model/range~Range} range Range on which the operation should be applied. Must be a flat range.\n   * @param {String} key Key of an attribute to change or remove.\n   * @param {*} oldValue Old value of the attribute with given key or `null`, if attribute was not set before.\n   * @param {*} newValue New value of the attribute with given key or `null`, if operation should remove attribute.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function AttributeOperation(range, key, oldValue, newValue, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, AttributeOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AttributeOperation).call(this, baseVersion));\n    /**\n     * Range on which operation should be applied.\n     *\n     * @readonly\n     * @member {module:engine/model/range~Range}\n     */\n\n    _this.range = range.clone();\n    /**\n     * Key of an attribute to change or remove.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.key = key;\n    /**\n     * Old value of the attribute with given key or `null`, if attribute was not set before.\n     *\n     * @readonly\n     * @member {*}\n     */\n\n    _this.oldValue = oldValue === undefined ? null : oldValue;\n    /**\n     * New value of the attribute with given key or `null`, if operation should remove attribute.\n     *\n     * @readonly\n     * @member {*}\n     */\n\n    _this.newValue = newValue === undefined ? null : newValue;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(AttributeOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/attributeoperation~AttributeOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new AttributeOperation(this.range, this.key, this.oldValue, this.newValue, this.baseVersion);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      return new AttributeOperation(this.range, this.key, this.newValue, this.oldValue, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(AttributeOperation.prototype), \"toJSON\", this).call(this);\n\n      json.range = this.range.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      if (!this.range.isFlat) {\n        /**\n         * The range to change is not flat.\n         *\n         * @error attribute-operation-range-not-flat\n         */\n        throw new CKEditorError('attribute-operation-range-not-flat: The range to change is not flat.');\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.range.getItems({\n          shallow: true\n        })[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          if (this.oldValue !== null && !isEqual(item.getAttribute(this.key), this.oldValue)) {\n            /**\n             * Changed node has different attribute value than operation's old attribute value.\n             *\n             * @error attribute-operation-wrong-old-value\n             * @param {module:engine/model/item~Item} item\n             * @param {String} key\n             * @param {*} value\n             */\n            throw new CKEditorError('attribute-operation-wrong-old-value: Changed node has different attribute value than operation\\'s ' + 'old attribute value.', {\n              item: item,\n              key: this.key,\n              value: this.oldValue\n            });\n          }\n\n          if (this.oldValue === null && this.newValue !== null && item.hasAttribute(this.key)) {\n            /**\n             * The attribute with given key already exists for the given node.\n             *\n             * @error attribute-operation-attribute-exists\n             * @param {module:engine/model/node~Node} node\n             * @param {String} key\n             */\n            throw new CKEditorError('attribute-operation-attribute-exists: The attribute with given key already exists.', {\n              node: item,\n              key: this.key\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      // If value to set is same as old value, don't do anything.\n      if (!isEqual(this.oldValue, this.newValue)) {\n        // Execution.\n        _setAttribute(this.range, this.key, this.newValue);\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      if (this.oldValue === null) {\n        return 'addAttribute';\n      } else if (this.newValue === null) {\n        return 'removeAttribute';\n      } else {\n        return 'changeAttribute';\n      }\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates `AttributeOperation` object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n     */\n    value: function fromJSON(json, document) {\n      return new AttributeOperation(Range.fromJSON(json.range, document), json.key, json.oldValue, json.newValue, json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'AttributeOperation';\n    }\n  }]);\n\n  return AttributeOperation;\n}(Operation);\n\nexport { AttributeOperation as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/command\n */\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * The base class for CKEditor commands.\n *\n * Commands are the main way to manipulate editor contents and state. They are mostly used by UI elements (or by other\n * commands) to make changes in the model. Commands are available in every part of code that has access to\n * the {@link module:core/editor/editor~Editor editor} instance.\n *\n * Instances of registered commands can be retrieved from {@link module:core/editor/editor~Editor#commands `editor.commands`}.\n * The easiest way to execute a command is through {@link module:core/editor/editor~Editor#execute `editor.execute()`}.\n *\n * By default commands are disabled when the editor is in {@link module:core/editor/editor~Editor#isReadOnly read-only} mode.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Command =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new `Command` instance.\n   *\n   * @param {module:core/editor/editor~Editor} editor Editor on which this command will be used.\n   */\n  function Command(editor) {\n    var _this = this;\n\n    _classCallCheck(this, Command);\n\n    /**\n     * The editor on which this command will be used.\n     *\n     * @readonly\n     * @member {module:core/editor/editor~Editor}\n     */\n    this.editor = editor;\n    /**\n     * The value of the command. A concrete command class should define what it represents for it.\n     *\n     * For example, the `'bold'` command's value indicates whether the selection starts in a bolded text.\n     * And the value of the `'link'` command may be an object with links details.\n     *\n     * It is possible for a command to have no value (e.g. for stateless actions such as `'imageUpload'`).\n     *\n     * A concrete command class should control this value by overriding the {@link #refresh `refresh()`} method.\n     *\n     * @observable\n     * @readonly\n     * @member #value\n     */\n\n    this.set('value', undefined);\n    /**\n     * Flag indicating whether a command is enabled or disabled.\n     * A disabled command will do nothing when executed.\n     *\n     * A concrete command class should control this value by overriding the {@link #refresh `refresh()`} method.\n     *\n     * It is possible to disable a command from \"outside\". For instance, in your integration you may want to disable\n     * a certain set of commands for the time being. To do that, you can use the fact that `isEnabled` is observable\n     * and it fires the `set:isEnabled` event every time anyone tries to modify its value:\n     *\n     *\t\tfunction disableCommand( cmd ) {\n     *\t\t\tcmd.on( 'set:isEnabled', forceDisable, { priority: 'highest' } );\n     *\n     *\t\t\tcmd.isEnabled = false;\n     *\n     *\t\t\t// Make it possible to enable the command again.\n     *\t\t\treturn () => {\n     *\t\t\t\tcmd.off( 'set:isEnabled', forceDisable );\n     *\t\t\t\tcmd.refresh();\n     *\t\t\t};\n     *\n     *\t\t\tfunction forceDisable( evt ) {\n     *\t\t\t\tevt.return = false;\n     *\t\t\t\tevt.stop();\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\t// Usage:\n     *\n     *\t\t// Disabling the command.\n     *\t\tconst enableBold = disableCommand( editor.commands.get( 'bold' ) );\n     *\n     *\t\t// Enabling the command again.\n     *\t\tenableBold();\n     *\n     * @observable\n     * @readonly\n     * @member {Boolean} #isEnabled\n     */\n\n    this.set('isEnabled', false);\n    /**\n     * Holds identifiers for {@link #forceDisabled} mechanism.\n     *\n     * @type {Set.<String>}\n     * @private\n     */\n\n    this._disableStack = new Set();\n    this.decorate('execute'); // By default every command is refreshed when changes are applied to the model.\n\n    this.listenTo(this.editor.model.document, 'change', function () {\n      _this.refresh();\n    });\n    this.on('execute', function (evt) {\n      if (!_this.isEnabled) {\n        evt.stop();\n      }\n    }, {\n      priority: 'high'\n    }); // By default commands are disabled when the editor is in read-only mode.\n\n    this.listenTo(editor, 'change:isReadOnly', function (evt, name, value) {\n      if (value) {\n        _this.forceDisabled('readOnlyMode');\n      } else {\n        _this.clearForceDisabled('readOnlyMode');\n      }\n    });\n  }\n  /**\n   * Refreshes the command. The command should update its {@link #isEnabled} and {@link #value} properties\n   * in this method.\n   *\n   * This method is automatically called when\n   * {@link module:engine/model/document~Document#event:change any changes are applied to the document}.\n   */\n\n\n  _createClass(Command, [{\n    key: \"refresh\",\n    value: function refresh() {\n      this.isEnabled = true;\n    }\n    /**\n     * Disables the command.\n     *\n     * Command may be disabled by multiple features or algorithms (at once). When disabling a command, unique id should be passed\n     * (e.g. feature name). The same identifier should be used when {@link #clearForceDisabled enabling back} the command.\n     * The command becomes enabled only after all features {@link #clearForceDisabled enabled it back}.\n     *\n     * Disabling and enabling a command:\n     *\n     *\t\tcommand.isEnabled; // -> true\n     *\t\tcommand.forceDisabled( 'MyFeature' );\n     *\t\tcommand.isEnabled; // -> false\n     *\t\tcommand.clearForceDisabled( 'MyFeature' );\n     *\t\tcommand.isEnabled; // -> true\n     *\n     * Command disabled by multiple features:\n     *\n     *\t\tcommand.forceDisabled( 'MyFeature' );\n     *\t\tcommand.forceDisabled( 'OtherFeature' );\n     *\t\tcommand.clearForceDisabled( 'MyFeature' );\n     *\t\tcommand.isEnabled; // -> false\n     *\t\tcommand.clearForceDisabled( 'OtherFeature' );\n     *\t\tcommand.isEnabled; // -> true\n     *\n     * Multiple disabling with the same identifier is redundant:\n     *\n     *\t\tcommand.forceDisabled( 'MyFeature' );\n     *\t\tcommand.forceDisabled( 'MyFeature' );\n     *\t\tcommand.clearForceDisabled( 'MyFeature' );\n     *\t\tcommand.isEnabled; // -> true\n     *\n     * **Note:** some commands or algorithms may have more complex logic when it comes to enabling or disabling certain commands,\n     * so the command might be still disabled after {@link #clearForceDisabled} was used.\n     *\n     * @param {String} id Unique identifier for disabling. Use the same id when {@link #clearForceDisabled enabling back} the command.\n     */\n\n  }, {\n    key: \"forceDisabled\",\n    value: function forceDisabled(id) {\n      this._disableStack.add(id);\n\n      if (this._disableStack.size == 1) {\n        this.on('set:isEnabled', forceDisable, {\n          priority: 'highest'\n        });\n        this.isEnabled = false;\n      }\n    }\n    /**\n     * Clears forced disable previously set through {@link #clearForceDisabled}. See {@link #clearForceDisabled}.\n     *\n     * @param {String} id Unique identifier, equal to the one passed in {@link #forceDisabled} call.\n     */\n\n  }, {\n    key: \"clearForceDisabled\",\n    value: function clearForceDisabled(id) {\n      this._disableStack.delete(id);\n\n      if (this._disableStack.size == 0) {\n        this.off('set:isEnabled', forceDisable);\n        this.refresh();\n      }\n    }\n    /**\n     * Executes the command.\n     *\n     * A command may accept parameters. They will be passed from {@link module:core/editor/editor~Editor#execute `editor.execute()`}\n     * to the command.\n     *\n     * The `execute()` method will automatically abort when the command is disabled ({@link #isEnabled} is `false`).\n     * This behavior is implemented by a high priority listener to the {@link #event:execute} event.\n     *\n     * In order to see how to disable a command from \"outside\" see the {@link #isEnabled} documentation.\n     *\n     * @fires execute\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {}\n    /**\n     * Destroys the command.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopListening();\n    }\n    /**\n     * Event fired by the {@link #execute} method. The command action is a listener to this event so it's\n     * possible to change/cancel the behavior of the command by listening to this event.\n     *\n     * See {@link module:utils/observablemixin~ObservableMixin#decorate} for more information and samples.\n     *\n     * **Note:** This event is fired even if command is disabled. However, it is automatically blocked\n     * by a high priority listener in order to prevent command execution.\n     *\n     * @event execute\n     */\n\n  }]);\n\n  return Command;\n}();\n\nexport { Command as default };\nmix(Command, ObservableMixin); // Helper function that forces command to be disabled.\n\nfunction forceDisable(evt) {\n  evt.return = false;\n  evt.stop();\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/textproxy\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * `TextProxy` represents a part of {@link module:engine/model/text~Text text node}.\n *\n * Since {@link module:engine/model/position~Position positions} can be placed between characters of a text node,\n * {@link module:engine/model/range~Range ranges} may contain only parts of text nodes. When {@link module:engine/model/range~Range#getItems\n * getting items}\n * contained in such range, we need to represent a part of that text node, since returning the whole text node would be incorrect.\n * `TextProxy` solves this issue.\n *\n * `TextProxy` has an API similar to {@link module:engine/model/text~Text Text} and allows to do most of the common tasks performed\n * on model nodes.\n *\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\n * See {@link module:engine/model/textproxy~TextProxy#isPartial}.\n *\n * **Note:** `TextProxy` is not an instance of {@link module:engine/model/node~Node node}. Keep this in mind when using it as a\n * parameter of methods.\n *\n * **Note:** `TextProxy` is a readonly interface. If you want to perform changes on model data represented by a `TextProxy`\n * use {@link module:engine/model/writer~Writer model writer API}.\n *\n * **Note:** `TextProxy` instances are created on the fly, basing on the current state of model. Because of this, it is\n * highly unrecommended to store references to `TextProxy` instances. `TextProxy` instances are not refreshed when\n * model changes, so they might get invalidated. Instead, consider creating {@link module:engine/model/liveposition~LivePosition live\n * position}.\n *\n * `TextProxy` instances are created by {@link module:engine/model/treewalker~TreeWalker model tree walker}. You should not need to create\n * an instance of this class by your own.\n */\n\nvar TextProxy =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a text proxy.\n   *\n   * @protected\n   * @param {module:engine/model/text~Text} textNode Text node which part is represented by this text proxy.\n   * @param {Number} offsetInText Offset in {@link module:engine/model/textproxy~TextProxy#textNode text node} from which the text proxy\n   * starts.\n   * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\n   * @constructor\n   */\n  function TextProxy(textNode, offsetInText, length) {\n    _classCallCheck(this, TextProxy);\n\n    /**\n     * Text node which part is represented by this text proxy.\n     *\n     * @readonly\n     * @member {module:engine/model/text~Text}\n     */\n    this.textNode = textNode;\n\n    if (offsetInText < 0 || offsetInText > textNode.offsetSize) {\n      /**\n       * Given `offsetInText` value is incorrect.\n       *\n       * @error model-textproxy-wrong-offsetintext\n       */\n      throw new CKEditorError('model-textproxy-wrong-offsetintext: Given offsetInText value is incorrect.');\n    }\n\n    if (length < 0 || offsetInText + length > textNode.offsetSize) {\n      /**\n       * Given `length` value is incorrect.\n       *\n       * @error model-textproxy-wrong-length\n       */\n      throw new CKEditorError('model-textproxy-wrong-length: Given length value is incorrect.');\n    }\n    /**\n     * Text data represented by this text proxy.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n\n    this.data = textNode.data.substring(offsetInText, offsetInText + length);\n    /**\n     * Offset in {@link module:engine/model/textproxy~TextProxy#textNode text node} from which the text proxy starts.\n     *\n     * @readonly\n     * @member {Number}\n     */\n\n    this.offsetInText = offsetInText;\n  }\n  /**\n   * Offset at which this text proxy starts in it's parent.\n   *\n   * @see module:engine/model/node~Node#startOffset\n   * @readonly\n   * @type {Number}\n   */\n\n\n  _createClass(TextProxy, [{\n    key: \"is\",\n\n    /**\n     * Checks whether given model tree object is of given type.\n     *\n     * Read more in {@link module:engine/model/node~Node#is}.\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n    value: function is(type) {\n      return type == 'textProxy';\n    }\n    /**\n     * Gets path to this text proxy.\n     *\n     * @see module:engine/model/node~Node#getPath\n     * @returns {Array.<Number>}\n     */\n\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      var path = this.textNode.getPath();\n\n      if (path.length > 0) {\n        path[path.length - 1] += this.offsetInText;\n      }\n\n      return path;\n    }\n    /**\n     * Returns ancestors array of this text proxy.\n     *\n     * @param {Object} options Options object.\n     * @param {Boolean} [options.includeSelf=false] When set to `true` this text proxy will be also included in parent's array.\n     * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to root element,\n     * otherwise root element will be the first item in the array.\n     * @returns {Array} Array with ancestors.\n     */\n\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeSelf: false,\n        parentFirst: false\n      };\n      var ancestors = [];\n      var parent = options.includeSelf ? this : this.parent;\n\n      while (parent) {\n        ancestors[options.parentFirst ? 'push' : 'unshift'](parent);\n        parent = parent.parent;\n      }\n\n      return ancestors;\n    }\n    /**\n     * Checks if this text proxy has an attribute for given key.\n     *\n     * @param {String} key Key of attribute to check.\n     * @returns {Boolean} `true` if attribute with given key is set on text proxy, `false` otherwise.\n     */\n\n  }, {\n    key: \"hasAttribute\",\n    value: function hasAttribute(key) {\n      return this.textNode.hasAttribute(key);\n    }\n    /**\n     * Gets an attribute value for given key or `undefined` if that attribute is not set on text proxy.\n     *\n     * @param {String} key Key of attribute to look for.\n     * @returns {*} Attribute value or `undefined`.\n     */\n\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(key) {\n      return this.textNode.getAttribute(key);\n    }\n    /**\n     * Returns iterator that iterates over this node's attributes. Attributes are returned as arrays containing two\n     * items. First one is attribute key and second is attribute value.\n     *\n     * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"getAttributes\",\n    value: function getAttributes() {\n      return this.textNode.getAttributes();\n    }\n    /**\n     * Returns iterator that iterates over this node's attribute keys.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getAttributeKeys\",\n    value: function getAttributeKeys() {\n      return this.textNode.getAttributeKeys();\n    }\n  }, {\n    key: \"startOffset\",\n    get: function get() {\n      return this.textNode.startOffset !== null ? this.textNode.startOffset + this.offsetInText : null;\n    }\n    /**\n     * Offset size of this text proxy. Equal to the number of characters represented by the text proxy.\n     *\n     * @see module:engine/model/node~Node#offsetSize\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"offsetSize\",\n    get: function get() {\n      return this.data.length;\n    }\n    /**\n     * Offset at which this text proxy ends in it's parent.\n     *\n     * @see module:engine/model/node~Node#endOffset\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"endOffset\",\n    get: function get() {\n      return this.startOffset !== null ? this.startOffset + this.offsetSize : null;\n    }\n    /**\n     * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/model/text~Text text node}\n     * (`true`) or the whole text node (`false`).\n     *\n     * This is `false` when text proxy starts at the very beginning of {@link module:engine/model/textproxy~TextProxy#textNode textNode}\n     * ({@link module:engine/model/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\n     * text node size.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isPartial\",\n    get: function get() {\n      return this.offsetSize !== this.textNode.offsetSize;\n    }\n    /**\n     * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\n     *\n     * @readonly\n     * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return this.textNode.parent;\n    }\n    /**\n     * Root of this text proxy, which is same as root of text node represented by this text proxy.\n     *\n     * @readonly\n     * @type {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this.textNode.root;\n    }\n    /**\n     * {@link module:engine/model/document~Document Document} that owns text node represented by this text proxy or `null` if the text node\n     * has no parent or is inside a {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n     *\n     * @readonly\n     * @type {module:engine/model/document~Document|null}\n     */\n\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.textNode.document;\n    }\n  }]);\n\n  return TextProxy;\n}();\n\nexport { TextProxy as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/utils\n */\nimport Node from '../node';\nimport Text from '../text';\nimport TextProxy from '../textproxy';\nimport Range from '../range';\nimport DocumentFragment from '../documentfragment';\nimport NodeList from '../nodelist';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Contains functions used for composing model tree by {@link module:engine/model/operation/operation~Operation operations}.\n * Those functions are built on top of {@link module:engine/model/node~Node node}, and it's child classes', APIs.\n *\n * @protected\n * @namespace utils\n */\n\n/**\n * Inserts given nodes at given position.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils.insert\n * @param {module:engine/model/position~Position} position Position at which nodes should be inserted.\n * @param {module:engine/model/node~NodeSet} nodes Nodes to insert.\n * @returns {module:engine/model/range~Range} Range spanning over inserted elements.\n */\n\nexport function _insert(position, nodes) {\n  nodes = _normalizeNodes(nodes); // We have to count offset before inserting nodes because they can get merged and we would get wrong offsets.\n\n  var offset = nodes.reduce(function (sum, node) {\n    return sum + node.offsetSize;\n  }, 0);\n  var parent = position.parent; // Insertion might be in a text node, we should split it if that's the case.\n\n  _splitNodeAtPosition(position);\n\n  var index = position.index; // Insert nodes at given index. After splitting we have a proper index and insertion is between nodes,\n  // using basic `Element` API.\n\n  parent._insertChild(index, nodes); // Merge text nodes, if possible. Merging is needed only at points where inserted nodes \"touch\" \"old\" nodes.\n\n\n  _mergeNodesAtIndex(parent, index + nodes.length);\n\n  _mergeNodesAtIndex(parent, index);\n\n  return new Range(position, position.getShiftedBy(offset));\n}\n/**\n * Removed nodes in given range. Only {@link module:engine/model/range~Range#isFlat flat} ranges are accepted.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils._remove\n * @param {module:engine/model/range~Range} range Range containing nodes to remove.\n * @returns {Array.<module:engine/model/node~Node>}\n */\n\nexport function _remove(range) {\n  if (!range.isFlat) {\n    /**\n     * Trying to remove a range which starts and ends in different element.\n     *\n     * @error operation-utils-remove-range-not-flat\n     */\n    throw new CKEditorError('operation-utils-remove-range-not-flat: ' + 'Trying to remove a range which starts and ends in different element.');\n  }\n\n  var parent = range.start.parent; // Range may be inside text nodes, we have to split them if that's the case.\n\n  _splitNodeAtPosition(range.start);\n\n  _splitNodeAtPosition(range.end); // Remove the text nodes using basic `Element` API.\n\n\n  var removed = parent._removeChildren(range.start.index, range.end.index - range.start.index); // Merge text nodes, if possible. After some nodes were removed, node before and after removed range will be\n  // touching at the position equal to the removed range beginning. We check merging possibility there.\n\n\n  _mergeNodesAtIndex(parent, range.start.index);\n\n  return removed;\n}\n/**\n * Moves nodes in given range to given target position. Only {@link module:engine/model/range~Range#isFlat flat} ranges are accepted.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils.move\n * @param {module:engine/model/range~Range} sourceRange Range containing nodes to move.\n * @param {module:engine/model/position~Position} targetPosition Position to which nodes should be moved.\n * @returns {module:engine/model/range~Range} Range containing moved nodes.\n */\n\nexport function _move(sourceRange, targetPosition) {\n  if (!sourceRange.isFlat) {\n    /**\n     * Trying to move a range which starts and ends in different element.\n     *\n     * @error operation-utils-move-range-not-flat\n     */\n    throw new CKEditorError('operation-utils-move-range-not-flat: ' + 'Trying to move a range which starts and ends in different element.');\n  }\n\n  var nodes = _remove(sourceRange); // We have to fix `targetPosition` because model changed after nodes from `sourceRange` got removed and\n  // that change might have an impact on `targetPosition`.\n\n\n  targetPosition = targetPosition._getTransformedByDeletion(sourceRange.start, sourceRange.end.offset - sourceRange.start.offset);\n  return _insert(targetPosition, nodes);\n}\n/**\n * Sets given attribute on nodes in given range. The attributes are only set on top-level nodes of the range, not on its children.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils._setAttribute\n * @param {module:engine/model/range~Range} range Range containing nodes that should have the attribute set. Must be a flat range.\n * @param {String} key Key of attribute to set.\n * @param {*} value Attribute value.\n */\n\nexport function _setAttribute(range, key, value) {\n  // Range might start or end in text nodes, so we have to split them.\n  _splitNodeAtPosition(range.start);\n\n  _splitNodeAtPosition(range.end); // Iterate over all items in the range.\n\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = range.getItems({\n      shallow: true\n    })[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var item = _step.value;\n      // Iterator will return `TextProxy` instances but we know that those text proxies will\n      // always represent full text nodes (this is guaranteed thanks to splitting we did before).\n      // So, we can operate on those text proxies' text nodes.\n      var node = item.is('textProxy') ? item.textNode : item;\n\n      if (value !== null) {\n        node._setAttribute(key, value);\n      } else {\n        node._removeAttribute(key);\n      } // After attributes changing it may happen that some text nodes can be merged. Try to merge with previous node.\n\n\n      _mergeNodesAtIndex(node.parent, node.index);\n    } // Try to merge last changed node with it's previous sibling (not covered by the loop above).\n\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  _mergeNodesAtIndex(range.end.parent, range.end.index);\n}\n/**\n * Normalizes given object or an array of objects to an array of {@link module:engine/model/node~Node nodes}. See\n * {@link module:engine/model/node~NodeSet NodeSet} for details on how normalization is performed.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils.normalizeNodes\n * @param {module:engine/model/node~NodeSet} nodes Objects to normalize.\n * @returns {Array.<module:engine/model/node~Node>} Normalized nodes.\n */\n\nexport function _normalizeNodes(nodes) {\n  var normalized = [];\n\n  if (!(nodes instanceof Array)) {\n    nodes = [nodes];\n  } // Convert instances of classes other than Node.\n\n\n  for (var i = 0; i < nodes.length; i++) {\n    if (typeof nodes[i] == 'string') {\n      normalized.push(new Text(nodes[i]));\n    } else if (nodes[i] instanceof TextProxy) {\n      normalized.push(new Text(nodes[i].data, nodes[i].getAttributes()));\n    } else if (nodes[i] instanceof DocumentFragment || nodes[i] instanceof NodeList) {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = nodes[i][Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var child = _step2.value;\n          normalized.push(child);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    } else if (nodes[i] instanceof Node) {\n      normalized.push(nodes[i]);\n    } // Skip unrecognized type.\n\n  } // Merge text nodes.\n\n\n  for (var _i = 1; _i < normalized.length; _i++) {\n    var node = normalized[_i];\n    var prev = normalized[_i - 1];\n\n    if (node instanceof Text && prev instanceof Text && _haveSameAttributes(node, prev)) {\n      // Doing this instead changing `prev.data` because `data` is readonly.\n      normalized.splice(_i - 1, 2, new Text(prev.data + node.data, prev.getAttributes()));\n      _i--;\n    }\n  }\n\n  return normalized;\n} // Checks if nodes before and after given index in given element are {@link module:engine/model/text~Text text nodes} and\n// merges them into one node if they have same attributes.\n//\n// Merging is done by removing two text nodes and inserting a new text node containing data from both merged text nodes.\n//\n// @private\n// @param {module:engine/model/element~Element} element Parent element of nodes to merge.\n// @param {Number} index Index between nodes to merge.\n\nfunction _mergeNodesAtIndex(element, index) {\n  var nodeBefore = element.getChild(index - 1);\n  var nodeAfter = element.getChild(index); // Check if both of those nodes are text objects with same attributes.\n\n  if (nodeBefore && nodeAfter && nodeBefore.is('text') && nodeAfter.is('text') && _haveSameAttributes(nodeBefore, nodeAfter)) {\n    // Append text of text node after index to the before one.\n    var mergedNode = new Text(nodeBefore.data + nodeAfter.data, nodeBefore.getAttributes()); // Remove separate text nodes.\n\n    element._removeChildren(index - 1, 2); // Insert merged text node.\n\n\n    element._insertChild(index - 1, mergedNode);\n  }\n} // Checks if given position is in a text node, and if so, splits the text node in two text nodes, each of them\n// containing a part of original text node.\n//\n// @private\n// @param {module:engine/model/position~Position} position Position at which node should be split.\n\n\nfunction _splitNodeAtPosition(position) {\n  var textNode = position.textNode;\n  var element = position.parent;\n\n  if (textNode) {\n    var offsetDiff = position.offset - textNode.startOffset;\n    var index = textNode.index;\n\n    element._removeChildren(index, 1);\n\n    var firstPart = new Text(textNode.data.substr(0, offsetDiff), textNode.getAttributes());\n    var secondPart = new Text(textNode.data.substr(offsetDiff), textNode.getAttributes());\n\n    element._insertChild(index, [firstPart, secondPart]);\n  }\n} // Checks whether two given nodes have same attributes.\n//\n// @private\n// @param {module:engine/model/node~Node} nodeA Node to check.\n// @param {module:engine/model/node~Node} nodeB Node to check.\n// @returns {Boolean} `true` if nodes have same attributes, `false` otherwise.\n\n\nfunction _haveSameAttributes(nodeA, nodeB) {\n  var iteratorA = nodeA.getAttributes();\n  var iteratorB = nodeB.getAttributes();\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = iteratorA[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var attr = _step3.value;\n\n      if (attr[1] !== nodeB.getAttribute(attr[0])) {\n        return false;\n      }\n\n      iteratorB.next();\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return iteratorB.next().done;\n}\n/**\n * Value that can be normalized to an array of {@link module:engine/model/node~Node nodes}.\n *\n * Non-arrays are normalized as follows:\n * * {@link module:engine/model/node~Node Node} is left as is,\n * * {@link module:engine/model/textproxy~TextProxy TextProxy} and `String` are normalized to {@link module:engine/model/text~Text Text},\n * * {@link module:engine/model/nodelist~NodeList NodeList} is normalized to an array containing all nodes that are in that node list,\n * * {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment} is normalized to an array containing all of it's\n * * children.\n *\n * Arrays are processed item by item like non-array values and flattened to one array. Normalization always results in\n * a flat array of {@link module:engine/model/node~Node nodes}. Consecutive text nodes (or items normalized to text nodes) will be\n * merged if they have same attributes.\n *\n * @typedef {module:engine/model/node~Node|module:engine/model/textproxy~TextProxy|String|\n * module:engine/model/nodelist~NodeList|module:engine/model/documentfragment~DocumentFragment|Iterable}\n * module:engine/model/node~NodeSet\n */","import _construct from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/construct\";\nimport _slicedToArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/element\n */\nimport Node from './node';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport objectToMap from '@ckeditor/ckeditor5-utils/src/objecttomap';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport Matcher from './matcher';\nimport { isPlainObject } from 'lodash-es';\n/**\n * View element.\n *\n * The editing engine does not define a fixed semantics of its elements (it is \"DTD-free\").\n * This is why the type of the {@link module:engine/view/element~Element} need to\n * be defined by the feature developer. When creating an element you should use one of the following methods:\n *\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createContainerElement `downcastWriter#createContainerElement()`}\n * in order to create a {@link module:engine/view/containerelement~ContainerElement},\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createAttributeElement `downcastWriter#createAttributeElement()`}\n * in order to create a {@link module:engine/view/attributeelement~AttributeElement},\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createEmptyElement `downcastWriter#createEmptyElement()`}\n * in order to create a {@link module:engine/view/emptyelement~EmptyElement}.\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`}\n * in order to create a {@link module:engine/view/uielement~UIElement}.\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createEditableElement `downcastWriter#createEditableElement()`}\n * in order to create a {@link module:engine/view/editableelement~EditableElement}.\n *\n * Note that for view elements which are not created from the model, like elements from mutations, paste or\n * {@link module:engine/controller/datacontroller~DataController#set data.set} it is not possible to define the type of the element.\n * In such cases the {@link module:engine/view/upcastwriter~UpcastWriter#createElement `UpcastWriter#createElement()`} method\n * should be used to create generic view elements.\n *\n * @extends module:engine/view/node~Node\n */\n\nvar Element =\n/*#__PURE__*/\nfunction (_Node) {\n  _inherits(Element, _Node);\n\n  /**\n   * Creates a view element.\n   *\n   * Attributes can be passed in various formats:\n   *\n   *\t\tnew Element( 'div', { class: 'editor', contentEditable: 'true' } ); // object\n   *\t\tnew Element( 'div', [ [ 'class', 'editor' ], [ 'contentEditable', 'true' ] ] ); // map-like iterator\n   *\t\tnew Element( 'div', mapOfAttributes ); // map\n   *\n   * @protected\n   * @param {String} name Node name.\n   * @param {Object|Iterable} [attrs] Collection of attributes.\n   * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n   * A list of nodes to be inserted into created element.\n   */\n  function Element(name, attrs, children) {\n    var _this;\n\n    _classCallCheck(this, Element);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Element).call(this));\n    /**\n     * Name of the element.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.name = name;\n    /**\n     * Map of attributes, where attributes names are keys and attributes values are values.\n     *\n     * @protected\n     * @member {Map} #_attrs\n     */\n\n    _this._attrs = parseAttributes(attrs);\n    /**\n     * Array of child nodes.\n     *\n     * @protected\n     * @member {Array.<module:engine/view/node~Node>}\n     */\n\n    _this._children = [];\n\n    if (children) {\n      _this._insertChild(0, children);\n    }\n    /**\n     * Set of classes associated with element instance.\n     *\n     * @protected\n     * @member {Set}\n     */\n\n\n    _this._classes = new Set();\n\n    if (_this._attrs.has('class')) {\n      // Remove class attribute and handle it by class set.\n      var classString = _this._attrs.get('class');\n\n      parseClasses(_this._classes, classString);\n\n      _this._attrs.delete('class');\n    }\n    /**\n     * Map of styles.\n     *\n     * @protected\n     * @member {Map} module:engine/view/element~Element#_styles\n     */\n\n\n    _this._styles = new Map();\n\n    if (_this._attrs.has('style')) {\n      // Remove style attribute and handle it by styles map.\n      parseInlineStyles(_this._styles, _this._attrs.get('style'));\n\n      _this._attrs.delete('style');\n    }\n    /**\n     * Map of custom properties.\n     * Custom properties can be added to element instance, will be cloned but not rendered into DOM.\n     *\n     * @protected\n     * @member {Map}\n     */\n\n\n    _this._customProperties = new Map();\n    return _this;\n  }\n  /**\n   * Number of element's children.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\n  _createClass(Element, [{\n    key: \"is\",\n\n    /**\n     * Checks whether this view object is of the given type.\n     *\n     *\t\tobj.is( 'element' ); // true\n     *\t\tobj.is( 'li' ); // true\n     *\t\tobj.is( 'element', 'li' ); // true\n     *\t\tobj.is( 'text' ); // false\n     *\t\tobj.is( 'element', 'img' ); // false\n     *\n     * Read more in {@link module:engine/view/node~Node#is `Node#is()`}.\n     *\n     * @param {String} type\n     * @param {String} [name] Element name.\n     * @returns {Boolean}\n     */\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'element' || type == this.name || _get(_getPrototypeOf(Element.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'element' && name == this.name;\n      }\n    }\n    /**\n     * Gets child at the given index.\n     *\n     * @param {Number} index Index of child.\n     * @returns {module:engine/view/node~Node} Child node.\n     */\n\n  }, {\n    key: \"getChild\",\n    value: function getChild(index) {\n      return this._children[index];\n    }\n    /**\n     * Gets index of the given child node. Returns `-1` if child node is not found.\n     *\n     * @param {module:engine/view/node~Node} node Child node.\n     * @returns {Number} Index of the child node.\n     */\n\n  }, {\n    key: \"getChildIndex\",\n    value: function getChildIndex(node) {\n      return this._children.indexOf(node);\n    }\n    /**\n     * Gets child nodes iterator.\n     *\n     * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\n     */\n\n  }, {\n    key: \"getChildren\",\n    value: function getChildren() {\n      return this._children[Symbol.iterator]();\n    }\n    /**\n     * Returns an iterator that contains the keys for attributes. Order of inserting attributes is not preserved.\n     *\n     * @returns {Iterable.<String>} Keys for attributes.\n     */\n\n  }, {\n    key: \"getAttributeKeys\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getAttributeKeys() {\n      return _regeneratorRuntime.wrap(function getAttributeKeys$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(this._classes.size > 0)) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return 'class';\n\n            case 3:\n              if (!(this._styles.size > 0)) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 6;\n              return 'style';\n\n            case 6:\n              return _context.delegateYield(this._attrs.keys(), \"t0\", 7);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getAttributeKeys, this);\n    })\n    /**\n     * Returns iterator that iterates over this element's attributes.\n     *\n     * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n     * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"getAttributes\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getAttributes() {\n      return _regeneratorRuntime.wrap(function getAttributes$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.delegateYield(this._attrs.entries(), \"t0\", 1);\n\n            case 1:\n              if (!(this._classes.size > 0)) {\n                _context2.next = 4;\n                break;\n              }\n\n              _context2.next = 4;\n              return ['class', this.getAttribute('class')];\n\n            case 4:\n              if (!(this._styles.size > 0)) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.next = 7;\n              return ['style', this.getAttribute('style')];\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, getAttributes, this);\n    })\n    /**\n     * Gets attribute by key. If attribute is not present - returns undefined.\n     *\n     * @param {String} key Attribute key.\n     * @returns {String|undefined} Attribute value.\n     */\n\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(key) {\n      if (key == 'class') {\n        if (this._classes.size > 0) {\n          return _toConsumableArray(this._classes).join(' ');\n        }\n\n        return undefined;\n      }\n\n      if (key == 'style') {\n        if (this._styles.size > 0) {\n          var styleString = '';\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = this._styles[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var _step$value = _slicedToArray(_step.value, 2),\n                  property = _step$value[0],\n                  value = _step$value[1];\n\n              styleString += \"\".concat(property, \":\").concat(value, \";\");\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          return styleString;\n        }\n\n        return undefined;\n      }\n\n      return this._attrs.get(key);\n    }\n    /**\n     * Returns a boolean indicating whether an attribute with the specified key exists in the element.\n     *\n     * @param {String} key Attribute key.\n     * @returns {Boolean} `true` if attribute with the specified key exists in the element, false otherwise.\n     */\n\n  }, {\n    key: \"hasAttribute\",\n    value: function hasAttribute(key) {\n      if (key == 'class') {\n        return this._classes.size > 0;\n      }\n\n      if (key == 'style') {\n        return this._styles.size > 0;\n      }\n\n      return this._attrs.has(key);\n    }\n    /**\n     * Checks if this element is similar to other element.\n     * Both elements should have the same name and attributes to be considered as similar. Two similar elements\n     * can contain different set of children nodes.\n     *\n     * @param {module:engine/view/element~Element} otherElement\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isSimilar\",\n    value: function isSimilar(otherElement) {\n      if (!(otherElement instanceof Element)) {\n        return false;\n      } // If exactly the same Element is provided - return true immediately.\n\n\n      if (this === otherElement) {\n        return true;\n      } // Check element name.\n\n\n      if (this.name != otherElement.name) {\n        return false;\n      } // Check number of attributes, classes and styles.\n\n\n      if (this._attrs.size !== otherElement._attrs.size || this._classes.size !== otherElement._classes.size || this._styles.size !== otherElement._styles.size) {\n        return false;\n      } // Check if attributes are the same.\n\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this._attrs[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n              key = _step2$value[0],\n              value = _step2$value[1];\n\n          if (!otherElement._attrs.has(key) || otherElement._attrs.get(key) !== value) {\n            return false;\n          }\n        } // Check if classes are the same.\n\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this._classes[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var className = _step3.value;\n\n          if (!otherElement._classes.has(className)) {\n            return false;\n          }\n        } // Check if styles are the same.\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this._styles[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n              property = _step4$value[0],\n              value = _step4$value[1];\n\n          if (!otherElement._styles.has(property) || otherElement._styles.get(property) !== value) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Returns true if class is present.\n     * If more then one class is provided - returns true only when all classes are present.\n     *\n     *\t\telement.hasClass( 'foo' ); // Returns true if 'foo' class is present.\n     *\t\telement.hasClass( 'foo', 'bar' ); // Returns true if 'foo' and 'bar' classes are both present.\n     *\n     * @param {...String} className\n     */\n\n  }, {\n    key: \"hasClass\",\n    value: function hasClass() {\n      for (var _len = arguments.length, className = new Array(_len), _key = 0; _key < _len; _key++) {\n        className[_key] = arguments[_key];\n      }\n\n      for (var _i = 0, _className = className; _i < _className.length; _i++) {\n        var name = _className[_i];\n\n        if (!this._classes.has(name)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Returns iterator that contains all class names.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getClassNames\",\n    value: function getClassNames() {\n      return this._classes.keys();\n    }\n    /**\n     * Returns style value for given property.\n     * Undefined is returned if style does not exist.\n     *\n     * @param {String} property\n     * @returns {String|undefined}\n     */\n\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(property) {\n      return this._styles.get(property);\n    }\n    /**\n     * Returns iterator that contains all style names.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getStyleNames\",\n    value: function getStyleNames() {\n      return this._styles.keys();\n    }\n    /**\n     * Returns true if style keys are present.\n     * If more then one style property is provided - returns true only when all properties are present.\n     *\n     *\t\telement.hasStyle( 'color' ); // Returns true if 'border-top' style is present.\n     *\t\telement.hasStyle( 'color', 'border-top' ); // Returns true if 'color' and 'border-top' styles are both present.\n     *\n     * @param {...String} property\n     */\n\n  }, {\n    key: \"hasStyle\",\n    value: function hasStyle() {\n      for (var _len2 = arguments.length, property = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        property[_key2] = arguments[_key2];\n      }\n\n      for (var _i2 = 0, _property = property; _i2 < _property.length; _i2++) {\n        var name = _property[_i2];\n\n        if (!this._styles.has(name)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Returns ancestor element that match specified pattern.\n     * Provided patterns should be compatible with {@link module:engine/view/matcher~Matcher Matcher} as it is used internally.\n     *\n     * @see module:engine/view/matcher~Matcher\n     * @param {Object|String|RegExp|Function} patterns Patterns used to match correct ancestor.\n     * See {@link module:engine/view/matcher~Matcher}.\n     * @returns {module:engine/view/element~Element|null} Found element or `null` if no matching ancestor was found.\n     */\n\n  }, {\n    key: \"findAncestor\",\n    value: function findAncestor() {\n      for (var _len3 = arguments.length, patterns = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        patterns[_key3] = arguments[_key3];\n      }\n\n      var matcher = _construct(Matcher, patterns);\n\n      var parent = this.parent;\n\n      while (parent) {\n        if (matcher.match(parent)) {\n          return parent;\n        }\n\n        parent = parent.parent;\n      }\n\n      return null;\n    }\n    /**\n     * Returns the custom property value for the given key.\n     *\n     * @param {String|Symbol} key\n     * @returns {*}\n     */\n\n  }, {\n    key: \"getCustomProperty\",\n    value: function getCustomProperty(key) {\n      return this._customProperties.get(key);\n    }\n    /**\n     * Returns an iterator which iterates over this element's custom properties.\n     * Iterator provides `[ key, value ]` pairs for each stored property.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"getCustomProperties\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getCustomProperties() {\n      return _regeneratorRuntime.wrap(function getCustomProperties$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.delegateYield(this._customProperties.entries(), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, getCustomProperties, this);\n    })\n    /**\n     * Returns identity string based on element's name, styles, classes and other attributes.\n     * Two elements that {@link #isSimilar are similar} will have same identity string.\n     * It has the following format:\n     *\n     *\t\t'name class=\"class1,class2\" style=\"style1:value1;style2:value2\" attr1=\"val1\" attr2=\"val2\"'\n    \t *\n     * For example:\n     *\n     *\t\tconst element = writer.createContainerElement( 'foo', {\n     *\t\t\tbanana: '10',\n     *\t\t\tapple: '20',\n     *\t\t\tstyle: 'color: red; border-color: white;',\n     *\t\t\tclass: 'baz'\n     *\t\t} );\n     *\n     *\t\t// returns 'foo class=\"baz\" style=\"border-color:white;color:red\" apple=\"20\" banana=\"10\"'\n     *\t\telement.getIdentity();\n     *\n     * NOTE: Classes, styles and other attributes are sorted alphabetically.\n     *\n     * @returns {String}\n     */\n\n  }, {\n    key: \"getIdentity\",\n    value: function getIdentity() {\n      var classes = Array.from(this._classes).sort().join(',');\n      var styles = Array.from(this._styles).map(function (i) {\n        return \"\".concat(i[0], \":\").concat(i[1]);\n      }).sort().join(';');\n      var attributes = Array.from(this._attrs).map(function (i) {\n        return \"\".concat(i[0], \"=\\\"\").concat(i[1], \"\\\"\");\n      }).sort().join(' ');\n      return this.name + (classes == '' ? '' : \" class=\\\"\".concat(classes, \"\\\"\")) + (styles == '' ? '' : \" style=\\\"\".concat(styles, \"\\\"\")) + (attributes == '' ? '' : \" \".concat(attributes));\n    }\n    /**\n     * Clones provided element.\n     *\n     * @protected\n     * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n     * element will be cloned without any children.\n     * @returns {module:engine/view/element~Element} Clone of this element.\n     */\n\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      var deep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var childrenClone = [];\n\n      if (deep) {\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = this.getChildren()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var child = _step5.value;\n            childrenClone.push(child._clone(deep));\n          }\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n              _iterator5.return();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n      } // ContainerElement and AttributeElement should be also cloned properly.\n\n\n      var cloned = new this.constructor(this.name, this._attrs, childrenClone); // Classes and styles are cloned separately - this solution is faster than adding them back to attributes and\n      // parse once again in constructor.\n\n      cloned._classes = new Set(this._classes);\n      cloned._styles = new Map(this._styles); // Clone custom properties.\n\n      cloned._customProperties = new Map(this._customProperties); // Clone filler offset method.\n      // We can't define this method in a prototype because it's behavior which\n      // is changed by e.g. toWidget() function from ckeditor5-widget. Perhaps this should be one of custom props.\n\n      cloned.getFillerOffset = this.getFillerOffset;\n      return cloned;\n    }\n    /**\n     * {@link module:engine/view/element~Element#_insertChild Insert} a child node or a list of child nodes at the end of this node\n     * and sets the parent of these nodes to this element.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#insert\n     * @protected\n     * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n     * @fires module:engine/view/node~Node#change\n     * @returns {Number} Number of appended nodes.\n     */\n\n  }, {\n    key: \"_appendChild\",\n    value: function _appendChild(items) {\n      return this._insertChild(this.childCount, items);\n    }\n    /**\n     * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n     * this element.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#insert\n     * @protected\n     * @param {Number} index Position where nodes should be inserted.\n     * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n     * @fires module:engine/view/node~Node#change\n     * @returns {Number} Number of inserted nodes.\n     */\n\n  }, {\n    key: \"_insertChild\",\n    value: function _insertChild(index, items) {\n      this._fireChange('children', this);\n\n      var count = 0;\n      var nodes = normalize(items);\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = nodes[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var node = _step6.value;\n\n          // If node that is being added to this element is already inside another element, first remove it from the old parent.\n          if (node.parent !== null) {\n            node._remove();\n          }\n\n          node.parent = this;\n\n          this._children.splice(index, 0, node);\n\n          index++;\n          count++;\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      return count;\n    }\n    /**\n     * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#remove\n     * @protected\n     * @param {Number} index Number of the first node to remove.\n     * @param {Number} [howMany=1] Number of nodes to remove.\n     * @fires module:engine/view/node~Node#change\n     * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\n     */\n\n  }, {\n    key: \"_removeChildren\",\n    value: function _removeChildren(index) {\n      var howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      this._fireChange('children', this);\n\n      for (var i = index; i < index + howMany; i++) {\n        this._children[i].parent = null;\n      }\n\n      return this._children.splice(index, howMany);\n    }\n    /**\n     * Adds or overwrite attribute with a specified key and value.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#setAttribute\n     * @protected\n     * @param {String} key Attribute key.\n     * @param {String} value Attribute value.\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_setAttribute\",\n    value: function _setAttribute(key, value) {\n      value = String(value);\n\n      this._fireChange('attributes', this);\n\n      if (key == 'class') {\n        parseClasses(this._classes, value);\n      } else if (key == 'style') {\n        parseInlineStyles(this._styles, value);\n      } else {\n        this._attrs.set(key, value);\n      }\n    }\n    /**\n     * Removes attribute from the element.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#removeAttribute\n     * @protected\n     * @param {String} key Attribute key.\n     * @returns {Boolean} Returns true if an attribute existed and has been removed.\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_removeAttribute\",\n    value: function _removeAttribute(key) {\n      this._fireChange('attributes', this); // Remove class attribute.\n\n\n      if (key == 'class') {\n        if (this._classes.size > 0) {\n          this._classes.clear();\n\n          return true;\n        }\n\n        return false;\n      } // Remove style attribute.\n\n\n      if (key == 'style') {\n        if (this._styles.size > 0) {\n          this._styles.clear();\n\n          return true;\n        }\n\n        return false;\n      } // Remove other attributes.\n\n\n      return this._attrs.delete(key);\n    }\n    /**\n     * Adds specified class.\n     *\n     *\t\telement._addClass( 'foo' ); // Adds 'foo' class.\n     *\t\telement._addClass( [ 'foo', 'bar' ] ); // Adds 'foo' and 'bar' classes.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#addClass\n     * @protected\n     * @param {Array.<String>|String} className\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_addClass\",\n    value: function _addClass(className) {\n      var _this2 = this;\n\n      this._fireChange('attributes', this);\n\n      className = Array.isArray(className) ? className : [className];\n      className.forEach(function (name) {\n        return _this2._classes.add(name);\n      });\n    }\n    /**\n     * Removes specified class.\n     *\n     *\t\telement._removeClass( 'foo' );  // Removes 'foo' class.\n     *\t\telement._removeClass( [ 'foo', 'bar' ] ); // Removes both 'foo' and 'bar' classes.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#removeClass\n     * @protected\n     * @param {Array.<String>|String} className\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_removeClass\",\n    value: function _removeClass(className) {\n      var _this3 = this;\n\n      this._fireChange('attributes', this);\n\n      className = Array.isArray(className) ? className : [className];\n      className.forEach(function (name) {\n        return _this3._classes.delete(name);\n      });\n    }\n    /**\n     * Adds style to the element.\n     *\n     *\t\telement._setStyle( 'color', 'red' );\n     *\t\telement._setStyle( {\n     *\t\t\tcolor: 'red',\n     *\t\t\tposition: 'fixed'\n     *\t\t} );\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#setStyle\n     * @protected\n     * @param {String|Object} property Property name or object with key - value pairs.\n     * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(property, value) {\n      this._fireChange('attributes', this);\n\n      if (isPlainObject(property)) {\n        var keys = Object.keys(property);\n\n        for (var _i3 = 0, _keys = keys; _i3 < _keys.length; _i3++) {\n          var key = _keys[_i3];\n\n          this._styles.set(key, property[key]);\n        }\n      } else {\n        this._styles.set(property, value);\n      }\n    }\n    /**\n     * Removes specified style.\n     *\n     *\t\telement._removeStyle( 'color' );  // Removes 'color' style.\n     *\t\telement._removeStyle( [ 'color', 'border-top' ] ); // Removes both 'color' and 'border-top' styles.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#removeStyle\n     * @protected\n     * @param {Array.<String>|String} property\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_removeStyle\",\n    value: function _removeStyle(property) {\n      var _this4 = this;\n\n      this._fireChange('attributes', this);\n\n      property = Array.isArray(property) ? property : [property];\n      property.forEach(function (name) {\n        return _this4._styles.delete(name);\n      });\n    }\n    /**\n     * Sets a custom property. Unlike attributes, custom properties are not rendered to the DOM,\n     * so they can be used to add special data to elements.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#setCustomProperty\n     * @protected\n     * @param {String|Symbol} key\n     * @param {*} value\n     */\n\n  }, {\n    key: \"_setCustomProperty\",\n    value: function _setCustomProperty(key, value) {\n      this._customProperties.set(key, value);\n    }\n    /**\n     * Removes the custom property stored under the given key.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#removeCustomProperty\n     * @protected\n     * @param {String|Symbol} key\n     * @returns {Boolean} Returns true if property was removed.\n     */\n\n  }, {\n    key: \"_removeCustomProperty\",\n    value: function _removeCustomProperty(key) {\n      return this._customProperties.delete(key);\n    }\n    /**\n     * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n     *\n     * @abstract\n     * @method module:engine/view/element~Element#getFillerOffset\n     */\n\n  }, {\n    key: \"childCount\",\n    get: function get() {\n      return this._children.length;\n    }\n    /**\n     * Is `true` if there are no nodes inside this element, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this._children.length === 0;\n    }\n  }]);\n\n  return Element;\n}(Node); // Parses attributes provided to the element constructor before they are applied to an element. If attributes are passed\n// as an object (instead of `Map`), the object is transformed to the map. Attributes with `null` value are removed.\n// Attributes with non-`String` value are converted to `String`.\n//\n// @param {Object|Map} attrs Attributes to parse.\n// @returns {Map} Parsed attributes.\n\n\nexport { Element as default };\n\nfunction parseAttributes(attrs) {\n  if (isPlainObject(attrs)) {\n    attrs = objectToMap(attrs);\n  } else {\n    attrs = new Map(attrs);\n  }\n\n  var _iteratorNormalCompletion7 = true;\n  var _didIteratorError7 = false;\n  var _iteratorError7 = undefined;\n\n  try {\n    for (var _iterator7 = attrs[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n      var _step7$value = _slicedToArray(_step7.value, 2),\n          key = _step7$value[0],\n          value = _step7$value[1];\n\n      if (value === null) {\n        attrs.delete(key);\n      } else if (typeof value != 'string') {\n        attrs.set(key, String(value));\n      }\n    }\n  } catch (err) {\n    _didIteratorError7 = true;\n    _iteratorError7 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n        _iterator7.return();\n      }\n    } finally {\n      if (_didIteratorError7) {\n        throw _iteratorError7;\n      }\n    }\n  }\n\n  return attrs;\n} // Parses inline styles and puts property - value pairs into styles map.\n// Styles map is cleared before insertion.\n//\n// @param {Map.<String, String>} stylesMap Map to insert parsed properties and values.\n// @param {String} stylesString Styles to parse.\n\n\nfunction parseInlineStyles(stylesMap, stylesString) {\n  // `null` if no quote was found in input string or last found quote was a closing quote. See below.\n  var quoteType = null;\n  var propertyNameStart = 0;\n  var propertyValueStart = 0;\n  var propertyName = null;\n  stylesMap.clear(); // Do not set anything if input string is empty.\n\n  if (stylesString === '') {\n    return;\n  } // Fix inline styles that do not end with `;` so they are compatible with algorithm below.\n\n\n  if (stylesString.charAt(stylesString.length - 1) != ';') {\n    stylesString = stylesString + ';';\n  } // Seek the whole string for \"special characters\".\n\n\n  for (var i = 0; i < stylesString.length; i++) {\n    var char = stylesString.charAt(i);\n\n    if (quoteType === null) {\n      // No quote found yet or last found quote was a closing quote.\n      switch (char) {\n        case ':':\n          // Most of time colon means that property name just ended.\n          // Sometimes however `:` is found inside property value (for example in background image url).\n          if (!propertyName) {\n            // Treat this as end of property only if property name is not already saved.\n            // Save property name.\n            propertyName = stylesString.substr(propertyNameStart, i - propertyNameStart); // Save this point as the start of property value.\n\n            propertyValueStart = i + 1;\n          }\n\n          break;\n\n        case '\"':\n        case '\\'':\n          // Opening quote found (this is an opening quote, because `quoteType` is `null`).\n          quoteType = char;\n          break;\n\n        case ';':\n          {\n            // Property value just ended.\n            // Use previously stored property value start to obtain property value.\n            var propertyValue = stylesString.substr(propertyValueStart, i - propertyValueStart);\n\n            if (propertyName) {\n              // Save parsed part.\n              stylesMap.set(propertyName.trim(), propertyValue.trim());\n            }\n\n            propertyName = null; // Save this point as property name start. Property name starts immediately after previous property value ends.\n\n            propertyNameStart = i + 1;\n            break;\n          }\n      }\n    } else if (char === quoteType) {\n      // If a quote char is found and it is a closing quote, mark this fact by `null`-ing `quoteType`.\n      quoteType = null;\n    }\n  }\n} // Parses class attribute and puts all classes into classes set.\n// Classes set s cleared before insertion.\n//\n// @param {Set.<String>} classesSet Set to insert parsed classes.\n// @param {String} classesString String with classes to parse.\n\n\nfunction parseClasses(classesSet, classesString) {\n  var classArray = classesString.split(/\\s+/);\n  classesSet.clear();\n  classArray.forEach(function (name) {\n    return classesSet.add(name);\n  });\n} // Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/view/item~Item|Iterable.<String|module:engine/view/item~Item>}\n// @returns {Iterable.<module:engine/view/node~Node>}\n\n\nfunction normalize(nodes) {\n  // Separate condition because string is iterable.\n  if (typeof nodes == 'string') {\n    return [new Text(nodes)];\n  }\n\n  if (!isIterable(nodes)) {\n    nodes = [nodes];\n  } // Array.from to enable .map() on non-arrays.\n\n\n  return Array.from(nodes).map(function (node) {\n    if (typeof node == 'string') {\n      return new Text(node);\n    }\n\n    if (node instanceof TextProxy) {\n      return new Text(node.data);\n    }\n\n    return node;\n  });\n}","import _toConsumableArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/insertoperation\n */\nimport Operation from './operation';\nimport Position from '../position';\nimport NodeList from '../nodelist';\nimport MoveOperation from './moveoperation';\nimport { _insert, _normalizeNodes } from './utils';\nimport Text from '../text';\nimport Element from '../element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Operation to insert one or more nodes at given position in the model.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar InsertOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(InsertOperation, _Operation);\n\n  /**\n   * Creates an insert operation.\n   *\n   * @param {module:engine/model/position~Position} position Position of insertion.\n   * @param {module:engine/model/node~NodeSet} nodes The list of nodes to be inserted.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function InsertOperation(position, nodes, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, InsertOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InsertOperation).call(this, baseVersion));\n    /**\n     * Position of insertion.\n     *\n     * @readonly\n     * @member {module:engine/model/position~Position} module:engine/model/operation/insertoperation~InsertOperation#position\n     */\n\n    _this.position = position.clone();\n    _this.position.stickiness = 'toNone';\n    /**\n     * List of nodes to insert.\n     *\n     * @readonly\n     * @member {module:engine/model/nodelist~NodeList} module:engine/model/operation/insertoperation~InsertOperation#nodeList\n     */\n\n    _this.nodes = new NodeList(_normalizeNodes(nodes));\n    /**\n     * Flag deciding how the operation should be transformed. If set to `true`, nodes might get additional attributes\n     * during operational transformation. This happens when the operation insertion position is inside of a range\n     * where attributes have changed.\n     *\n     * @member {Boolean} module:engine/model/operation/insertoperation~InsertOperation#shouldReceiveAttributes\n     */\n\n    _this.shouldReceiveAttributes = false;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(InsertOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/insertoperation~InsertOperation} Clone of this operation.\n     */\n    value: function clone() {\n      var nodes = new NodeList(_toConsumableArray(this.nodes).map(function (node) {\n        return node._clone(true);\n      }));\n      var insert = new InsertOperation(this.position, nodes, this.baseVersion);\n      insert.shouldReceiveAttributes = this.shouldReceiveAttributes;\n      return insert;\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      var graveyard = this.position.root.document.graveyard;\n      var gyPosition = new Position(graveyard, [0]);\n      return new MoveOperation(this.position, this.nodes.maxOffset, gyPosition, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      var targetElement = this.position.parent;\n\n      if (!targetElement || targetElement.maxOffset < this.position.offset) {\n        /**\n         * Insertion position is invalid.\n         *\n         * @error insert-operation-position-invalid\n         */\n        throw new CKEditorError('insert-operation-position-invalid: Insertion position is invalid.');\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      // What happens here is that we want original nodes be passed to writer because we want original nodes\n      // to be inserted to the model. But in InsertOperation, we want to keep those nodes as they were added\n      // to the operation, not modified. For example, text nodes can get merged or cropped while Elements can\n      // get children. It is important that InsertOperation has the copy of original nodes in intact state.\n      var originalNodes = this.nodes;\n      this.nodes = new NodeList(_toConsumableArray(originalNodes).map(function (node) {\n        return node._clone(true);\n      }));\n\n      _insert(this.position, originalNodes);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(InsertOperation.prototype), \"toJSON\", this).call(this);\n\n      json.position = this.position.toJSON();\n      json.nodes = this.nodes.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'insert';\n    }\n    /**\n     * Total offset size of inserted nodes.\n     *\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"howMany\",\n    get: function get() {\n      return this.nodes.maxOffset;\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates `InsertOperation` object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/insertoperation~InsertOperation}\n     */\n    value: function fromJSON(json, document) {\n      var children = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = json.nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var child = _step.value;\n\n          if (child.name) {\n            // If child has name property, it is an Element.\n            children.push(Element.fromJSON(child));\n          } else {\n            // Otherwise, it is a Text node.\n            children.push(Text.fromJSON(child));\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var insert = new InsertOperation(Position.fromJSON(json.position, document), children, json.baseVersion);\n      insert.shouldReceiveAttributes = json.shouldReceiveAttributes;\n      return insert;\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'InsertOperation';\n    }\n  }]);\n\n  return InsertOperation;\n}(Operation);\n\nexport { InsertOperation as default };","import root from './_root.js';\n/** Used to detect overreaching core-js shims. */\n\nvar coreJsData = root['__core-js_shared__'];\nexport default coreJsData;","import coreJsData from './_coreJsData.js';\n/** Used to detect methods masquerading as native. */\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nexport default isMasked;","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals window, document */\n\n/**\n * @module utils/dom/global\n */\n\n/**\n * A helper (module) giving an access to the global DOM objects such as `window` and\n * `document`. Accessing these objects using this helper allows easy and bulletproof\n * testing, i.e. stubbing native properties:\n *\n *\t\timport global from 'ckeditor5/utils/dom/global.js';\n *\n *\t\t// This stub will work for any code using global module.\n *\t\ttestUtils.sinon.stub( global, 'window', {\n *\t\t\tinnerWidth: 10000\n *\t\t} );\n *\n *\t\tconsole.log( global.window.innerWidth );\n */\nexport default {\n  window: window,\n  document: document\n};","import _regeneratorRuntime from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/selection\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Range from './range';\nimport Position from './position';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport Node from './node';\nimport Element from './element';\nimport count from '@ckeditor/ckeditor5-utils/src/count';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport DocumentSelection from './documentselection';\n/**\n * Class representing an arbirtary selection in the view.\n * See also {@link module:engine/view/documentselection~DocumentSelection}.\n *\n * New selection instances can be created via the constructor or one these methods:\n *\n * * {@link module:engine/view/view~View#createSelection `View#createSelection()`},\n * * {@link module:engine/view/upcastwriter~UpcastWriter#createSelection `UpcastWriter#createSelection()`}.\n *\n * A selection can consist of {@link module:engine/view/range~Range ranges} that can be set by using\n * the {@link module:engine/view/selection~Selection#setTo `Selection#setTo()`} method.\n */\n\nvar Selection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates new selection instance.\n   *\n   * **Note**: The selection constructor is available as a factory method:\n   *\n   * * {@link module:engine/view/view~View#createSelection `View#createSelection()`},\n   * * {@link module:engine/view/upcastwriter~UpcastWriter#createSelection `UpcastWriter#createSelection()`}.\n   *\n   * \t\t// Creates empty selection without ranges.\n   *\t\tconst selection = writer.createSelection();\n   *\n   *\t\t// Creates selection at the given range.\n   *\t\tconst range = writer.createRange( start, end );\n   *\t\tconst selection = writer.createSelection( range );\n   *\n   *\t\t// Creates selection at the given ranges\n   * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n   *\t\tconst selection = writer.createSelection( ranges );\n   *\n   *\t\t// Creates selection from the other selection.\n   *\t\tconst otherSelection = writer.createSelection();\n   *\t\tconst selection = writer.createSelection( otherSelection );\n   *\n   *\t\t// Creates selection from the document selection.\n   *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\n   *\n   * \t\t// Creates selection at the given position.\n   *\t\tconst position = writer.createPositionFromPath( root, path );\n   *\t\tconst selection = writer.createSelection( position );\n   *\n   *\t\t// Creates collapsed selection at the position of given item and offset.\n   *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n   *\t\tconst selection = writer.createSelection( paragraph, offset );\n   *\n   *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n   *\t\t// first child of that element and ends after the last child of that element.\n   *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n   *\n   *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n   *\t\t// just after the item.\n   *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n   *\n   * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n   *\n   *\t\t// Creates backward selection.\n   *\t\tconst selection = writer.createSelection( range, { backward: true } );\n   *\n   * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n   * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n   * represented in other way, for example by applying proper CSS class.\n   *\n   * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n   * (and be  properly handled by screen readers).\n   *\n   *\t\t// Creates fake selection with label.\n   *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\n   *\n   * @param {module:engine/view/selection~Selectable} [selectable=null]\n   * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n   * @param {Object} [options]\n   * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n   * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n   * @param {String} [options.label] Label for the fake selection.\n   */\n  function Selection() {\n    var selectable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var placeOrOffset = arguments.length > 1 ? arguments[1] : undefined;\n    var options = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, Selection);\n\n    /**\n     * Stores all ranges that are selected.\n     *\n     * @protected\n     * @member {Array.<module:engine/view/range~Range>}\n     */\n    this._ranges = [];\n    /**\n     * Specifies whether the last added range was added as a backward or forward range.\n     *\n     * @protected\n     * @member {Boolean}\n     */\n\n    this._lastRangeBackward = false;\n    /**\n     * Specifies whether selection instance is fake.\n     *\n     * @private\n     * @member {Boolean}\n     */\n\n    this._isFake = false;\n    /**\n     * Fake selection's label.\n     *\n     * @private\n     * @member {String}\n     */\n\n    this._fakeSelectionLabel = '';\n    this.setTo(selectable, placeOrOffset, options);\n  }\n  /**\n   * Returns true if selection instance is marked as `fake`.\n   *\n   * @see #setTo\n   * @returns {Boolean}\n   */\n\n\n  _createClass(Selection, [{\n    key: \"getRanges\",\n\n    /**\n     * Returns an iterable that contains copies of all ranges added to the selection.\n     *\n     * @returns {Iterable.<module:engine/view/range~Range>}\n     */\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getRanges() {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, range;\n\n      return _regeneratorRuntime.wrap(function getRanges$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context.prev = 3;\n              _iterator = this._ranges[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context.next = 12;\n                break;\n              }\n\n              range = _step.value;\n              _context.next = 9;\n              return range.clone();\n\n            case 9:\n              _iteratorNormalCompletion = true;\n              _context.next = 5;\n              break;\n\n            case 12:\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 18:\n              _context.prev = 18;\n              _context.prev = 19;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 21:\n              _context.prev = 21;\n\n              if (!_didIteratorError) {\n                _context.next = 24;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 24:\n              return _context.finish(21);\n\n            case 25:\n              return _context.finish(18);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getRanges, this, [[3, 14, 18, 26], [19,, 21, 25]]);\n    })\n    /**\n     * Returns copy of the first range in the selection. First range is the one which\n     * {@link module:engine/view/range~Range#start start} position {@link module:engine/view/position~Position#isBefore is before} start\n     * position of all other ranges (not to confuse with the first range added to the selection).\n     * Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/range~Range|null}\n     */\n\n  }, {\n    key: \"getFirstRange\",\n    value: function getFirstRange() {\n      var first = null;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this._ranges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var range = _step2.value;\n\n          if (!first || range.start.isBefore(first.start)) {\n            first = range;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return first ? first.clone() : null;\n    }\n    /**\n     * Returns copy of the last range in the selection. Last range is the one which {@link module:engine/view/range~Range#end end}\n     * position {@link module:engine/view/position~Position#isAfter is after} end position of all other ranges (not to confuse\n     * with the last range added to the selection). Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/range~Range|null}\n     */\n\n  }, {\n    key: \"getLastRange\",\n    value: function getLastRange() {\n      var last = null;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this._ranges[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var range = _step3.value;\n\n          if (!last || range.end.isAfter(last.end)) {\n            last = range;\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return last ? last.clone() : null;\n    }\n    /**\n     * Returns copy of the first position in the selection. First position is the position that\n     * {@link module:engine/view/position~Position#isBefore is before} any other position in the selection ranges.\n     * Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/position~Position|null}\n     */\n\n  }, {\n    key: \"getFirstPosition\",\n    value: function getFirstPosition() {\n      var firstRange = this.getFirstRange();\n      return firstRange ? firstRange.start.clone() : null;\n    }\n    /**\n     * Returns copy of the last position in the selection. Last position is the position that\n     * {@link module:engine/view/position~Position#isAfter is after} any other position in the selection ranges.\n     * Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/position~Position|null}\n     */\n\n  }, {\n    key: \"getLastPosition\",\n    value: function getLastPosition() {\n      var lastRange = this.getLastRange();\n      return lastRange ? lastRange.end.clone() : null;\n    }\n    /**\n     * Checks whether, this selection is equal to given selection. Selections are equal if they have same directions,\n     * same number of ranges and all ranges from one selection equal to a range from other selection.\n     *\n     * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n     * Selection to compare with.\n     * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherSelection) {\n      if (this.isFake != otherSelection.isFake) {\n        return false;\n      }\n\n      if (this.isFake && this.fakeSelectionLabel != otherSelection.fakeSelectionLabel) {\n        return false;\n      }\n\n      if (this.rangeCount != otherSelection.rangeCount) {\n        return false;\n      } else if (this.rangeCount === 0) {\n        return true;\n      }\n\n      if (!this.anchor.isEqual(otherSelection.anchor) || !this.focus.isEqual(otherSelection.focus)) {\n        return false;\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this._ranges[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var thisRange = _step4.value;\n          var found = false;\n          var _iteratorNormalCompletion5 = true;\n          var _didIteratorError5 = false;\n          var _iteratorError5 = undefined;\n\n          try {\n            for (var _iterator5 = otherSelection._ranges[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n              var otherRange = _step5.value;\n\n              if (thisRange.isEqual(otherRange)) {\n                found = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n                _iterator5.return();\n              }\n            } finally {\n              if (_didIteratorError5) {\n                throw _iteratorError5;\n              }\n            }\n          }\n\n          if (!found) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Checks whether this selection is similar to given selection. Selections are similar if they have same directions, same\n     * number of ranges, and all {@link module:engine/view/range~Range#getTrimmed trimmed} ranges from one selection are\n     * equal to any trimmed range from other selection.\n     *\n     * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n     * Selection to compare with.\n     * @returns {Boolean} `true` if selections are similar, `false` otherwise.\n     */\n\n  }, {\n    key: \"isSimilar\",\n    value: function isSimilar(otherSelection) {\n      if (this.isBackward != otherSelection.isBackward) {\n        return false;\n      }\n\n      var numOfRangesA = count(this.getRanges());\n      var numOfRangesB = count(otherSelection.getRanges()); // If selections have different number of ranges, they cannot be similar.\n\n      if (numOfRangesA != numOfRangesB) {\n        return false;\n      } // If both selections have no ranges, they are similar.\n\n\n      if (numOfRangesA == 0) {\n        return true;\n      } // Check if each range in one selection has a similar range in other selection.\n\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = this.getRanges()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var rangeA = _step6.value;\n          rangeA = rangeA.getTrimmed();\n          var found = false;\n          var _iteratorNormalCompletion7 = true;\n          var _didIteratorError7 = false;\n          var _iteratorError7 = undefined;\n\n          try {\n            for (var _iterator7 = otherSelection.getRanges()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n              var rangeB = _step7.value;\n              rangeB = rangeB.getTrimmed();\n\n              if (rangeA.start.isEqual(rangeB.start) && rangeA.end.isEqual(rangeB.end)) {\n                found = true;\n                break;\n              }\n            } // For `rangeA`, neither range in `otherSelection` was similar. So selections are not similar.\n\n          } catch (err) {\n            _didIteratorError7 = true;\n            _iteratorError7 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n                _iterator7.return();\n              }\n            } finally {\n              if (_didIteratorError7) {\n                throw _iteratorError7;\n              }\n            }\n          }\n\n          if (!found) {\n            return false;\n          }\n        } // There were no ranges that weren't matched. Selections are similar.\n\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Returns the selected element. {@link module:engine/view/element~Element Element} is considered as selected if there is only\n     * one range in the selection, and that range contains exactly one element.\n     * Returns `null` if there is no selected element.\n     *\n     * @returns {module:engine/view/element~Element|null}\n     */\n\n  }, {\n    key: \"getSelectedElement\",\n    value: function getSelectedElement() {\n      if (this.rangeCount !== 1) {\n        return null;\n      }\n\n      var range = this.getFirstRange();\n      var nodeAfterStart = range.start.nodeAfter;\n      var nodeBeforeEnd = range.end.nodeBefore; // Handle the situation when selection position is at the beginning / at the end of a text node.\n      // In such situation `.nodeAfter` and `.nodeBefore` are `null` but the selection still might be spanning\n      // over one element.\n      //\n      // <p>Foo{<span class=\"widget\"></span>}bar</p> vs <p>Foo[<span class=\"widget\"></span>]bar</p>\n      //\n      // These are basically the same selections, only the difference is if the selection position is at\n      // at the end/at the beginning of a text node or just before/just after the text node.\n      //\n\n      if (range.start.parent.is('text') && range.start.isAtEnd && range.start.parent.nextSibling) {\n        nodeAfterStart = range.start.parent.nextSibling;\n      }\n\n      if (range.end.parent.is('text') && range.end.isAtStart && range.end.parent.previousSibling) {\n        nodeBeforeEnd = range.end.parent.previousSibling;\n      }\n\n      return nodeAfterStart instanceof Element && nodeAfterStart == nodeBeforeEnd ? nodeAfterStart : null;\n    }\n    /**\n     * Sets this selection's ranges and direction to the specified location based on the given\n     * {@link module:engine/view/selection~Selectable selectable}.\n     *\n     *\t\t// Sets selection to the given range.\n     *\t\tconst range = writer.createRange( start, end );\n     *\t\tselection.setTo( range );\n     *\n     *\t\t// Sets selection to given ranges.\n     * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n     *\t\tselection.setTo( range );\n     *\n     *\t\t// Sets selection to the other selection.\n     *\t\tconst otherSelection = writer.createSelection();\n     *\t\tselection.setTo( otherSelection );\n     *\n     *\t \t// Sets selection to contents of DocumentSelection.\n     *\t\tselection.setTo( editor.editing.view.document.selection );\n     *\n     * \t\t// Sets collapsed selection at the given position.\n     *\t\tconst position = writer.createPositionAt( root, path );\n     *\t\tselection.setTo( position );\n     *\n     * \t\t// Sets collapsed selection at the position of given item and offset.\n     *\t\tselection.setTo( paragraph, offset );\n     *\n     * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     *\t\tselection.setTo( paragraph, 'in' );\n     *\n     * Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n     *\n     *\t\tselection.setTo( paragraph, 'on' );\n     *\n     * \t\t// Clears selection. Removes all ranges.\n     *\t\tselection.setTo( null );\n     *\n     * `Selection#setTo()` method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n     *\n     *\t\t// Sets selection as backward.\n     *\t\tselection.setTo( range, { backward: true } );\n     *\n     * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n     * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n     * represented in other way, for example by applying proper CSS class.\n     *\n     * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n     * (and be  properly handled by screen readers).\n     *\n     *\t\t// Creates fake selection with label.\n     *\t\tselection.setTo( range, { fake: true, label: 'foo' } );\n     *\n     * @fires change\n     * @param {module:engine/view/selection~Selectable} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n     * @param {String} [options.label] Label for the fake selection.\n     */\n\n  }, {\n    key: \"setTo\",\n    value: function setTo(selectable, placeOrOffset, options) {\n      if (selectable === null) {\n        this._setRanges([]);\n\n        this._setFakeOptions(placeOrOffset);\n      } else if (selectable instanceof Selection || selectable instanceof DocumentSelection) {\n        this._setRanges(selectable.getRanges(), selectable.isBackward);\n\n        this._setFakeOptions({\n          fake: selectable.isFake,\n          label: selectable.fakeSelectionLabel\n        });\n      } else if (selectable instanceof Range) {\n        this._setRanges([selectable], placeOrOffset && placeOrOffset.backward);\n\n        this._setFakeOptions(placeOrOffset);\n      } else if (selectable instanceof Position) {\n        this._setRanges([new Range(selectable)]);\n\n        this._setFakeOptions(placeOrOffset);\n      } else if (selectable instanceof Node) {\n        var backward = !!options && !!options.backward;\n        var range;\n\n        if (placeOrOffset === undefined) {\n          /**\n           * selection.setTo requires the second parameter when the first parameter is a node.\n           *\n           * @error view-selection-setTo-required-second-parameter\n           */\n          throw new CKEditorError('view-selection-setTo-required-second-parameter: ' + 'selection.setTo requires the second parameter when the first parameter is a node.');\n        } else if (placeOrOffset == 'in') {\n          range = Range._createIn(selectable);\n        } else if (placeOrOffset == 'on') {\n          range = Range._createOn(selectable);\n        } else {\n          range = new Range(Position._createAt(selectable, placeOrOffset));\n        }\n\n        this._setRanges([range], backward);\n\n        this._setFakeOptions(options);\n      } else if (isIterable(selectable)) {\n        // We assume that the selectable is an iterable of ranges.\n        // Array.from() is used to prevent setting ranges to the old iterable\n        this._setRanges(selectable, placeOrOffset && placeOrOffset.backward);\n\n        this._setFakeOptions(placeOrOffset);\n      } else {\n        /**\n         * Cannot set selection to given place.\n         *\n         * @error view-selection-setTo-not-selectable\n         */\n        throw new CKEditorError('view-selection-setTo-not-selectable: Cannot set selection to given place.');\n      }\n\n      this.fire('change');\n    }\n    /**\n     * Moves {@link #focus} to the specified location.\n     *\n     * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n     * parameters.\n     *\n     * @fires change\n     * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/view/item~Item view item}.\n     */\n\n  }, {\n    key: \"setFocus\",\n    value: function setFocus(itemOrPosition, offset) {\n      if (this.anchor === null) {\n        /**\n         * Cannot set selection focus if there are no ranges in selection.\n         *\n         * @error view-selection-setFocus-no-ranges\n         */\n        throw new CKEditorError('view-selection-setFocus-no-ranges: Cannot set selection focus if there are no ranges in selection.');\n      }\n\n      var newFocus = Position._createAt(itemOrPosition, offset);\n\n      if (newFocus.compareWith(this.focus) == 'same') {\n        return;\n      }\n\n      var anchor = this.anchor;\n\n      this._ranges.pop();\n\n      if (newFocus.compareWith(anchor) == 'before') {\n        this._addRange(new Range(newFocus, anchor), true);\n      } else {\n        this._addRange(new Range(anchor, newFocus));\n      }\n\n      this.fire('change');\n    }\n    /**\n     * Checks whether object is of given type following the convention set by\n     * {@link module:engine/view/node~Node#is `Node#is()`}.\n     *\n     *\t\tconst selection = new Selection( ... );\n     *\n     *\t\tselection.is( 'selection' ); // true\n     *\t\tselection.is( 'node' ); // false\n     *\t\tselection.is( 'element' ); // false\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"is\",\n    value: function is(type) {\n      return type == 'selection';\n    }\n    /**\n     * Replaces all ranges that were added to the selection with given array of ranges. Last range of the array\n     * is treated like the last added range and is used to set {@link #anchor anchor} and {@link #focus focus}.\n     * Accepts a flag describing in which way the selection is made.\n     *\n     * @private\n     * @param {Iterable.<module:engine/view/range~Range>} newRanges Iterable object of ranges to set.\n     * @param {Boolean} [isLastBackward=false] Flag describing if last added range was selected forward - from start to end\n     * (`false`) or backward - from end to start (`true`). Defaults to `false`.\n     */\n\n  }, {\n    key: \"_setRanges\",\n    value: function _setRanges(newRanges) {\n      var isLastBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      // New ranges should be copied to prevent removing them by setting them to `[]` first.\n      // Only applies to situations when selection is set to the same selection or same selection's ranges.\n      newRanges = Array.from(newRanges);\n      this._ranges = [];\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = newRanges[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var range = _step8.value;\n\n          this._addRange(range);\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n\n      this._lastRangeBackward = !!isLastBackward;\n    }\n    /**\n     * Sets this selection instance to be marked as `fake`. A fake selection does not render as browser native selection\n     * over selected elements and is hidden to the user. This way, no native selection UI artifacts are displayed to\n     * the user and selection over elements can be represented in other way, for example by applying proper CSS class.\n     *\n     * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM (and be\n     * properly handled by screen readers).\n     *\n     * @private\n     * @param {Object} [options] Options.\n     * @param {Boolean} [options.fake] If set to true selection will be marked as `fake`.\n     * @param {String} [options.label=''] Fake selection label.\n     */\n\n  }, {\n    key: \"_setFakeOptions\",\n    value: function _setFakeOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this._isFake = !!options.fake;\n      this._fakeSelectionLabel = options.fake ? options.label || '' : '';\n    }\n    /**\n     * Adds a range to the selection. Added range is copied. This means that passed range is not saved in the\n     * selection instance and you can safely operate on it.\n     *\n     * Accepts a flag describing in which way the selection is made - passed range might be selected from\n     * {@link module:engine/view/range~Range#start start} to {@link module:engine/view/range~Range#end end}\n     * or from {@link module:engine/view/range~Range#end end} to {@link module:engine/view/range~Range#start start}.\n     * The flag is used to set {@link #anchor anchor} and {@link #focus focus} properties.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\n     * with ranges already stored in Selection instance.\n     *\n     * @private\n     * @fires change\n     * @param {module:engine/view/range~Range} range\n     * @param {Boolean} [isBackward]\n     */\n\n  }, {\n    key: \"_addRange\",\n    value: function _addRange(range) {\n      var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!(range instanceof Range)) {\n        /**\n         * Selection range set to an object that is not an instance of {@link module:engine/view/range~Range}.\n         *\n         * @error view-selection-add-range-not-range\n         */\n        throw new CKEditorError('view-selection-add-range-not-range: ' + 'Selection range set to an object that is not an instance of view.Range');\n      }\n\n      this._pushRange(range);\n\n      this._lastRangeBackward = !!isBackward;\n    }\n    /**\n     * Adds range to selection - creates copy of given range so it can be safely used and modified.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\n     * with ranges already stored in selection instance.\n     *\n     * @private\n     * @param {module:engine/view/range~Range} range\n     */\n\n  }, {\n    key: \"_pushRange\",\n    value: function _pushRange(range) {\n      var _iteratorNormalCompletion9 = true;\n      var _didIteratorError9 = false;\n      var _iteratorError9 = undefined;\n\n      try {\n        for (var _iterator9 = this._ranges[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n          var storedRange = _step9.value;\n\n          if (range.isIntersecting(storedRange)) {\n            /**\n             * Trying to add a range that intersects with another range from selection.\n             *\n             * @error view-selection-range-intersects\n             * @param {module:engine/view/range~Range} addedRange Range that was added to the selection.\n             * @param {module:engine/view/range~Range} intersectingRange Range from selection that intersects with `addedRange`.\n             */\n            throw new CKEditorError('view-selection-range-intersects: Trying to add a range that intersects with another range from selection.', {\n              addedRange: range,\n              intersectingRange: storedRange\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError9 = true;\n        _iteratorError9 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n            _iterator9.return();\n          }\n        } finally {\n          if (_didIteratorError9) {\n            throw _iteratorError9;\n          }\n        }\n      }\n\n      this._ranges.push(new Range(range.start, range.end));\n    }\n    /**\n     * Fired whenever selection ranges are changed through {@link ~Selection Selection API}.\n     *\n     * @event change\n     */\n\n  }, {\n    key: \"isFake\",\n    get: function get() {\n      return this._isFake;\n    }\n    /**\n     * Returns fake selection label.\n     *\n     * @see #setTo\n     * @returns {String}\n     */\n\n  }, {\n    key: \"fakeSelectionLabel\",\n    get: function get() {\n      return this._fakeSelectionLabel;\n    }\n    /**\n     * Selection anchor. Anchor may be described as a position where the selection starts. Together with\n     * {@link #focus focus} they define the direction of selection, which is important\n     * when expanding/shrinking selection. Anchor is always the start or end of the most recent added range.\n     * It may be a bit unintuitive when there are multiple ranges in selection.\n     *\n     * @see #focus\n     * @type {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"anchor\",\n    get: function get() {\n      if (!this._ranges.length) {\n        return null;\n      }\n\n      var range = this._ranges[this._ranges.length - 1];\n      var anchor = this._lastRangeBackward ? range.end : range.start;\n      return anchor.clone();\n    }\n    /**\n     * Selection focus. Focus is a position where the selection ends.\n     *\n     * @see #anchor\n     * @type {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"focus\",\n    get: function get() {\n      if (!this._ranges.length) {\n        return null;\n      }\n\n      var range = this._ranges[this._ranges.length - 1];\n      var focus = this._lastRangeBackward ? range.start : range.end;\n      return focus.clone();\n    }\n    /**\n     * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n     * collapsed.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      return this.rangeCount === 1 && this._ranges[0].isCollapsed;\n    }\n    /**\n     * Returns number of ranges in selection.\n     *\n     * @type {Number}\n     */\n\n  }, {\n    key: \"rangeCount\",\n    get: function get() {\n      return this._ranges.length;\n    }\n    /**\n     * Specifies whether the {@link #focus} precedes {@link #anchor}.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isBackward\",\n    get: function get() {\n      return !this.isCollapsed && this._lastRangeBackward;\n    }\n    /**\n     * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this selection, or `null`\n     * if the selection is not inside an editable element.\n     *\n     * @type {module:engine/view/editableelement~EditableElement|null}\n     */\n\n  }, {\n    key: \"editableElement\",\n    get: function get() {\n      if (this.anchor) {\n        return this.anchor.editableElement;\n      }\n\n      return null;\n    }\n  }]);\n\n  return Selection;\n}();\n\nexport { Selection as default };\nmix(Selection, EmitterMixin);\n/**\n * An entity that is used to set selection.\n *\n * See also {@link module:engine/view/selection~Selection#setTo}\n *\n * @typedef {\n *    module:engine/view/selection~Selection|\n *    module:engine/view/documentselection~DocumentSelection|\n *    module:engine/view/position~Position|\n *    Iterable.<module:engine/view/range~Range>|\n *    module:engine/view/range~Range|\n *    module:engine/view/item~Item|\n *    null\n * } module:engine/view/selection~Selectable\n */","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/collection\n */\nimport EmitterMixin from './emittermixin';\nimport CKEditorError from './ckeditorerror';\nimport uid from './uid';\nimport mix from './mix';\n/**\n * Collections are ordered sets of objects. Items in the collection can be retrieved by their indexes\n * in the collection (like in an array) or by their ids.\n *\n * If an object without an `id` property is being added to the collection, the `id` property will be generated\n * automatically. Note that the automatically generated id is unique only within this single collection instance.\n *\n * By default an item in the collection is identified by its `id` property. The name of the identifier can be\n * configured through the constructor of the collection.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar Collection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new Collection instance.\n   *\n   * @param {Object} [options={}] The options object.\n   * @param {String} [options.idProperty='id'] The name of the property which is considered to identify an item.\n   */\n  function Collection() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Collection);\n\n    /**\n     * The internal list of items in the collection.\n     *\n     * @private\n     * @member {Object[]}\n     */\n    this._items = [];\n    /**\n     * The internal map of items in the collection.\n     *\n     * @private\n     * @member {Map}\n     */\n\n    this._itemMap = new Map();\n    /**\n     * The name of the property which is considered to identify an item.\n     *\n     * @private\n     * @member {String}\n     */\n\n    this._idProperty = options.idProperty || 'id';\n    /**\n     * A helper mapping external items of a bound collection ({@link #bindTo})\n     * and actual items of this collection. It provides information\n     * necessary to properly remove items bound to another collection.\n     *\n     * See {@link #_bindToInternalToExternalMap}.\n     *\n     * @protected\n     * @member {WeakMap}\n     */\n\n    this._bindToExternalToInternalMap = new WeakMap();\n    /**\n     * A helper mapping items of this collection to external items of a bound collection\n     * ({@link #bindTo}). It provides information necessary to manage the bindings, e.g.\n     * to avoid loops in two–way bindings.\n     *\n     * See {@link #_bindToExternalToInternalMap}.\n     *\n     * @protected\n     * @member {WeakMap}\n     */\n\n    this._bindToInternalToExternalMap = new WeakMap();\n    /**\n     * Stores indexes of skipped items from bound external collection.\n     *\n     * @private\n     * @member {Array}\n     */\n\n    this._skippedIndexesFromExternal = [];\n    /**\n     * A collection instance this collection is bound to as a result\n     * of calling {@link #bindTo} method.\n     *\n     * @protected\n     * @member {module:utils/collection~Collection} #_bindToCollection\n     */\n  }\n  /**\n   * The number of items available in the collection.\n   *\n   * @member {Number} #length\n   */\n\n\n  _createClass(Collection, [{\n    key: \"add\",\n\n    /**\n     * Adds an item into the collection.\n     *\n     * If the item does not have an id, then it will be automatically generated and set on the item.\n     *\n     * @chainable\n     * @param {Object} item\n     * @param {Number} [index] The position of the item in the collection. The item\n     * is pushed to the collection when `index` not specified.\n     * @fires add\n     */\n    value: function add(item, index) {\n      var itemId;\n      var idProperty = this._idProperty;\n\n      if (idProperty in item) {\n        itemId = item[idProperty];\n\n        if (typeof itemId != 'string') {\n          /**\n           * This item's id should be a string.\n           *\n           * @error collection-add-invalid-id\n           */\n          throw new CKEditorError('collection-add-invalid-id');\n        }\n\n        if (this.get(itemId)) {\n          /**\n           * This item already exists in the collection.\n           *\n           * @error collection-add-item-already-exists\n           */\n          throw new CKEditorError('collection-add-item-already-exists');\n        }\n      } else {\n        item[idProperty] = itemId = uid();\n      } // TODO: Use ES6 default function argument.\n\n\n      if (index === undefined) {\n        index = this._items.length;\n      } else if (index > this._items.length || index < 0) {\n        /**\n         * The index number has invalid value.\n         *\n         * @error collection-add-item-bad-index\n         */\n        throw new CKEditorError('collection-add-item-invalid-index');\n      }\n\n      this._items.splice(index, 0, item);\n\n      this._itemMap.set(itemId, item);\n\n      this.fire('add', item, index);\n      return this;\n    }\n    /**\n     * Gets item by its id or index.\n     *\n     * @param {String|Number} idOrIndex The item id or index in the collection.\n     * @returns {Object|null} The requested item or `null` if such item does not exist.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(idOrIndex) {\n      var item;\n\n      if (typeof idOrIndex == 'string') {\n        item = this._itemMap.get(idOrIndex);\n      } else if (typeof idOrIndex == 'number') {\n        item = this._items[idOrIndex];\n      } else {\n        /**\n         * Index or id must be given.\n         *\n         * @error collection-get-invalid-arg\n         */\n        throw new CKEditorError('collection-get-invalid-arg: Index or id must be given.');\n      }\n\n      return item || null;\n    }\n    /**\n     * Returns a boolean indicating whether the collection contains an item.\n     *\n     * @param {Object|String} itemOrId The item or its id in the collection.\n     * @returns {Boolean} `true` if the collection contains the item, `false` otherwise.\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(itemOrId) {\n      if (typeof itemOrId == 'string') {\n        return this._itemMap.has(itemOrId);\n      } else {\n        // Object\n        var idProperty = this._idProperty;\n        var id = itemOrId[idProperty];\n        return this._itemMap.has(id);\n      }\n    }\n    /**\n     * Gets index of item in the collection.\n     * When item is not defined in the collection then index will be equal -1.\n     *\n     * @param {Object|String} itemOrId The item or its id in the collection.\n     * @returns {Number} Index of given item.\n     */\n\n  }, {\n    key: \"getIndex\",\n    value: function getIndex(itemOrId) {\n      var item;\n\n      if (typeof itemOrId == 'string') {\n        item = this._itemMap.get(itemOrId);\n      } else {\n        item = itemOrId;\n      }\n\n      return this._items.indexOf(item);\n    }\n    /**\n     * Removes an item from the collection.\n     *\n     * @param {Object|Number|String} subject The item to remove, its id or index in the collection.\n     * @returns {Object} The removed item.\n     * @fires remove\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(subject) {\n      var index, id, item;\n      var itemDoesNotExist = false;\n      var idProperty = this._idProperty;\n\n      if (typeof subject == 'string') {\n        id = subject;\n        item = this._itemMap.get(id);\n        itemDoesNotExist = !item;\n\n        if (item) {\n          index = this._items.indexOf(item);\n        }\n      } else if (typeof subject == 'number') {\n        index = subject;\n        item = this._items[index];\n        itemDoesNotExist = !item;\n\n        if (item) {\n          id = item[idProperty];\n        }\n      } else {\n        item = subject;\n        id = item[idProperty];\n        index = this._items.indexOf(item);\n        itemDoesNotExist = index == -1 || !this._itemMap.get(id);\n      }\n\n      if (itemDoesNotExist) {\n        /**\n         * Item not found.\n         *\n         * @error collection-remove-404\n         */\n        throw new CKEditorError('collection-remove-404: Item not found.');\n      }\n\n      this._items.splice(index, 1);\n\n      this._itemMap.delete(id);\n\n      var externalItem = this._bindToInternalToExternalMap.get(item);\n\n      this._bindToInternalToExternalMap.delete(item);\n\n      this._bindToExternalToInternalMap.delete(externalItem);\n\n      this.fire('remove', item, index);\n      return item;\n    }\n    /**\n     * Executes the callback for each item in the collection and composes an array or values returned by this callback.\n     *\n     * @param {Function} callback\n     * @param {Object} callback.item\n     * @param {Number} callback.index\n     * @param {Object} ctx Context in which the `callback` will be called.\n     * @returns {Array} The result of mapping.\n     */\n\n  }, {\n    key: \"map\",\n    value: function map(callback, ctx) {\n      return this._items.map(callback, ctx);\n    }\n    /**\n     * Finds the first item in the collection for which the `callback` returns a true value.\n     *\n     * @param {Function} callback\n     * @param {Object} callback.item\n     * @param {Number} callback.index\n     * @param {Object} ctx Context in which the `callback` will be called.\n     * @returns {Object} The item for which `callback` returned a true value.\n     */\n\n  }, {\n    key: \"find\",\n    value: function find(callback, ctx) {\n      return this._items.find(callback, ctx);\n    }\n    /**\n     * Returns an array with items for which the `callback` returned a true value.\n     *\n     * @param {Function} callback\n     * @param {Object} callback.item\n     * @param {Number} callback.index\n     * @param {Object} ctx Context in which the `callback` will be called.\n     * @returns {Object[]} The array with matching items.\n     */\n\n  }, {\n    key: \"filter\",\n    value: function filter(callback, ctx) {\n      return this._items.filter(callback, ctx);\n    }\n    /**\n     * Removes all items from the collection and destroys the binding created using\n     * {@link #bindTo}.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      if (this._bindToCollection) {\n        this.stopListening(this._bindToCollection);\n        this._bindToCollection = null;\n      }\n\n      while (this.length) {\n        this.remove(0);\n      }\n    }\n    /**\n     * Binds and synchronizes the collection with another one.\n     *\n     * The binding can be a simple factory:\n     *\n     *\t\tclass FactoryClass {\n     *\t\t\tconstructor( data ) {\n     *\t\t\t\tthis.label = data.label;\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tconst source = new Collection( { idProperty: 'label' } );\n     *\t\tconst target = new Collection();\n     *\n     *\t\ttarget.bindTo( source ).as( FactoryClass );\n     *\n     *\t\tsource.add( { label: 'foo' } );\n     *\t\tsource.add( { label: 'bar' } );\n     *\n     *\t\tconsole.log( target.length ); // 2\n     *\t\tconsole.log( target.get( 1 ).label ); // 'bar'\n     *\n     *\t\tsource.remove( 0 );\n     *\t\tconsole.log( target.length ); // 1\n     *\t\tconsole.log( target.get( 0 ).label ); // 'bar'\n     *\n     * or the factory driven by a custom callback:\n     *\n     *\t\tclass FooClass {\n     *\t\t\tconstructor( data ) {\n     *\t\t\t\tthis.label = data.label;\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tclass BarClass {\n     *\t\t\tconstructor( data ) {\n     *\t\t\t\tthis.label = data.label;\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tconst source = new Collection( { idProperty: 'label' } );\n     *\t\tconst target = new Collection();\n     *\n     *\t\ttarget.bindTo( source ).using( ( item ) => {\n     *\t\t\tif ( item.label == 'foo' ) {\n     *\t\t\t\treturn new FooClass( item );\n     *\t\t\t} else {\n     *\t\t\t\treturn new BarClass( item );\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\tsource.add( { label: 'foo' } );\n     *\t\tsource.add( { label: 'bar' } );\n     *\n     *\t\tconsole.log( target.length ); // 2\n     *\t\tconsole.log( target.get( 0 ) instanceof FooClass ); // true\n     *\t\tconsole.log( target.get( 1 ) instanceof BarClass ); // true\n     *\n     * or the factory out of property name:\n     *\n     *\t\tconst source = new Collection( { idProperty: 'label' } );\n     *\t\tconst target = new Collection();\n     *\n     *\t\ttarget.bindTo( source ).using( 'label' );\n     *\n     *\t\tsource.add( { label: { value: 'foo' } } );\n     *\t\tsource.add( { label: { value: 'bar' } } );\n     *\n     *\t\tconsole.log( target.length ); // 2\n     *\t\tconsole.log( target.get( 0 ).value ); // 'foo'\n     *\t\tconsole.log( target.get( 1 ).value ); // 'bar'\n     *\n     * It's possible to skip specified items by returning falsy value:\n     *\n     *\t\tconst source = new Collection();\n     *\t\tconst target = new Collection();\n     *\n     *\t\ttarget.bindTo( source ).using( item => {\n     *\t\t\tif ( item.hidden ) {\n     *\t\t\t\treturn null;\n     *\t\t\t}\n     *\n     *\t\t\treturn item;\n     *\t\t} );\n     *\n     *\t\tsource.add( { hidden: true } );\n     *\t\tsource.add( { hidden: false } );\n     *\n     *\t\tconsole.log( source.length ); // 2\n     *\t\tconsole.log( target.length ); // 1\n     *\n     * **Note**: {@link #clear} can be used to break the binding.\n     *\n     * @param {module:utils/collection~Collection} externalCollection A collection to be bound.\n     * @returns {Object}\n     * @returns {module:utils/collection~CollectionBindToChain} The binding chain object.\n     */\n\n  }, {\n    key: \"bindTo\",\n    value: function bindTo(externalCollection) {\n      var _this = this;\n\n      if (this._bindToCollection) {\n        /**\n         * The collection cannot be bound more than once.\n         *\n         * @error collection-bind-to-rebind\n         */\n        throw new CKEditorError('collection-bind-to-rebind: The collection cannot be bound more than once.');\n      }\n\n      this._bindToCollection = externalCollection;\n      return {\n        as: function as(Class) {\n          _this._setUpBindToBinding(function (item) {\n            return new Class(item);\n          });\n        },\n        using: function using(callbackOrProperty) {\n          if (typeof callbackOrProperty == 'function') {\n            _this._setUpBindToBinding(function (item) {\n              return callbackOrProperty(item);\n            });\n          } else {\n            _this._setUpBindToBinding(function (item) {\n              return item[callbackOrProperty];\n            });\n          }\n        }\n      };\n    }\n    /**\n     * Finalizes and activates a binding initiated by {#bindTo}.\n     *\n     * @protected\n     * @param {Function} factory A function which produces collection items.\n     */\n\n  }, {\n    key: \"_setUpBindToBinding\",\n    value: function _setUpBindToBinding(factory) {\n      var _this2 = this;\n\n      var externalCollection = this._bindToCollection; // Adds the item to the collection once a change has been done to the external collection.\n      //\n      // @private\n\n      var addItem = function addItem(evt, externalItem, index) {\n        var isExternalBoundToThis = externalCollection._bindToCollection == _this2;\n\n        var externalItemBound = externalCollection._bindToInternalToExternalMap.get(externalItem); // If an external collection is bound to this collection, which makes it a 2–way binding,\n        // and the particular external collection item is already bound, don't add it here.\n        // The external item has been created **out of this collection's item** and (re)adding it will\n        // cause a loop.\n\n\n        if (isExternalBoundToThis && externalItemBound) {\n          _this2._bindToExternalToInternalMap.set(externalItem, externalItemBound);\n\n          _this2._bindToInternalToExternalMap.set(externalItemBound, externalItem);\n        } else {\n          var item = factory(externalItem); // When there is no item we need to remember skipped index first and then we can skip this item.\n\n          if (!item) {\n            _this2._skippedIndexesFromExternal.push(index);\n\n            return;\n          } // Lets try to put item at the same index as index in external collection\n          // but when there are a skipped items in one or both collections we need to recalculate this index.\n\n\n          var finalIndex = index; // When we try to insert item after some skipped items from external collection we need\n          // to include this skipped items and decrease index.\n          //\n          // For the following example:\n          // external -> [ 'A', 'B - skipped for internal', 'C - skipped for internal' ]\n          // internal -> [ A ]\n          //\n          // Another item is been added at the end of external collection:\n          // external.add( 'D' )\n          // external -> [ 'A', 'B - skipped for internal', 'C - skipped for internal', 'D' ]\n          //\n          // We can't just add 'D' to internal at the same index as index in external because\n          // this will produce empty indexes what is invalid:\n          // internal -> [ 'A', empty, empty, 'D' ]\n          //\n          // So we need to include skipped items and decrease index\n          // internal -> [ 'A', 'D' ]\n\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _this2._skippedIndexesFromExternal[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var skipped = _step.value;\n\n              if (index > skipped) {\n                finalIndex--;\n              }\n            } // We need to take into consideration that external collection could skip some items from\n            // internal collection.\n            //\n            // For the following example:\n            // internal -> [ 'A', 'B - skipped for external', 'C - skipped for external' ]\n            // external -> [ A ]\n            //\n            // Another item is been added at the end of external collection:\n            // external.add( 'D' )\n            // external -> [ 'A', 'D' ]\n            //\n            // We need to include skipped items and place new item after them:\n            // internal -> [ 'A', 'B - skipped for external', 'C - skipped for external', 'D' ]\n\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = externalCollection._skippedIndexesFromExternal[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _skipped = _step2.value;\n\n              if (finalIndex >= _skipped) {\n                finalIndex++;\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          _this2._bindToExternalToInternalMap.set(externalItem, item);\n\n          _this2._bindToInternalToExternalMap.set(item, externalItem);\n\n          _this2.add(item, finalIndex); // After adding new element to internal collection we need update indexes\n          // of skipped items in external collection.\n\n\n          for (var i = 0; i < externalCollection._skippedIndexesFromExternal.length; i++) {\n            if (finalIndex <= externalCollection._skippedIndexesFromExternal[i]) {\n              externalCollection._skippedIndexesFromExternal[i]++;\n            }\n          }\n        }\n      }; // Load the initial content of the collection.\n\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = externalCollection[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var externalItem = _step3.value;\n          addItem(null, externalItem, externalCollection.getIndex(externalItem));\n        } // Synchronize the with collection as new items are added.\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this.listenTo(externalCollection, 'add', addItem); // Synchronize the with collection as new items are removed.\n\n      this.listenTo(externalCollection, 'remove', function (evt, externalItem, index) {\n        var item = _this2._bindToExternalToInternalMap.get(externalItem);\n\n        if (item) {\n          _this2.remove(item);\n        } // After removing element from external collection we need update/remove indexes\n        // of skipped items in internal collection.\n\n\n        _this2._skippedIndexesFromExternal = _this2._skippedIndexesFromExternal.reduce(function (result, skipped) {\n          if (index < skipped) {\n            result.push(skipped - 1);\n          }\n\n          if (index > skipped) {\n            result.push(skipped);\n          }\n\n          return result;\n        }, []);\n      });\n    }\n    /**\n     * Iterable interface.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: Symbol.iterator,\n    value: function value() {\n      return this._items[Symbol.iterator]();\n    }\n    /**\n     * Fired when an item is added to the collection.\n     *\n     * @event add\n     * @param {Object} item The added item.\n     */\n\n    /**\n     * Fired when an item is removed from the collection.\n     *\n     * @event remove\n     * @param {Object} item The removed item.\n     * @param {Number} index Index from which item was removed.\n     */\n\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this._items.length;\n    }\n    /**\n     * Returns the first item from the collection or null when collection is empty.\n     *\n     * @returns {Object|null} The first item or `null` if collection is empty.\n     */\n\n  }, {\n    key: \"first\",\n    get: function get() {\n      return this._items[0] || null;\n    }\n    /**\n     * Returns the last item from the collection or null when collection is empty.\n     *\n     * @returns {Object|null} The last item or `null` if collection is empty.\n     */\n\n  }, {\n    key: \"last\",\n    get: function get() {\n      return this._items[this.length - 1] || null;\n    }\n  }]);\n\n  return Collection;\n}();\n\nexport { Collection as default };\nmix(Collection, EmitterMixin);\n/**\n * An object returned by the {@link module:utils/collection~Collection#bindTo `bindTo()`} method\n * providing functions that specify the type of the binding.\n *\n * See the {@link module:utils/collection~Collection#bindTo `bindTo()`} documentation for examples.\n *\n * @interface module:utils/collection~CollectionBindToChain\n */\n\n/**\n * Creates a callback or a property binding.\n *\n * @method #using\n * @param {Function|String} callbackOrProperty  When the function is passed, it should return\n * the collection items. When the string is provided, the property value is used to create the bound collection items.\n */\n\n/**\n * Creates the class factory binding in which items of the source collection are passed to\n * the constructor of the specified class.\n *\n * @method #as\n * @param {Function} Class The class constructor used to create instances in the factory.\n */","import Symbol from './_Symbol.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nexport default getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n/** `Object#toString` result references. */\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nexport default baseGetTag;","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","'use strict';\n\nvar bind = require('./helpers/bind');\n\nvar isBuffer = require('is-buffer');\n/*global toString:true*/\n// utils is a library of generic helper functions non-specific to axios\n\n\nvar toString = Object.prototype.toString;\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\n\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\n\n\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\n\n\nfunction isFormData(val) {\n  return typeof FormData !== 'undefined' && val instanceof FormData;\n}\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\n\n\nfunction isArrayBufferView(val) {\n  var result;\n\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = val && val.buffer && val.buffer instanceof ArrayBuffer;\n  }\n\n  return result;\n}\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\n\n\nfunction isString(val) {\n  return typeof val === 'string';\n}\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\n\n\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\n\n\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\n\n\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\n\n\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\n\n\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\n\n\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\n\n\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\n\n\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\n\n\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\n\n\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\n\n\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\n\n\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  } // Force an array if not already something iterable\n\n\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\n\n\nfunction merge()\n/* obj1, obj2, obj3, ... */\n{\n  var result = {};\n\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n\n  return result;\n}\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\n\n\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/uid\n */\n\n/**\n * Returns a unique id. This id consist of an 'e' character and a randomly generated string of 32 aphanumeric characters.\n * Each character in uid string represents a hexadecimal digit (base 16).\n *\n * @returns {String} A hexadecimal number representing the id.\n */\nexport default function uid() {\n  var uuid = 'e'; // Make sure that id does not start with number.\n\n  for (var i = 0; i < 8; i++) {\n    uuid += Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  return uuid;\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/observer\n */\nimport DomEmitterMixin from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * Abstract base observer class. Observers are classes which listen to DOM events, do the preliminary\n * processing and fire events on the {@link module:engine/view/document~Document} objects.\n * Observers can also add features to the view, for instance by updating its status or marking elements\n * which need refresh on DOM events.\n *\n * @abstract\n */\n\nvar Observer =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the observer.\n   *\n   * @param {module:engine/view/view~View} view\n   */\n  function Observer(view) {\n    _classCallCheck(this, Observer);\n\n    /**\n     * Instance of the view controller.\n     *\n     * @readonly\n     * @member {module:engine/view/view~View}\n     */\n    this.view = view;\n    /**\n     * Reference to the {@link module:engine/view/document~Document} object.\n     *\n     * @readonly\n     * @member {module:engine/view/document~Document}\n     */\n\n    this.document = view.document;\n    /**\n     * State of the observer. If it is disabled events will not be fired.\n     *\n     * @readonly\n     * @member {Boolean}\n     */\n\n    this.isEnabled = false;\n  }\n  /**\n   * Enables the observer. This method is called when the observer is registered to the\n   * {@link module:engine/view/view~View} and after {@link module:engine/view/view~View#forceRender rendering}\n   * (all observers are {@link #disable disabled} before rendering).\n   *\n   * A typical use case for disabling observers is that mutation observers need to be disabled for the rendering.\n   * However, a child class may not need to be disabled, so it can implement an empty method.\n   *\n   * @see module:engine/view/observer/observer~Observer#disable\n   */\n\n\n  _createClass(Observer, [{\n    key: \"enable\",\n    value: function enable() {\n      this.isEnabled = true;\n    }\n    /**\n     * Disables the observer. This method is called before\n     * {@link module:engine/view/view~View#forceRender rendering} to prevent firing events during rendering.\n     *\n     * @see module:engine/view/observer/observer~Observer#enable\n     */\n\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.isEnabled = false;\n    }\n    /**\n     * Disables and destroys the observer, among others removes event listeners created by the observer.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.disable();\n      this.stopListening();\n    }\n    /**\n     * Starts observing the given root element.\n     *\n     * @method #observe\n     * @param {HTMLElement} domElement\n     * @param {String} name The name of the root element.\n     */\n\n  }]);\n\n  return Observer;\n}();\n\nexport { Observer as default };\nmix(Observer, DomEmitterMixin);","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/tooltip/tooltipview\n */\nimport View from '../view';\nimport '../../theme/components/tooltip/tooltip.css';\n/**\n * The tooltip view class.\n *\n * @extends module:ui/view~View\n */\n\nvar TooltipView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(TooltipView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function TooltipView(locale) {\n    var _this;\n\n    _classCallCheck(this, TooltipView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TooltipView).call(this, locale));\n    /**\n     * The text of the tooltip visible to the user.\n     *\n     * @observable\n     * @member {String} #text\n     */\n\n    _this.set('text', '');\n    /**\n     * The position of the tooltip (south or north).\n     *\n     *\t\t+-----------+\n     *\t\t|   north   |\n     *\t\t+-----------+\n     *\t\t      V\n     *\t\t  [element]\n     *\n     *\t\t  [element]\n     *\t\t      ^\n     *\t\t+-----------+\n     *\t\t|   south   |\n     *\t\t+-----------+\n     *\n     * @observable\n     * @default 's'\n     * @member {'s'|'n'} #position\n     */\n\n\n    _this.set('position', 's');\n\n    var bind = _this.bindTemplate;\n\n    _this.setTemplate({\n      tag: 'span',\n      attributes: {\n        class: ['ck', 'ck-tooltip', bind.to('position', function (position) {\n          return 'ck-tooltip_' + position;\n        }), bind.if('text', 'ck-hidden', function (value) {\n          return !value.trim();\n        })]\n      },\n      children: [{\n        tag: 'span',\n        attributes: {\n          class: ['ck', 'ck-tooltip__text']\n        },\n        children: [{\n          text: bind.to('text')\n        }]\n      }]\n    });\n\n    return _this;\n  }\n\n  return TooltipView;\n}(View);\n\nexport { TooltipView as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _assertThisInitialized from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/button/buttonview\n */\nimport View from '../view';\nimport IconView from '../icon/iconview';\nimport TooltipView from '../tooltip/tooltipview';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\nimport { getEnvKeystrokeText } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport '../../theme/components/button/button.css';\n/**\n * The button view class.\n *\n *\t\tconst view = new ButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true,\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * @extends module:ui/view~View\n * @implements module:ui/button/button~Button\n */\n\nvar ButtonView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(ButtonView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function ButtonView(locale) {\n    var _this;\n\n    _classCallCheck(this, ButtonView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ButtonView).call(this, locale));\n    var bind = _this.bindTemplate;\n    var ariaLabelUid = uid(); // Implement the Button interface.\n\n    _this.set('class');\n\n    _this.set('labelStyle');\n\n    _this.set('icon');\n\n    _this.set('isEnabled', true);\n\n    _this.set('isOn', false);\n\n    _this.set('isVisible', true);\n\n    _this.set('keystroke');\n\n    _this.set('label');\n\n    _this.set('tabindex', -1);\n\n    _this.set('tooltip');\n\n    _this.set('tooltipPosition', 's');\n\n    _this.set('type', 'button');\n\n    _this.set('withText', false);\n    /**\n     * Collection of the child views inside of the button {@link #element}.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n\n    _this.children = _this.createCollection();\n    /**\n     * Tooltip of the button view. It is configurable using the {@link #tooltip tooltip attribute}.\n     *\n     * @readonly\n     * @member {module:ui/tooltip/tooltipview~TooltipView} #tooltipView\n     */\n\n    _this.tooltipView = _this._createTooltipView();\n    /**\n     * Label of the button view. It is configurable using the {@link #label label attribute}.\n     *\n     * @readonly\n     * @member {module:ui/view~View} #labelView\n     */\n\n    _this.labelView = _this._createLabelView(ariaLabelUid);\n    /**\n     * The icon view of the button. Will be added to {@link #children} when the\n     * {@link #icon icon attribute} is defined.\n     *\n     * @readonly\n     * @member {module:ui/icon/iconview~IconView} #iconView\n     */\n\n    _this.iconView = new IconView();\n\n    _this.iconView.extendTemplate({\n      attributes: {\n        class: 'ck-button__icon'\n      }\n    });\n    /**\n     * Tooltip of the button bound to the template.\n     *\n     * @see #tooltip\n     * @see #_getTooltipString\n     * @private\n     * @observable\n     * @member {Boolean} #_tooltipString\n     */\n\n\n    _this.bind('_tooltipString').to(_assertThisInitialized(_this), 'tooltip', _assertThisInitialized(_this), 'label', _assertThisInitialized(_this), 'keystroke', _this._getTooltipString.bind(_assertThisInitialized(_this)));\n\n    _this.setTemplate({\n      tag: 'button',\n      attributes: {\n        class: ['ck', 'ck-button', bind.to('class'), bind.if('isEnabled', 'ck-disabled', function (value) {\n          return !value;\n        }), bind.if('isVisible', 'ck-hidden', function (value) {\n          return !value;\n        }), bind.to('isOn', function (value) {\n          return value ? 'ck-on' : 'ck-off';\n        }), bind.if('withText', 'ck-button_with-text')],\n        type: bind.to('type', function (value) {\n          return value ? value : 'button';\n        }),\n        tabindex: bind.to('tabindex'),\n        'aria-labelledby': \"ck-editor__aria-label_\".concat(ariaLabelUid),\n        'aria-disabled': bind.if('isEnabled', true, function (value) {\n          return !value;\n        }),\n        'aria-pressed': bind.if('isOn', true)\n      },\n      children: _this.children,\n      on: {\n        mousedown: bind.to(function (evt) {\n          evt.preventDefault();\n        }),\n        click: bind.to(function (evt) {\n          // We can't make the button disabled using the disabled attribute, because it won't be focusable.\n          // Though, shouldn't this condition be moved to the button controller?\n          if (_this.isEnabled) {\n            _this.fire('execute');\n          } else {\n            // Prevent the default when button is disabled, to block e.g.\n            // automatic form submitting. See ckeditor/ckeditor5-link#74.\n            evt.preventDefault();\n          }\n        })\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ButtonView, [{\n    key: \"render\",\n    value: function render() {\n      _get(_getPrototypeOf(ButtonView.prototype), \"render\", this).call(this);\n\n      if (this.icon) {\n        this.iconView.bind('content').to(this, 'icon');\n        this.children.add(this.iconView);\n      }\n\n      this.children.add(this.tooltipView);\n      this.children.add(this.labelView);\n    }\n    /**\n     * Focuses the {@link #element} of the button.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.element.focus();\n    }\n    /**\n     * Creates a {@link module:ui/tooltip/tooltipview~TooltipView} instance and binds it with button\n     * attributes.\n     *\n     * @private\n     * @returns {module:ui/tooltip/tooltipview~TooltipView}\n     */\n\n  }, {\n    key: \"_createTooltipView\",\n    value: function _createTooltipView() {\n      var tooltipView = new TooltipView();\n      tooltipView.bind('text').to(this, '_tooltipString');\n      tooltipView.bind('position').to(this, 'tooltipPosition');\n      return tooltipView;\n    }\n    /**\n     * Creates a label view instance and binds it with button attributes.\n     *\n     * @private\n     * @param {String} ariaLabelUid The aria label UID.\n     * @returns {module:ui/view~View}\n     */\n\n  }, {\n    key: \"_createLabelView\",\n    value: function _createLabelView(ariaLabelUid) {\n      var labelView = new View();\n      var bind = this.bindTemplate;\n      labelView.setTemplate({\n        tag: 'span',\n        attributes: {\n          class: ['ck', 'ck-button__label'],\n          style: bind.to('labelStyle'),\n          id: \"ck-editor__aria-label_\".concat(ariaLabelUid)\n        },\n        children: [{\n          text: this.bindTemplate.to('label')\n        }]\n      });\n      return labelView;\n    }\n    /**\n     * Gets the text for the {@link #tooltipView} from the combination of\n     * {@link #tooltip}, {@link #label} and {@link #keystroke} attributes.\n     *\n     * @private\n     * @see #tooltip\n     * @see #_tooltipString\n     * @param {Boolean|String|Function} tooltip Button tooltip.\n     * @param {String} label Button label.\n     * @param {String} keystroke Button keystroke.\n     * @returns {String}\n     */\n\n  }, {\n    key: \"_getTooltipString\",\n    value: function _getTooltipString(tooltip, label, keystroke) {\n      if (tooltip) {\n        if (typeof tooltip == 'string') {\n          return tooltip;\n        } else {\n          if (keystroke) {\n            keystroke = getEnvKeystrokeText(keystroke);\n          }\n\n          if (tooltip instanceof Function) {\n            return tooltip(label, keystroke);\n          } else {\n            return \"\".concat(label).concat(keystroke ? \" (\".concat(keystroke, \")\") : '');\n          }\n        }\n      }\n\n      return '';\n    }\n  }]);\n\n  return ButtonView;\n}(View);\n\nexport { ButtonView as default };","import root from './_root.js';\n/** Built-in value references. */\n\nvar Symbol = root.Symbol;\nexport default Symbol;","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/treewalker\n */\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport Element from './element';\nimport Position from './position';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Position iterator class. It allows to iterate forward and backward over the document.\n */\n\nvar TreeWalker =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a range iterator. All parameters are optional, but you have to specify either `boundaries` or `startPosition`.\n   *\n   * @constructor\n   * @param {Object} [options={}] Object with configuration.\n   * @param {'forward'|'backward'} [options.direction='forward'] Walking direction.\n   * @param {module:engine/model/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n   * @param {module:engine/model/position~Position} [options.startPosition] Starting position.\n   * @param {Boolean} [options.singleCharacters=false] Flag indicating whether all consecutive characters with the same attributes\n   * should be returned one by one as multiple {@link module:engine/model/textproxy~TextProxy} (`true`) objects or as one\n   * {@link module:engine/model/textproxy~TextProxy} (`false`).\n   * @param {Boolean} [options.shallow=false] Flag indicating whether iterator should enter elements or not. If the\n   * iterator is shallow child nodes of any iterated node will not be returned along with `elementEnd` tag.\n   * @param {Boolean} [options.ignoreElementEnd=false] Flag indicating whether iterator should ignore `elementEnd`\n   * tags. If the option is true walker will not return a parent node of start position. If this option is `true`\n   * each {@link module:engine/model/element~Element} will be returned once, while if the option is `false` they might be returned\n   * twice: for `'elementStart'` and `'elementEnd'`.\n   */\n  function TreeWalker() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, TreeWalker);\n\n    if (!options.boundaries && !options.startPosition) {\n      /**\n       * Neither boundaries nor starting position of a `TreeWalker` have been defined.\n       *\n       * @error model-tree-walker-no-start-position\n       */\n      throw new CKEditorError('model-tree-walker-no-start-position: Neither boundaries nor starting position have been defined.');\n    }\n\n    var direction = options.direction || 'forward';\n\n    if (direction != 'forward' && direction != 'backward') {\n      throw new CKEditorError('model-tree-walker-unknown-direction: Only `backward` and `forward` direction allowed.', {\n        direction: direction\n      });\n    }\n    /**\n     * Walking direction. Defaults `'forward'`.\n     *\n     * @readonly\n     * @member {'backward'|'forward'} module:engine/model/treewalker~TreeWalker#direction\n     */\n\n\n    this.direction = direction;\n    /**\n     * Iterator boundaries.\n     *\n     * When the iterator is walking `'forward'` on the end of boundary or is walking `'backward'`\n     * on the start of boundary, then `{ done: true }` is returned.\n     *\n     * If boundaries are not defined they are set before first and after last child of the root node.\n     *\n     * @readonly\n     * @member {module:engine/model/range~Range} module:engine/model/treewalker~TreeWalker#boundaries\n     */\n\n    this.boundaries = options.boundaries || null;\n    /**\n     * Iterator position. This is always static position, even if the initial position was a\n     * {@link module:engine/model/liveposition~LivePosition live position}. If start position is not defined then position depends\n     * on {@link #direction}. If direction is `'forward'` position starts form the beginning, when direction\n     * is `'backward'` position starts from the end.\n     *\n     * @readonly\n     * @member {module:engine/model/position~Position} module:engine/model/treewalker~TreeWalker#position\n     */\n\n    if (options.startPosition) {\n      this.position = options.startPosition.clone();\n    } else {\n      this.position = Position._createAt(this.boundaries[this.direction == 'backward' ? 'end' : 'start']);\n    } // Reset position stickiness in case it was set to other value, as the stickiness is kept after cloning.\n\n\n    this.position.stickiness = 'toNone';\n    /**\n     * Flag indicating whether all consecutive characters with the same attributes should be\n     * returned as one {@link module:engine/model/textproxy~TextProxy} (`true`) or one by one (`false`).\n     *\n     * @readonly\n     * @member {Boolean} module:engine/model/treewalker~TreeWalker#singleCharacters\n     */\n\n    this.singleCharacters = !!options.singleCharacters;\n    /**\n     * Flag indicating whether iterator should enter elements or not. If the iterator is shallow child nodes of any\n     * iterated node will not be returned along with `elementEnd` tag.\n     *\n     * @readonly\n     * @member {Boolean} module:engine/model/treewalker~TreeWalker#shallow\n     */\n\n    this.shallow = !!options.shallow;\n    /**\n     * Flag indicating whether iterator should ignore `elementEnd` tags. If the option is true walker will not\n     * return a parent node of the start position. If this option is `true` each {@link module:engine/model/element~Element} will\n     * be returned once, while if the option is `false` they might be returned twice:\n     * for `'elementStart'` and `'elementEnd'`.\n     *\n     * @readonly\n     * @member {Boolean} module:engine/model/treewalker~TreeWalker#ignoreElementEnd\n     */\n\n    this.ignoreElementEnd = !!options.ignoreElementEnd;\n    /**\n     * Start boundary cached for optimization purposes.\n     *\n     * @private\n     * @member {module:engine/model/element~Element} module:engine/model/treewalker~TreeWalker#_boundaryStartParent\n     */\n\n    this._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;\n    /**\n     * End boundary cached for optimization purposes.\n     *\n     * @private\n     * @member {module:engine/model/element~Element} module:engine/model/treewalker~TreeWalker#_boundaryEndParent\n     */\n\n    this._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;\n    /**\n     * Parent of the most recently visited node. Cached for optimization purposes.\n     *\n     * @private\n     * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n     * module:engine/model/treewalker~TreeWalker#_visitedParent\n     */\n\n    this._visitedParent = this.position.parent;\n  }\n  /**\n   * Iterable interface.\n   *\n   * @returns {Iterable.<module:engine/model/treewalker~TreeWalkerValue>}\n   */\n\n\n  _createClass(TreeWalker, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this;\n    }\n    /**\n     * Moves {@link #position} in the {@link #direction} skipping values as long as the callback function returns `true`.\n     *\n     * For example:\n     *\n     * \t\twalker.skip( value => value.type == 'text' ); // <paragraph>[]foo</paragraph> -> <paragraph>foo[]</paragraph>\n     * \t\twalker.skip( () => true ); // Move the position to the end: <paragraph>[]foo</paragraph> -> <paragraph>foo</paragraph>[]\n     * \t\twalker.skip( () => false ); // Do not move the position.\n     *\n     * @param {Function} skip Callback function. Gets {@link module:engine/model/treewalker~TreeWalkerValue} and should\n     * return `true` if the value should be skipped or `false` if not.\n     */\n\n  }, {\n    key: \"skip\",\n    value: function skip(_skip) {\n      var done, value, prevPosition, prevVisitedParent;\n\n      do {\n        prevPosition = this.position;\n        prevVisitedParent = this._visitedParent;\n\n        var _this$next = this.next();\n\n        done = _this$next.done;\n        value = _this$next.value;\n      } while (!done && _skip(value));\n\n      if (!done) {\n        this.position = prevPosition;\n        this._visitedParent = prevVisitedParent;\n      }\n    }\n    /**\n     * Gets the next tree walker's value.\n     *\n     * @returns {module:engine/model/treewalker~TreeWalkerValue} Next tree walker's value.\n     */\n\n  }, {\n    key: \"next\",\n    value: function next() {\n      if (this.direction == 'forward') {\n        return this._next();\n      } else {\n        return this._previous();\n      }\n    }\n    /**\n     * Makes a step forward in model. Moves the {@link #position} to the next position and returns the encountered value.\n     *\n     * @private\n     * @returns {Object}\n     * @returns {Boolean} return.done True if iterator is done.\n     * @returns {module:engine/model/treewalker~TreeWalkerValue} return.value Information about taken step.\n     */\n\n  }, {\n    key: \"_next\",\n    value: function _next() {\n      var previousPosition = this.position;\n      var position = this.position.clone();\n      var parent = this._visitedParent; // We are at the end of the root.\n\n      if (parent.parent === null && position.offset === parent.maxOffset) {\n        return {\n          done: true\n        };\n      } // We reached the walker boundary.\n\n\n      if (parent === this._boundaryEndParent && position.offset == this.boundaries.end.offset) {\n        return {\n          done: true\n        };\n      }\n\n      var node = position.textNode ? position.textNode : position.nodeAfter;\n\n      if (node instanceof Element) {\n        if (!this.shallow) {\n          // Manual operations on path internals for optimization purposes. Here and in the rest of the method.\n          position.path.push(0);\n          this._visitedParent = node;\n        } else {\n          position.offset++;\n        }\n\n        this.position = position;\n        return formatReturnValue('elementStart', node, previousPosition, position, 1);\n      } else if (node instanceof Text) {\n        var charactersCount;\n\n        if (this.singleCharacters) {\n          charactersCount = 1;\n        } else {\n          var offset = node.endOffset;\n\n          if (this._boundaryEndParent == parent && this.boundaries.end.offset < offset) {\n            offset = this.boundaries.end.offset;\n          }\n\n          charactersCount = offset - position.offset;\n        }\n\n        var offsetInTextNode = position.offset - node.startOffset;\n        var item = new TextProxy(node, offsetInTextNode, charactersCount);\n        position.offset += charactersCount;\n        this.position = position;\n        return formatReturnValue('text', item, previousPosition, position, charactersCount);\n      } else {\n        // `node` is not set, we reached the end of current `parent`.\n        position.path.pop();\n        position.offset++;\n        this.position = position;\n        this._visitedParent = parent.parent;\n\n        if (this.ignoreElementEnd) {\n          return this._next();\n        } else {\n          return formatReturnValue('elementEnd', parent, previousPosition, position);\n        }\n      }\n    }\n    /**\n     * Makes a step backward in model. Moves the {@link #position} to the previous position and returns the encountered value.\n     *\n     * @private\n     * @returns {Object}\n     * @returns {Boolean} return.done True if iterator is done.\n     * @returns {module:engine/model/treewalker~TreeWalkerValue} return.value Information about taken step.\n     */\n\n  }, {\n    key: \"_previous\",\n    value: function _previous() {\n      var previousPosition = this.position;\n      var position = this.position.clone();\n      var parent = this._visitedParent; // We are at the beginning of the root.\n\n      if (parent.parent === null && position.offset === 0) {\n        return {\n          done: true\n        };\n      } // We reached the walker boundary.\n\n\n      if (parent == this._boundaryStartParent && position.offset == this.boundaries.start.offset) {\n        return {\n          done: true\n        };\n      } // Get node just before current position\n\n\n      var node = position.textNode ? position.textNode : position.nodeBefore;\n\n      if (node instanceof Element) {\n        position.offset--;\n\n        if (!this.shallow) {\n          position.path.push(node.maxOffset);\n          this.position = position;\n          this._visitedParent = node;\n\n          if (this.ignoreElementEnd) {\n            return this._previous();\n          } else {\n            return formatReturnValue('elementEnd', node, previousPosition, position);\n          }\n        } else {\n          this.position = position;\n          return formatReturnValue('elementStart', node, previousPosition, position, 1);\n        }\n      } else if (node instanceof Text) {\n        var charactersCount;\n\n        if (this.singleCharacters) {\n          charactersCount = 1;\n        } else {\n          var offset = node.startOffset;\n\n          if (this._boundaryStartParent == parent && this.boundaries.start.offset > offset) {\n            offset = this.boundaries.start.offset;\n          }\n\n          charactersCount = position.offset - offset;\n        }\n\n        var offsetInTextNode = position.offset - node.startOffset;\n        var item = new TextProxy(node, offsetInTextNode - charactersCount, charactersCount);\n        position.offset -= charactersCount;\n        this.position = position;\n        return formatReturnValue('text', item, previousPosition, position, charactersCount);\n      } else {\n        // `node` is not set, we reached the beginning of current `parent`.\n        position.path.pop();\n        this.position = position;\n        this._visitedParent = parent.parent;\n        return formatReturnValue('elementStart', parent, previousPosition, position, 1);\n      }\n    }\n  }]);\n\n  return TreeWalker;\n}();\n\nexport { TreeWalker as default };\n\nfunction formatReturnValue(type, item, previousPosition, nextPosition, length) {\n  return {\n    done: false,\n    value: {\n      type: type,\n      item: item,\n      previousPosition: previousPosition,\n      nextPosition: nextPosition,\n      length: length\n    }\n  };\n}\n/**\n * Type of the step made by {@link module:engine/model/treewalker~TreeWalker}.\n * Possible values: `'elementStart'` if walker is at the beginning of a node, `'elementEnd'` if walker is at the end of node,\n * `'character'` if walker traversed over a character, or `'text'` if walker traversed over multiple characters (available in\n * character merging mode, see {@link module:engine/model/treewalker~TreeWalker#constructor}).\n *\n * @typedef {'elementStart'|'elementEnd'|'character'|'text'} module:engine/model/treewalker~TreeWalkerValueType\n */\n\n/**\n * Object returned by {@link module:engine/model/treewalker~TreeWalker} when traversing tree model.\n *\n * @typedef {Object} module:engine/model/treewalker~TreeWalkerValue\n * @property {module:engine/model/treewalker~TreeWalkerValueType} type\n * @property {module:engine/model/item~Item} item Item between old and new positions of {@link module:engine/model/treewalker~TreeWalker}.\n * @property {module:engine/model/position~Position} previousPosition Previous position of the iterator.\n * * Forward iteration: For `'elementEnd'` it is the last position inside the element. For all other types it is the\n * position before the item.\n * * Backward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after item.\n * @property {module:engine/model/position~Position} nextPosition Next position of the iterator.\n * * Forward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after the item.\n * * Backward iteration: For `'elementEnd'` it is last position inside element. For all other types it is the position\n * before the item.\n * @property {Number} [length] Length of the item. For `'elementStart'` and `'character'` it is 1. For `'text'` it is\n * the length of the text. For `'elementEnd'` it is `undefined`.\n */\n\n/**\n * Tree walking directions.\n *\n * @typedef {'forward'|'backward'} module:engine/view/treewalker~TreeWalkerDirection\n */","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/textproxy\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * TextProxy is a wrapper for substring of {@link module:engine/view/text~Text}. Instance of this class is created by\n * {@link module:engine/view/treewalker~TreeWalker} when only a part of {@link module:engine/view/text~Text} needs to be returned.\n *\n * `TextProxy` has an API similar to {@link module:engine/view/text~Text Text} and allows to do most of the common tasks performed\n * on view nodes.\n *\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\n * See {@link module:engine/view/textproxy~TextProxy#isPartial}.\n *\n * **Note:** `TextProxy` is a readonly interface.\n *\n * **Note:** `TextProxy` instances are created on the fly basing on the current state of parent {@link module:engine/view/text~Text}.\n * Because of this it is highly unrecommended to store references to `TextProxy instances because they might get\n * invalidated due to operations on Document. Also TextProxy is not a {@link module:engine/view/node~Node} so it can not be\n * inserted as a child of {@link module:engine/view/element~Element}.\n *\n * `TextProxy` instances are created by {@link module:engine/view/treewalker~TreeWalker view tree walker}. You should not need to create\n * an instance of this class by your own.\n */\n\nvar TextProxy =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a text proxy.\n   *\n   * @protected\n   * @param {module:engine/view/text~Text} textNode Text node which part is represented by this text proxy.\n   * @param {Number} offsetInText Offset in {@link module:engine/view/textproxy~TextProxy#textNode text node}\n   * from which the text proxy starts.\n   * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\n   * @constructor\n   */\n  function TextProxy(textNode, offsetInText, length) {\n    _classCallCheck(this, TextProxy);\n\n    /**\n     * Reference to the {@link module:engine/view/text~Text} element which TextProxy is a substring.\n     *\n     * @readonly\n     * @member {module:engine/view/text~Text} module:engine/view/textproxy~TextProxy#textNode\n     */\n    this.textNode = textNode;\n\n    if (offsetInText < 0 || offsetInText > textNode.data.length) {\n      /**\n       * Given offsetInText value is incorrect.\n       *\n       * @error view-textproxy-wrong-offsetintext\n       */\n      throw new CKEditorError('view-textproxy-wrong-offsetintext: Given offsetInText value is incorrect.');\n    }\n\n    if (length < 0 || offsetInText + length > textNode.data.length) {\n      /**\n       * Given length value is incorrect.\n       *\n       * @error view-textproxy-wrong-length\n       */\n      throw new CKEditorError('view-textproxy-wrong-length: Given length value is incorrect.');\n    }\n    /**\n     * Text data represented by this text proxy.\n     *\n     * @readonly\n     * @member {String} module:engine/view/textproxy~TextProxy#data\n     */\n\n\n    this.data = textNode.data.substring(offsetInText, offsetInText + length);\n    /**\n     * Offset in the `textNode` where this `TextProxy` instance starts.\n     *\n     * @readonly\n     * @member {Number} module:engine/view/textproxy~TextProxy#offsetInText\n     */\n\n    this.offsetInText = offsetInText;\n  }\n  /**\n   * Offset size of this node.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\n  _createClass(TextProxy, [{\n    key: \"is\",\n\n    /**\n     * Checks whether given view tree object is of given type.\n     *\n     * Read more in {@link module:engine/view/node~Node#is}.\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n    value: function is(type) {\n      return type == 'textProxy';\n    }\n    /**\n     * Returns ancestors array of this text proxy.\n     *\n     * @param {Object} options Options object.\n     * @param {Boolean} [options.includeSelf=false] When set to `true` {#textNode} will be also included in parent's array.\n     * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to\n     * root element, otherwise root element will be the first item in the array.\n     * @returns {Array} Array with ancestors.\n     */\n\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeSelf: false,\n        parentFirst: false\n      };\n      var ancestors = [];\n      var parent = options.includeSelf ? this.textNode : this.parent;\n\n      while (parent !== null) {\n        ancestors[options.parentFirst ? 'push' : 'unshift'](parent);\n        parent = parent.parent;\n      }\n\n      return ancestors;\n    }\n  }, {\n    key: \"offsetSize\",\n    get: function get() {\n      return this.data.length;\n    }\n    /**\n     * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/view/text~Text text node}\n     * (`true`) or the whole text node (`false`).\n     *\n     * This is `false` when text proxy starts at the very beginning of {@link module:engine/view/textproxy~TextProxy#textNode textNode}\n     * ({@link module:engine/view/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\n     * text node size.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isPartial\",\n    get: function get() {\n      return this.data.length !== this.textNode.data.length;\n    }\n    /**\n     * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\n     *\n     * @readonly\n     * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return this.textNode.parent;\n    }\n    /**\n     * Root of this text proxy, which is same as root of text node represented by this text proxy.\n     *\n     * @readonly\n     * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this.textNode.root;\n    }\n    /**\n     * {@link module:engine/view/document~Document View document} that owns this text proxy, or `null` if the text proxy is inside\n     * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n     *\n     * @readonly\n     * @type {module:engine/view/document~Document|null}\n     */\n\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.textNode.document;\n    }\n  }]);\n\n  return TextProxy;\n}();\n\nexport { TextProxy as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/rect\n */\nimport isRange from './isrange';\nimport isWindow from './iswindow';\nimport getBorderWidths from './getborderwidths';\nimport log from '../log';\nimport isText from './istext';\nimport { isElement } from 'lodash-es';\nvar rectProperties = ['top', 'right', 'bottom', 'left', 'width', 'height'];\n/**\n * A helper class representing a `ClientRect` object, e.g. value returned by\n * the native `object.getBoundingClientRect()` method. Provides a set of methods\n * to manipulate the rect and compare it against other rect instances.\n */\n\nvar Rect =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of rect.\n   *\n   *\t\t// Rect of an HTMLElement.\n   *\t\tconst rectA = new Rect( document.body );\n   *\n   *\t\t// Rect of a DOM Range.\n   *\t\tconst rectB = new Rect( document.getSelection().getRangeAt( 0 ) );\n   *\n   *\t\t// Rect of a window (web browser viewport).\n   *\t\tconst rectC = new Rect( window );\n   *\n   *\t\t// Rect out of an object.\n   *\t\tconst rectD = new Rect( { top: 0, right: 10, bottom: 10, left: 0, width: 10, height: 10 } );\n   *\n   *\t\t// Rect out of another Rect instance.\n   *\t\tconst rectE = new Rect( rectD );\n   *\n   *\t\t// Rect out of a ClientRect.\n   *\t\tconst rectF = new Rect( document.body.getClientRects().item( 0 ) );\n   *\n   * **Note**: By default a rect of an HTML element includes its CSS borders and scrollbars (if any)\n   * ant the rect of a `window` includes scrollbars too. Use {@link #excludeScrollbarsAndBorders}\n   * to get the inner part of the rect.\n   *\n   * @param {HTMLElement|Range|Window|ClientRect|module:utils/dom/rect~Rect|Object} source A source object to create the rect.\n   */\n  function Rect(source) {\n    _classCallCheck(this, Rect);\n\n    var isSourceRange = isRange(source);\n    /**\n     * The object this rect is for.\n     *\n     * @protected\n     * @readonly\n     * @member {HTMLElement|Range|ClientRect|module:utils/dom/rect~Rect|Object} #_source\n     */\n\n    Object.defineProperty(this, '_source', {\n      // If the source is a Rect instance, copy it's #_source.\n      value: source._source || source,\n      writable: true,\n      enumerable: false\n    });\n\n    if (isElement(source) || isSourceRange) {\n      var sourceNode = isSourceRange ? source.startContainer : source;\n\n      if (!sourceNode.ownerDocument || !sourceNode.ownerDocument.body.contains(sourceNode)) {\n        /**\n         * The `Rect` class depends on `getBoundingClientRect` and `getClientRects` DOM methods.\n         * If the {@link #constructor source} of a rect in an HTML element or a DOM range but it does\n         * not belong to any rendered DOM tree, these methods will fail to obtain the geometry and\n         * the rect instance makes little sense to the features using it.\n         *\n         * To get rid of this warning make sure the source passed to the constructor\n         * is a descendant of `window.document.body`.\n         *\n         * @error rect-source-not-in-dom\n         * @param {String} source The source of the Rect instance.\n         */\n        log.warn('rect-source-not-in-dom: The source of this rect does not belong to any rendered DOM tree.', {\n          source: source\n        });\n      }\n\n      if (isSourceRange) {\n        copyRectProperties(this, Rect.getDomRangeRects(source)[0]);\n      } else {\n        copyRectProperties(this, source.getBoundingClientRect());\n      }\n    } else if (isWindow(source)) {\n      var innerWidth = source.innerWidth,\n          innerHeight = source.innerHeight;\n      copyRectProperties(this, {\n        top: 0,\n        right: innerWidth,\n        bottom: innerHeight,\n        left: 0,\n        width: innerWidth,\n        height: innerHeight\n      });\n    } else {\n      copyRectProperties(this, source);\n    }\n    /**\n     * The \"top\" value of the rect.\n     *\n     * @readonly\n     * @member {Number} #top\n     */\n\n    /**\n     * The \"right\" value of the rect.\n     *\n     * @readonly\n     * @member {Number} #right\n     */\n\n    /**\n     * The \"bottom\" value of the rect.\n     *\n     * @readonly\n     * @member {Number} #bottom\n     */\n\n    /**\n     * The \"left\" value of the rect.\n     *\n     * @readonly\n     * @member {Number} #left\n     */\n\n    /**\n     * The \"width\" value of the rect.\n     *\n     * @readonly\n     * @member {Number} #width\n     */\n\n    /**\n     * The \"height\" value of the rect.\n     *\n     * @readonly\n     * @member {Number} #height\n     */\n\n  }\n  /**\n   * Returns a clone of the rect.\n   *\n   * @returns {module:utils/dom/rect~Rect} A cloned rect.\n   */\n\n\n  _createClass(Rect, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Rect(this);\n    }\n    /**\n     * Moves the rect so that its upper–left corner lands in desired `[ x, y ]` location.\n     *\n     * @param {Number} x Desired horizontal location.\n     * @param {Number} y Desired vertical location.\n     * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n     */\n\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(x, y) {\n      this.top = y;\n      this.right = x + this.width;\n      this.bottom = y + this.height;\n      this.left = x;\n      return this;\n    }\n    /**\n     * Moves the rect in–place by a dedicated offset.\n     *\n     * @param {Number} x A horizontal offset.\n     * @param {Number} y A vertical offset\n     * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n     */\n\n  }, {\n    key: \"moveBy\",\n    value: function moveBy(x, y) {\n      this.top += y;\n      this.right += x;\n      this.left += x;\n      this.bottom += y;\n      return this;\n    }\n    /**\n     * Returns a new rect a a result of intersection with another rect.\n     *\n     * @param {module:utils/dom/rect~Rect} anotherRect\n     * @returns {module:utils/dom/rect~Rect}\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(anotherRect) {\n      var rect = {\n        top: Math.max(this.top, anotherRect.top),\n        right: Math.min(this.right, anotherRect.right),\n        bottom: Math.min(this.bottom, anotherRect.bottom),\n        left: Math.max(this.left, anotherRect.left)\n      };\n      rect.width = rect.right - rect.left;\n      rect.height = rect.bottom - rect.top;\n\n      if (rect.width < 0 || rect.height < 0) {\n        return null;\n      } else {\n        return new Rect(rect);\n      }\n    }\n    /**\n     * Returns the area of intersection with another rect.\n     *\n     * @param {module:utils/dom/rect~Rect} anotherRect [description]\n     * @returns {Number} Area of intersection.\n     */\n\n  }, {\n    key: \"getIntersectionArea\",\n    value: function getIntersectionArea(anotherRect) {\n      var rect = this.getIntersection(anotherRect);\n\n      if (rect) {\n        return rect.getArea();\n      } else {\n        return 0;\n      }\n    }\n    /**\n     * Returns the area of the rect.\n     *\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"getArea\",\n    value: function getArea() {\n      return this.width * this.height;\n    }\n    /**\n     * Returns a new rect, a part of the original rect, which is actually visible to the user,\n     * e.g. an original rect cropped by parent element rects which have `overflow` set in CSS\n     * other than `\"visible\"`.\n     *\n     * If there's no such visible rect, which is when the rect is limited by one or many of\n     * the ancestors, `null` is returned.\n     *\n     * @returns {module:utils/dom/rect~Rect|null} A visible rect instance or `null`, if there's none.\n     */\n\n  }, {\n    key: \"getVisible\",\n    value: function getVisible() {\n      var source = this._source;\n      var visibleRect = this.clone(); // There's no ancestor to crop <body> with the overflow.\n\n      if (!isBody(source)) {\n        var parent = source.parentNode || source.commonAncestorContainer; // Check the ancestors all the way up to the <body>.\n\n        while (parent && !isBody(parent)) {\n          var parentRect = new Rect(parent);\n          var intersectionRect = visibleRect.getIntersection(parentRect);\n\n          if (intersectionRect) {\n            if (intersectionRect.getArea() < visibleRect.getArea()) {\n              // Reduce the visible rect to the intersection.\n              visibleRect = intersectionRect;\n            }\n          } else {\n            // There's no intersection, the rect is completely invisible.\n            return null;\n          }\n\n          parent = parent.parentNode;\n        }\n      }\n\n      return visibleRect;\n    }\n    /**\n     * Checks if all property values ({@link #top}, {@link #left}, {@link #right},\n     * {@link #bottom}, {@link #width} and {@link #height}) are the equal in both rect\n     * instances.\n     *\n     * @param {module:utils/dom/rect~Rect} rect A rect instance to compare with.\n     * @returns {Boolean} `true` when Rects are equal. `false` otherwise.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(anotherRect) {\n      for (var _i = 0, _rectProperties = rectProperties; _i < _rectProperties.length; _i++) {\n        var prop = _rectProperties[_i];\n\n        if (this[prop] !== anotherRect[prop]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Checks whether a rect fully contains another rect instance.\n     *\n     * @param {module:utils/dom/rect~Rect} anotherRect\n     * @returns {Boolean} `true` if contains, `false` otherwise.\n     */\n\n  }, {\n    key: \"contains\",\n    value: function contains(anotherRect) {\n      var intersectRect = this.getIntersection(anotherRect);\n      return !!(intersectRect && intersectRect.isEqual(anotherRect));\n    }\n    /**\n     * Excludes scrollbars and CSS borders from the rect.\n     *\n     * * Borders are removed when {@link #_source} is an HTML element.\n     * * Scrollbars are excluded from HTML elements and the `window`.\n     *\n     * @returns {module:utils/dom/rect~Rect} A rect which has been updated.\n     */\n\n  }, {\n    key: \"excludeScrollbarsAndBorders\",\n    value: function excludeScrollbarsAndBorders() {\n      var source = this._source;\n      var scrollBarWidth, scrollBarHeight;\n\n      if (isWindow(source)) {\n        scrollBarWidth = source.innerWidth - source.document.documentElement.clientWidth;\n        scrollBarHeight = source.innerHeight - source.document.documentElement.clientHeight;\n      } else {\n        var borderWidths = getBorderWidths(this._source);\n        scrollBarWidth = source.offsetWidth - source.clientWidth;\n        scrollBarHeight = source.offsetHeight - source.clientHeight;\n        this.moveBy(borderWidths.left, borderWidths.top);\n      } // Assuming LTR scrollbars. TODO: RTL.\n\n\n      this.width -= scrollBarWidth;\n      this.right -= scrollBarWidth;\n      this.height -= scrollBarHeight;\n      this.bottom -= scrollBarHeight;\n      return this;\n    }\n    /**\n     * Returns an array of rects of the given native DOM Range.\n     *\n     * @param {Range} range A native DOM range.\n     * @returns {Array.<module:utils/dom/rect~Rect>} DOM Range rects.\n     */\n\n  }], [{\n    key: \"getDomRangeRects\",\n    value: function getDomRangeRects(range) {\n      var rects = []; // Safari does not iterate over ClientRectList using for...of loop.\n\n      var clientRects = Array.from(range.getClientRects());\n\n      if (clientRects.length) {\n        for (var _i2 = 0, _clientRects = clientRects; _i2 < _clientRects.length; _i2++) {\n          var rect = _clientRects[_i2];\n          rects.push(new Rect(rect));\n        }\n      } // If there's no client rects for the Range, use parent container's bounding rect\n      // instead and adjust rect's width to simulate the actual geometry of such range.\n      // https://github.com/ckeditor/ckeditor5-utils/issues/153\n      // https://github.com/ckeditor/ckeditor5-ui/issues/317\n      else {\n          var startContainer = range.startContainer;\n\n          if (isText(startContainer)) {\n            startContainer = startContainer.parentNode;\n          }\n\n          var _rect = new Rect(startContainer.getBoundingClientRect());\n\n          _rect.right = _rect.left;\n          _rect.width = 0;\n          rects.push(_rect);\n        }\n\n      return rects;\n    }\n  }]);\n\n  return Rect;\n}(); // Acquires all the rect properties from the passed source.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} rect\n// @param {ClientRect|module:utils/dom/rect~Rect|Object} source\n\n\nexport { Rect as default };\n\nfunction copyRectProperties(rect, source) {\n  for (var _i3 = 0, _rectProperties2 = rectProperties; _i3 < _rectProperties2.length; _i3++) {\n    var p = _rectProperties2[_i3];\n    rect[p] = source[p];\n  }\n} // Checks if provided object is a <body> HTML element.\n//\n// @private\n// @param {HTMLElement|Range} elementOrRange\n// @returns {Boolean}\n\n\nfunction isBody(elementOrRange) {\n  if (!isElement(elementOrRange)) {\n    return false;\n  }\n\n  return elementOrRange === elementOrRange.ownerDocument.body;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/diff\n */\nimport fastDiff from '../src/fastdiff'; // The following code is based on the \"O(NP) Sequence Comparison Algorithm\"\n// by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\n\n/**\n * Calculates the difference between two arrays or strings producing an array containing a list of changes\n * necessary to transform input into output.\n *\n *\t\tdiff( 'aba', 'acca' ); // [ 'equal', 'insert', 'insert', 'delete', 'equal' ]\n *\n * This function is based on the \"O(NP) Sequence Comparison Algorithm\" by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\n * Unfortunately, while it gives the most precise results, its to complex for longer strings/arrow (above 200 items).\n * Therefore, `diff()` automatically switches to {@link module:utils/fastdiff~fastDiff `fastDiff()`} when detecting\n * such a scenario. The return formats of both functions are identical.\n *\n * @param {Array|String} a Input array or string.\n * @param {Array|String} b Output array or string.\n * @param {Function} [cmp] Optional function used to compare array values, by default === is used.\n * @returns {Array} Array of changes.\n */\n\nexport default function diff(a, b, cmp) {\n  // Set the comparator function.\n  cmp = cmp || function (a, b) {\n    return a === b;\n  };\n\n  var aLength = a.length;\n  var bLength = b.length; // Perform `fastDiff` for longer strings/arrays (see #269).\n\n  if (aLength > 200 || bLength > 200 || aLength + bLength > 300) {\n    return diff.fastDiff(a, b, cmp, true);\n  } // Temporary action type statics.\n\n\n  var _insert, _delete; // Swapped the arrays to use the shorter one as the first one.\n\n\n  if (bLength < aLength) {\n    var tmp = a;\n    a = b;\n    b = tmp; // We swap the action types as well.\n\n    _insert = 'delete';\n    _delete = 'insert';\n  } else {\n    _insert = 'insert';\n    _delete = 'delete';\n  }\n\n  var m = a.length;\n  var n = b.length;\n  var delta = n - m; // Edit scripts, for each diagonal.\n\n  var es = {}; // Furthest points, the furthest y we can get on each diagonal.\n\n  var fp = {};\n\n  function snake(k) {\n    // We use -1 as an alternative below to handle initial values ( instead of filling the fp with -1 first ).\n    // Furthest points (y) on the diagonal below k.\n    var y1 = (fp[k - 1] !== undefined ? fp[k - 1] : -1) + 1; // Furthest points (y) on the diagonal above k.\n\n    var y2 = fp[k + 1] !== undefined ? fp[k + 1] : -1; // The way we should go to get further.\n\n    var dir = y1 > y2 ? -1 : 1; // Clone previous changes array (if any).\n\n    if (es[k + dir]) {\n      es[k] = es[k + dir].slice(0);\n    } // Create changes array.\n\n\n    if (!es[k]) {\n      es[k] = [];\n    } // Push the action.\n\n\n    es[k].push(y1 > y2 ? _insert : _delete); // Set the beginning coordinates.\n\n    var y = Math.max(y1, y2);\n    var x = y - k; // Traverse the diagonal as long as the values match.\n\n    while (x < m && y < n && cmp(a[x], b[y])) {\n      x++;\n      y++; // Push no change action.\n\n      es[k].push('equal');\n    }\n\n    return y;\n  }\n\n  var p = 0;\n  var k; // Traverse the graph until we reach the end of the longer string.\n\n  do {\n    // Updates furthest points and edit scripts for diagonals below delta.\n    for (k = -p; k < delta; k++) {\n      fp[k] = snake(k);\n    } // Updates furthest points and edit scripts for diagonals above delta.\n\n\n    for (k = delta + p; k > delta; k--) {\n      fp[k] = snake(k);\n    } // Updates furthest point and edit script for the delta diagonal.\n    // note that the delta diagonal is the one which goes through the sink (m, n).\n\n\n    fp[delta] = snake(delta);\n    p++;\n  } while (fp[delta] !== n); // Return the final list of edit changes.\n  // We remove the first item that represents the action for the injected nulls.\n\n\n  return es[delta].slice(1);\n} // Store the API in static property to easily overwrite it in tests.\n// Too bad dependency injection does not work in Webpack + ES 6 (const) + Babel.\n\ndiff.fastDiff = fastDiff;","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\n\nfunction invariant(condition, message) {\n  if (condition) {\n    return;\n  }\n\n  if (isProduction) {\n    throw new Error(prefix);\n  } else {\n    throw new Error(prefix + \": \" + (message || ''));\n  }\n}\n\nexport default invariant;","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n} // About 1.5x faster than the two-arg version of Array#splice()\n\n\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n} // This implementation is based heavily on node's url.parse\n\n\nfunction resolvePathname(to) {\n  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var toParts = to && to.split('/') || [];\n  var fromParts = from && from.split('/') || [];\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n  var hasTrailingSlash = void 0;\n\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) {\n    fromParts.unshift('..');\n  }\n  if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');\n  var result = fromParts.join('/');\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n  return result;\n}\n\nexport default resolvePathname;","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nfunction valueEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {\n      return valueEqual(item, b[index]);\n    });\n  }\n\n  var aType = typeof a === 'undefined' ? 'undefined' : _typeof(a);\n  var bType = typeof b === 'undefined' ? 'undefined' : _typeof(b);\n  if (aType !== bType) return false;\n\n  if (aType === 'object') {\n    var aValue = a.valueOf();\n    var bValue = b.valueOf();\n    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) return false;\n    return aKeys.every(function (key) {\n      return valueEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n\nexport default valueEqual;","import _extends from '@babel/runtime/helpers/esm/extends';\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\n\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\n\nfunction hasBasename(path, prefix) {\n  return new RegExp('^' + prefix + '(\\\\/|\\\\?|#|$)', 'i').test(path);\n}\n\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\n\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\n\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\n\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n}\n\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n    process.env.NODE_ENV !== \"production\" ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\n\nfunction isExtraneousPopstateEvent(event) {\n  event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Browser history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Hash history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    return '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    process.env.NODE_ENV !== \"production\" ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath };","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\n\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n\n  return object;\n}\n\nexport default copyObject;","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/node\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport { clone } from 'lodash-es'; // To check if component is loaded more than once.\n\nimport '@ckeditor/ckeditor5-utils/src/version';\n/**\n * Abstract tree view node class.\n *\n * This is an abstract class. Its constructor should not be used directly.\n * Use the {@link module:engine/view/element~Element} class to create view elements\n * or {@link module:engine/view/text~Text} class to create view text nodes.\n *\n * @abstract\n */\n\nvar Node =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a tree view node.\n   */\n  function Node() {\n    _classCallCheck(this, Node);\n\n    /**\n     * Parent element. Null by default. Set by {@link module:engine/view/element~Element#_insertChild}.\n     *\n     * @readonly\n     * @member {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n     */\n    this.parent = null;\n  }\n  /**\n   * Index of the node in the parent element or null if the node has no parent.\n   *\n   * Accessing this property throws an error if this node's parent element does not contain it.\n   * This means that view tree got broken.\n   *\n   * @readonly\n   * @type {Number|null}\n   */\n\n\n  _createClass(Node, [{\n    key: \"getPath\",\n\n    /**\n     * Gets a path to the node. The path is an array containing indices of consecutive ancestors of this node,\n     * beginning from {@link module:engine/view/node~Node#root root}, down to this node's index.\n     *\n     *\t\tconst abc = downcastWriter.createText( 'abc' );\n     *\t\tconst foo = downcastWriter.createText( 'foo' );\n     *\t\tconst h1 = downcastWriter.createElement( 'h1', null, downcastWriter.createText( 'header' ) );\n     *\t\tconst p = downcastWriter.createElement( 'p', null, [ abc, foo ] );\n     *\t\tconst div = downcastWriter.createElement( 'div', null, [ h1, p ] );\n     *\t\tfoo.getPath(); // Returns [ 1, 3 ]. `foo` is in `p` which is in `div`. `p` starts at offset 1, while `foo` at 3.\n     *\t\th1.getPath(); // Returns [ 0 ].\n     *\t\tdiv.getPath(); // Returns [].\n     *\n     * @returns {Array.<Number>} The path.\n     */\n    value: function getPath() {\n      var path = [];\n      var node = this; // eslint-disable-line consistent-this\n\n      while (node.parent) {\n        path.unshift(node.index);\n        node = node.parent;\n      }\n\n      return path;\n    }\n    /**\n     * Returns ancestors array of this node.\n     *\n     * @param {Object} options Options object.\n     * @param {Boolean} [options.includeSelf=false] When set to `true` this node will be also included in parent's array.\n     * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from node's parent to root element,\n     * otherwise root element will be the first item in the array.\n     * @returns {Array} Array with ancestors.\n     */\n\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeSelf: false,\n        parentFirst: false\n      };\n      var ancestors = [];\n      var parent = options.includeSelf ? this : this.parent;\n\n      while (parent) {\n        ancestors[options.parentFirst ? 'push' : 'unshift'](parent);\n        parent = parent.parent;\n      }\n\n      return ancestors;\n    }\n    /**\n     * Returns a {@link module:engine/view/element~Element} or {@link module:engine/view/documentfragment~DocumentFragment}\n     * which is a common ancestor of both nodes.\n     *\n     * @param {module:engine/view/node~Node} node The second node.\n     * @param {Object} options Options object.\n     * @param {Boolean} [options.includeSelf=false] When set to `true` both nodes will be considered \"ancestors\" too.\n     * Which means that if e.g. node A is inside B, then their common ancestor will be B.\n     * @returns {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor(node) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var ancestorsA = this.getAncestors(options);\n      var ancestorsB = node.getAncestors(options);\n      var i = 0;\n\n      while (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n        i++;\n      }\n\n      return i === 0 ? null : ancestorsA[i - 1];\n    }\n    /**\n     * Returns whether this node is before given node. `false` is returned if nodes are in different trees (for example,\n     * in different {@link module:engine/view/documentfragment~DocumentFragment}s).\n     *\n     * @param {module:engine/view/node~Node} node Node to compare with.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isBefore\",\n    value: function isBefore(node) {\n      // Given node is not before this node if they are same.\n      if (this == node) {\n        return false;\n      } // Return `false` if it is impossible to compare nodes.\n\n\n      if (this.root !== node.root) {\n        return false;\n      }\n\n      var thisPath = this.getPath();\n      var nodePath = node.getPath();\n      var result = compareArrays(thisPath, nodePath);\n\n      switch (result) {\n        case 'prefix':\n          return true;\n\n        case 'extension':\n          return false;\n\n        default:\n          return thisPath[result] < nodePath[result];\n      }\n    }\n    /**\n     * Returns whether this node is after given node. `false` is returned if nodes are in different trees (for example,\n     * in different {@link module:engine/view/documentfragment~DocumentFragment}s).\n     *\n     * @param {module:engine/view/node~Node} node Node to compare with.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isAfter\",\n    value: function isAfter(node) {\n      // Given node is not before this node if they are same.\n      if (this == node) {\n        return false;\n      } // Return `false` if it is impossible to compare nodes.\n\n\n      if (this.root !== node.root) {\n        return false;\n      } // In other cases, just check if the `node` is before, and return the opposite.\n\n\n      return !this.isBefore(node);\n    }\n    /**\n     * Removes node from parent.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this.parent._removeChildren(this.index);\n    }\n    /**\n     * @protected\n     * @param {module:engine/view/document~ChangeType} type Type of the change.\n     * @param {module:engine/view/node~Node} node Changed node.\n     * @fires change\n     */\n\n  }, {\n    key: \"_fireChange\",\n    value: function _fireChange(type, node) {\n      this.fire('change:' + type, node);\n\n      if (this.parent) {\n        this.parent._fireChange(type, node);\n      }\n    }\n    /**\n     * Custom toJSON method to solve child-parent circular dependencies.\n     *\n     * @returns {Object} Clone of this object with the parent property removed.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = clone(this); // Due to circular references we need to remove parent reference.\n\n      delete json.parent;\n      return json;\n    }\n    /**\n     * Checks whether this view object is of the given type.\n     *\n     * This method is useful when processing view tree objects that are of unknown type. For example, a function\n     * may return {@link module:engine/view/documentfragment~DocumentFragment} or {@link module:engine/view/node~Node}\n     * that can be either text node or element. This method can be used to check what kind of object is returned.\n     *\n     *\t\tobj.is( 'node' ); // true for any node, false for document fragment and text fragment\n     *\t\tobj.is( 'documentFragment' ); // true for document fragment, false for any node\n     *\t\tobj.is( 'element' ); // true for any element, false for text node or document fragment\n     *\t\tobj.is( 'element', 'p' ); // true only for element which name is 'p'\n     *\t\tobj.is( 'p' ); // shortcut for obj.is( 'element', 'p' )\n     *\t\tobj.is( 'text' ); // true for text node, false for element and document fragment\n     *\n     * @param {'element'|'containerElement'|'attributeElement'|'emptyElement'|'uiElement'|\n     * 'rootElement'|'documentFragment'|'text'|'textProxy'} type\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"is\",\n    value: function is(type) {\n      return type == 'node';\n    }\n    /**\n     * Clones this node.\n     *\n     * @protected\n     * @method #_clone\n     * @returns {module:engine/view/node~Node} Clone of this node.\n     */\n\n    /**\n     * Checks if provided node is similar to this node.\n     *\n     * @method #isSimilar\n     * @returns {Boolean} True if nodes are similar.\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      var pos;\n\n      if (!this.parent) {\n        return null;\n      } // No parent or child doesn't exist in parent's children.\n\n\n      if ((pos = this.parent.getChildIndex(this)) == -1) {\n        /**\n         * The node's parent does not contain this node. It means that the document tree is corrupted.\n         *\n         * @error view-node-not-found-in-parent\n         */\n        throw new CKEditorError('view-node-not-found-in-parent: The node\\'s parent does not contain this node.');\n      }\n\n      return pos;\n    }\n    /**\n     * Node's next sibling, or `null` if it is the last child.\n     *\n     * @readonly\n     * @type {module:engine/view/node~Node|null}\n     */\n\n  }, {\n    key: \"nextSibling\",\n    get: function get() {\n      var index = this.index;\n      return index !== null && this.parent.getChild(index + 1) || null;\n    }\n    /**\n     * Node's previous sibling, or `null` if it is the first child.\n     *\n     * @readonly\n     * @type {module:engine/view/node~Node|null}\n     */\n\n  }, {\n    key: \"previousSibling\",\n    get: function get() {\n      var index = this.index;\n      return index !== null && this.parent.getChild(index - 1) || null;\n    }\n    /**\n     * Top-most ancestor of the node. If the node has no parent it is the root itself.\n     *\n     * @readonly\n     * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      var root = this; // eslint-disable-line consistent-this\n\n      while (root.parent) {\n        root = root.parent;\n      }\n\n      return root;\n    }\n    /**\n     * {@link module:engine/view/document~Document View document} that owns this node, or `null` if the node is inside\n     * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n     *\n     * @readonly\n     * @type {module:engine/view/document~Document|null}\n     */\n\n  }, {\n    key: \"document\",\n    get: function get() {\n      // Parent might be Node, null or DocumentFragment.\n      if (this.parent instanceof Node) {\n        return this.parent.document;\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return Node;\n}();\n/**\n * Fired when list of {@link module:engine/view/element~Element elements} children changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:children\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * Fired when list of {@link module:engine/view/element~Element elements} attributes changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:attributes\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * Fired when {@link module:engine/view/text~Text text nodes} data changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:text\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * @event change\n */\n\n\nexport { Node as default };\nmix(Node, EmitterMixin);","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/node\n */\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays'; // To check if component is loaded more than once.\n\nimport '@ckeditor/ckeditor5-utils/src/version';\n/**\n * Model node. Most basic structure of model tree.\n *\n * This is an abstract class that is a base for other classes representing different nodes in model.\n *\n * **Note:** If a node is detached from the model tree, you can manipulate it using it's API.\n * However, it is **very important** that nodes already attached to model tree should be only changed through\n * {@link module:engine/model/writer~Writer Writer API}.\n *\n * Changes done by `Node` methods, like {@link module:engine/model/element~Element#_insertChild _insertChild} or\n * {@link module:engine/model/node~Node#_setAttribute _setAttribute}\n * do not generate {@link module:engine/model/operation/operation~Operation operations}\n * which are essential for correct editor work if you modify nodes in {@link module:engine/model/document~Document document} root.\n *\n * The flow of working on `Node` (and classes that inherits from it) is as such:\n * 1. You can create a `Node` instance, modify it using it's API.\n * 2. Add `Node` to the model using `Batch` API.\n * 3. Change `Node` that was already added to the model using `Batch` API.\n *\n * Similarly, you cannot use `Batch` API on a node that has not been added to the model tree, with the exception\n * of {@link module:engine/model/writer~Writer#insert inserting} that node to the model tree.\n *\n * Be aware that using {@link module:engine/model/writer~Writer#remove remove from Batch API} does not allow to use `Node` API because\n * the information about `Node` is still kept in model document.\n *\n * In case of {@link module:engine/model/element~Element element node}, adding and removing children also counts as changing a node and\n * follows same rules.\n */\n\nvar Node =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a model node.\n   *\n   * This is an abstract class, so this constructor should not be used directly.\n   *\n   * @abstract\n   * @param {Object} [attrs] Node's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n   */\n  function Node(attrs) {\n    _classCallCheck(this, Node);\n\n    /**\n     * Parent of this node. It could be {@link module:engine/model/element~Element}\n     * or {@link module:engine/model/documentfragment~DocumentFragment}.\n     * Equals to `null` if the node has no parent.\n     *\n     * @readonly\n     * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n     */\n    this.parent = null;\n    /**\n     * Attributes set on this node.\n     *\n     * @private\n     * @member {Map} module:engine/model/node~Node#_attrs\n     */\n\n    this._attrs = toMap(attrs);\n  }\n  /**\n   * Index of this node in it's parent or `null` if the node has no parent.\n   *\n   * Accessing this property throws an error if this node's parent element does not contain it.\n   * This means that model tree got broken.\n   *\n   * @readonly\n   * @type {Number|null}\n   */\n\n\n  _createClass(Node, [{\n    key: \"getPath\",\n\n    /**\n     * Gets path to the node. The path is an array containing starting offsets of consecutive ancestors of this node,\n     * beginning from {@link module:engine/model/node~Node#root root}, down to this node's starting offset. The path can be used to\n     * create {@link module:engine/model/position~Position Position} instance.\n     *\n     *\t\tconst abc = new Text( 'abc' );\n     *\t\tconst foo = new Text( 'foo' );\n     *\t\tconst h1 = new Element( 'h1', null, new Text( 'header' ) );\n     *\t\tconst p = new Element( 'p', null, [ abc, foo ] );\n     *\t\tconst div = new Element( 'div', null, [ h1, p ] );\n     *\t\tfoo.getPath(); // Returns [ 1, 3 ]. `foo` is in `p` which is in `div`. `p` starts at offset 1, while `foo` at 3.\n     *\t\th1.getPath(); // Returns [ 0 ].\n     *\t\tdiv.getPath(); // Returns [].\n     *\n     * @returns {Array.<Number>} The path.\n     */\n    value: function getPath() {\n      var path = [];\n      var node = this; // eslint-disable-line consistent-this\n\n      while (node.parent) {\n        path.unshift(node.startOffset);\n        node = node.parent;\n      }\n\n      return path;\n    }\n    /**\n     * Returns ancestors array of this node.\n     *\n     * @param {Object} options Options object.\n     * @param {Boolean} [options.includeSelf=false] When set to `true` this node will be also included in parent's array.\n     * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from node's parent to root element,\n     * otherwise root element will be the first item in the array.\n     * @returns {Array} Array with ancestors.\n     */\n\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeSelf: false,\n        parentFirst: false\n      };\n      var ancestors = [];\n      var parent = options.includeSelf ? this : this.parent;\n\n      while (parent) {\n        ancestors[options.parentFirst ? 'push' : 'unshift'](parent);\n        parent = parent.parent;\n      }\n\n      return ancestors;\n    }\n    /**\n     * Returns a {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n     * which is a common ancestor of both nodes.\n     *\n     * @param {module:engine/model/node~Node} node The second node.\n     * @param {Object} options Options object.\n     * @param {Boolean} [options.includeSelf=false] When set to `true` both nodes will be considered \"ancestors\" too.\n     * Which means that if e.g. node A is inside B, then their common ancestor will be B.\n     * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor(node) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var ancestorsA = this.getAncestors(options);\n      var ancestorsB = node.getAncestors(options);\n      var i = 0;\n\n      while (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n        i++;\n      }\n\n      return i === 0 ? null : ancestorsA[i - 1];\n    }\n    /**\n     * Returns whether this node is before given node. `false` is returned if nodes are in different trees (for example,\n     * in different {@link module:engine/model/documentfragment~DocumentFragment}s).\n     *\n     * @param {module:engine/model/node~Node} node Node to compare with.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isBefore\",\n    value: function isBefore(node) {\n      // Given node is not before this node if they are same.\n      if (this == node) {\n        return false;\n      } // Return `false` if it is impossible to compare nodes.\n\n\n      if (this.root !== node.root) {\n        return false;\n      }\n\n      var thisPath = this.getPath();\n      var nodePath = node.getPath();\n      var result = compareArrays(thisPath, nodePath);\n\n      switch (result) {\n        case 'prefix':\n          return true;\n\n        case 'extension':\n          return false;\n\n        default:\n          return thisPath[result] < nodePath[result];\n      }\n    }\n    /**\n     * Returns whether this node is after given node. `false` is returned if nodes are in different trees (for example,\n     * in different {@link module:engine/model/documentfragment~DocumentFragment}s).\n     *\n     * @param {module:engine/model/node~Node} node Node to compare with.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isAfter\",\n    value: function isAfter(node) {\n      // Given node is not before this node if they are same.\n      if (this == node) {\n        return false;\n      } // Return `false` if it is impossible to compare nodes.\n\n\n      if (this.root !== node.root) {\n        return false;\n      } // In other cases, just check if the `node` is before, and return the opposite.\n\n\n      return !this.isBefore(node);\n    }\n    /**\n     * Checks if the node has an attribute with given key.\n     *\n     * @param {String} key Key of attribute to check.\n     * @returns {Boolean} `true` if attribute with given key is set on node, `false` otherwise.\n     */\n\n  }, {\n    key: \"hasAttribute\",\n    value: function hasAttribute(key) {\n      return this._attrs.has(key);\n    }\n    /**\n     * Gets an attribute value for given key or `undefined` if that attribute is not set on node.\n     *\n     * @param {String} key Key of attribute to look for.\n     * @returns {*} Attribute value or `undefined`.\n     */\n\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(key) {\n      return this._attrs.get(key);\n    }\n    /**\n     * Returns iterator that iterates over this node's attributes.\n     *\n     * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n     * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"getAttributes\",\n    value: function getAttributes() {\n      return this._attrs.entries();\n    }\n    /**\n     * Returns iterator that iterates over this node's attribute keys.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getAttributeKeys\",\n    value: function getAttributeKeys() {\n      return this._attrs.keys();\n    }\n    /**\n     * Converts `Node` to plain object and returns it.\n     *\n     * @returns {Object} `Node` converted to plain object.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = {}; // Serializes attributes to the object.\n      // attributes = { a: 'foo', b: 1, c: true }.\n\n      if (this._attrs.size) {\n        json.attributes = Array.from(this._attrs).reduce(function (result, attr) {\n          result[attr[0]] = attr[1];\n          return result;\n        }, {});\n      }\n\n      return json;\n    }\n    /**\n     * Creates a copy of this node, that is a node with exactly same attributes, and returns it.\n     *\n     * @protected\n     * @returns {module:engine/model/node~Node} Node with same attributes as this node.\n     */\n\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      return new Node(this._attrs);\n    }\n    /**\n     * Removes this node from it's parent.\n     *\n     * @see module:engine/model/writer~Writer#remove\n     * @protected\n     */\n\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this.parent._removeChildren(this.index);\n    }\n    /**\n     * Sets attribute on the node. If attribute with the same key already is set, it's value is overwritten.\n     *\n     * @see module:engine/model/writer~Writer#setAttribute\n     * @protected\n     * @param {String} key Key of attribute to set.\n     * @param {*} value Attribute value.\n     */\n\n  }, {\n    key: \"_setAttribute\",\n    value: function _setAttribute(key, value) {\n      this._attrs.set(key, value);\n    }\n    /**\n     * Removes all attributes from the node and sets given attributes.\n     *\n     * @see module:engine/model/writer~Writer#setAttributes\n     * @protected\n     * @param {Object} [attrs] Attributes to set. See {@link module:utils/tomap~toMap} for a list of accepted values.\n     */\n\n  }, {\n    key: \"_setAttributesTo\",\n    value: function _setAttributesTo(attrs) {\n      this._attrs = toMap(attrs);\n    }\n    /**\n     * Removes an attribute with given key from the node.\n     *\n     * @see module:engine/model/writer~Writer#removeAttribute\n     * @protected\n     * @param {String} key Key of attribute to remove.\n     * @returns {Boolean} `true` if the attribute was set on the element, `false` otherwise.\n     */\n\n  }, {\n    key: \"_removeAttribute\",\n    value: function _removeAttribute(key) {\n      return this._attrs.delete(key);\n    }\n    /**\n     * Removes all attributes from the node.\n     *\n     * @see module:engine/model/writer~Writer#clearAttributes\n     * @protected\n     */\n\n  }, {\n    key: \"_clearAttributes\",\n    value: function _clearAttributes() {\n      this._attrs.clear();\n    }\n    /**\n     * Checks whether given model tree object is of given type.\n     *\n     * This method is useful when processing model tree objects that are of unknown type. For example, a function\n     * may return {@link module:engine/model/documentfragment~DocumentFragment} or {@link module:engine/model/node~Node}\n     * that can be either text node or element. This method can be used to check what kind of object is returned.\n     *\n     *\t\tobj.is( 'node' ); // true for any node, false for document fragment and text fragment\n     *\t\tobj.is( 'documentFragment' ); // true for document fragment, false for any node\n     *\t\tobj.is( 'element' ); // true for any element, false for text node or document fragment\n     *\t\tobj.is( 'element', 'paragraph' ); // true only for element which name is 'paragraph'\n     *\t\tobj.is( 'paragraph' ); // shortcut for obj.is( 'element', 'paragraph' )\n     *\t\tobj.is( 'text' ); // true for text node, false for element and document fragment\n     *\t\tobj.is( 'textProxy' ); // true for text proxy object\n     *\n     * @method #is\n     * @param {'element'|'rootElement'|'text'|'textProxy'|'documentFragment'} type\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"is\",\n    value: function is(type) {\n      return type == 'node';\n    }\n  }, {\n    key: \"index\",\n    get: function get() {\n      var pos;\n\n      if (!this.parent) {\n        return null;\n      }\n\n      if ((pos = this.parent.getChildIndex(this)) === null) {\n        throw new CKEditorError('model-node-not-found-in-parent: The node\\'s parent does not contain this node.');\n      }\n\n      return pos;\n    }\n    /**\n     * Offset at which this node starts in it's parent. It is equal to the sum of {@link #offsetSize offsetSize}\n     * of all it's previous siblings. Equals to `null` if node has no parent.\n     *\n     * Accessing this property throws an error if this node's parent element does not contain it.\n     * This means that model tree got broken.\n     *\n     * @readonly\n     * @type {Number|null}\n     */\n\n  }, {\n    key: \"startOffset\",\n    get: function get() {\n      var pos;\n\n      if (!this.parent) {\n        return null;\n      }\n\n      if ((pos = this.parent.getChildStartOffset(this)) === null) {\n        throw new CKEditorError('model-node-not-found-in-parent: The node\\'s parent does not contain this node.');\n      }\n\n      return pos;\n    }\n    /**\n     * Offset size of this node. Represents how much \"offset space\" is occupied by the node in it's parent.\n     * It is important for {@link module:engine/model/position~Position position}. When node has `offsetSize` greater than `1`, position\n     * can be placed between that node start and end. `offsetSize` greater than `1` is for nodes that represents more\n     * than one entity, i.e. {@link module:engine/model/text~Text text node}.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"offsetSize\",\n    get: function get() {\n      return 1;\n    }\n    /**\n     * Offset at which this node ends in it's parent. It is equal to the sum of this node's\n     * {@link module:engine/model/node~Node#startOffset start offset} and {@link #offsetSize offset size}.\n     * Equals to `null` if the node has no parent.\n     *\n     * @readonly\n     * @type {Number|null}\n     */\n\n  }, {\n    key: \"endOffset\",\n    get: function get() {\n      if (!this.parent) {\n        return null;\n      }\n\n      return this.startOffset + this.offsetSize;\n    }\n    /**\n     * Node's next sibling or `null` if the node is a last child of it's parent or if the node has no parent.\n     *\n     * @readonly\n     * @type {module:engine/model/node~Node|null}\n     */\n\n  }, {\n    key: \"nextSibling\",\n    get: function get() {\n      var index = this.index;\n      return index !== null && this.parent.getChild(index + 1) || null;\n    }\n    /**\n     * Node's previous sibling or `null` if the node is a first child of it's parent or if the node has no parent.\n     *\n     * @readonly\n     * @type {module:engine/model/node~Node|null}\n     */\n\n  }, {\n    key: \"previousSibling\",\n    get: function get() {\n      var index = this.index;\n      return index !== null && this.parent.getChild(index - 1) || null;\n    }\n    /**\n     * The top-most ancestor of the node. If node has no parent it is the root itself. If the node is a part\n     * of {@link module:engine/model/documentfragment~DocumentFragment}, it's `root` is equal to that `DocumentFragment`.\n     *\n     * @readonly\n     * @type {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      var root = this; // eslint-disable-line consistent-this\n\n      while (root.parent) {\n        root = root.parent;\n      }\n\n      return root;\n    }\n    /**\n     * {@link module:engine/model/document~Document Document} that owns this node or `null` if the node has no parent or is inside\n     * a {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n     *\n     * @readonly\n     * @type {module:engine/model/document~Document|null}\n     */\n\n  }, {\n    key: \"document\",\n    get: function get() {\n      // This is a top element of a sub-tree.\n      if (this.root == this) {\n        return null;\n      } // Root may be `DocumentFragment` which does not have document property.\n\n\n      return this.root.document || null;\n    }\n  }]);\n\n  return Node;\n}();\n/**\n * The node's parent does not contain this node.\n *\n * This error may be thrown from corrupted trees.\n *\n * @error model-node-not-found-in-parent\n */\n\n\nexport { Node as default };","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is'); // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n\n\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}","import _toConsumableArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/nodelist\n */\nimport Node from './node';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Provides an interface to operate on a list of {@link module:engine/model/node~Node nodes}. `NodeList` is used internally\n * in classes like {@link module:engine/model/element~Element Element}\n * or {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n */\n\nvar NodeList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an empty node list.\n   *\n   * @protected\n   * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes contained in this node list.\n   */\n  function NodeList(nodes) {\n    _classCallCheck(this, NodeList);\n\n    /**\n     * Nodes contained in this node list.\n     *\n     * @private\n     * @member {Array.<module:engine/model/node~Node>}\n     */\n    this._nodes = [];\n\n    if (nodes) {\n      this._insertNodes(0, nodes);\n    }\n  }\n  /**\n   * Iterable interface.\n   *\n   * Iterates over all nodes contained inside this node list.\n   *\n   * @returns {Iterable.<module:engine/model/node~Node>}\n   */\n\n\n  _createClass(NodeList, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this._nodes[Symbol.iterator]();\n    }\n    /**\n     * Number of nodes contained inside this node list.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"getNode\",\n\n    /**\n     * Gets the node at the given index. Returns `null` if incorrect index was passed.\n     *\n     * @param {Number} index Index of node.\n     * @returns {module:engine/model/node~Node|null} Node at given index.\n     */\n    value: function getNode(index) {\n      return this._nodes[index] || null;\n    }\n    /**\n     * Returns an index of the given node. Returns `null` if given node is not inside this node list.\n     *\n     * @param {module:engine/model/node~Node} node Child node to look for.\n     * @returns {Number|null} Child node's index.\n     */\n\n  }, {\n    key: \"getNodeIndex\",\n    value: function getNodeIndex(node) {\n      var index = this._nodes.indexOf(node);\n\n      return index == -1 ? null : index;\n    }\n    /**\n     * Returns the starting offset of given node. Starting offset is equal to the sum of\n     * {@link module:engine/model/node~Node#offsetSize offset sizes} of all nodes that are before this node in this node list.\n     *\n     * @param {module:engine/model/node~Node} node Node to look for.\n     * @returns {Number|null} Node's starting offset.\n     */\n\n  }, {\n    key: \"getNodeStartOffset\",\n    value: function getNodeStartOffset(node) {\n      var index = this.getNodeIndex(node);\n      return index === null ? null : this._nodes.slice(0, index).reduce(function (sum, node) {\n        return sum + node.offsetSize;\n      }, 0);\n    }\n    /**\n     * Converts index to offset in node list.\n     *\n     * Returns starting offset of a node that is at given index. Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n     * `model-nodelist-index-out-of-bounds` if given index is less than `0` or more than {@link #length}.\n     *\n     * @param {Number} index Node's index.\n     * @returns {Number} Node's starting offset.\n     */\n\n  }, {\n    key: \"indexToOffset\",\n    value: function indexToOffset(index) {\n      if (index == this._nodes.length) {\n        return this.maxOffset;\n      }\n\n      var node = this._nodes[index];\n\n      if (!node) {\n        /**\n         * Given index cannot be found in the node list.\n         *\n         * @error nodelist-index-out-of-bounds\n         */\n        throw new CKEditorError('model-nodelist-index-out-of-bounds: Given index cannot be found in the node list.');\n      }\n\n      return this.getNodeStartOffset(node);\n    }\n    /**\n     * Converts offset in node list to index.\n     *\n     * Returns index of a node that occupies given offset. Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n     * `model-nodelist-offset-out-of-bounds` if given offset is less than `0` or more than {@link #maxOffset}.\n     *\n     * @param {Number} offset Offset to look for.\n     * @returns {Number} Index of a node that occupies given offset.\n     */\n\n  }, {\n    key: \"offsetToIndex\",\n    value: function offsetToIndex(offset) {\n      var totalOffset = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var node = _step.value;\n\n          if (offset >= totalOffset && offset < totalOffset + node.offsetSize) {\n            return this.getNodeIndex(node);\n          }\n\n          totalOffset += node.offsetSize;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (totalOffset != offset) {\n        /**\n         * Given offset cannot be found in the node list.\n         *\n         * @error model-nodelist-offset-out-of-bounds\n         * @param {Number} offset\n         * @param {module:engine/model/nodelist~NodeList} nodeList Stringified node list.\n         */\n        throw new CKEditorError('model-nodelist-offset-out-of-bounds: Given offset cannot be found in the node list.', {\n          offset: offset,\n          nodeList: this\n        });\n      }\n\n      return this.length;\n    }\n    /**\n     * Inserts given nodes at given index.\n     *\n     * @protected\n     * @param {Number} index Index at which nodes should be inserted.\n     * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes to be inserted.\n     */\n\n  }, {\n    key: \"_insertNodes\",\n    value: function _insertNodes(index, nodes) {\n      var _this$_nodes;\n\n      // Validation.\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = nodes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var node = _step2.value;\n\n          if (!(node instanceof Node)) {\n            /**\n             * Trying to insert an object which is not a Node instance.\n             *\n             * @error nodelist-insertNodes-not-node\n             */\n            throw new CKEditorError('model-nodelist-insertNodes-not-node: Trying to insert an object which is not a Node instance.');\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      (_this$_nodes = this._nodes).splice.apply(_this$_nodes, [index, 0].concat(_toConsumableArray(nodes)));\n    }\n    /**\n     * Removes one or more nodes starting at the given index.\n     *\n     * @protected\n     * @param {Number} indexStart Index of the first node to remove.\n     * @param {Number} [howMany=1] Number of nodes to remove.\n     * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n     */\n\n  }, {\n    key: \"_removeNodes\",\n    value: function _removeNodes(indexStart) {\n      var howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      return this._nodes.splice(indexStart, howMany);\n    }\n    /**\n     * Converts `NodeList` instance to an array containing nodes that were inserted in the node list. Nodes\n     * are also converted to their plain object representation.\n     *\n     * @returns {Array.<module:engine/model/node~Node>} `NodeList` instance converted to `Array`.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this._nodes.map(function (node) {\n        return node.toJSON();\n      });\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this._nodes.length;\n    }\n    /**\n     * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all nodes contained inside this node list.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"maxOffset\",\n    get: function get() {\n      return this._nodes.reduce(function (sum, node) {\n        return sum + node.offsetSize;\n      }, 0);\n    }\n  }]);\n\n  return NodeList;\n}();\n\nexport { NodeList as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/treewalker\n */\nimport Element from './element';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport Position from './position';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Position iterator class. It allows to iterate forward and backward over the document.\n */\n\nvar TreeWalker =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a range iterator. All parameters are optional, but you have to specify either `boundaries` or `startPosition`.\n   *\n   * @constructor\n   * @param {Object} options Object with configuration.\n   * @param {module:engine/view/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n   * @param {module:engine/view/position~Position} [options.startPosition] Starting position.\n   * @param {'forward'|'backward'} [options.direction='forward'] Walking direction.\n   * @param {Boolean} [options.singleCharacters=false] Flag indicating whether all characters from\n   * {@link module:engine/view/text~Text} should be returned as one {@link module:engine/view/text~Text} (`false`) ore one by one as\n   * {@link module:engine/view/textproxy~TextProxy} (`true`).\n   * @param {Boolean} [options.shallow=false] Flag indicating whether iterator should enter elements or not. If the\n   * iterator is shallow child nodes of any iterated node will not be returned along with `elementEnd` tag.\n   * @param {Boolean} [options.ignoreElementEnd=false] Flag indicating whether iterator should ignore `elementEnd`\n   * tags. If the option is true walker will not return a parent node of start position. If this option is `true`\n   * each {@link module:engine/view/element~Element} will be returned once, while if the option is `false` they might be returned\n   * twice: for `'elementStart'` and `'elementEnd'`.\n   */\n  function TreeWalker() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, TreeWalker);\n\n    if (!options.boundaries && !options.startPosition) {\n      /**\n       * Neither boundaries nor starting position have been defined.\n       *\n       * @error view-tree-walker-no-start-position\n       */\n      throw new CKEditorError('view-tree-walker-no-start-position: Neither boundaries nor starting position have been defined.');\n    }\n\n    if (options.direction && options.direction != 'forward' && options.direction != 'backward') {\n      throw new CKEditorError('view-tree-walker-unknown-direction: Only `backward` and `forward` direction allowed.', {\n        direction: options.direction\n      });\n    }\n    /**\n     * Iterator boundaries.\n     *\n     * When the iterator is walking `'forward'` on the end of boundary or is walking `'backward'`\n     * on the start of boundary, then `{ done: true }` is returned.\n     *\n     * If boundaries are not defined they are set before first and after last child of the root node.\n     *\n     * @readonly\n     * @member {module:engine/view/range~Range} module:engine/view/treewalker~TreeWalker#boundaries\n     */\n\n\n    this.boundaries = options.boundaries || null;\n    /**\n     * Iterator position. If start position is not defined then position depends on {@link #direction}. If direction is\n     * `'forward'` position starts form the beginning, when direction is `'backward'` position starts from the end.\n     *\n     * @readonly\n     * @member {module:engine/view/position~Position} module:engine/view/treewalker~TreeWalker#position\n     */\n\n    if (options.startPosition) {\n      this.position = Position._createAt(options.startPosition);\n    } else {\n      this.position = Position._createAt(options.boundaries[options.direction == 'backward' ? 'end' : 'start']);\n    }\n    /**\n     * Walking direction. Defaults `'forward'`.\n     *\n     * @readonly\n     * @member {'backward'|'forward'} module:engine/view/treewalker~TreeWalker#direction\n     */\n\n\n    this.direction = options.direction || 'forward';\n    /**\n     * Flag indicating whether all characters from {@link module:engine/view/text~Text} should be returned as one\n     * {@link module:engine/view/text~Text} or one by one as {@link module:engine/view/textproxy~TextProxy}.\n     *\n     * @readonly\n     * @member {Boolean} module:engine/view/treewalker~TreeWalker#singleCharacters\n     */\n\n    this.singleCharacters = !!options.singleCharacters;\n    /**\n     * Flag indicating whether iterator should enter elements or not. If the iterator is shallow child nodes of any\n     * iterated node will not be returned along with `elementEnd` tag.\n     *\n     * @readonly\n     * @member {Boolean} module:engine/view/treewalker~TreeWalker#shallow\n     */\n\n    this.shallow = !!options.shallow;\n    /**\n     * Flag indicating whether iterator should ignore `elementEnd` tags. If set to `true`, walker will not\n     * return a parent node of the start position. Each {@link module:engine/view/element~Element} will be returned once.\n     * When set to `false` each element might be returned twice: for `'elementStart'` and `'elementEnd'`.\n     *\n     * @readonly\n     * @member {Boolean} module:engine/view/treewalker~TreeWalker#ignoreElementEnd\n     */\n\n    this.ignoreElementEnd = !!options.ignoreElementEnd;\n    /**\n     * Start boundary parent.\n     *\n     * @private\n     * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryStartParent\n     */\n\n    this._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;\n    /**\n     * End boundary parent.\n     *\n     * @private\n     * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryEndParent\n     */\n\n    this._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;\n  }\n  /**\n   * Iterable interface.\n   *\n   * @returns {Iterable.<module:engine/view/treewalker~TreeWalkerValue>}\n   */\n\n\n  _createClass(TreeWalker, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this;\n    }\n    /**\n     * Moves {@link #position} in the {@link #direction} skipping values as long as the callback function returns `true`.\n     *\n     * For example:\n     *\n     * \t\twalker.skip( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\n     * \t\twalker.skip( value => true ); // Move the position to the end: <p>{}foo</p> -> <p>foo</p>[]\n     * \t\twalker.skip( value => false ); // Do not move the position.\n     *\n     * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~TreeWalkerValue} and should\n     * return `true` if the value should be skipped or `false` if not.\n     */\n\n  }, {\n    key: \"skip\",\n    value: function skip(_skip) {\n      var done, value, prevPosition;\n\n      do {\n        prevPosition = this.position;\n\n        var _this$next = this.next();\n\n        done = _this$next.done;\n        value = _this$next.value;\n      } while (!done && _skip(value));\n\n      if (!done) {\n        this.position = prevPosition;\n      }\n    }\n    /**\n     * Gets the next tree walker's value.\n     *\n     * @returns {module:engine/view/treewalker~TreeWalkerValue} Object implementing iterator interface, returning\n     * information about taken step.\n     */\n\n  }, {\n    key: \"next\",\n    value: function next() {\n      if (this.direction == 'forward') {\n        return this._next();\n      } else {\n        return this._previous();\n      }\n    }\n    /**\n     * Makes a step forward in view. Moves the {@link #position} to the next position and returns the encountered value.\n     *\n     * @private\n     * @returns {Object}\n     * @returns {Boolean} return.done `true` if iterator is done, `false` otherwise.\n     * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\n     */\n\n  }, {\n    key: \"_next\",\n    value: function _next() {\n      var position = this.position.clone();\n      var previousPosition = this.position;\n      var parent = position.parent; // We are at the end of the root.\n\n      if (parent.parent === null && position.offset === parent.childCount) {\n        return {\n          done: true\n        };\n      } // We reached the walker boundary.\n\n\n      if (parent === this._boundaryEndParent && position.offset == this.boundaries.end.offset) {\n        return {\n          done: true\n        };\n      } // Get node just after current position.\n\n\n      var node; // Text is a specific parent because it contains string instead of child nodes.\n\n      if (parent instanceof Text) {\n        if (position.isAtEnd) {\n          // Prevent returning \"elementEnd\" for Text node. Skip that value and return the next walker step.\n          this.position = Position._createAfter(parent);\n          return this._next();\n        }\n\n        node = parent.data[position.offset];\n      } else {\n        node = parent.getChild(position.offset);\n      }\n\n      if (node instanceof Element) {\n        if (!this.shallow) {\n          position = new Position(node, 0);\n        } else {\n          position.offset++;\n        }\n\n        this.position = position;\n        return this._formatReturnValue('elementStart', node, previousPosition, position, 1);\n      } else if (node instanceof Text) {\n        if (this.singleCharacters) {\n          position = new Position(node, 0);\n          this.position = position;\n          return this._next();\n        } else {\n          var charactersCount = node.data.length;\n          var item; // If text stick out of walker range, we need to cut it and wrap in TextProxy.\n\n          if (node == this._boundaryEndParent) {\n            charactersCount = this.boundaries.end.offset;\n            item = new TextProxy(node, 0, charactersCount);\n            position = Position._createAfter(item);\n          } else {\n            item = new TextProxy(node, 0, node.data.length); // If not just keep moving forward.\n\n            position.offset++;\n          }\n\n          this.position = position;\n          return this._formatReturnValue('text', item, previousPosition, position, charactersCount);\n        }\n      } else if (typeof node == 'string') {\n        var textLength;\n\n        if (this.singleCharacters) {\n          textLength = 1;\n        } else {\n          // Check if text stick out of walker range.\n          var endOffset = parent === this._boundaryEndParent ? this.boundaries.end.offset : parent.data.length;\n          textLength = endOffset - position.offset;\n        }\n\n        var textProxy = new TextProxy(parent, position.offset, textLength);\n        position.offset += textLength;\n        this.position = position;\n        return this._formatReturnValue('text', textProxy, previousPosition, position, textLength);\n      } else {\n        // `node` is not set, we reached the end of current `parent`.\n        position = Position._createAfter(parent);\n        this.position = position;\n\n        if (this.ignoreElementEnd) {\n          return this._next();\n        } else {\n          return this._formatReturnValue('elementEnd', parent, previousPosition, position);\n        }\n      }\n    }\n    /**\n     * Makes a step backward in view. Moves the {@link #position} to the previous position and returns the encountered value.\n     *\n     * @private\n     * @returns {Object}\n     * @returns {Boolean} return.done True if iterator is done.\n     * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\n     */\n\n  }, {\n    key: \"_previous\",\n    value: function _previous() {\n      var position = this.position.clone();\n      var previousPosition = this.position;\n      var parent = position.parent; // We are at the beginning of the root.\n\n      if (parent.parent === null && position.offset === 0) {\n        return {\n          done: true\n        };\n      } // We reached the walker boundary.\n\n\n      if (parent == this._boundaryStartParent && position.offset == this.boundaries.start.offset) {\n        return {\n          done: true\n        };\n      } // Get node just before current position.\n\n\n      var node; // Text {@link module:engine/view/text~Text} element is a specific parent because contains string instead of child nodes.\n\n      if (parent instanceof Text) {\n        if (position.isAtStart) {\n          // Prevent returning \"elementStart\" for Text node. Skip that value and return the next walker step.\n          this.position = Position._createBefore(parent);\n          return this._previous();\n        }\n\n        node = parent.data[position.offset - 1];\n      } else {\n        node = parent.getChild(position.offset - 1);\n      }\n\n      if (node instanceof Element) {\n        if (!this.shallow) {\n          position = new Position(node, node.childCount);\n          this.position = position;\n\n          if (this.ignoreElementEnd) {\n            return this._previous();\n          } else {\n            return this._formatReturnValue('elementEnd', node, previousPosition, position);\n          }\n        } else {\n          position.offset--;\n          this.position = position;\n          return this._formatReturnValue('elementStart', node, previousPosition, position, 1);\n        }\n      } else if (node instanceof Text) {\n        if (this.singleCharacters) {\n          position = new Position(node, node.data.length);\n          this.position = position;\n          return this._previous();\n        } else {\n          var charactersCount = node.data.length;\n          var item; // If text stick out of walker range, we need to cut it and wrap in TextProxy.\n\n          if (node == this._boundaryStartParent) {\n            var offset = this.boundaries.start.offset;\n            item = new TextProxy(node, offset, node.data.length - offset);\n            charactersCount = item.data.length;\n            position = Position._createBefore(item);\n          } else {\n            item = new TextProxy(node, 0, node.data.length); // If not just keep moving backward.\n\n            position.offset--;\n          }\n\n          this.position = position;\n          return this._formatReturnValue('text', item, previousPosition, position, charactersCount);\n        }\n      } else if (typeof node == 'string') {\n        var textLength;\n\n        if (!this.singleCharacters) {\n          // Check if text stick out of walker range.\n          var startOffset = parent === this._boundaryStartParent ? this.boundaries.start.offset : 0;\n          textLength = position.offset - startOffset;\n        } else {\n          textLength = 1;\n        }\n\n        position.offset -= textLength;\n        var textProxy = new TextProxy(parent, position.offset, textLength);\n        this.position = position;\n        return this._formatReturnValue('text', textProxy, previousPosition, position, textLength);\n      } else {\n        // `node` is not set, we reached the beginning of current `parent`.\n        position = Position._createBefore(parent);\n        this.position = position;\n        return this._formatReturnValue('elementStart', parent, previousPosition, position, 1);\n      }\n    }\n    /**\n     * Format returned data and adjust `previousPosition` and `nextPosition` if reach the bound of the {@link module:engine/view/text~Text}.\n     *\n     * @private\n     * @param {module:engine/view/treewalker~TreeWalkerValueType} type Type of step.\n     * @param {module:engine/view/item~Item} item Item between old and new position.\n     * @param {module:engine/view/position~Position} previousPosition Previous position of iterator.\n     * @param {module:engine/view/position~Position} nextPosition Next position of iterator.\n     * @param {Number} [length] Length of the item.\n     * @returns {module:engine/view/treewalker~TreeWalkerValue}\n     */\n\n  }, {\n    key: \"_formatReturnValue\",\n    value: function _formatReturnValue(type, item, previousPosition, nextPosition, length) {\n      // Text is a specific parent, because contains string instead of children.\n      // Walker doesn't enter to the Text except situations when walker is iterating over every single character,\n      // or the bound starts/ends inside the Text. So when the position is at the beginning or at the end of the Text\n      // we move it just before or just after Text.\n      if (item instanceof TextProxy) {\n        // Position is at the end of Text.\n        if (item.offsetInText + item.data.length == item.textNode.data.length) {\n          if (this.direction == 'forward' && !(this.boundaries && this.boundaries.end.isEqual(this.position))) {\n            nextPosition = Position._createAfter(item.textNode); // When we change nextPosition of returned value we need also update walker current position.\n\n            this.position = nextPosition;\n          } else {\n            previousPosition = Position._createAfter(item.textNode);\n          }\n        } // Position is at the begining ot the text.\n\n\n        if (item.offsetInText === 0) {\n          if (this.direction == 'backward' && !(this.boundaries && this.boundaries.start.isEqual(this.position))) {\n            nextPosition = Position._createBefore(item.textNode); // When we change nextPosition of returned value we need also update walker current position.\n\n            this.position = nextPosition;\n          } else {\n            previousPosition = Position._createBefore(item.textNode);\n          }\n        }\n      }\n\n      return {\n        done: false,\n        value: {\n          type: type,\n          item: item,\n          previousPosition: previousPosition,\n          nextPosition: nextPosition,\n          length: length\n        }\n      };\n    }\n  }]);\n\n  return TreeWalker;\n}();\n/**\n * Type of the step made by {@link module:engine/view/treewalker~TreeWalker}.\n * Possible values: `'elementStart'` if walker is at the beginning of a node, `'elementEnd'` if walker is at the end\n * of node, or `'text'` if walker traversed over single and multiple characters.\n * For {@link module:engine/view/text~Text} `elementStart` and `elementEnd` is not returned.\n *\n * @typedef {String} module:engine/view/treewalker~TreeWalkerValueType\n */\n\n/**\n * Object returned by {@link module:engine/view/treewalker~TreeWalker} when traversing tree view.\n *\n * @typedef {Object} module:engine/view/treewalker~TreeWalkerValue\n * @property {module:engine/view/treewalker~TreeWalkerValueType} type\n * @property {module:engine/view/item~Item} item Item between the old and the new positions\n * of the tree walker.\n * @property {module:engine/view/position~Position} previousPosition Previous position of the iterator.\n * * Forward iteration: For `'elementEnd'` it is the last position inside the element. For all other types it is the\n * position before the item.\n * * Backward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after item.\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\n * inside of the text to its parent just before or just after that text.\n * @property {module:engine/view/position~Position} nextPosition Next position of the iterator.\n * * Forward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after the item.\n * * Backward iteration: For `'elementEnd'` it is last position inside element. For all other types it is the position\n * before the item.\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\n * inside of the text to its parent just before or just after that text.\n * @property {Number} [length] Length of the item. For `'elementStart'` it is `1`. For `'text'` it is\n * the length of that text. For `'elementEnd'` it is `undefined`.\n */\n\n/**\n * Tree walking directions.\n *\n * @typedef {'forward'|'backward'} module:engine/view/treewalker~TreeWalkerDirection\n */\n\n\nexport { TreeWalker as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/markeroperation\n */\nimport Operation from './operation';\nimport Range from '../range';\n/**\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar MarkerOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(MarkerOperation, _Operation);\n\n  /**\n   * @param {String} name Marker name.\n   * @param {module:engine/model/range~Range} oldRange Marker range before the change.\n   * @param {module:engine/model/range~Range} newRange Marker range after the change.\n   * @param {module:engine/model/markercollection~MarkerCollection} markers Marker collection on which change should be executed.\n   * @param {Boolean} affectsData Specifies whether the marker operation affects the data produced by the data pipeline\n   * (is persisted in the editor's data).\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function MarkerOperation(name, oldRange, newRange, markers, affectsData, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, MarkerOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MarkerOperation).call(this, baseVersion));\n    /**\n     * Marker name.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.name = name;\n    /**\n     * Marker range before the change.\n     *\n     * @readonly\n     * @member {module:engine/model/range~Range}\n     */\n\n    _this.oldRange = oldRange ? oldRange.clone() : null;\n    /**\n     * Marker range after the change.\n     *\n     * @readonly\n     * @member {module:engine/model/range~Range}\n     */\n\n    _this.newRange = newRange ? newRange.clone() : null;\n    /**\n     * Specifies whether the marker operation affects the data produced by the data pipeline\n     * (is persisted in the editor's data).\n     *\n     * @readonly\n     * @member {Boolean}\n     */\n\n    _this.affectsData = affectsData;\n    /**\n     * Marker collection on which change should be executed.\n     *\n     * @private\n     * @member {module:engine/model/markercollection~MarkerCollection}\n     */\n\n    _this._markers = markers;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(MarkerOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/markeroperation~MarkerOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new MarkerOperation(this.name, this.oldRange, this.newRange, this._markers, this.affectsData, this.baseVersion);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/markeroperation~MarkerOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      return new MarkerOperation(this.name, this.newRange, this.oldRange, this._markers, this.affectsData, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      var type = this.newRange ? '_set' : '_remove';\n\n      this._markers[type](this.name, this.newRange, true, this.affectsData);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(MarkerOperation.prototype), \"toJSON\", this).call(this);\n\n      if (this.oldRange) {\n        json.oldRange = this.oldRange.toJSON();\n      }\n\n      if (this.newRange) {\n        json.newRange = this.newRange.toJSON();\n      }\n\n      delete json._markers;\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'marker';\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates `MarkerOperation` object from deserialized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/markeroperation~MarkerOperation}\n     */\n    value: function fromJSON(json, document) {\n      return new MarkerOperation(json.name, json.oldRange ? Range.fromJSON(json.oldRange, document) : null, json.newRange ? Range.fromJSON(json.newRange, document) : null, document.model.markers, json.affectsData, json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'MarkerOperation';\n    }\n  }]);\n\n  return MarkerOperation;\n}(Operation);\n\nexport { MarkerOperation as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/renameoperation\n */\nimport Operation from './operation';\nimport Element from '../element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Position from '../position';\n/**\n * Operation to change element's name.\n *\n * Using this class you can change element's name.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar RenameOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(RenameOperation, _Operation);\n\n  /**\n   * Creates an operation that changes element's name.\n   *\n   * @param {module:engine/model/position~Position} position Position before an element to change.\n   * @param {String} oldName Current name of the element.\n   * @param {String} newName New name for the element.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function RenameOperation(position, oldName, newName, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, RenameOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RenameOperation).call(this, baseVersion));\n    /**\n     * Position before an element to change.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/renameoperation~RenameOperation#position\n     */\n\n    _this.position = position; // This position sticks to the next node because it is a position before the node that we want to change.\n\n    _this.position.stickiness = 'toNext';\n    /**\n     * Current name of the element.\n     *\n     * @member {String} module:engine/model/operation/renameoperation~RenameOperation#oldName\n     */\n\n    _this.oldName = oldName;\n    /**\n     * New name for the element.\n     *\n     * @member {String} module:engine/model/operation/renameoperation~RenameOperation#newName\n     */\n\n    _this.newName = newName;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(RenameOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/renameoperation~RenameOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new RenameOperation(this.position.clone(), this.oldName, this.newName, this.baseVersion);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/renameoperation~RenameOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      return new RenameOperation(this.position.clone(), this.newName, this.oldName, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      var element = this.position.nodeAfter;\n\n      if (!(element instanceof Element)) {\n        /**\n         * Given position is invalid or node after it is not instance of Element.\n         *\n         * @error rename-operation-wrong-position\n         */\n        throw new CKEditorError('rename-operation-wrong-position: Given position is invalid or node after it is not an instance of Element.');\n      } else if (element.name !== this.oldName) {\n        /**\n         * Element to change has different name than operation's old name.\n         *\n         * @error rename-operation-wrong-name\n         */\n        throw new CKEditorError('rename-operation-wrong-name: Element to change has different name than operation\\'s old name.');\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      var element = this.position.nodeAfter;\n      element.name = this.newName;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(RenameOperation.prototype), \"toJSON\", this).call(this);\n\n      json.position = this.position.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'rename';\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates `RenameOperation` object from deserialized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n     */\n    value: function fromJSON(json, document) {\n      return new RenameOperation(Position.fromJSON(json.position, document), json.oldName, json.newName, json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'RenameOperation';\n    }\n  }]);\n\n  return RenameOperation;\n}(Operation);\n\nexport { RenameOperation as default };","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nexport default isArray;","import getNative from './_getNative.js';\nimport root from './_root.js';\n/* Built-in method references that are verified to be native. */\n\nvar DataView = getNative(root, 'DataView');\nexport default DataView;","import getNative from './_getNative.js';\nimport root from './_root.js';\n/* Built-in method references that are verified to be native. */\n\nvar Promise = getNative(root, 'Promise');\nexport default Promise;","import getNative from './_getNative.js';\nimport root from './_root.js';\n/* Built-in method references that are verified to be native. */\n\nvar Set = getNative(root, 'Set');\nexport default Set;","import getNative from './_getNative.js';\nimport root from './_root.js';\n/* Built-in method references that are verified to be native. */\n\nvar WeakMap = getNative(root, 'WeakMap');\nexport default WeakMap;","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n/** `Object#toString` result references. */\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nexport default getTag;","import freeGlobal from './_freeGlobal.js';\n/** Detect free variable `exports`. */\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nexport default nodeUtil;","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/isnode\n */\n\n/**\n * Checks if the object is a native DOM Node.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isNode(obj) {\n  if (obj) {\n    if (obj.defaultView) {\n      return obj instanceof obj.defaultView.Document;\n    } else if (obj.ownerDocument && obj.ownerDocument.defaultView) {\n      return obj instanceof obj.ownerDocument.defaultView.Node;\n    }\n  }\n\n  return false;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/tomap\n */\nimport objectToMap from './objecttomap';\nimport { isPlainObject } from 'lodash-es';\n/**\n * Transforms object or iterable to map. Iterable needs to be in the format acceptable by the `Map` constructor.\n *\n *\t\tmap = toMap( { 'foo': 1, 'bar': 2 } );\n *\t\tmap = toMap( [ [ 'foo', 1 ], [ 'bar', 2 ] ] );\n *\t\tmap = toMap( anotherMap );\n *\n * @param {Object|Iterable} data Object or iterable to transform.\n * @returns {Map} Map created from data.\n */\n\nexport default function toMap(data) {\n  if (isPlainObject(data)) {\n    return objectToMap(data);\n  } else {\n    return new Map(data);\n  }\n}","import _toConsumableArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _slicedToArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/template\n */\n\n/* global document */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport View from './view';\nimport ViewCollection from './viewcollection';\nimport isNode from '@ckeditor/ckeditor5-utils/src/dom/isnode';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport { isObject, cloneDeepWith } from 'lodash-es';\nvar xhtmlNs = 'http://www.w3.org/1999/xhtml';\n/**\n * A basic Template class. It renders a DOM HTML element or text from a\n * {@link module:ui/template~TemplateDefinition definition} and supports element attributes, children,\n * bindings to {@link module:utils/observablemixin~Observable observables} and DOM event propagation.\n *\n * A simple template can look like this:\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\tclass: 'foo',\n *\t\t\t\tstyle: {\n *\t\t\t\t\tbackgroundColor: 'yellow'\n *\t\t\t\t}\n *\t\t\t},\n *\t\t\ton: {\n *\t\t\t\tclick: bind.to( 'clicked' )\n *\t\t\t}\n *\t\t\tchildren: [\n *\t\t\t\t'A paragraph.'\n *\t\t\t]\n *\t\t} ).render();\n *\n * and it will render the following HTML element:\n *\n *\t\t<p class=\"foo\" style=\"background-color: yellow;\">A paragraph.</p>\n *\n * Additionally, the `observable` will always fire `clicked` upon clicking `<p>` in the DOM.\n *\n * See {@link module:ui/template~TemplateDefinition} to know more about templates and complex\n * template definitions.\n *\n* @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar Template =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the {@link ~Template} class.\n   *\n   * @param {module:ui/template~TemplateDefinition} def The definition of the template.\n   */\n  function Template(def) {\n    _classCallCheck(this, Template);\n\n    Object.assign(this, normalize(clone(def)));\n    /**\n     * Indicates whether this particular Template instance has been\n     * {@link #render rendered}.\n     *\n     * @readonly\n     * @protected\n     * @member {Boolean}\n     */\n\n    this._isRendered = false;\n    /**\n     * The tag (`tagName`) of this template, e.g. `div`. It also indicates that the template\n     * renders to an HTML element.\n     *\n     * @member {String} #tag\n     */\n\n    /**\n     * The text of the template. It also indicates that the template renders to a DOM text node.\n     *\n     * @member {Array.<String|module:ui/template~TemplateValueSchema>} #text\n     */\n\n    /**\n     * The attributes of the template, e.g. `{ id: [ 'ck-id' ] }`, corresponding with\n     * the attributes of an HTML element.\n     *\n     * **Note**: This property only makes sense when {@link #tag} is defined.\n     *\n     * @member {Object} #attributes\n     */\n\n    /**\n     * The children of the template. They can be either:\n     * * independent instances of {@link ~Template} (sub–templates),\n     * * native DOM Nodes.\n     *\n     * **Note**: This property only makes sense when {@link #tag} is defined.\n     *\n     * @member {Array.<module:ui/template~Template|Node>} #children\n     */\n\n    /**\n     * The DOM event listeners of the template.\n     *\n     * @member {Object} #eventListeners\n     */\n\n    /**\n     * The data used by the {@link #revert} method to restore a node to its original state.\n     *\n     * See: {@link #apply}.\n     *\n     * @readonly\n     * @protected\n     * @member {module:ui/template~RenderData}\n     */\n\n    this._revertData = null;\n  }\n  /**\n   * Renders a DOM Node (an HTML element or text) out of the template.\n   *\n   *\t\tconst domNode = new Template( { ... } ).render();\n   *\n   * See: {@link #apply}.\n   *\n   * @returns {HTMLElement|Text}\n   */\n\n\n  _createClass(Template, [{\n    key: \"render\",\n    value: function render() {\n      var node = this._renderNode({\n        intoFragment: true\n      });\n\n      this._isRendered = true;\n      return node;\n    }\n    /**\n     * Applies the template to an existing DOM Node, either HTML element or text.\n     *\n     * **Note:** No new DOM nodes will be created. Applying extends\n     * {@link module:ui/template~TemplateDefinition attributes} and\n     * {@link module:ui/template~TemplateDefinition event listeners} only.\n     *\n     * **Note:** Existing `class` and `style` attributes are extended when a template\n     * is applied to an HTML element, while other attributes and `textContent` are overridden.\n     *\n     * **Note:** The process of applying a template can be easily reverted using the\n     * {@link module:ui/template~Template#revert} method.\n     *\n     *\t\tconst element = document.createElement( 'div' );\n     *\t\tconst bind = Template.bind( observable, emitter );\n     *\n     *\t\tnew Template( {\n     *\t\t\tattrs: {\n     *\t\t\t\tid: 'first-div',\n     *\t\t\t\tclass: bind.to( 'divClass' )\n     *\t\t\t},\n     *\t\t\ton: {\n     *\t\t\t\tclick: bind( 'elementClicked' ) // Will be fired by the observable.\n     *\t\t\t}\n     *\t\t\tchildren: [\n     *\t\t\t\t'Div text.'\n     *\t\t\t]\n     *\t\t} ).apply( element );\n     *\n     *\t\telement.outerHTML == \"<div id=\"first-div\" class=\"my-div\">Div text.</div>\"\n     *\n     * @see module:ui/template~Template#render\n     * @see module:ui/template~Template#revert\n     * @param {Node} node Root node for the template to apply.\n     */\n\n  }, {\n    key: \"apply\",\n    value: function apply(node) {\n      this._revertData = getEmptyRevertData();\n\n      this._renderNode({\n        node: node,\n        isApplying: true,\n        revertData: this._revertData\n      });\n\n      return node;\n    }\n    /**\n     * Reverts a template {@link module:ui/template~Template#apply applied} to a DOM node.\n     *\n     * @param {Node} node The root node for the template to revert. In most of the cases, it is the\n     * same node used by {@link module:ui/template~Template#apply}.\n     */\n\n  }, {\n    key: \"revert\",\n    value: function revert(node) {\n      if (!this._revertData) {\n        /**\n         * Attempting to revert a template which has not been applied yet.\n         *\n         * @error ui-template-revert-not-applied\n         */\n        throw new CKEditorError('ui-template-revert-not-applied: Attempting to revert a template which has not been applied yet.');\n      }\n\n      this._revertTemplateFromNode(node, this._revertData);\n    }\n    /**\n     * Returns an iterator which traverses the template in search of {@link module:ui/view~View}\n     * instances and returns them one by one.\n     *\n     *\t\tconst viewFoo = new View();\n     *\t\tconst viewBar = new View();\n     *\t\tconst viewBaz = new View();\n     *\t\tconst template = new Template( {\n     *\t\t\ttag: 'div',\n     *\t\t\tchildren: [\n     *\t\t\t\tviewFoo,\n     *\t\t\t\t{\n     *\t\t\t\t\ttag: 'div',\n     *\t\t\t\t\tchildren: [\n     *\t\t\t\t\t\tviewBar\n     *\t\t\t\t\t]\n     *\t\t\t\t},\n     *\t\t\t\tviewBaz\n     *\t\t\t]\n     *\t\t} );\n     *\n     *\t\t// Logs: viewFoo, viewBar, viewBaz\n     *\t\tfor ( const view of template.getViews() ) {\n     *\t\t\tconsole.log( view );\n     *\t\t}\n     *\n     * @returns {Iterable.<module:ui/view~View>}\n     */\n\n  }, {\n    key: \"getViews\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getViews() {\n      var _marked, search;\n\n      return _regeneratorRuntime.wrap(function getViews$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              search = function _ref(def) {\n                var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, child;\n\n                return _regeneratorRuntime.wrap(function search$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        if (!def.children) {\n                          _context.next = 32;\n                          break;\n                        }\n\n                        _iteratorNormalCompletion = true;\n                        _didIteratorError = false;\n                        _iteratorError = undefined;\n                        _context.prev = 4;\n                        _iterator = def.children[Symbol.iterator]();\n\n                      case 6:\n                        if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                          _context.next = 18;\n                          break;\n                        }\n\n                        child = _step.value;\n\n                        if (!isView(child)) {\n                          _context.next = 13;\n                          break;\n                        }\n\n                        _context.next = 11;\n                        return child;\n\n                      case 11:\n                        _context.next = 15;\n                        break;\n\n                      case 13:\n                        if (!isTemplate(child)) {\n                          _context.next = 15;\n                          break;\n                        }\n\n                        return _context.delegateYield(search(child), \"t0\", 15);\n\n                      case 15:\n                        _iteratorNormalCompletion = true;\n                        _context.next = 6;\n                        break;\n\n                      case 18:\n                        _context.next = 24;\n                        break;\n\n                      case 20:\n                        _context.prev = 20;\n                        _context.t1 = _context[\"catch\"](4);\n                        _didIteratorError = true;\n                        _iteratorError = _context.t1;\n\n                      case 24:\n                        _context.prev = 24;\n                        _context.prev = 25;\n\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                          _iterator.return();\n                        }\n\n                      case 27:\n                        _context.prev = 27;\n\n                        if (!_didIteratorError) {\n                          _context.next = 30;\n                          break;\n                        }\n\n                        throw _iteratorError;\n\n                      case 30:\n                        return _context.finish(27);\n\n                      case 31:\n                        return _context.finish(24);\n\n                      case 32:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _marked, null, [[4, 20, 24, 32], [25,, 27, 31]]);\n              };\n\n              _marked =\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(search);\n              return _context2.delegateYield(search(this), \"t0\", 3);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, getViews, this);\n    })\n    /**\n     * An entry point to the interface which binds DOM nodes to\n     * {@link module:utils/observablemixin~Observable observables}.\n     * There are two types of bindings:\n     *\n     * * HTML element attributes or text `textContent` synchronized with attributes of an\n     * {@link module:utils/observablemixin~Observable}. Learn more about {@link module:ui/template~BindChain#to}\n     * and {@link module:ui/template~BindChain#if}.\n     *\n     *\t\tconst bind = Template.bind( observable, emitter );\n     *\n     *\t\tnew Template( {\n     *\t\t\tattrs: {\n     *\t\t\t\t// Binds the element \"class\" attribute to observable#classAttribute.\n     *\t\t\t\tclass: bind.to( 'classAttribute' )\n     *\t\t\t}\n     *\t\t} ).render();\n     *\n     * * DOM events fired on HTML element propagated through\n     * {@link module:utils/observablemixin~Observable}. Learn more about {@link module:ui/template~BindChain#to}.\n     *\n     *\t\tconst bind = Template.bind( observable, emitter );\n     *\n     *\t\tnew Template( {\n     *\t\t\ton: {\n     *\t\t\t\t// Will be fired by the observable.\n     *\t\t\t\tclick: bind( 'elementClicked' )\n     *\t\t\t}\n     *\t\t} ).render();\n     *\n     * Also see {@link module:ui/view~View#bindTemplate}.\n     *\n     * @param {module:utils/observablemixin~Observable} observable An observable which provides boundable attributes.\n     * @param {module:utils/emittermixin~Emitter} emitter An emitter that listens to observable attribute\n     * changes or DOM Events (depending on the kind of the binding). Usually, a {@link module:ui/view~View} instance.\n     * @returns {module:ui/template~BindChain}\n     */\n\n  }, {\n    key: \"_renderNode\",\n\n    /**\n     * Renders a DOM Node (either an HTML element or text) out of the template.\n     *\n     * @protected\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n    value: function _renderNode(data) {\n      var isInvalid;\n\n      if (data.node) {\n        // When applying, a definition cannot have \"tag\" and \"text\" at the same time.\n        isInvalid = this.tag && this.text;\n      } else {\n        // When rendering, a definition must have either \"tag\" or \"text\": XOR( this.tag, this.text ).\n        isInvalid = this.tag ? this.text : !this.text;\n      }\n\n      if (isInvalid) {\n        /**\n         * Node definition cannot have the \"tag\" and \"text\" properties at the same time.\n         * Node definition must have either \"tag\" or \"text\" when rendering a new Node.\n         *\n         * @error ui-template-wrong-syntax\n         */\n        throw new CKEditorError('ui-template-wrong-syntax: Node definition must have either \"tag\" or \"text\" when rendering a new Node.');\n      }\n\n      if (this.text) {\n        return this._renderText(data);\n      } else {\n        return this._renderElement(data);\n      }\n    }\n    /**\n     * Renders an HTML element out of the template.\n     *\n     * @protected\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n\n  }, {\n    key: \"_renderElement\",\n    value: function _renderElement(data) {\n      var node = data.node;\n\n      if (!node) {\n        node = data.node = document.createElementNS(this.ns || xhtmlNs, this.tag);\n      }\n\n      this._renderAttributes(data);\n\n      this._renderElementChildren(data);\n\n      this._setUpListeners(data);\n\n      return node;\n    }\n    /**\n     * Renders a text node out of {@link module:ui/template~Template#text}.\n     *\n     * @protected\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n\n  }, {\n    key: \"_renderText\",\n    value: function _renderText(data) {\n      var node = data.node; // Save the original textContent to revert it in #revert().\n\n      if (node) {\n        data.revertData.text = node.textContent;\n      } else {\n        node = data.node = document.createTextNode('');\n      } // Check if this Text Node is bound to Observable. Cases:\n      //\n      //\t\ttext: [ Template.bind( ... ).to( ... ) ]\n      //\n      //\t\ttext: [\n      //\t\t\t'foo',\n      //\t\t\tTemplate.bind( ... ).to( ... ),\n      //\t\t\t...\n      //\t\t]\n      //\n\n\n      if (hasTemplateBinding(this.text)) {\n        this._bindToObservable({\n          schema: this.text,\n          updater: getTextUpdater(node),\n          data: data\n        });\n      } // Simply set text. Cases:\n      //\n      //\t\ttext: [ 'all', 'are', 'static' ]\n      //\n      //\t\ttext: [ 'foo' ]\n      //\n      else {\n          node.textContent = this.text.join('');\n        }\n\n      return node;\n    }\n    /**\n     * Renders HTML element attributes out of {@link module:ui/template~Template#attributes}.\n     *\n     * @protected\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n\n  }, {\n    key: \"_renderAttributes\",\n    value: function _renderAttributes(data) {\n      var attrName, attrValue, domAttrValue, attrNs;\n\n      if (!this.attributes) {\n        return;\n      }\n\n      var node = data.node;\n      var revertData = data.revertData;\n\n      for (attrName in this.attributes) {\n        // Current attribute value in DOM.\n        domAttrValue = node.getAttribute(attrName); // The value to be set.\n\n        attrValue = this.attributes[attrName]; // Save revert data.\n\n        if (revertData) {\n          revertData.attributes[attrName] = domAttrValue;\n        } // Detect custom namespace:\n        //\n        //\t\tclass: {\n        //\t\t\tns: 'abc',\n        //\t\t\tvalue: Template.bind( ... ).to( ... )\n        //\t\t}\n        //\n\n\n        attrNs = isObject(attrValue[0]) && attrValue[0].ns ? attrValue[0].ns : null; // Activate binding if one is found. Cases:\n        //\n        //\t\tclass: [\n        //\t\t\tTemplate.bind( ... ).to( ... )\n        //\t\t]\n        //\n        //\t\tclass: [\n        //\t\t\t'bar',\n        //\t\t\tTemplate.bind( ... ).to( ... ),\n        //\t\t\t'baz'\n        //\t\t]\n        //\n        //\t\tclass: {\n        //\t\t\tns: 'abc',\n        //\t\t\tvalue: Template.bind( ... ).to( ... )\n        //\t\t}\n        //\n\n        if (hasTemplateBinding(attrValue)) {\n          // Normalize attributes with additional data like namespace:\n          //\n          //\t\tclass: {\n          //\t\t\tns: 'abc',\n          //\t\t\tvalue: [ ... ]\n          //\t\t}\n          //\n          var valueToBind = attrNs ? attrValue[0].value : attrValue; // Extend the original value of attributes like \"style\" and \"class\",\n          // don't override them.\n\n          if (revertData && shouldExtend(attrName)) {\n            valueToBind.unshift(domAttrValue);\n          }\n\n          this._bindToObservable({\n            schema: valueToBind,\n            updater: getAttributeUpdater(node, attrName, attrNs),\n            data: data\n          });\n        } // Style attribute could be an Object so it needs to be parsed in a specific way.\n        //\n        //\t\tstyle: {\n        //\t\t\twidth: '100px',\n        //\t\t\theight: Template.bind( ... ).to( ... )\n        //\t\t}\n        //\n        else if (attrName == 'style' && typeof attrValue[0] !== 'string') {\n            this._renderStyleAttribute(attrValue[0], data);\n          } // Otherwise simply set the static attribute:\n          //\n          //\t\tclass: [ 'foo' ]\n          //\n          //\t\tclass: [ 'all', 'are', 'static' ]\n          //\n          //\t\tclass: [\n          //\t\t\t{\n          //\t\t\t\tns: 'abc',\n          //\t\t\t\tvalue: [ 'foo' ]\n          //\t\t\t}\n          //\t\t]\n          //\n          else {\n              // Extend the original value of attributes like \"style\" and \"class\",\n              // don't override them.\n              if (revertData && domAttrValue && shouldExtend(attrName)) {\n                attrValue.unshift(domAttrValue);\n              }\n\n              attrValue = attrValue // Retrieve \"values\" from:\n              //\n              //\t\tclass: [\n              //\t\t\t{\n              //\t\t\t\tns: 'abc',\n              //\t\t\t\tvalue: [ ... ]\n              //\t\t\t}\n              //\t\t]\n              //\n              .map(function (val) {\n                return val ? val.value || val : val;\n              }) // Flatten the array.\n              .reduce(function (prev, next) {\n                return prev.concat(next);\n              }, []) // Convert into string.\n              .reduce(arrayValueReducer, '');\n\n              if (!isFalsy(attrValue)) {\n                node.setAttributeNS(attrNs, attrName, attrValue);\n              }\n            }\n      }\n    }\n    /**\n     * Renders the `style` attribute of an HTML element based on\n     * {@link module:ui/template~Template#attributes}.\n     *\n     * A style attribute is an {Object} with static values:\n     *\n     *\t\tattributes: {\n     *\t\t\tstyle: {\n     *\t\t\t\tcolor: 'red'\n     *\t\t\t}\n     *\t\t}\n     *\n     * or values bound to {@link module:ui/model~Model} properties:\n     *\n     *\t\tattributes: {\n     *\t\t\tstyle: {\n     *\t\t\t\tcolor: bind.to( ... )\n     *\t\t\t}\n     *\t\t}\n     *\n     * Note: The `style` attribute is rendered without setting the namespace. It does not seem to be\n     * needed.\n     *\n     * @private\n     * @param {Object} styles Styles located in `attributes.style` of {@link module:ui/template~TemplateDefinition}.\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n\n  }, {\n    key: \"_renderStyleAttribute\",\n    value: function _renderStyleAttribute(styles, data) {\n      var node = data.node;\n\n      for (var styleName in styles) {\n        var styleValue = styles[styleName]; // Cases:\n        //\n        //\t\tstyle: {\n        //\t\t\tcolor: bind.to( 'attribute' )\n        //\t\t}\n        //\n\n        if (hasTemplateBinding(styleValue)) {\n          this._bindToObservable({\n            schema: [styleValue],\n            updater: getStyleUpdater(node, styleName),\n            data: data\n          });\n        } // Cases:\n        //\n        //\t\tstyle: {\n        //\t\t\tcolor: 'red'\n        //\t\t}\n        //\n        else {\n            node.style[styleName] = styleValue;\n          }\n      }\n    }\n    /**\n     * Recursively renders HTML element's children from {@link module:ui/template~Template#children}.\n     *\n     * @protected\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n\n  }, {\n    key: \"_renderElementChildren\",\n    value: function _renderElementChildren(data) {\n      var node = data.node;\n      var container = data.intoFragment ? document.createDocumentFragment() : node;\n      var isApplying = data.isApplying;\n      var childIndex = 0;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var child = _step2.value;\n\n          if (isViewCollection(child)) {\n            if (!isApplying) {\n              child.setParent(node); // Note: ViewCollection renders its children.\n\n              var _iteratorNormalCompletion3 = true;\n              var _didIteratorError3 = false;\n              var _iteratorError3 = undefined;\n\n              try {\n                for (var _iterator3 = child[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                  var view = _step3.value;\n                  container.appendChild(view.element);\n                }\n              } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                    _iterator3.return();\n                  }\n                } finally {\n                  if (_didIteratorError3) {\n                    throw _iteratorError3;\n                  }\n                }\n              }\n            }\n          } else if (isView(child)) {\n            if (!isApplying) {\n              if (!child.isRendered) {\n                child.render();\n              }\n\n              container.appendChild(child.element);\n            }\n          } else if (isNode(child)) {\n            container.appendChild(child);\n          } else {\n            if (isApplying) {\n              var revertData = data.revertData;\n              var childRevertData = getEmptyRevertData();\n              revertData.children.push(childRevertData);\n\n              child._renderNode({\n                node: container.childNodes[childIndex++],\n                isApplying: true,\n                revertData: childRevertData\n              });\n            } else {\n              container.appendChild(child.render());\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      if (data.intoFragment) {\n        node.appendChild(container);\n      }\n    }\n    /**\n     * Activates `on` event listeners from the {@link module:ui/template~TemplateDefinition}\n     * on an HTML element.\n     *\n     * @protected\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n\n  }, {\n    key: \"_setUpListeners\",\n    value: function _setUpListeners(data) {\n      var _this = this;\n\n      if (!this.eventListeners) {\n        return;\n      }\n\n      var _loop = function _loop(key) {\n        var revertBindings = _this.eventListeners[key].map(function (schemaItem) {\n          var _key$split = key.split('@'),\n              _key$split2 = _slicedToArray(_key$split, 2),\n              domEvtName = _key$split2[0],\n              domSelector = _key$split2[1];\n\n          return schemaItem.activateDomEventListener(domEvtName, domSelector, data);\n        });\n\n        if (data.revertData) {\n          data.revertData.bindings.push(revertBindings);\n        }\n      };\n\n      for (var key in this.eventListeners) {\n        _loop(key);\n      }\n    }\n    /**\n     * For a given {@link module:ui/template~TemplateValueSchema} containing {@link module:ui/template~TemplateBinding}\n     * activates the binding and sets its initial value.\n     *\n     * Note: {@link module:ui/template~TemplateValueSchema} can be for HTML element attributes or\n     * text node `textContent`.\n     *\n     * @protected\n     * @param {Object} options Binding options.\n     * @param {module:ui/template~TemplateValueSchema} options.schema\n     * @param {Function} options.updater A function which updates the DOM (like attribute or text).\n     * @param {module:ui/template~RenderData} options.data Rendering data.\n     */\n\n  }, {\n    key: \"_bindToObservable\",\n    value: function _bindToObservable(_ref2) {\n      var schema = _ref2.schema,\n          updater = _ref2.updater,\n          data = _ref2.data;\n      var revertData = data.revertData; // Set initial values.\n\n      syncValueSchemaValue(schema, updater, data);\n      var revertBindings = schema // Filter \"falsy\" (false, undefined, null, '') value schema components out.\n      .filter(function (item) {\n        return !isFalsy(item);\n      }) // Filter inactive bindings from schema, like static strings ('foo'), numbers (42), etc.\n      .filter(function (item) {\n        return item.observable;\n      }) // Once only the actual binding are left, let the emitter listen to observable change:attribute event.\n      // TODO: Reduce the number of listeners attached as many bindings may listen\n      // to the same observable attribute.\n      .map(function (templateBinding) {\n        return templateBinding.activateAttributeListener(schema, updater, data);\n      });\n\n      if (revertData) {\n        revertData.bindings.push(revertBindings);\n      }\n    }\n    /**\n     * Reverts {@link module:ui/template~RenderData#revertData template data} from a node to\n     * return it to the original state.\n     *\n     * @protected\n     * @param {HTMLElement|Text} node A node to be reverted.\n     * @param {module:ui/template~RenderData#revertData} revertData Stores information about\n     * what changes have been made by {@link #apply} to the node.\n     */\n\n  }, {\n    key: \"_revertTemplateFromNode\",\n    value: function _revertTemplateFromNode(node, revertData) {\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = revertData.bindings[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var binding = _step4.value;\n          // Each binding may consist of several observable+observable#attribute.\n          // like the following has 2:\n          //\n          //\t\tclass: [\n          //\t\t\t'x',\n          //\t\t\tbind.to( 'foo' ),\n          //\t\t\t'y',\n          //\t\t\tbind.to( 'bar' )\n          //\t\t]\n          //\n          var _iteratorNormalCompletion5 = true;\n          var _didIteratorError5 = false;\n          var _iteratorError5 = undefined;\n\n          try {\n            for (var _iterator5 = binding[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n              var revertBinding = _step5.value;\n              revertBinding();\n            }\n          } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n                _iterator5.return();\n              }\n            } finally {\n              if (_didIteratorError5) {\n                throw _iteratorError5;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      if (revertData.text) {\n        node.textContent = revertData.text;\n        return;\n      }\n\n      for (var attrName in revertData.attributes) {\n        var attrValue = revertData.attributes[attrName]; // When the attribute has **not** been set before #apply().\n\n        if (attrValue === null) {\n          node.removeAttribute(attrName);\n        } else {\n          node.setAttribute(attrName, attrValue);\n        }\n      }\n\n      for (var i = 0; i < revertData.children.length; ++i) {\n        this._revertTemplateFromNode(node.childNodes[i], revertData.children[i]);\n      }\n    }\n  }], [{\n    key: \"bind\",\n    value: function bind(observable, emitter) {\n      return {\n        to: function to(eventNameOrFunctionOrAttribute, callback) {\n          return new TemplateToBinding({\n            eventNameOrFunction: eventNameOrFunctionOrAttribute,\n            attribute: eventNameOrFunctionOrAttribute,\n            observable: observable,\n            emitter: emitter,\n            callback: callback\n          });\n        },\n        if: function _if(attribute, valueIfTrue, callback) {\n          return new TemplateIfBinding({\n            observable: observable,\n            emitter: emitter,\n            attribute: attribute,\n            valueIfTrue: valueIfTrue,\n            callback: callback\n          });\n        }\n      };\n    }\n    /**\n     * Extends an existing {@link module:ui/template~Template} instance with some additional content\n     * from another {@link module:ui/template~TemplateDefinition}.\n     *\n     *\t\tconst bind = Template.bind( observable, emitter );\n     *\n     *\t\tconst template = new Template( {\n     *\t\t\ttag: 'p',\n     *\t\t\tattributes: {\n     *\t\t\t\tclass: 'a',\n     *\t\t\t\tdata-x: bind.to( 'foo' )\n     *\t\t\t},\n     *\t\t\tchildren: [\n     *\t\t\t\t{\n     *\t\t\t\t\ttag: 'span',\n     *\t\t\t\t\tattributes: {\n     *\t\t\t\t\t\tclass: 'b'\n     *\t\t\t\t\t},\n     *\t\t\t\t\tchildren: [\n     *\t\t\t\t\t\t'Span'\n     *\t\t\t\t\t]\n     *\t\t\t\t}\n     *\t\t\t]\n     *\t\t } );\n     *\n     *\t\t// Instance-level extension.\n     *\t\tTemplate.extend( template, {\n     *\t\t\tattributes: {\n     *\t\t\t\tclass: 'b',\n     *\t\t\t\tdata-x: bind.to( 'bar' )\n     *\t\t\t},\n     *\t\t\tchildren: [\n     *\t\t\t\t{\n     *\t\t\t\t\tattributes: {\n     *\t\t\t\t\t\tclass: 'c'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t]\n     *\t\t} );\n     *\n     *\t\t// Child extension.\n     *\t\tTemplate.extend( template.children[ 0 ], {\n     *\t\t\tattributes: {\n     *\t\t\t\tclass: 'd'\n     *\t\t\t}\n     *\t\t} );\n     *\n     * the `outerHTML` of `template.render()` is:\n     *\n     *\t\t<p class=\"a b\" data-x=\"{ observable.foo } { observable.bar }\">\n     *\t\t\t<span class=\"b c d\">Span</span>\n     *\t\t</p>\n     *\n     * @param {module:ui/template~Template} template An existing template instance to be extended.\n     * @param {module:ui/template~TemplateDefinition} def Additional definition to be applied to a template.\n     */\n\n  }, {\n    key: \"extend\",\n    value: function extend(template, def) {\n      if (template._isRendered) {\n        /**\n         * Extending a template after rendering may not work as expected. To make sure\n         * the {@link module:ui/template~Template.extend extending} works for an element,\n         * make sure it happens before {@link #render} is called.\n         *\n         * @error template-extend-render\n         */\n        log.warn('template-extend-render: Attempting to extend a template which has already been rendered.');\n      }\n\n      extendTemplate(template, normalize(clone(def)));\n    }\n  }]);\n\n  return Template;\n}();\n\nexport { Template as default };\nmix(Template, EmitterMixin);\n/**\n * Describes a binding created by the {@link module:ui/template~Template.bind} interface.\n *\n * @protected\n */\n\nexport var TemplateBinding =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the {@link module:ui/template~TemplateBinding} class.\n   *\n   * @param {module:ui/template~TemplateDefinition} def The definition of the binding.\n   */\n  function TemplateBinding(def) {\n    _classCallCheck(this, TemplateBinding);\n\n    Object.assign(this, def);\n    /**\n     * An observable instance of the binding. It either:\n     *\n     * * provides the attribute with the value,\n     * * or passes the event when a corresponding DOM event is fired.\n     *\n     * @member {module:utils/observablemixin~ObservableMixin} module:ui/template~TemplateBinding#observable\n     */\n\n    /**\n     * An {@link module:utils/emittermixin~Emitter} used by the binding to:\n     *\n     * * listen to the attribute change in the {@link module:ui/template~TemplateBinding#observable},\n     * * or listen to the event in the DOM.\n     *\n     * @member {module:utils/emittermixin~EmitterMixin} module:ui/template~TemplateBinding#emitter\n     */\n\n    /**\n     * The name of the {@link module:ui/template~TemplateBinding#observable observed attribute}.\n     *\n     * @member {String} module:ui/template~TemplateBinding#attribute\n     */\n\n    /**\n     * A custom function to process the value of the {@link module:ui/template~TemplateBinding#attribute}.\n     *\n     * @member {Function} [module:ui/template~TemplateBinding#callback]\n     */\n  }\n  /**\n   * Returns the value of the binding. It is the value of the {@link module:ui/template~TemplateBinding#attribute} in\n   * {@link module:ui/template~TemplateBinding#observable}. The value may be processed by the\n   * {@link module:ui/template~TemplateBinding#callback}, if such has been passed to the binding.\n   *\n   * @param {Node} [node] A native DOM node, passed to the custom {@link module:ui/template~TemplateBinding#callback}.\n   * @returns {*} The value of {@link module:ui/template~TemplateBinding#attribute} in\n   * {@link module:ui/template~TemplateBinding#observable}.\n   */\n\n\n  _createClass(TemplateBinding, [{\n    key: \"getValue\",\n    value: function getValue(node) {\n      var value = this.observable[this.attribute];\n      return this.callback ? this.callback(value, node) : value;\n    }\n    /**\n     * Activates the listener which waits for changes of the {@link module:ui/template~TemplateBinding#attribute} in\n     * {@link module:ui/template~TemplateBinding#observable}, then updates the DOM with the aggregated\n     * value of {@link module:ui/template~TemplateValueSchema}.\n     *\n     * @param {module:ui/template~TemplateValueSchema} schema A full schema to generate an attribute or text in the DOM.\n     * @param {Function} updater A DOM updater function used to update the native DOM attribute or text.\n     * @param {module:ui/template~RenderData} data Rendering data.\n     * @returns {Function} A function to sever the listener binding.\n     */\n\n  }, {\n    key: \"activateAttributeListener\",\n    value: function activateAttributeListener(schema, updater, data) {\n      var _this2 = this;\n\n      var callback = function callback() {\n        return syncValueSchemaValue(schema, updater, data);\n      };\n\n      this.emitter.listenTo(this.observable, 'change:' + this.attribute, callback); // Allows revert of the listener.\n\n      return function () {\n        _this2.emitter.stopListening(_this2.observable, 'change:' + _this2.attribute, callback);\n      };\n    }\n  }]);\n\n  return TemplateBinding;\n}();\n/**\n * Describes either:\n *\n * * a binding to an {@link module:utils/observablemixin~Observable},\n * * or a native DOM event binding.\n *\n * It is created by the {@link module:ui/template~BindChain#to} method.\n *\n * @protected\n */\n\nexport var TemplateToBinding =\n/*#__PURE__*/\nfunction (_TemplateBinding) {\n  _inherits(TemplateToBinding, _TemplateBinding);\n\n  function TemplateToBinding() {\n    _classCallCheck(this, TemplateToBinding);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TemplateToBinding).apply(this, arguments));\n  }\n\n  _createClass(TemplateToBinding, [{\n    key: \"activateDomEventListener\",\n\n    /**\n     * Activates the listener for the native DOM event, which when fired, is propagated by\n     * the {@link module:ui/template~TemplateBinding#emitter}.\n     *\n     * @param {String} domEvtName The name of the native DOM event.\n     * @param {String} domSelector The selector in the DOM to filter delegated events.\n     * @param {module:ui/template~RenderData} data Rendering data.\n     * @returns {Function} A function to sever the listener binding.\n     */\n    value: function activateDomEventListener(domEvtName, domSelector, data) {\n      var _this3 = this;\n\n      var callback = function callback(evt, domEvt) {\n        if (!domSelector || domEvt.target.matches(domSelector)) {\n          if (typeof _this3.eventNameOrFunction == 'function') {\n            _this3.eventNameOrFunction(domEvt);\n          } else {\n            _this3.observable.fire(_this3.eventNameOrFunction, domEvt);\n          }\n        }\n      };\n\n      this.emitter.listenTo(data.node, domEvtName, callback); // Allows revert of the listener.\n\n      return function () {\n        _this3.emitter.stopListening(data.node, domEvtName, callback);\n      };\n    }\n  }]);\n\n  return TemplateToBinding;\n}(TemplateBinding);\n/**\n * Describes a binding to {@link module:utils/observablemixin~ObservableMixin} created by the {@link module:ui/template~BindChain#if}\n * method.\n *\n * @protected\n */\n\nexport var TemplateIfBinding =\n/*#__PURE__*/\nfunction (_TemplateBinding2) {\n  _inherits(TemplateIfBinding, _TemplateBinding2);\n\n  function TemplateIfBinding() {\n    _classCallCheck(this, TemplateIfBinding);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TemplateIfBinding).apply(this, arguments));\n  }\n\n  _createClass(TemplateIfBinding, [{\n    key: \"getValue\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function getValue(node) {\n      var value = _get(_getPrototypeOf(TemplateIfBinding.prototype), \"getValue\", this).call(this, node);\n\n      return isFalsy(value) ? false : this.valueIfTrue || true;\n    }\n    /**\n     * The value of the DOM attribute or text to be set if the {@link module:ui/template~TemplateBinding#attribute} in\n     * {@link module:ui/template~TemplateBinding#observable} is `true`.\n     *\n     * @member {String} [module:ui/template~TemplateIfBinding#valueIfTrue]\n     */\n\n  }]);\n\n  return TemplateIfBinding;\n}(TemplateBinding); // Checks whether given {@link module:ui/template~TemplateValueSchema} contains a\n// {@link module:ui/template~TemplateBinding}.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @returns {Boolean}\n\nfunction hasTemplateBinding(schema) {\n  if (!schema) {\n    return false;\n  } // Normalize attributes with additional data like namespace:\n  //\n  //\t\tclass: {\n  //\t\t\tns: 'abc',\n  //\t\t\tvalue: [ ... ]\n  //\t\t}\n  //\n\n\n  if (schema.value) {\n    schema = schema.value;\n  }\n\n  if (Array.isArray(schema)) {\n    return schema.some(hasTemplateBinding);\n  } else if (schema instanceof TemplateBinding) {\n    return true;\n  }\n\n  return false;\n} // Assembles the value using {@link module:ui/template~TemplateValueSchema} and stores it in a form of\n// an Array. Each entry of the Array corresponds to one of {@link module:ui/template~TemplateValueSchema}\n// items.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @param {Node} node DOM Node updated when {@link module:utils/observablemixin~ObservableMixin} changes.\n// @returns {Array}\n\n\nfunction getValueSchemaValue(schema, node) {\n  return schema.map(function (schemaItem) {\n    // Process {@link module:ui/template~TemplateBinding} bindings.\n    if (schemaItem instanceof TemplateBinding) {\n      return schemaItem.getValue(node);\n    } // All static values like strings, numbers, and \"falsy\" values (false, null, undefined, '', etc.) just pass.\n\n\n    return schemaItem;\n  });\n} // A function executed each time the bound Observable attribute changes, which updates the DOM with a value\n// constructed from {@link module:ui/template~TemplateValueSchema}.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @param {Function} updater A function which updates the DOM (like attribute or text).\n// @param {Node} node DOM Node updated when {@link module:utils/observablemixin~ObservableMixin} changes.\n\n\nfunction syncValueSchemaValue(schema, updater, _ref3) {\n  var node = _ref3.node;\n  var value = getValueSchemaValue(schema, node); // Check if schema is a single Template.bind.if, like:\n  //\n  //\t\tclass: Template.bind.if( 'foo' )\n  //\n\n  if (schema.length == 1 && schema[0] instanceof TemplateIfBinding) {\n    value = value[0];\n  } else {\n    value = value.reduce(arrayValueReducer, '');\n  }\n\n  if (isFalsy(value)) {\n    updater.remove();\n  } else {\n    updater.set(value);\n  }\n} // Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of DOM Node to set or reset `textContent`.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @returns {Object}\n\n\nfunction getTextUpdater(node) {\n  return {\n    set: function set(value) {\n      node.textContent = value;\n    },\n    remove: function remove() {\n      node.textContent = '';\n    }\n  };\n} // Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of DOM Node to set or reset an attribute.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @param {String} attrName Name of the attribute to be modified.\n// @param {String} [ns=null] Namespace to use.\n// @returns {Object}\n\n\nfunction getAttributeUpdater(el, attrName, ns) {\n  return {\n    set: function set(value) {\n      el.setAttributeNS(ns, attrName, value);\n    },\n    remove: function remove() {\n      el.removeAttributeNS(ns, attrName);\n    }\n  };\n} // Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of CSSStyleDeclaration to set or remove a style.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @param {String} styleName Name of the style to be modified.\n// @returns {Object}\n\n\nfunction getStyleUpdater(el, styleName) {\n  return {\n    set: function set(value) {\n      el.style[styleName] = value;\n    },\n    remove: function remove() {\n      el.style[styleName] = null;\n    }\n  };\n} // Clones definition of the template.\n//\n// @param {module:ui/template~TemplateDefinition} def\n// @returns {module:ui/template~TemplateDefinition}\n\n\nfunction clone(def) {\n  var clone = cloneDeepWith(def, function (value) {\n    // Don't clone the `Template.bind`* bindings because of the references to Observable\n    // and DomEmitterMixin instances inside, which would also be traversed and cloned by greedy\n    // cloneDeepWith algorithm. There's no point in cloning Observable/DomEmitterMixins\n    // along with the definition.\n    //\n    // Don't clone Template instances if provided as a child. They're simply #render()ed\n    // and nothing should interfere.\n    //\n    // Also don't clone View instances if provided as a child of the Template. The template\n    // instance will be extracted from the View during the normalization and there's no need\n    // to clone it.\n    if (value && (value instanceof TemplateBinding || isTemplate(value) || isView(value) || isViewCollection(value))) {\n      return value;\n    }\n  });\n  return clone;\n} // Normalizes given {@link module:ui/template~TemplateDefinition}.\n//\n// See:\n//  * {@link normalizeAttributes}\n//  * {@link normalizeListeners}\n//  * {@link normalizePlainTextDefinition}\n//  * {@link normalizeTextDefinition}\n//\n// @param {module:ui/template~TemplateDefinition} def\n// @returns {module:ui/template~TemplateDefinition} Normalized definition.\n\n\nfunction normalize(def) {\n  if (typeof def == 'string') {\n    def = normalizePlainTextDefinition(def);\n  } else if (def.text) {\n    normalizeTextDefinition(def);\n  }\n\n  if (def.on) {\n    def.eventListeners = normalizeListeners(def.on); // Template mixes EmitterMixin, so delete #on to avoid collision.\n\n    delete def.on;\n  }\n\n  if (!def.text) {\n    if (def.attributes) {\n      normalizeAttributes(def.attributes);\n    }\n\n    var children = [];\n\n    if (def.children) {\n      if (isViewCollection(def.children)) {\n        children.push(def.children);\n      } else {\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n          for (var _iterator6 = def.children[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n            var child = _step6.value;\n\n            if (isTemplate(child) || isView(child) || isNode(child)) {\n              children.push(child);\n            } else {\n              children.push(new Template(child));\n            }\n          }\n        } catch (err) {\n          _didIteratorError6 = true;\n          _iteratorError6 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n              _iterator6.return();\n            }\n          } finally {\n            if (_didIteratorError6) {\n              throw _iteratorError6;\n            }\n          }\n        }\n      }\n    }\n\n    def.children = children;\n  }\n\n  return def;\n} // Normalizes \"attributes\" section of {@link module:ui/template~TemplateDefinition}.\n//\n//\t\tattributes: {\n//\t\t\ta: 'bar',\n//\t\t\tb: {@link module:ui/template~TemplateBinding},\n//\t\t\tc: {\n//\t\t\t\tvalue: 'bar'\n//\t\t\t}\n//\t\t}\n//\n// becomes\n//\n//\t\tattributes: {\n//\t\t\ta: [ 'bar' ],\n//\t\t\tb: [ {@link module:ui/template~TemplateBinding} ],\n//\t\t\tc: {\n//\t\t\t\tvalue: [ 'bar' ]\n//\t\t\t}\n//\t\t}\n//\n// @param {Object} attrs\n\n\nfunction normalizeAttributes(attrs) {\n  for (var a in attrs) {\n    if (attrs[a].value) {\n      attrs[a].value = [].concat(attrs[a].value);\n    }\n\n    arrayify(attrs, a);\n  }\n} // Normalizes \"on\" section of {@link module:ui/template~TemplateDefinition}.\n//\n//\t\ton: {\n//\t\t\ta: 'bar',\n//\t\t\tb: {@link module:ui/template~TemplateBinding},\n//\t\t\tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n//\t\t}\n//\n// becomes\n//\n//\t\ton: {\n//\t\t\ta: [ 'bar' ],\n//\t\t\tb: [ {@link module:ui/template~TemplateBinding} ],\n//\t\t\tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n//\t\t}\n//\n// @param {Object} listeners\n// @returns {Object} Object containing normalized listeners.\n\n\nfunction normalizeListeners(listeners) {\n  for (var l in listeners) {\n    arrayify(listeners, l);\n  }\n\n  return listeners;\n} // Normalizes \"string\" {@link module:ui/template~TemplateDefinition}.\n//\n//\t\t\"foo\"\n//\n// becomes\n//\n//\t\t{ text: [ 'foo' ] },\n//\n// @param {String} def\n// @returns {module:ui/template~TemplateDefinition} Normalized template definition.\n\n\nfunction normalizePlainTextDefinition(def) {\n  return {\n    text: [def]\n  };\n} // Normalizes text {@link module:ui/template~TemplateDefinition}.\n//\n//\t\tchildren: [\n//\t\t\t{ text: 'def' },\n//\t\t\t{ text: {@link module:ui/template~TemplateBinding} }\n//\t\t]\n//\n// becomes\n//\n//\t\tchildren: [\n//\t\t\t{ text: [ 'def' ] },\n//\t\t\t{ text: [ {@link module:ui/template~TemplateBinding} ] }\n//\t\t]\n//\n// @param {module:ui/template~TemplateDefinition} def\n\n\nfunction normalizeTextDefinition(def) {\n  if (!Array.isArray(def.text)) {\n    def.text = [def.text];\n  }\n} // Wraps an entry in Object in an Array, if not already one.\n//\n//\t\t{\n//\t\t\tx: 'y',\n//\t\t\ta: [ 'b' ]\n//\t\t}\n//\n// becomes\n//\n//\t\t{\n//\t\t\tx: [ 'y' ],\n//\t\t\ta: [ 'b' ]\n//\t\t}\n//\n// @param {Object} obj\n// @param {String} key\n\n\nfunction arrayify(obj, key) {\n  if (!Array.isArray(obj[key])) {\n    obj[key] = [obj[key]];\n  }\n} // A helper which concatenates the value avoiding unwanted\n// leading white spaces.\n//\n// @param {String} prev\n// @param {String} cur\n// @returns {String}\n\n\nfunction arrayValueReducer(prev, cur) {\n  if (isFalsy(cur)) {\n    return prev;\n  } else if (isFalsy(prev)) {\n    return cur;\n  } else {\n    return \"\".concat(prev, \" \").concat(cur);\n  }\n} // Extends one object defined in the following format:\n//\n//\t\t{\n//\t\t\tkey1: [Array1],\n//\t\t\tkey2: [Array2],\n//\t\t\t...\n//\t\t\tkeyN: [ArrayN]\n//\t\t}\n//\n// with another object of the same data format.\n//\n// @param {Object} obj Base object.\n// @param {Object} ext Object extending base.\n// @returns {String}\n\n\nfunction extendObjectValueArray(obj, ext) {\n  for (var a in ext) {\n    if (obj[a]) {\n      var _obj$a;\n\n      (_obj$a = obj[a]).push.apply(_obj$a, _toConsumableArray(ext[a]));\n    } else {\n      obj[a] = ext[a];\n    }\n  }\n} // A helper for {@link module:ui/template~Template#extend}. Recursively extends {@link module:ui/template~Template} instance\n// with content from {@link module:ui/template~TemplateDefinition}. See {@link module:ui/template~Template#extend} to learn more.\n//\n// @param {module:ui/template~Template} def A template instance to be extended.\n// @param {module:ui/template~TemplateDefinition} def A definition which is to extend the template instance.\n\n\nfunction extendTemplate(template, def) {\n  if (def.attributes) {\n    if (!template.attributes) {\n      template.attributes = {};\n    }\n\n    extendObjectValueArray(template.attributes, def.attributes);\n  }\n\n  if (def.eventListeners) {\n    if (!template.eventListeners) {\n      template.eventListeners = {};\n    }\n\n    extendObjectValueArray(template.eventListeners, def.eventListeners);\n  }\n\n  if (def.text) {\n    var _template$text;\n\n    (_template$text = template.text).push.apply(_template$text, _toConsumableArray(def.text));\n  }\n\n  if (def.children && def.children.length) {\n    if (template.children.length != def.children.length) {\n      /**\n       * The number of children in extended definition does not match.\n       *\n       * @error ui-template-extend-children-mismatch\n       */\n      throw new CKEditorError('ui-template-extend-children-mismatch: The number of children in extended definition does not match.');\n    }\n\n    var childIndex = 0;\n    var _iteratorNormalCompletion7 = true;\n    var _didIteratorError7 = false;\n    var _iteratorError7 = undefined;\n\n    try {\n      for (var _iterator7 = def.children[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n        var childDef = _step7.value;\n        extendTemplate(template.children[childIndex++], childDef);\n      }\n    } catch (err) {\n      _didIteratorError7 = true;\n      _iteratorError7 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n          _iterator7.return();\n        }\n      } finally {\n        if (_didIteratorError7) {\n          throw _iteratorError7;\n        }\n      }\n    }\n  }\n} // Checks if value is \"falsy\".\n// Note: 0 (Number) is not \"falsy\" in this context.\n//\n// @private\n// @param {*} value Value to be checked.\n\n\nfunction isFalsy(value) {\n  return !value && value !== 0;\n} // Checks if the item is an instance of {@link module:ui/view~View}\n//\n// @private\n// @param {*} value Value to be checked.\n\n\nfunction isView(item) {\n  return item instanceof View;\n} // Checks if the item is an instance of {@link module:ui/template~Template}\n//\n// @private\n// @param {*} value Value to be checked.\n\n\nfunction isTemplate(item) {\n  return item instanceof Template;\n} // Checks if the item is an instance of {@link module:ui/viewcollection~ViewCollection}\n//\n// @private\n// @param {*} value Value to be checked.\n\n\nfunction isViewCollection(item) {\n  return item instanceof ViewCollection;\n} // Creates an empty skeleton for {@link module:ui/template~Template#revert}\n// data.\n//\n// @private\n\n\nfunction getEmptyRevertData() {\n  return {\n    children: [],\n    bindings: [],\n    attributes: {}\n  };\n} // Checks whether an attribute should be extended when\n// {@link module:ui/template~Template#apply} is called.\n//\n// @private\n// @param {String} attrName Attribute name to check.\n\n\nfunction shouldExtend(attrName) {\n  return attrName == 'class' || attrName == 'style';\n}\n/**\n * A definition of the {@link module:ui/template~Template}. It describes what kind of\n * node a template will render (HTML element or text), attributes of an element, DOM event\n * listeners and children.\n *\n * Also see:\n * * {@link module:ui/template~TemplateValueSchema} to learn about HTML element attributes,\n * * {@link module:ui/template~TemplateListenerSchema} to learn about DOM event listeners.\n *\n * A sample definition on an HTML element can look like this:\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tchildren: [\n *\t\t\t\t{\n *\t\t\t\t\ttag: 'span',\n *\t\t\t\t\tattributes: { ... },\n *\t\t\t\t\tchildren: [ ... ],\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\ttext: 'static–text'\n *\t\t\t\t},\n *\t\t\t\t'also-static–text',\n *\t\t\t],\n *\t\t\tattributes: {\n *\t\t\t\tclass: {@link module:ui/template~TemplateValueSchema},\n *\t\t\t\tid: {@link module:ui/template~TemplateValueSchema},\n *\t\t\t\tstyle: {@link module:ui/template~TemplateValueSchema}\n *\n *\t\t\t\t// ...\n *\t\t\t},\n *\t\t\ton: {\n *\t\t\t\t'click': {@link module:ui/template~TemplateListenerSchema}\n *\n *\t\t\t\t// Document.querySelector format is also accepted.\n *\t\t\t\t'keyup@a.some-class': {@link module:ui/template~TemplateListenerSchema}\n *\n *\t\t\t\t// ...\n *\t\t\t}\n *\t\t} );\n *\n * A {@link module:ui/view~View}, another {@link module:ui/template~Template} or a native DOM node\n * can also become a child of a template. When a view is passed, its {@link module:ui/view~View#element} is used:\n *\n *\t\tconst view = new SomeView();\n *\t\tconst childTemplate = new Template( { ... } );\n *\t\tconst childNode = document.createElement( 'b' );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\n *\t\t\tchildren: [\n *\t\t\t\t// view#element will be added as a child of this <p>.\n *\t\t\t\tview,\n *\n * \t\t\t\t// The output of childTemplate.render() will be added here.\n *\t\t\t\tchildTemplate,\n *\n *\t\t\t\t// Native DOM nodes are included directly in the rendered output.\n *\t\t\t\tchildNode\n *\t\t\t]\n *\t\t} );\n *\n * An entire {@link module:ui/viewcollection~ViewCollection} can be used as a child in the definition:\n *\n *\t\tconst collection = new ViewCollection();\n *\t\tcollection.add( someView );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\n *\t\t\tchildren: collection\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateDefinition\n * @type Object\n *\n * @property {String} tag See the template {@link module:ui/template~Template#tag} property.\n *\n * @property {Array.<module:ui/template~TemplateDefinition>} [children]\n * See the template {@link module:ui/template~Template#children} property.\n *\n * @property {Object.<String, module:ui/template~TemplateValueSchema>} [attributes]\n * See the template {@link module:ui/template~Template#attributes} property.\n *\n * @property {String|module:ui/template~TemplateValueSchema|Array.<String|module:ui/template~TemplateValueSchema>} [text]\n * See the template {@link module:ui/template~Template#text} property.\n *\n * @property {Object.<String, module:ui/template~TemplateListenerSchema>} [on]\n * See the template {@link module:ui/template~Template#eventListeners} property.\n */\n\n/**\n * Describes a value of an HTML element attribute or `textContent`. It allows combining multiple\n * data sources like static values and {@link module:utils/observablemixin~Observable} attributes.\n *\n * Also see:\n * * {@link module:ui/template~TemplateDefinition} to learn where to use it,\n * * {@link module:ui/template~Template.bind} to learn how to configure\n * {@link module:utils/observablemixin~Observable} attribute bindings,\n * * {@link module:ui/template~Template#render} to learn how to render a template,\n * * {@link module:ui/template~BindChain#to `to()`} and {@link module:ui/template~BindChain#if `if()`}\n * methods to learn more about bindings.\n *\n * Attribute values can be described in many different ways:\n *\n *\t\t// Bind helper will create bindings to attributes of the observable.\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\t// A plain string schema.\n *\t\t\t\t'class': 'static-text',\n *\n *\t\t\t\t// An object schema, binds to the \"foo\" attribute of the\n *\t\t\t\t// observable and follows its value.\n *\t\t\t\t'class': bind.to( 'foo' ),\n *\n *\t\t\t\t// An array schema, combines the above.\n *\t\t\t\t'class': [\n *\t\t\t\t\t'static-text',\n *\t\t\t\t\tbind.to( 'bar', () => { ... } ),\n *\n * \t\t\t\t\t// Bindings can also be conditional.\n *\t\t\t\t\tbind.if( 'baz', 'class-when-baz-is-true' )\n *\t\t\t\t],\n *\n *\t\t\t\t// An array schema, with a custom namespace, e.g. useful for creating SVGs.\n *\t\t\t\t'class': {\n *\t\t\t\t\tns: 'http://ns.url',\n *\t\t\t\t\tvalue: [\n *\t\t\t\t\t\tbind.if( 'baz', 'value-when-true' ),\n *\t\t\t\t\t\t'static-text'\n *\t\t\t\t\t]\n *\t\t\t\t},\n *\n *\t\t\t\t// An object schema, specific for styles.\n *\t\t\t\tstyle: {\n *\t\t\t\t\tcolor: 'red',\n *\t\t\t\t\tbackgroundColor: bind.to( 'qux', () => { ... } )\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * Text nodes can also have complex values:\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\t// Will render a \"foo\" text node.\n *\t\tnew Template( {\n *\t\t\ttext: 'foo'\n *\t\t} );\n *\n *\t\t// Will render a \"static text: {observable.foo}\" text node.\n *\t\t// The text of the node will be updated as the \"foo\" attribute changes.\n *\t\tnew Template( {\n *\t\t\ttext: [\n *\t\t\t\t'static text: ',\n *\t\t\t\tbind.to( 'foo', () => { ... } )\n *\t\t\t]\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateValueSchema\n * @type {Object|String|Array}\n */\n\n/**\n * Describes an event listener attached to an HTML element. Such listener can propagate DOM events\n * through an {@link module:utils/observablemixin~Observable} instance, execute custom callbacks\n * or both, if necessary.\n *\n * Also see:\n * * {@link module:ui/template~TemplateDefinition} to learn more about template definitions,\n * * {@link module:ui/template~BindChain#to `to()`} method to learn more about bindings.\n *\n * Check out different ways of attaching event listeners below:\n *\n *\t\t// Bind helper will propagate events through the observable.\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\ton: {\n *\t\t\t\t// An object schema. The observable will fire the \"clicked\" event upon DOM \"click\".\n *\t\t\t\tclick: bind.to( 'clicked' )\n *\n *\t\t\t\t// An object schema. It will work for \"click\" event on \"a.foo\" children only.\n *\t\t\t\t'click@a.foo': bind.to( 'clicked' )\n *\n *\t\t\t\t// An array schema, makes the observable propagate multiple events.\n *\t\t\t\tclick: [\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\t\t\t\t\tbind.to( 'executed' )\n *\t\t\t\t],\n *\n *\t\t\t\t// An array schema with a custom callback.\n *\t\t\t\t'click@a.foo': {\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\t\t\t\t\tbind.to( evt => {\n *\t\t\t\t\t\tconsole.log( `${ evt.target } has been clicked!` );\n *\t\t\t\t\t} }\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateListenerSchema\n * @type {Object|String|Array}\n */\n\n/**\n * The return value of {@link ~Template.bind `Template.bind()`}. It provides `to()` and `if()`\n * methods to create the {@link module:utils/observablemixin~Observable observable} attribute and event bindings.\n *\n * @interface module:ui/template~BindChain\n */\n\n/**\n * Binds an {@link module:utils/observablemixin~Observable observable} to either:\n *\n * * an HTML element attribute or a text node `textContent`, so it remains in sync with the observable\n * attribute as it changes,\n * * or an HTML element DOM event, so the DOM events are propagated through an observable.\n *\n * Some common use cases of `to()` bindings are presented below:\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\t// class=\"...\" attribute gets bound to `observable#a`\n *\t\t\t\tclass: bind.to( 'a' )\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t// <p>...</p> gets bound to observable#b; always `toUpperCase()`.\n *\t\t\t\t{\n *\t\t\t\t\ttext: bind.to( 'b', ( value, node ) => value.toUpperCase() )\n *\t\t\t\t}\n *\t\t\t],\n *\t\t\ton: {\n *\t\t\t\tclick: [\n *\t\t\t\t\t// An observable will fire \"clicked\" upon \"click\" in the DOM.\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\n *\t\t\t\t\t// A custom callback will be executed upon \"click\" in the DOM.\n *\t\t\t\t\tbind.to( () => {\n *\t\t\t\t\t\t...\n *\t\t\t\t\t} )\n *\t\t\t\t]\n *\t\t\t}\n *\t\t} ).render();\n *\n * Learn more about using `to()` in the {@link module:ui/template~TemplateValueSchema} and\n * {@link module:ui/template~TemplateListenerSchema}.\n *\n * @method #to\n * @param {String|Function} eventNameOrFunctionOrAttribute An attribute name of\n * {@link module:utils/observablemixin~Observable} or a DOM event name or an event callback.\n * @param {Function} [callback] Allows for processing of the value. Accepts `Node` and `value` as arguments.\n * @returns {module:ui/template~TemplateBinding}\n */\n\n/**\n * Binds an {@link module:utils/observablemixin~Observable observable} to an HTML element attribute or a text\n * node `textContent` so it remains in sync with the observable attribute as it changes.\n *\n * Unlike {@link module:ui/template~BindChain#to}, it controls the presence of the attribute or `textContent`\n * depending on the \"falseness\" of an {@link module:utils/observablemixin~Observable} attribute.\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'input',\n *\t\t\tattributes: {\n *\t\t\t\t// <input checked> when `observable#a` is not undefined/null/false/''\n *\t\t\t\t// <input> when `observable#a` is undefined/null/false\n *\t\t\t\tchecked: bind.if( 'a' )\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t{\n *\t\t\t\t\t// <input>\"b-is-not-set\"</input> when `observable#b` is undefined/null/false/''\n *\t\t\t\t\t// <input></input> when `observable#b` is not \"falsy\"\n *\t\t\t\t\ttext: bind.if( 'b', 'b-is-not-set', ( value, node ) => !value )\n *\t\t\t\t}\n *\t\t\t]\n *\t\t} ).render();\n *\n * Learn more about using `if()` in the {@link module:ui/template~TemplateValueSchema}.\n *\n * @method #if\n * @param {String} attribute An attribute name of {@link module:utils/observablemixin~Observable} used in the binding.\n * @param {String} [valueIfTrue] Value set when the {@link module:utils/observablemixin~Observable} attribute is not\n * undefined/null/false/'' (empty string).\n * @param {Function} [callback] Allows for processing of the value. Accepts `Node` and `value` as arguments.\n * @returns {module:ui/template~TemplateBinding}\n */\n\n/**\n * The {@link module:ui/template~Template#_renderNode} configuration.\n *\n * @private\n * @interface module:ui/template~RenderData\n */\n\n/**\n * Tells {@link module:ui/template~Template#_renderNode} to render\n * children into `DocumentFragment` first and then append the fragment\n * to the parent element. It is a speed optimization.\n *\n * @member {Boolean} #intoFragment\n */\n\n/**\n * A node which is being rendered.\n *\n * @member {HTMLElement|Text} #node\n */\n\n/**\n * Indicates whether the {@module:ui/template~RenderNodeOptions#node} has\n * been provided by {@module:ui/template~Template#apply}.\n *\n * @member {Boolean} #isApplying\n */\n\n/**\n * An object storing the data that helps {@module:ui/template~Template#revert}\n * bringing back an element to its initial state, i.e. before\n * {@module:ui/template~Template#apply} was called.\n *\n * @member {Object} #revertData\n */","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nexport default toSource;","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module module:engine/model/documentfragment\n */\nimport NodeList from './nodelist';\nimport Element from './element';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n/**\n * DocumentFragment represents a part of model which does not have a common root but it's top-level nodes\n * can be seen as siblings. In other words, it is a detached part of model tree, without a root.\n *\n * DocumentFragment has own {@link module:engine/model/markercollection~MarkerCollection}. Markers from this collection\n * will be set to the {@link module:engine/model/model~Model#markers model markers} by a\n * {@link module:engine/model/writer~Writer#insert} function.\n */\n\nvar DocumentFragment =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an empty `DocumentFragment`.\n   *\n   * **Note:** Constructor of this class shouldn't be used directly in the code.\n   * Use the {@link module:engine/model/writer~Writer#createDocumentFragment} method instead.\n   *\n   * @protected\n   * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} [children]\n   * Nodes to be contained inside the `DocumentFragment`.\n   */\n  function DocumentFragment(children) {\n    _classCallCheck(this, DocumentFragment);\n\n    /**\n     * DocumentFragment static markers map. This is a list of names and {@link module:engine/model/range~Range ranges}\n     * which will be set as Markers to {@link module:engine/model/model~Model#markers model markers collection}\n     * when DocumentFragment will be inserted to the document.\n     *\n     * @readonly\n     * @member {Map<String,module:engine/model/range~Range>} module:engine/model/documentfragment~DocumentFragment#markers\n     */\n    this.markers = new Map();\n    /**\n     * List of nodes contained inside the document fragment.\n     *\n     * @private\n     * @member {module:engine/model/nodelist~NodeList} module:engine/model/documentfragment~DocumentFragment#_children\n     */\n\n    this._children = new NodeList();\n\n    if (children) {\n      this._insertChild(0, children);\n    }\n  }\n  /**\n   * Returns an iterator that iterates over all nodes contained inside this document fragment.\n   *\n   * @returns {Iterable.<module:engine/model/node~Node>}\n   */\n\n\n  _createClass(DocumentFragment, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this.getChildren();\n    }\n    /**\n     * Number of this document fragment's children.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"is\",\n\n    /**\n     * Checks whether given model tree object is of given type.\n     *\n     * Read more in {@link module:engine/model/node~Node#is}.\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n    value: function is(type) {\n      return type == 'documentFragment';\n    }\n    /**\n     * Gets the child at the given index. Returns `null` if incorrect index was passed.\n     *\n     * @param {Number} index Index of child.\n     * @returns {module:engine/model/node~Node|null} Child node.\n     */\n\n  }, {\n    key: \"getChild\",\n    value: function getChild(index) {\n      return this._children.getNode(index);\n    }\n    /**\n     * Returns an iterator that iterates over all of this document fragment's children.\n     *\n     * @returns {Iterable.<module:engine/model/node~Node>}\n     */\n\n  }, {\n    key: \"getChildren\",\n    value: function getChildren() {\n      return this._children[Symbol.iterator]();\n    }\n    /**\n     * Returns an index of the given child node. Returns `null` if given node is not a child of this document fragment.\n     *\n     * @param {module:engine/model/node~Node} node Child node to look for.\n     * @returns {Number|null} Child node's index.\n     */\n\n  }, {\n    key: \"getChildIndex\",\n    value: function getChildIndex(node) {\n      return this._children.getNodeIndex(node);\n    }\n    /**\n     * Returns the starting offset of given child. Starting offset is equal to the sum of\n     * {@link module:engine/model/node~Node#offsetSize offset sizes} of all node's siblings that are before it. Returns `null` if\n     * given node is not a child of this document fragment.\n     *\n     * @param {module:engine/model/node~Node} node Child node to look for.\n     * @returns {Number|null} Child node's starting offset.\n     */\n\n  }, {\n    key: \"getChildStartOffset\",\n    value: function getChildStartOffset(node) {\n      return this._children.getNodeStartOffset(node);\n    }\n    /**\n     * Returns path to a `DocumentFragment`, which is an empty array. Added for compatibility reasons.\n     *\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      return [];\n    }\n    /**\n     * Returns a descendant node by its path relative to this element.\n     *\n     *\t\t// <this>a<b>c</b></this>\n     *\t\tthis.getNodeByPath( [ 0 ] );     // -> \"a\"\n     *\t\tthis.getNodeByPath( [ 1 ] );     // -> <b>\n     *\t\tthis.getNodeByPath( [ 1, 0 ] );  // -> \"c\"\n     *\n     * @param {Array.<Number>} relativePath Path of the node to find, relative to this element.\n     * @returns {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"getNodeByPath\",\n    value: function getNodeByPath(relativePath) {\n      var node = this; // eslint-disable-line consistent-this\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = relativePath[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var index = _step.value;\n          node = node.getChild(node.offsetToIndex(index));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return node;\n    }\n    /**\n     * Converts offset \"position\" to index \"position\".\n     *\n     * Returns index of a node that occupies given offset. If given offset is too low, returns `0`. If given offset is\n     * too high, returns index after last child}.\n     *\n     *\t\tconst textNode = new Text( 'foo' );\n     *\t\tconst pElement = new Element( 'p' );\n     *\t\tconst docFrag = new DocumentFragment( [ textNode, pElement ] );\n     *\t\tdocFrag.offsetToIndex( -1 ); // Returns 0, because offset is too low.\n     *\t\tdocFrag.offsetToIndex( 0 ); // Returns 0, because offset 0 is taken by `textNode` which is at index 0.\n     *\t\tdocFrag.offsetToIndex( 1 ); // Returns 0, because `textNode` has `offsetSize` equal to 3, so it occupies offset 1 too.\n     *\t\tdocFrag.offsetToIndex( 2 ); // Returns 0.\n     *\t\tdocFrag.offsetToIndex( 3 ); // Returns 1.\n     *\t\tdocFrag.offsetToIndex( 4 ); // Returns 2. There are no nodes at offset 4, so last available index is returned.\n     *\n     * @param {Number} offset Offset to look for.\n     * @returns {Number} Index of a node that occupies given offset.\n     */\n\n  }, {\n    key: \"offsetToIndex\",\n    value: function offsetToIndex(offset) {\n      return this._children.offsetToIndex(offset);\n    }\n    /**\n     * Converts `DocumentFragment` instance to plain object and returns it.\n     * Takes care of converting all of this document fragment's children.\n     *\n     * @returns {Object} `DocumentFragment` instance converted to plain object.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this._children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var node = _step2.value;\n          json.push(node.toJSON());\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return json;\n    }\n    /**\n     * Creates a `DocumentFragment` instance from given plain object (i.e. parsed JSON string).\n     * Converts `DocumentFragment` children to proper nodes.\n     *\n     * @param {Object} json Plain object to be converted to `DocumentFragment`.\n     * @returns {module:engine/model/documentfragment~DocumentFragment} `DocumentFragment` instance created using given plain object.\n     */\n\n  }, {\n    key: \"_appendChild\",\n\n    /**\n     * {@link #_insertChild Inserts} one or more nodes at the end of this document fragment.\n     *\n     * @protected\n     * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\n     */\n    value: function _appendChild(items) {\n      this._insertChild(this.childCount, items);\n    }\n    /**\n     * Inserts one or more nodes at the given index and sets {@link module:engine/model/node~Node#parent parent} of these nodes\n     * to this document fragment.\n     *\n     * @protected\n     * @param {Number} index Index at which nodes should be inserted.\n     * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\n     */\n\n  }, {\n    key: \"_insertChild\",\n    value: function _insertChild(index, items) {\n      var nodes = normalize(items);\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = nodes[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var node = _step3.value;\n\n          // If node that is being added to this element is already inside another element, first remove it from the old parent.\n          if (node.parent !== null) {\n            node._remove();\n          }\n\n          node.parent = this;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this._children._insertNodes(index, nodes);\n    }\n    /**\n     * Removes one or more nodes starting at the given index\n     * and sets {@link module:engine/model/node~Node#parent parent} of these nodes to `null`.\n     *\n     * @protected\n     * @param {Number} index Index of the first node to remove.\n     * @param {Number} [howMany=1] Number of nodes to remove.\n     * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n     */\n\n  }, {\n    key: \"_removeChildren\",\n    value: function _removeChildren(index) {\n      var howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      var nodes = this._children._removeNodes(index, howMany);\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = nodes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var node = _step4.value;\n          node.parent = null;\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return nodes;\n    }\n  }, {\n    key: \"childCount\",\n    get: function get() {\n      return this._children.length;\n    }\n    /**\n     * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all of this document fragment's children.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"maxOffset\",\n    get: function get() {\n      return this._children.maxOffset;\n    }\n    /**\n     * Is `true` if there are no nodes inside this document fragment, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this.childCount === 0;\n    }\n    /**\n     * Artificial root of `DocumentFragment`. Returns itself. Added for compatibility reasons.\n     *\n     * @readonly\n     * @type {module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this;\n    }\n    /**\n     * Artificial parent of `DocumentFragment`. Returns `null`. Added for compatibility reasons.\n     *\n     * @readonly\n     * @type {null}\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return null;\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      var children = [];\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = json[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var child = _step5.value;\n\n          if (child.name) {\n            // If child has name property, it is an Element.\n            children.push(Element.fromJSON(child));\n          } else {\n            // Otherwise, it is a Text node.\n            children.push(Text.fromJSON(child));\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return new DocumentFragment(children);\n    }\n  }]);\n\n  return DocumentFragment;\n}(); // Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>}\n// @returns {Iterable.<module:engine/model/node~Node>}\n\n\nexport { DocumentFragment as default };\n\nfunction normalize(nodes) {\n  // Separate condition because string is iterable.\n  if (typeof nodes == 'string') {\n    return [new Text(nodes)];\n  }\n\n  if (!isIterable(nodes)) {\n    nodes = [nodes];\n  } // Array.from to enable .map() on non-arrays.\n\n\n  return Array.from(nodes).map(function (node) {\n    if (typeof node == 'string') {\n      return new Text(node);\n    }\n\n    if (node instanceof TextProxy) {\n      return new Text(node.data, node.getAttributes());\n    }\n\n    return node;\n  });\n}","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nexport default eq;","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/emittermixin\n */\nimport { default as EmitterMixin, _getEmitterListenedTo, _setEmitterId } from '../emittermixin';\nimport uid from '../uid';\nimport isNode from './isnode';\nimport isWindow from './iswindow';\nimport { extend } from 'lodash-es';\n/**\n * Mixin that injects the DOM events API into its host. It provides the API\n * compatible with {@link module:utils/emittermixin~EmitterMixin}.\n *\n * DOM emitter mixin is by default available in the {@link module:ui/view~View} class,\n * but it can also be mixed into any other class:\n *\n *\t\timport mix from '../utils/mix.js';\n *\t\timport DomEmitterMixin from '../utils/dom/emittermixin.js';\n *\n *\t\tclass SomeView {}\n *\t\tmix( SomeView, DomEmitterMixin );\n *\n *\t\tconst view = new SomeView();\n *\t\tview.listenTo( domElement, ( evt, domEvt ) => {\n *\t\t\tconsole.log( evt, domEvt );\n *\t\t} );\n *\n * @mixin EmitterMixin\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/dom/emittermixin~Emitter\n */\n\nvar DomEmitterMixin = extend({}, EmitterMixin, {\n  /**\n   * Registers a callback function to be executed when an event is fired in a specific Emitter or DOM Node.\n   * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\n   *\n   * @param {module:utils/emittermixin~Emitter|Node} emitter The object that fires the event.\n   * @param {String} event The name of the event.\n   * @param {Function} callback The function to be called on event.\n   * @param {Object} [options={}] Additional options.\n   * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n   * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n   * order they were added.\n   * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\n   * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n   */\n  listenTo: function listenTo(emitter) {\n    var _EmitterMixin$listenT;\n\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n\n    // Check if emitter is an instance of DOM Node. If so, replace the argument with\n    // corresponding ProxyEmitter (or create one if not existing).\n    if (isNode(emitter) || isWindow(emitter)) {\n      var proxy = this._getProxyEmitter(emitter) || new ProxyEmitter(emitter);\n      proxy.attach.apply(proxy, rest);\n      emitter = proxy;\n    } // Execute parent class method with Emitter (or ProxyEmitter) instance.\n\n\n    (_EmitterMixin$listenT = EmitterMixin.listenTo).call.apply(_EmitterMixin$listenT, [this, emitter].concat(rest));\n  },\n\n  /**\n   * Stops listening for events. It can be used at different levels:\n   * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\n   *\n   * * To stop listening to a specific callback.\n   * * To stop listening to a specific event.\n   * * To stop listening to all events fired by a specific object.\n   * * To stop listening to all events fired by all object.\n   *\n   * @param {module:utils/emittermixin~Emitter|Node} [emitter] The object to stop listening to. If omitted, stops it for all objects.\n   * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\n   * for all events from `emitter`.\n   * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\n   * `event`.\n   */\n  stopListening: function stopListening(emitter, event, callback) {\n    // Check if emitter is an instance of DOM Node. If so, replace the argument with corresponding ProxyEmitter.\n    if (isNode(emitter) || isWindow(emitter)) {\n      var proxy = this._getProxyEmitter(emitter); // Element has no listeners.\n\n\n      if (!proxy) {\n        return;\n      }\n\n      emitter = proxy;\n    } // Execute parent class method with Emitter (or ProxyEmitter) instance.\n\n\n    EmitterMixin.stopListening.call(this, emitter, event, callback);\n\n    if (emitter instanceof ProxyEmitter) {\n      emitter.detach(event);\n    }\n  },\n\n  /**\n   * Retrieves ProxyEmitter instance for given DOM Node residing in this Host.\n   *\n   * @pivate\n   * @param {Node} node DOM Node of the ProxyEmitter.\n   * @returns {module:utils/dom/emittermixin~ProxyEmitter} ProxyEmitter instance or null.\n   */\n  _getProxyEmitter: function _getProxyEmitter(node) {\n    return _getEmitterListenedTo(this, getNodeUID(node));\n  }\n});\nexport default DomEmitterMixin;\n/**\n * Creates a ProxyEmitter instance. Such an instance is a bridge between a DOM Node firing events\n * and any Host listening to them. It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#on}.\n *\n *                                  listenTo( click, ... )\n *                    +-----------------------------------------+\n *                    |              stopListening( ... )       |\n *     +----------------------------+                           |             addEventListener( click, ... )\n *     | Host                       |                           |   +---------------------------------------------+\n *     +----------------------------+                           |   |       removeEventListener( click, ... )     |\n *     | _listeningTo: {            |                +----------v-------------+                                   |\n *     |   UID: {                   |                | ProxyEmitter           |                                   |\n *     |     emitter: ProxyEmitter, |                +------------------------+                      +------------v----------+\n *     |     callbacks: {           |                | events: {              |                      | Node (HTMLElement)    |\n *     |       click: [ callbacks ] |                |   click: [ callbacks ] |                      +-----------------------+\n *     |     }                      |                | },                     |                      | data-ck-expando: UID  |\n *     |   }                        |                | _domNode: Node,        |                      +-----------------------+\n *     | }                          |                | _domListeners: {},     |                                   |\n *     | +------------------------+ |                | _emitterId: UID        |                                   |\n *     | | DomEmitterMixin        | |                +--------------^---------+                                   |\n *     | +------------------------+ |                           |   |                                             |\n *     +--------------^-------------+                           |   +---------------------------------------------+\n *                    |                                         |                  click (DOM Event)\n *                    +-----------------------------------------+\n *                                fire( click, DOM Event )\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/dom/emittermixin~Emitter\n * @private\n */\n\nvar ProxyEmitter =\n/**\n * @param {Node} node DOM Node that fires events.\n * @returns {Object} ProxyEmitter instance bound to the DOM Node.\n */\nfunction ProxyEmitter(node) {\n  _classCallCheck(this, ProxyEmitter);\n\n  // Set emitter ID to match DOM Node \"expando\" property.\n  _setEmitterId(this, getNodeUID(node)); // Remember the DOM Node this ProxyEmitter is bound to.\n\n\n  this._domNode = node;\n};\n\nextend(ProxyEmitter.prototype, EmitterMixin, {\n  /**\n   * Collection of native DOM listeners.\n   *\n   * @private\n   * @member {Object} module:utils/dom/emittermixin~ProxyEmitter#_domListeners\n   */\n\n  /**\n   * Registers a callback function to be executed when an event is fired.\n   *\n   * It attaches a native DOM listener to the DOM Node. When fired,\n   * a corresponding Emitter event will also fire with DOM Event object as an argument.\n   *\n   * @method module:utils/dom/emittermixin~ProxyEmitter#attach\n   * @param {String} event The name of the event.\n   * @param {Function} callback The function to be called on event.\n   * @param {Object} [options={}] Additional options.\n   * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\n   * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n   */\n  attach: function attach(event, callback) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // If the DOM Listener for given event already exist it is pointless\n    // to attach another one.\n    if (this._domListeners && this._domListeners[event]) {\n      return;\n    }\n\n    var domListener = this._createDomListener(event, !!options.useCapture); // Attach the native DOM listener to DOM Node.\n\n\n    this._domNode.addEventListener(event, domListener, !!options.useCapture);\n\n    if (!this._domListeners) {\n      this._domListeners = {};\n    } // Store the native DOM listener in this ProxyEmitter. It will be helpful\n    // when stopping listening to the event.\n\n\n    this._domListeners[event] = domListener;\n  },\n\n  /**\n   * Stops executing the callback on the given event.\n   *\n   * @method module:utils/dom/emittermixin~ProxyEmitter#detach\n   * @param {String} event The name of the event.\n   */\n  detach: function detach(event) {\n    var events; // Remove native DOM listeners which are orphans. If no callbacks\n    // are awaiting given event, detach native DOM listener from DOM Node.\n    // See: {@link attach}.\n\n    if (this._domListeners[event] && (!(events = this._events[event]) || !events.callbacks.length)) {\n      this._domListeners[event].removeListener();\n    }\n  },\n\n  /**\n   * Creates a native DOM listener callback. When the native DOM event\n   * is fired it will fire corresponding event on this ProxyEmitter.\n   * Note: A native DOM Event is passed as an argument.\n   *\n   * @private\n   * @method module:utils/dom/emittermixin~ProxyEmitter#_createDomListener\n   * @param {String} event The name of the event.\n   * @param {Boolean} useCapture Indicates whether the listener was created for capturing event.\n   * @returns {Function} The DOM listener callback.\n   */\n  _createDomListener: function _createDomListener(event, useCapture) {\n    var _this = this;\n\n    var domListener = function domListener(domEvt) {\n      _this.fire(event, domEvt);\n    }; // Supply the DOM listener callback with a function that will help\n    // detach it from the DOM Node, when it is no longer necessary.\n    // See: {@link detach}.\n\n\n    domListener.removeListener = function () {\n      _this._domNode.removeEventListener(event, domListener, useCapture);\n\n      delete _this._domListeners[event];\n    };\n\n    return domListener;\n  }\n}); // Gets an unique DOM Node identifier. The identifier will be set if not defined.\n//\n// @private\n// @param {Node} node\n// @returns {String} UID for given DOM Node.\n\nfunction getNodeUID(node) {\n  return node['data-ck-expando'] || (node['data-ck-expando'] = uid());\n}\n/**\n * Interface representing classes which mix in {@link module:utils/dom/emittermixin~EmitterMixin}.\n *\n * @interface Emitter\n */","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/domeventobserver\n */\nimport Observer from './observer';\nimport DomEventData from './domeventdata';\n/**\n * Base class for DOM event observers. This class handles\n * {@link module:engine/view/observer/observer~Observer#observe adding} listeners to DOM elements,\n * {@link module:engine/view/observer/observer~Observer#disable disabling} and\n * {@link module:engine/view/observer/observer~Observer#enable re-enabling} events.\n * Child class needs to define\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#domEventType DOM event type} and\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#onDomEvent callback}.\n *\n * For instance:\n *\n *\t\tclass ClickObserver extends DomEventObserver {\n *\t\t\t// It can also be defined as a normal property in the constructor.\n *\t\t\tget domEventType() {\n *\t\t\t\treturn 'click';\n *\t\t\t}\n *\n *\t\t\tonDomEvent( domEvent ) {\n *\t\t\t\tthis.fire( 'click', domEvent );\n *\t\t\t}\n *\t\t}\n *\n * @extends module:engine/view/observer/observer~Observer\n */\n\nvar DomEventObserver =\n/*#__PURE__*/\nfunction (_Observer) {\n  _inherits(DomEventObserver, _Observer);\n\n  /**\n   * Type of the DOM event the observer should listen on. Array of types can be defined\n   * if the obsever should listen to multiple DOM events.\n   *\n   * @readonly\n   * @member {String|Array.<String>} #domEventType\n   */\n\n  /**\n   * Callback which should be called when the DOM event occurred. Note that the callback will not be called if\n   * observer {@link #isEnabled is not enabled}.\n   *\n   * @see #domEventType\n   * @abstract\n   * @method #onDomEvent\n   */\n\n  /**\n   * @inheritDoc\n   */\n  function DomEventObserver(view) {\n    var _this;\n\n    _classCallCheck(this, DomEventObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DomEventObserver).call(this, view));\n    /**\n     * If set to `true` DOM events will be listened on the capturing phase.\n     * Default value is `false`.\n     *\n     * @member {Boolean}\n     */\n\n    _this.useCapture = false;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(DomEventObserver, [{\n    key: \"observe\",\n    value: function observe(domElement) {\n      var _this2 = this;\n\n      var types = typeof this.domEventType == 'string' ? [this.domEventType] : this.domEventType;\n      types.forEach(function (type) {\n        _this2.listenTo(domElement, type, function (eventInfo, domEvent) {\n          if (_this2.isEnabled) {\n            _this2.onDomEvent(domEvent);\n          }\n        }, {\n          useCapture: _this2.useCapture\n        });\n      });\n    }\n    /**\n     * Calls `Document#fire()` if observer {@link #isEnabled is enabled}.\n     *\n     * @see module:utils/emittermixin~EmitterMixin#fire\n     * @param {String} eventType The event type (name).\n     * @param {Event} domEvent The DOM event.\n     * @param {Object} [additionalData] The additional data which should extend the\n     * {@link module:engine/view/observer/domeventdata~DomEventData event data} object.\n     */\n\n  }, {\n    key: \"fire\",\n    value: function fire(eventType, domEvent, additionalData) {\n      if (this.isEnabled) {\n        this.document.fire(eventType, new DomEventData(this.view, domEvent, additionalData));\n      }\n    }\n  }]);\n\n  return DomEventObserver;\n}(Observer);\n\nexport { DomEventObserver as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/keystrokehandler\n */\nimport DomEmitterMixin from './dom/emittermixin';\nimport { getCode, parseKeystroke } from './keyboard';\n/**\n * Keystroke handler allows registering callbacks for given keystrokes.\n *\n * The most frequent use of this class is through the {@link module:core/editor/editor~Editor#keystrokes `editor.keystrokes`}\n * property. It allows listening to keystrokes executed in the editing view:\n *\n *\t\teditor.keystrokes.set( 'Ctrl+A', ( keyEvtData, cancel ) => {\n *\t\t\tconsole.log( 'Ctrl+A has been pressed' );\n *\t\t\tcancel();\n *\t\t} );\n *\n * However, this utility class can be used in various part of the UI. For instance, a certain {@link module:ui/view~View}\n * can use it like this:\n *\n *\t\tclass MyView extends View {\n *\t\t\tconstructor() {\n *\t\t\t\tthis.keystrokes = new KeystrokeHandler();\n *\n * \t\t\t\tthis.keystrokes.set( 'tab', handleTabKey );\n *\t\t\t}\n *\n *\t\t\trender() {\n *\t\t\t\tsuper.render();\n *\n *\t\t\t\tthis.keystrokes.listenTo( this.element );\n *\t\t\t}\n *\t\t}\n *\n * That keystroke handler will listen to `keydown` events fired in this view's main element.\n *\n */\n\nvar KeystrokeHandler =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the keystroke handler.\n   */\n  function KeystrokeHandler() {\n    _classCallCheck(this, KeystrokeHandler);\n\n    /**\n     * Listener used to listen to events for easier keystroke handler destruction.\n     *\n     * @protected\n     * @member {module:utils/dom/emittermixin~Emitter}\n     */\n    this._listener = Object.create(DomEmitterMixin);\n  }\n  /**\n   * Starts listening for `keydown` events from a given emitter.\n   *\n   * @param {module:utils/emittermixin~Emitter} emitter\n   */\n\n\n  _createClass(KeystrokeHandler, [{\n    key: \"listenTo\",\n    value: function listenTo(emitter) {\n      var _this = this;\n\n      // The #_listener works here as a kind of dispatcher. It groups the events coming from the same\n      // keystroke so the listeners can be attached to them with different priorities.\n      //\n      // E.g. all the keystrokes with the `keyCode` of 42 coming from the `emitter` are propagated\n      // as a `_keydown:42` event by the `_listener`. If there's a callback created by the `set`\n      // method for this 42 keystroke, it listens to the `_listener#_keydown:42` event only and interacts\n      // only with other listeners of this particular event, thus making it possible to prioritize\n      // the listeners and safely cancel execution, when needed. Instead of duplicating the Emitter logic,\n      // the KeystrokeHandler re–uses it to do its job.\n      this._listener.listenTo(emitter, 'keydown', function (evt, keyEvtData) {\n        _this._listener.fire('_keydown:' + getCode(keyEvtData), keyEvtData);\n      });\n    }\n    /**\n     * Registers a handler for the specified keystroke.\n     *\n     * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\n     * the {@link module:utils/keyboard~parseKeystroke} function.\n     * @param {Function} callback A function called with the\n     * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\n     * a helper funcion to call both `preventDefault()` and `stopPropagation()` on the underlying event.\n     * @param {Object} [options={}] Additional options.\n     * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of the keystroke\n     * callback. The higher the priority value the sooner the callback will be executed. Keystrokes having the same priority\n     * are called in the order they were added.\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(keystroke, callback) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var keyCode = parseKeystroke(keystroke);\n      var priority = options.priority; // Execute the passed callback on KeystrokeHandler#_keydown.\n      // TODO: https://github.com/ckeditor/ckeditor5-utils/issues/144\n\n      this._listener.listenTo(this._listener, '_keydown:' + keyCode, function (evt, keyEvtData) {\n        callback(keyEvtData, function () {\n          // Stop the event in the DOM: no listener in the web page\n          // will be triggered by this event.\n          keyEvtData.preventDefault();\n          keyEvtData.stopPropagation(); // Stop the event in the KeystrokeHandler: no more callbacks\n          // will be executed for this keystroke.\n\n          evt.stop();\n        }); // Mark this keystroke as handled by the callback. See: #press.\n\n        evt.return = true;\n      }, {\n        priority: priority\n      });\n    }\n    /**\n     * Triggers a keystroke handler for a specified key combination, if such a keystroke was {@link #set defined}.\n     *\n     * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEvtData Key event data.\n     * @returns {Boolean} Whether the keystroke was handled.\n     */\n\n  }, {\n    key: \"press\",\n    value: function press(keyEvtData) {\n      return !!this._listener.fire('_keydown:' + getCode(keyEvtData), keyEvtData);\n    }\n    /**\n     * Destroys the keystroke handler.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._listener.stopListening();\n    }\n  }]);\n\n  return KeystrokeHandler;\n}();\n\nexport { KeystrokeHandler as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* global setTimeout, clearTimeout */\n\n/**\n * @module utils/focustracker\n */\nimport DomEmitterMixin from './dom/emittermixin';\nimport ObservableMixin from './observablemixin';\nimport CKEditorError from './ckeditorerror';\nimport mix from './mix';\n/**\n * Allows observing a group of `HTMLElement`s whether at least one of them is focused.\n *\n * Used by the {@link module:core/editor/editor~Editor} in order to track whether the focus is still within the application,\n * or were used outside of its UI.\n *\n * **Note** `focus` and `blur` listeners use event capturing, so it is only needed to register wrapper `HTMLElement`\n * which contain other `focusable` elements. But note that this wrapper element has to be focusable too\n * (have e.g. `tabindex=\"-1\"`).\n *\n * @mixes module:utils/dom/emittermixin~EmitterMixin\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar FocusTracker =\n/*#__PURE__*/\nfunction () {\n  function FocusTracker() {\n    _classCallCheck(this, FocusTracker);\n\n    /**\n     * True when one of the registered elements is focused.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} #isFocused\n     */\n    this.set('isFocused', false);\n    /**\n     * The currently focused element.\n     *\n     * While {@link #isFocused `isFocused`} remains `true`, the focus can\n     * move between different UI elements. This property tracks those\n     * elements and tells which one is currently focused.\n     *\n     * @readonly\n     * @observable\n     * @member {HTMLElement|null}\n     */\n\n    this.set('focusedElement', null);\n    /**\n     * List of registered elements.\n     *\n     * @private\n     * @member {Set.<HTMLElement>}\n     */\n\n    this._elements = new Set();\n    /**\n     * Event loop timeout.\n     *\n     * @private\n     * @member {Number}\n     */\n\n    this._nextEventLoopTimeout = null;\n  }\n  /**\n   * Starts tracking the specified element.\n   *\n   * @param {HTMLElement} element\n   */\n\n\n  _createClass(FocusTracker, [{\n    key: \"add\",\n    value: function add(element) {\n      var _this = this;\n\n      if (this._elements.has(element)) {\n        throw new CKEditorError('focusTracker-add-element-already-exist');\n      }\n\n      this.listenTo(element, 'focus', function () {\n        return _this._focus(element);\n      }, {\n        useCapture: true\n      });\n      this.listenTo(element, 'blur', function () {\n        return _this._blur();\n      }, {\n        useCapture: true\n      });\n\n      this._elements.add(element);\n    }\n    /**\n     * Stops tracking the specified element and stops listening on this element.\n     *\n     * @param {HTMLElement} element\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(element) {\n      if (element === this.focusedElement) {\n        this._blur(element);\n      }\n\n      if (this._elements.has(element)) {\n        this.stopListening(element);\n\n        this._elements.delete(element);\n      }\n    }\n    /**\n     * Destroys the focus tracker by:\n     * - Disabling all event listeners attached to tracked elements.\n     * - Removing all tracked elements that were previously added.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopListening();\n    }\n    /**\n     * Stores currently focused element and set {#isFocused} as `true`.\n     *\n     * @private\n     * @param {HTMLElement} element Element which has been focused.\n     */\n\n  }, {\n    key: \"_focus\",\n    value: function _focus(element) {\n      clearTimeout(this._nextEventLoopTimeout);\n      this.focusedElement = element;\n      this.isFocused = true;\n    }\n    /**\n     * Clears currently focused element and set {@link #isFocused} as `false`.\n     * This method uses `setTimeout` to change order of fires `blur` and `focus` events.\n     *\n     * @private\n     * @fires blur\n     */\n\n  }, {\n    key: \"_blur\",\n    value: function _blur() {\n      var _this2 = this;\n\n      clearTimeout(this._nextEventLoopTimeout);\n      this._nextEventLoopTimeout = setTimeout(function () {\n        _this2.focusedElement = null;\n        _this2.isFocused = false;\n      }, 0);\n    }\n    /**\n     * @event focus\n     */\n\n    /**\n     * @event blur\n     */\n\n  }]);\n\n  return FocusTracker;\n}();\n\nexport { FocusTracker as default };\nmix(FocusTracker, DomEmitterMixin);\nmix(FocusTracker, ObservableMixin);","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;","import eq from './eq.js';\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nexport default assocIndexOf;","import assocIndexOf from './_assocIndexOf.js';\n/** Used for built-in method references. */\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;","import assocIndexOf from './_assocIndexOf.js';\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;","import assocIndexOf from './_assocIndexOf.js';\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;","import assocIndexOf from './_assocIndexOf.js';\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nexport default listCacheSet;","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nexport default ListCache;","import getNative from './_getNative.js';\nimport root from './_root.js';\n/* Built-in method references that are verified to be native. */\n\nvar Map = getNative(root, 'Map');\nexport default Map;","import $$observable from 'symbol-observable';\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\n\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\n\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\n\n\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers);\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(\"Dispatching while constructing your middleware is not allowed. \" + \"Other middleware would not be applied to this dispatch.\");\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { createStore, combineReducers, bindActionCreators, applyMiddleware, compose, ActionTypes as __DO_NOT_USE__ActionTypes };","import createContext from 'create-react-context';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport warning from 'tiny-warning';\nimport { createMemoryHistory, createLocation, locationsAreEqual, createPath } from 'history';\nimport invariant from 'tiny-invariant';\nimport pathToRegexp from 'path-to-regexp';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport { isValidElementType } from 'react-is';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport hoistStatics from 'hoist-non-react-statics'; // TODO: Replace with React.createContext once we can assume React 16+\n\nvar createNamedContext = function createNamedContext(name) {\n  var context = createContext();\n  context.Provider.displayName = name + \".Provider\";\n  context.Consumer.displayName = name + \".Consumer\";\n  return context;\n};\n\nvar context =\n/*#__PURE__*/\ncreateNamedContext('Router');\n/**\n * The public API for putting history on context.\n */\n\nvar Router =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Router, _React$Component);\n\n  Router.computeRootMatch = function computeRootMatch(pathname) {\n    return {\n      path: \"/\",\n      url: \"/\",\n      params: {},\n      isExact: pathname === \"/\"\n    };\n  };\n\n  function Router(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      location: props.history.location\n    }; // This is a bit of a hack. We have to start listening for location\n    // changes here in the constructor in case there are any <Redirect>s\n    // on the initial render. If there are, they will replace/push when\n    // they mount and since cDM fires in children before parents, we may\n    // get a new location before the <Router> is mounted.\n\n    _this._isMounted = false;\n    _this._pendingLocation = null;\n\n    if (!props.staticContext) {\n      _this.unlisten = props.history.listen(function (location) {\n        if (_this._isMounted) {\n          _this.setState({\n            location: location\n          });\n        } else {\n          _this._pendingLocation = location;\n        }\n      });\n    }\n\n    return _this;\n  }\n\n  var _proto = Router.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._isMounted = true;\n\n    if (this._pendingLocation) {\n      this.setState({\n        location: this._pendingLocation\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.unlisten) this.unlisten();\n  };\n\n  _proto.render = function render() {\n    return React.createElement(context.Provider, {\n      children: this.props.children || null,\n      value: {\n        history: this.props.history,\n        location: this.state.location,\n        match: Router.computeRootMatch(this.state.location.pathname),\n        staticContext: this.props.staticContext\n      }\n    });\n  };\n\n  return Router;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  Router.propTypes = {\n    children: PropTypes.node,\n    history: PropTypes.object.isRequired,\n    staticContext: PropTypes.object\n  };\n\n  Router.prototype.componentDidUpdate = function (prevProps) {\n    process.env.NODE_ENV !== \"production\" ? warning(prevProps.history === this.props.history, \"You cannot change <Router history>\") : void 0;\n  };\n}\n/**\n * The public API for a <Router> that stores location in memory.\n */\n\n\nvar MemoryRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(MemoryRouter, _React$Component);\n\n  function MemoryRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = createMemoryHistory(_this.props);\n    return _this;\n  }\n\n  var _proto = MemoryRouter.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return MemoryRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  MemoryRouter.propTypes = {\n    initialEntries: PropTypes.array,\n    initialIndex: PropTypes.number,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number,\n    children: PropTypes.node\n  };\n\n  MemoryRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<MemoryRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { MemoryRouter as Router }`.\") : void 0;\n  };\n}\n\nvar Lifecycle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Lifecycle, _React$Component);\n\n  function Lifecycle() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Lifecycle.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.props.onMount) this.props.onMount.call(this, this);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.onUpdate) this.props.onUpdate.call(this, this, prevProps);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.props.onUnmount) this.props.onUnmount.call(this, this);\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return Lifecycle;\n}(React.Component);\n/**\n * The public API for prompting the user before navigating away from a screen.\n */\n\n\nfunction Prompt(_ref) {\n  var message = _ref.message,\n      _ref$when = _ref.when,\n      when = _ref$when === void 0 ? true : _ref$when;\n  return React.createElement(context.Consumer, null, function (context$$1) {\n    !context$$1 ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <Prompt> outside a <Router>\") : invariant(false) : void 0;\n    if (!when || context$$1.staticContext) return null;\n    var method = context$$1.history.block;\n    return React.createElement(Lifecycle, {\n      onMount: function onMount(self) {\n        self.release = method(message);\n      },\n      onUpdate: function onUpdate(self, prevProps) {\n        if (prevProps.message !== message) {\n          self.release();\n          self.release = method(message);\n        }\n      },\n      onUnmount: function onUnmount(self) {\n        self.release();\n      },\n      message: message\n    });\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  var messageType = PropTypes.oneOfType([PropTypes.func, PropTypes.string]);\n  Prompt.propTypes = {\n    when: PropTypes.bool,\n    message: messageType.isRequired\n  };\n}\n\nvar cache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nfunction compilePath(path) {\n  if (cache[path]) return cache[path];\n  var generator = pathToRegexp.compile(path);\n\n  if (cacheCount < cacheLimit) {\n    cache[path] = generator;\n    cacheCount++;\n  }\n\n  return generator;\n}\n/**\n * Public API for generating a URL pathname from a path and parameters.\n */\n\n\nfunction generatePath(path, params) {\n  if (path === void 0) {\n    path = \"/\";\n  }\n\n  if (params === void 0) {\n    params = {};\n  }\n\n  return path === \"/\" ? path : compilePath(path)(params, {\n    pretty: true\n  });\n}\n/**\n * The public API for navigating programmatically with a component.\n */\n\n\nfunction Redirect(_ref) {\n  var computedMatch = _ref.computedMatch,\n      to = _ref.to,\n      _ref$push = _ref.push,\n      push = _ref$push === void 0 ? false : _ref$push;\n  return React.createElement(context.Consumer, null, function (context$$1) {\n    !context$$1 ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <Redirect> outside a <Router>\") : invariant(false) : void 0;\n    var history = context$$1.history,\n        staticContext = context$$1.staticContext;\n    var method = push ? history.push : history.replace;\n    var location = createLocation(computedMatch ? typeof to === \"string\" ? generatePath(to, computedMatch.params) : _extends({}, to, {\n      pathname: generatePath(to.pathname, computedMatch.params)\n    }) : to); // When rendering in a static context,\n    // set the new location immediately.\n\n    if (staticContext) {\n      method(location);\n      return null;\n    }\n\n    return React.createElement(Lifecycle, {\n      onMount: function onMount() {\n        method(location);\n      },\n      onUpdate: function onUpdate(self, prevProps) {\n        if (!locationsAreEqual(prevProps.to, location)) {\n          method(location);\n        }\n      },\n      to: to\n    });\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  Redirect.propTypes = {\n    push: PropTypes.bool,\n    from: PropTypes.string,\n    to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\n  };\n}\n\nvar cache$1 = {};\nvar cacheLimit$1 = 10000;\nvar cacheCount$1 = 0;\n\nfunction compilePath$1(path, options) {\n  var cacheKey = \"\" + options.end + options.strict + options.sensitive;\n  var pathCache = cache$1[cacheKey] || (cache$1[cacheKey] = {});\n  if (pathCache[path]) return pathCache[path];\n  var keys = [];\n  var regexp = pathToRegexp(path, keys, options);\n  var result = {\n    regexp: regexp,\n    keys: keys\n  };\n\n  if (cacheCount$1 < cacheLimit$1) {\n    pathCache[path] = result;\n    cacheCount$1++;\n  }\n\n  return result;\n}\n/**\n * Public API for matching a URL pathname to a path.\n */\n\n\nfunction matchPath(pathname, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (typeof options === \"string\") options = {\n    path: options\n  };\n  var _options = options,\n      path = _options.path,\n      _options$exact = _options.exact,\n      exact = _options$exact === void 0 ? false : _options$exact,\n      _options$strict = _options.strict,\n      strict = _options$strict === void 0 ? false : _options$strict,\n      _options$sensitive = _options.sensitive,\n      sensitive = _options$sensitive === void 0 ? false : _options$sensitive;\n  var paths = [].concat(path);\n  return paths.reduce(function (matched, path) {\n    if (matched) return matched;\n\n    var _compilePath = compilePath$1(path, {\n      end: exact,\n      strict: strict,\n      sensitive: sensitive\n    }),\n        regexp = _compilePath.regexp,\n        keys = _compilePath.keys;\n\n    var match = regexp.exec(pathname);\n    if (!match) return null;\n    var url = match[0],\n        values = match.slice(1);\n    var isExact = pathname === url;\n    if (exact && !isExact) return null;\n    return {\n      path: path,\n      // the path used to match\n      url: path === \"/\" && url === \"\" ? \"/\" : url,\n      // the matched portion of the URL\n      isExact: isExact,\n      // whether or not we matched exactly\n      params: keys.reduce(function (memo, key, index) {\n        memo[key.name] = values[index];\n        return memo;\n      }, {})\n    };\n  }, null);\n}\n\nfunction isEmptyChildren(children) {\n  return React.Children.count(children) === 0;\n}\n/**\n * The public API for matching a single path and rendering.\n */\n\n\nvar Route =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Route, _React$Component);\n\n  function Route() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Route.prototype;\n\n  _proto.render = function render() {\n    var _this = this;\n\n    return React.createElement(context.Consumer, null, function (context$$1) {\n      !context$$1 ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <Route> outside a <Router>\") : invariant(false) : void 0;\n      var location = _this.props.location || context$$1.location;\n      var match = _this.props.computedMatch ? _this.props.computedMatch // <Switch> already computed the match for us\n      : _this.props.path ? matchPath(location.pathname, _this.props) : context$$1.match;\n\n      var props = _extends({}, context$$1, {\n        location: location,\n        match: match\n      });\n\n      var _this$props = _this.props,\n          children = _this$props.children,\n          component = _this$props.component,\n          render = _this$props.render; // Preact uses an empty array as children by\n      // default, so use null if that's the case.\n\n      if (Array.isArray(children) && children.length === 0) {\n        children = null;\n      }\n\n      if (typeof children === \"function\") {\n        children = children(props);\n\n        if (children === undefined) {\n          if (process.env.NODE_ENV !== \"production\") {\n            var path = _this.props.path;\n            process.env.NODE_ENV !== \"production\" ? warning(false, \"You returned `undefined` from the `children` function of \" + (\"<Route\" + (path ? \" path=\\\"\" + path + \"\\\"\" : \"\") + \">, but you \") + \"should have returned a React element or `null`\") : void 0;\n          }\n\n          children = null;\n        }\n      }\n\n      return React.createElement(context.Provider, {\n        value: props\n      }, children && !isEmptyChildren(children) ? children : props.match ? component ? React.createElement(component, props) : render ? render(props) : null : null);\n    });\n  };\n\n  return Route;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  Route.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n    component: function component(props, propName) {\n      if (props[propName] && !isValidElementType(props[propName])) {\n        return new Error(\"Invalid prop 'component' supplied to 'Route': the prop is not a valid React component\");\n      }\n    },\n    exact: PropTypes.bool,\n    location: PropTypes.object,\n    path: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n    render: PropTypes.func,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool\n  };\n\n  Route.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.component), \"You should not use <Route component> and <Route children> in the same route; <Route component> will be ignored\") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!(this.props.children && !isEmptyChildren(this.props.children) && this.props.render), \"You should not use <Route render> and <Route children> in the same route; <Route render> will be ignored\") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!(this.props.component && this.props.render), \"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored\") : void 0;\n  };\n\n  Route.prototype.componentDidUpdate = function (prevProps) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(this.props.location && !prevProps.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.') : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!(!this.props.location && prevProps.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.') : void 0;\n  };\n}\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === \"/\" ? path : \"/\" + path;\n}\n\nfunction addBasename(basename, location) {\n  if (!basename) return location;\n  return _extends({}, location, {\n    pathname: addLeadingSlash(basename) + location.pathname\n  });\n}\n\nfunction stripBasename(basename, location) {\n  if (!basename) return location;\n  var base = addLeadingSlash(basename);\n  if (location.pathname.indexOf(base) !== 0) return location;\n  return _extends({}, location, {\n    pathname: location.pathname.substr(base.length)\n  });\n}\n\nfunction createURL(location) {\n  return typeof location === \"string\" ? location : createPath(location);\n}\n\nfunction staticHandler(methodName) {\n  return function () {\n    process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot %s with <StaticRouter>\", methodName) : invariant(false);\n  };\n}\n\nfunction noop() {}\n/**\n * The public top-level API for a \"static\" <Router>, so-called because it\n * can't actually change the current location. Instead, it just records\n * location changes in a context object. Useful mainly in testing and\n * server-rendering scenarios.\n */\n\n\nvar StaticRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(StaticRouter, _React$Component);\n\n  function StaticRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handlePush = function (location) {\n      return _this.navigateTo(location, \"PUSH\");\n    };\n\n    _this.handleReplace = function (location) {\n      return _this.navigateTo(location, \"REPLACE\");\n    };\n\n    _this.handleListen = function () {\n      return noop;\n    };\n\n    _this.handleBlock = function () {\n      return noop;\n    };\n\n    return _this;\n  }\n\n  var _proto = StaticRouter.prototype;\n\n  _proto.navigateTo = function navigateTo(location, action) {\n    var _this$props = this.props,\n        _this$props$basename = _this$props.basename,\n        basename = _this$props$basename === void 0 ? \"\" : _this$props$basename,\n        context = _this$props.context;\n    context.action = action;\n    context.location = addBasename(basename, createLocation(location));\n    context.url = createURL(context.location);\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        _this$props2$basename = _this$props2.basename,\n        basename = _this$props2$basename === void 0 ? \"\" : _this$props2$basename,\n        _this$props2$context = _this$props2.context,\n        context = _this$props2$context === void 0 ? {} : _this$props2$context,\n        _this$props2$location = _this$props2.location,\n        location = _this$props2$location === void 0 ? \"/\" : _this$props2$location,\n        rest = _objectWithoutPropertiesLoose(_this$props2, [\"basename\", \"context\", \"location\"]);\n\n    var history = {\n      createHref: function createHref(path) {\n        return addLeadingSlash(basename + createURL(path));\n      },\n      action: \"POP\",\n      location: stripBasename(basename, createLocation(location)),\n      push: this.handlePush,\n      replace: this.handleReplace,\n      go: staticHandler(\"go\"),\n      goBack: staticHandler(\"goBack\"),\n      goForward: staticHandler(\"goForward\"),\n      listen: this.handleListen,\n      block: this.handleBlock\n    };\n    return React.createElement(Router, _extends({}, rest, {\n      history: history,\n      staticContext: context\n    }));\n  };\n\n  return StaticRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  StaticRouter.propTypes = {\n    basename: PropTypes.string,\n    context: PropTypes.object,\n    location: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n  };\n\n  StaticRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<StaticRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { StaticRouter as Router }`.\") : void 0;\n  };\n}\n/**\n * The public API for rendering the first <Route> that matches.\n */\n\n\nvar Switch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Switch, _React$Component);\n\n  function Switch() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Switch.prototype;\n\n  _proto.render = function render() {\n    var _this = this;\n\n    return React.createElement(context.Consumer, null, function (context$$1) {\n      !context$$1 ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <Switch> outside a <Router>\") : invariant(false) : void 0;\n      var location = _this.props.location || context$$1.location;\n      var element, match; // We use React.Children.forEach instead of React.Children.toArray().find()\n      // here because toArray adds keys to all child elements and we do not want\n      // to trigger an unmount/remount for two <Route>s that render the same\n      // component at different URLs.\n\n      React.Children.forEach(_this.props.children, function (child) {\n        if (match == null && React.isValidElement(child)) {\n          element = child;\n          var path = child.props.path || child.props.from;\n          match = path ? matchPath(location.pathname, _extends({}, child.props, {\n            path: path\n          })) : context$$1.match;\n        }\n      });\n      return match ? React.cloneElement(element, {\n        location: location,\n        computedMatch: match\n      }) : null;\n    });\n  };\n\n  return Switch;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  Switch.propTypes = {\n    children: PropTypes.node,\n    location: PropTypes.object\n  };\n\n  Switch.prototype.componentDidUpdate = function (prevProps) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(this.props.location && !prevProps.location), '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.') : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!(!this.props.location && prevProps.location), '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.') : void 0;\n  };\n}\n/**\n * A public higher-order component to access the imperative API\n */\n\n\nfunction withRouter(Component) {\n  var C = function C(props) {\n    var wrappedComponentRef = props.wrappedComponentRef,\n        remainingProps = _objectWithoutPropertiesLoose(props, [\"wrappedComponentRef\"]);\n\n    return React.createElement(Route, {\n      children: function children(routeComponentProps) {\n        return React.createElement(Component, _extends({}, remainingProps, routeComponentProps, {\n          ref: wrappedComponentRef\n        }));\n      }\n    });\n  };\n\n  C.displayName = \"withRouter(\" + (Component.displayName || Component.name) + \")\";\n  C.WrappedComponent = Component;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    C.propTypes = {\n      wrappedComponentRef: PropTypes.func\n    };\n  }\n\n  return hoistStatics(C, Component);\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  if (typeof window !== \"undefined\") {\n    var global = window;\n    var key = \"__react_router_build__\";\n    var buildNames = {\n      cjs: \"CommonJS\",\n      esm: \"ES modules\",\n      umd: \"UMD\"\n    };\n\n    if (global[key] && global[key] !== \"esm\") {\n      var initialBuildName = buildNames[global[key]];\n      var secondaryBuildName = buildNames[\"esm\"]; // TODO: Add link to article that explains in detail how to avoid\n      // loading 2 different builds.\n\n      throw new Error(\"You are loading the \" + secondaryBuildName + \" build of React Router \" + (\"on a page that is already running the \" + initialBuildName + \" \") + \"build, so things won't work right.\");\n    }\n\n    global[key] = \"esm\";\n  }\n}\n\nexport { MemoryRouter, Prompt, Redirect, Route, Router, StaticRouter, Switch, generatePath, matchPath, withRouter, context as __RouterContext };","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n/** Detect free variable `exports`. */\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nexport default isBuffer;","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/documentfragment\n */\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n/**\n * Document fragment.\n *\n * To create a new document fragment instance use the\n * {@link module:engine/view/upcastwriter~UpcastWriter#createDocumentFragment `UpcastWriter#createDocumentFragment()`}\n * method.\n */\n\nvar DocumentFragment =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates new DocumentFragment instance.\n   *\n   * @protected\n   * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n   * A list of nodes to be inserted into the created document fragment.\n   */\n  function DocumentFragment(children) {\n    _classCallCheck(this, DocumentFragment);\n\n    /**\n     * Array of child nodes.\n     *\n     * @protected\n     * @member {Array.<module:engine/view/element~Element>} module:engine/view/documentfragment~DocumentFragment#_children\n     */\n    this._children = [];\n\n    if (children) {\n      this._insertChild(0, children);\n    }\n  }\n  /**\n   * Iterable interface.\n   *\n   * Iterates over nodes added to this document fragment.\n   *\n   * @returns {Iterable.<module:engine/view/node~Node>}\n   */\n\n\n  _createClass(DocumentFragment, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this._children[Symbol.iterator]();\n    }\n    /**\n     * Number of child nodes in this document fragment.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"is\",\n\n    /**\n     * Checks whether given view tree object is of given type.\n     *\n     * Read more in {@link module:engine/view/node~Node#is}.\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n    value: function is(type) {\n      return type == 'documentFragment';\n    }\n    /**\n     * {@link module:engine/view/documentfragment~DocumentFragment#_insertChild Insert} a child node or a list of child nodes at the end\n     * and sets the parent of these nodes to this fragment.\n     *\n     * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n     * @returns {Number} Number of appended nodes.\n     */\n\n  }, {\n    key: \"_appendChild\",\n    value: function _appendChild(items) {\n      return this._insertChild(this.childCount, items);\n    }\n    /**\n     * Gets child at the given index.\n     *\n     * @param {Number} index Index of child.\n     * @returns {module:engine/view/node~Node} Child node.\n     */\n\n  }, {\n    key: \"getChild\",\n    value: function getChild(index) {\n      return this._children[index];\n    }\n    /**\n     * Gets index of the given child node. Returns `-1` if child node is not found.\n     *\n     * @param {module:engine/view/node~Node} node Child node.\n     * @returns {Number} Index of the child node.\n     */\n\n  }, {\n    key: \"getChildIndex\",\n    value: function getChildIndex(node) {\n      return this._children.indexOf(node);\n    }\n    /**\n     * Gets child nodes iterator.\n     *\n     * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\n     */\n\n  }, {\n    key: \"getChildren\",\n    value: function getChildren() {\n      return this._children[Symbol.iterator]();\n    }\n    /**\n     * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n     * this fragment.\n     *\n     * @param {Number} index Position where nodes should be inserted.\n     * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n     * @returns {Number} Number of inserted nodes.\n     */\n\n  }, {\n    key: \"_insertChild\",\n    value: function _insertChild(index, items) {\n      this._fireChange('children', this);\n\n      var count = 0;\n      var nodes = normalize(items);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var node = _step.value;\n\n          // If node that is being added to this element is already inside another element, first remove it from the old parent.\n          if (node.parent !== null) {\n            node._remove();\n          }\n\n          node.parent = this;\n\n          this._children.splice(index, 0, node);\n\n          index++;\n          count++;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return count;\n    }\n    /**\n     * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\n     *\n     * @param {Number} index Number of the first node to remove.\n     * @param {Number} [howMany=1] Number of nodes to remove.\n     * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\n     */\n\n  }, {\n    key: \"_removeChildren\",\n    value: function _removeChildren(index) {\n      var howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      this._fireChange('children', this);\n\n      for (var i = index; i < index + howMany; i++) {\n        this._children[i].parent = null;\n      }\n\n      return this._children.splice(index, howMany);\n    }\n    /**\n     * Fires `change` event with given type of the change.\n     *\n     * @private\n     * @param {module:engine/view/document~ChangeType} type Type of the change.\n     * @param {module:engine/view/node~Node} node Changed node.\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_fireChange\",\n    value: function _fireChange(type, node) {\n      this.fire('change:' + type, node);\n    }\n  }, {\n    key: \"childCount\",\n    get: function get() {\n      return this._children.length;\n    }\n    /**\n     * Is `true` if there are no nodes inside this document fragment, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this.childCount === 0;\n    }\n    /**\n     * Artificial root of `DocumentFragment`. Returns itself. Added for compatibility reasons.\n     *\n     * @readonly\n     * @type {module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this;\n    }\n    /**\n     * Artificial parent of `DocumentFragment`. Returns `null`. Added for compatibility reasons.\n     *\n     * @readonly\n     * @type {null}\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return null;\n    }\n  }]);\n\n  return DocumentFragment;\n}();\n\nexport { DocumentFragment as default };\nmix(DocumentFragment, EmitterMixin); // Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/view/item~Item|Iterable.<String|module:engine/view/item~Item>}\n// @returns {Iterable.<module:engine/view/node~Node>}\n\nfunction normalize(nodes) {\n  // Separate condition because string is iterable.\n  if (typeof nodes == 'string') {\n    return [new Text(nodes)];\n  }\n\n  if (!isIterable(nodes)) {\n    nodes = [nodes];\n  } // Array.from to enable .map() on non-arrays.\n\n\n  return Array.from(nodes).map(function (node) {\n    if (typeof node == 'string') {\n      return new Text(node);\n    }\n\n    if (node instanceof TextProxy) {\n      return new Text(node.data);\n    }\n\n    return node;\n  });\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/liverange\n */\nimport Range from './range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * `LiveRange` is a type of {@link module:engine/model/range~Range Range}\n * that updates itself as {@link module:engine/model/document~Document document}\n * is changed through operations. It may be used as a bookmark.\n *\n * **Note:** Be very careful when dealing with `LiveRange`. Each `LiveRange` instance bind events that might\n * have to be unbound. Use {@link module:engine/model/liverange~LiveRange#detach detach} whenever you don't need `LiveRange` anymore.\n */\n\nvar LiveRange =\n/*#__PURE__*/\nfunction (_Range) {\n  _inherits(LiveRange, _Range);\n\n  /**\n   * Creates a live range.\n   *\n   * @see module:engine/model/range~Range\n   */\n  function LiveRange(start, end) {\n    var _this;\n\n    _classCallCheck(this, LiveRange);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LiveRange).call(this, start, end));\n    bindWithDocument.call(_assertThisInitialized(_this));\n    return _this;\n  }\n  /**\n   * Unbinds all events previously bound by `LiveRange`. Use it whenever you don't need `LiveRange` instance\n   * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\n   * referring to it).\n   */\n\n\n  _createClass(LiveRange, [{\n    key: \"detach\",\n    value: function detach() {\n      this.stopListening();\n    }\n    /**\n     * Creates a {@link module:engine/model/range~Range range instance} that is equal to this live range.\n     *\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"toRange\",\n    value: function toRange() {\n      return new Range(this.start, this.end);\n    }\n    /**\n     * Creates a `LiveRange` instance that is equal to the given range.\n     *\n     * @param {module:engine/model/range~Range} range\n     * @returns {module:engine/model/liverange~LiveRange}\n     */\n\n  }], [{\n    key: \"fromRange\",\n    value: function fromRange(range) {\n      return new LiveRange(range.start, range.end);\n    }\n    /**\n     * @see module:engine/model/range~Range._createIn\n     * @static\n     * @protected\n     * @method module:engine/model/liverange~LiveRange._createIn\n     * @param {module:engine/model/element~Element} element\n     * @returns {module:engine/model/liverange~LiveRange}\n     */\n\n    /**\n     * @see module:engine/model/range~Range._createOn\n     * @static\n     * @protected\n     * @method module:engine/model/liverange~LiveRange._createOn\n     * @param {module:engine/model/element~Element} element\n     * @returns {module:engine/model/liverange~LiveRange}\n     */\n\n    /**\n     * @see module:engine/model/range~Range._createFromPositionAndShift\n     * @static\n     * @protected\n     * @method module:engine/model/liverange~LiveRange._createFromPositionAndShift\n     * @param {module:engine/model/position~Position} position\n     * @param {Number} shift\n     * @returns {module:engine/model/liverange~LiveRange}\n     */\n\n    /**\n     * Fired when `LiveRange` instance boundaries have changed due to changes in the\n     * {@link module:engine/model/document~Document document}.\n     *\n     * @event change:range\n     * @param {module:engine/model/range~Range} oldRange Range with start and end position equal to start and end position of this live\n     * range before it got changed.\n     * @param {Object} data Object with additional information about the change.\n     * @param {module:engine/model/position~Position|null} data.deletionPosition Source position for remove and merge changes.\n     * Available if the range was moved to the graveyard root, `null` otherwise.\n     */\n\n    /**\n     * Fired when `LiveRange` instance boundaries have not changed after a change in {@link module:engine/model/document~Document document}\n     * but the change took place inside the range, effectively changing its content.\n     *\n     * @event change:content\n     * @param {module:engine/model/range~Range} range Range with start and end position equal to start and end position of\n     * change range.\n     * @param {Object} data Object with additional information about the change.\n     * @param {null} data.deletionPosition Due to the nature of this event, this property is always set to `null`. It is passed\n     * for compatibility with the {@link module:engine/model/liverange~LiveRange#event:change:range} event.\n     */\n\n  }]);\n\n  return LiveRange;\n}(Range); // Binds this `LiveRange` to the {@link module:engine/model/document~Document document}\n// that owns this range's {@link module:engine/model/range~Range#root root}.\n//\n// @private\n\n\nexport { LiveRange as default };\n\nfunction bindWithDocument() {\n  var _this2 = this;\n\n  this.listenTo(this.root.document.model, 'applyOperation', function (event, args) {\n    var operation = args[0];\n\n    if (!operation.isDocumentOperation) {\n      return;\n    }\n\n    transform.call(_this2, operation);\n  }, {\n    priority: 'low'\n  });\n} // Updates this range accordingly to the updates applied to the model. Bases on change events.\n//\n// @private\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\n\n\nfunction transform(operation) {\n  // Transform the range by the operation. Join the result ranges if needed.\n  var ranges = this.getTransformedByOperation(operation);\n\n  var result = Range._createFromRanges(ranges);\n\n  var boundariesChanged = !result.isEqual(this);\n  var contentChanged = doesOperationChangeRangeContent(this, operation);\n  var deletionPosition = null;\n\n  if (boundariesChanged) {\n    // If range boundaries have changed, fire `change:range` event.\n    //\n    if (result.root.rootName == '$graveyard') {\n      // If the range was moved to the graveyard root, set `deletionPosition`.\n      if (operation.type == 'remove') {\n        deletionPosition = operation.sourcePosition;\n      } else {\n        // Merge operation.\n        deletionPosition = operation.deletionPosition;\n      }\n    }\n\n    var oldRange = this.toRange();\n    this.start = result.start;\n    this.end = result.end;\n    this.fire('change:range', oldRange, {\n      deletionPosition: deletionPosition\n    });\n  } else if (contentChanged) {\n    // If range boundaries have not changed, but there was change inside the range, fire `change:content` event.\n    this.fire('change:content', this.toRange(), {\n      deletionPosition: deletionPosition\n    });\n  }\n} // Checks whether given operation changes something inside the range (even if it does not change boundaries).\n//\n// @private\n// @param {module:engine/model/range~Range} range Range to check.\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\n// @returns {Boolean}\n\n\nfunction doesOperationChangeRangeContent(range, operation) {\n  switch (operation.type) {\n    case 'insert':\n      return range.containsPosition(operation.position);\n\n    case 'move':\n    case 'remove':\n    case 'reinsert':\n    case 'merge':\n      return range.containsPosition(operation.sourcePosition) || range.start.isEqual(operation.sourcePosition) || range.containsPosition(operation.targetPosition);\n\n    case 'split':\n      return range.containsPosition(operation.splitPosition) || range.containsPosition(operation.insertionPosition);\n  }\n\n  return false;\n}\n\nmix(LiveRange, EmitterMixin);","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import overArg from './_overArg.js';\n/** Built-in value references. */\n\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\nexport default getPrototype;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nexport default isPrototype;","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/editableelement\n */\nimport ContainerElement from './containerelement';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nvar documentSymbol = Symbol('document');\n/**\n * Editable element which can be a {@link module:engine/view/rooteditableelement~RootEditableElement root}\n * or nested editable area in the editor.\n *\n * Editable is automatically read-only when its {@link module:engine/view/document~Document Document} is read-only.\n *\n * The constructor of this class shouldn't be used directly. To create new `EditableElement` use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createEditableElement `downcastWriter#createEditableElement()`} method.\n *\n * @extends module:engine/view/containerelement~ContainerElement\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar EditableElement =\n/*#__PURE__*/\nfunction (_ContainerElement) {\n  _inherits(EditableElement, _ContainerElement);\n\n  /**\n   * Creates an editable element.\n   *\n   * @see module:engine/view/downcastwriter~DowncastWriter#createEditableElement\n   * @protected\n   */\n  function EditableElement(name, attrs, children) {\n    var _this;\n\n    _classCallCheck(this, EditableElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditableElement).call(this, name, attrs, children));\n    /**\n     * Whether the editable is in read-write or read-only mode.\n     *\n     * @observable\n     * @member {Boolean} module:engine/view/editableelement~EditableElement#isReadOnly\n     */\n\n    _this.set('isReadOnly', false);\n    /**\n     * Whether the editable is focused.\n     *\n     * This property updates when {@link module:engine/view/document~Document#isFocused document.isFocused} or view\n     * selection is changed.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} module:engine/view/editableelement~EditableElement#isFocused\n     */\n\n\n    _this.set('isFocused', false);\n    /**\n     * The {@link module:engine/view/document~Document} which is an owner of this root.\n     * Can only by set once.\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-editableelement-document-already-set`\n     * when document is already set.\n     *\n     * @member {module:engine/view/document~Document} #document\n     */\n\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(EditableElement, [{\n    key: \"is\",\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'editableElement' || _get(_getPrototypeOf(EditableElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'editableElement' && name == this.name || _get(_getPrototypeOf(EditableElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopListening();\n    }\n    /**\n     * Returns document associated with the editable.\n     *\n     * @readonly\n     * @returns {module:engine/view/document~Document}\n     */\n\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.getCustomProperty(documentSymbol);\n    }\n    /**\n     * Sets document of this editable element.\n     *\n     * @protected\n     * @param {module:engine/view/document~Document} document\n     */\n\n  }, {\n    key: \"_document\",\n    set: function set(document) {\n      var _this2 = this;\n\n      if (this.getCustomProperty(documentSymbol)) {\n        /**\n         * View document is already set. It can only be set once.\n         *\n         * @error view-editableelement-document-already-set\n         */\n        throw new CKEditorError('view-editableelement-document-already-set: View document is already set.');\n      }\n\n      this._setCustomProperty(documentSymbol, document);\n\n      this.bind('isReadOnly').to(document);\n      this.bind('isFocused').to(document, 'isFocused', function (isFocused) {\n        return isFocused && document.selection.editableElement == _this2;\n      }); // Update focus state based on selection changes.\n\n      this.listenTo(document.selection, 'change', function () {\n        _this2.isFocused = document.isFocused && document.selection.editableElement == _this2;\n      });\n    }\n  }]);\n\n  return EditableElement;\n}(ContainerElement);\n\nexport { EditableElement as default };\nmix(EditableElement, ObservableMixin);","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals navigator:false */\n\n/**\n * @module utils/env\n */\nvar userAgent = navigator.userAgent.toLowerCase();\n/**\n * A namespace containing environment and browser information.\n *\n * @namespace\n */\n\nvar env = {\n  /**\n   * Indicates that the application is running on Macintosh.\n   *\n   * @static\n   * @member {Boolean} module:utils/env~env#isMac\n   */\n  isMac: isMac(userAgent),\n\n  /**\n   * Indicates that the application is running in Microsoft Edge.\n   *\n   * @static\n   * @member {Boolean} module:utils/env~env#isEdge\n   */\n  isEdge: isEdge(userAgent),\n\n  /**\n   * Indicates that the application is running in Firefox (Gecko).\n   *\n   * @static\n   * @member {Boolean} module:utils/env~env#isEdge\n   */\n  isGecko: isGecko(userAgent),\n\n  /**\n   * Indicates that the application is running in Safari.\n   *\n   * @static\n   * @member {Boolean} module:utils/env~env#isSafari\n   */\n  isSafari: isSafari(userAgent)\n};\nexport default env;\n/**\n * Checks if User Agent represented by the string is running on Macintosh.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is running on Macintosh or not.\n */\n\nexport function isMac(userAgent) {\n  return userAgent.indexOf('macintosh') > -1;\n}\n/**\n * Checks if User Agent represented by the string is Microsoft Edge.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Edge or not.\n */\n\nexport function isEdge(userAgent) {\n  return !!userAgent.match(/edge\\/(\\d+.?\\d*)/);\n}\n/**\n * Checks if User Agent represented by the string is Firefox (Gecko).\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Firefox or not.\n */\n\nexport function isGecko(userAgent) {\n  return !!userAgent.match(/gecko\\/\\d+/);\n}\n/**\n * Checks if User Agent represented by the string is Safari.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Safari or not.\n */\n\nexport function isSafari(userAgent) {\n  return userAgent.indexOf(' applewebkit/') > -1 && userAgent.indexOf('chrome') === -1;\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/domeventdata\n */\nimport { extend } from 'lodash-es';\n/**\n * Information about a DOM event in context of the {@link module:engine/view/document~Document}.\n * It wraps the native event, which usually should not be used as the wrapper contains\n * additional data (like key code for keyboard events).\n */\n\nvar DomEventData =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {module:engine/view/view~View} view The instance of the view controller.\n   * @param {Event} domEvent The DOM event.\n   * @param {Object} [additionalData] Additional properties that the instance should contain.\n   */\n  function DomEventData(view, domEvent, additionalData) {\n    _classCallCheck(this, DomEventData);\n\n    /**\n     * Instance of the view controller.\n     *\n     * @readonly\n     * @member {module:engine/view/view~View} module:engine/view/observer/observer~Observer.DomEvent#view\n     */\n    this.view = view;\n    /**\n     * The instance of the document.\n     *\n     * @readonly\n     * @member {module:engine/view/document~Document} module:engine/view/observer/observer~Observer.DomEvent#document\n     */\n\n    this.document = view.document;\n    /**\n     * The DOM event.\n     *\n     * @readonly\n     * @member {Event} module:engine/view/observer/observer~Observer.DomEvent#domEvent\n     */\n\n    this.domEvent = domEvent;\n    /**\n     * The DOM target.\n     *\n     * @readonly\n     * @member {HTMLElement} module:engine/view/observer/observer~Observer.DomEvent#target\n     */\n\n    this.domTarget = domEvent.target;\n    extend(this, additionalData);\n  }\n  /**\n   * The tree view element representing the target.\n   *\n   * @readonly\n   * @type module:engine/view/element~Element\n   */\n\n\n  _createClass(DomEventData, [{\n    key: \"preventDefault\",\n\n    /**\n     * Prevents the native's event default action.\n     */\n    value: function preventDefault() {\n      this.domEvent.preventDefault();\n    }\n    /**\n     * Stops native event propagation.\n     */\n\n  }, {\n    key: \"stopPropagation\",\n    value: function stopPropagation() {\n      this.domEvent.stopPropagation();\n    }\n  }, {\n    key: \"target\",\n    get: function get() {\n      return this.view.domConverter.mapDomToView(this.domTarget);\n    }\n  }]);\n\n  return DomEventData;\n}();\n\nexport { DomEventData as default };","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n\n  return array;\n}\n\nexport default arrayEach;","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\n\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\n\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n  array || (array = Array(length));\n\n  while (++index < length) {\n    array[index] = source[index];\n  }\n\n  return array;\n}\n\nexport default copyArray;","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\n\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {\n  var result = [];\n\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n\n  return result;\n};\nexport default getSymbolsIn;","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\n\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\n\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length); // Add properties assigned by `RegExp#exec`.\n\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n\n  return result;\n}\n\nexport default initCloneArray;","import Uint8Array from './_Uint8Array.js';\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\n\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\n\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\n\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;","import Symbol from './_Symbol.js';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\n\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\n\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\n\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag:\n    case float64Tag:\n    case int8Tag:\n    case int16Tag:\n    case int32Tag:\n    case uint8Tag:\n    case uint8ClampedTag:\n    case uint16Tag:\n    case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor();\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor();\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;","import isObject from './isObject.js';\n/** Built-in value references. */\n\nvar objectCreate = Object.create;\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\n\nvar baseCreate = function () {\n  function object() {}\n\n  return function (proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n\n    object.prototype = proto;\n    var result = new object();\n    object.prototype = undefined;\n    return result;\n  };\n}();\n\nexport default baseCreate;","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\n\nfunction initCloneObject(object) {\n  return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};\n}\n\nexport default initCloneObject;","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n/** `Object#toString` result references. */\n\nvar mapTag = '[object Map]';\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\n\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n/* Node.js helper references. */\n\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\n\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\nexport default isMap;","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n/** `Object#toString` result references. */\n\nvar setTag = '[object Set]';\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\n\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n/* Node.js helper references. */\n\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\n\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\nexport default isSet;","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\n/** Used to compose bitmasks for cloning. */\n\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values supported by `_.clone`. */\n\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\n\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n\n  if (result !== undefined) {\n    return result;\n  }\n\n  if (!isObject(value)) {\n    return value;\n  }\n\n  var isArr = isArray(value);\n\n  if (isArr) {\n    result = initCloneArray(value);\n\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n\n    if (tag == objectTag || tag == argsTag || isFunc && !object) {\n      result = isFlat || isFunc ? {} : initCloneObject(value);\n\n      if (!isDeep) {\n        return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  } // Check for circular references and return its corresponding clone.\n\n\n  stack || (stack = new Stack());\n  var stacked = stack.get(value);\n\n  if (stacked) {\n    return stacked;\n  }\n\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function (subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n    return result;\n  }\n\n  if (isMap(value)) {\n    value.forEach(function (subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n    return result;\n  }\n\n  var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function (subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    } // Recursively populate clone (susceptible to call stack limits).\n\n\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/indexof\n */\n\n/**\n * Returns index of the node in the parent element.\n *\n * @param {Node} node Node which index is tested.\n * @returns {Number} Index of the node in the parent element. Returns 0 if node has no parent.\n */\nexport default function indexOf(node) {\n  var index = 0;\n\n  while (node.previousSibling) {\n    node = node.previousSibling;\n    index++;\n  }\n\n  return index;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals Node */\n\n/**\n * @module utils/dom/getancestors\n */\n\n/**\n * Returns all ancestors of given DOM node, starting from the top-most (root). Includes the given node itself. If the\n * node is a part of `DocumentFragment` that `DocumentFragment` will be returned. In contrary, if the node is\n * appended to a `Document`, that `Document` will not be returned (algorithms operating on DOM tree care for `Document#documentElement`\n * at most, which will be returned).\n *\n * @param {Node} node DOM node.\n * @returns {Array.<Node|DocumentFragment>} Array of given `node` parents.\n */\nexport default function getAncestors(node) {\n  var nodes = []; // We are interested in `Node`s `DocumentFragment`s only.\n\n  while (node && node.nodeType != Node.DOCUMENT_NODE) {\n    nodes.unshift(node);\n    node = node.parentNode;\n  }\n\n  return nodes;\n}","import _slicedToArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/domconverter\n */\n\n/* globals document, Node, NodeFilter, Text */\nimport ViewText from './text';\nimport ViewElement from './element';\nimport ViewPosition from './position';\nimport ViewRange from './range';\nimport ViewSelection from './selection';\nimport ViewDocumentFragment from './documentfragment';\nimport ViewTreeWalker from './treewalker';\nimport { BR_FILLER, INLINE_FILLER_LENGTH, isBlockFiller, isInlineFiller, startsWithFiller, getDataWithoutFiller } from './filler';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport indexOf from '@ckeditor/ckeditor5-utils/src/dom/indexof';\nimport getAncestors from '@ckeditor/ckeditor5-utils/src/dom/getancestors';\nimport getCommonAncestor from '@ckeditor/ckeditor5-utils/src/dom/getcommonancestor';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\nimport { isElement } from 'lodash-es';\n/**\n * DomConverter is a set of tools to do transformations between DOM nodes and view nodes. It also handles\n * {@link module:engine/view/domconverter~DomConverter#bindElements binding} these nodes.\n *\n * DomConverter does not check which nodes should be rendered (use {@link module:engine/view/renderer~Renderer}), does not keep a\n * state of a tree nor keeps synchronization between tree view and DOM tree (use {@link module:engine/view/document~Document}).\n *\n * DomConverter keeps DOM elements to View element bindings, so when the converter will be destroyed, the binding will\n * be lost. Two converters will keep separate binding maps, so one tree view can be bound with two DOM trees.\n */\n\nvar DomConverter =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates DOM converter.\n   *\n   * @param {Object} options Object with configuration options.\n   * @param {Function} [options.blockFiller=module:engine/view/filler~BR_FILLER] Block filler creator.\n   */\n  function DomConverter() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, DomConverter);\n\n    // Using WeakMap prevent memory leaks: when the converter will be destroyed all referenced between View and DOM\n    // will be removed. Also because it is a *Weak*Map when both view and DOM elements will be removed referenced\n    // will be also removed, isn't it brilliant?\n    //\n    // Yes, PJ. It is.\n    //\n    // You guys so smart.\n    //\n    // I've been here. Seen stuff. Afraid of code now.\n\n    /**\n     * Block {@link module:engine/view/filler filler} creator, which is used to create all block fillers during the\n     * view to DOM conversion and to recognize block fillers during the DOM to view conversion.\n     *\n     * @readonly\n     * @member {Function} module:engine/view/domconverter~DomConverter#blockFiller\n     */\n    this.blockFiller = options.blockFiller || BR_FILLER;\n    /**\n     * Tag names of DOM `Element`s which are considered pre-formatted elements.\n     *\n     * @readonly\n     * @member {Array.<String>} module:engine/view/domconverter~DomConverter#preElements\n     */\n\n    this.preElements = ['pre'];\n    /**\n     * Tag names of DOM `Element`s which are considered block elements.\n     *\n     * @readonly\n     * @member {Array.<String>} module:engine/view/domconverter~DomConverter#blockElements\n     */\n\n    this.blockElements = ['p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n    /**\n     * DOM to View mapping.\n     *\n     * @private\n     * @member {WeakMap} module:engine/view/domconverter~DomConverter#_domToViewMapping\n     */\n\n    this._domToViewMapping = new WeakMap();\n    /**\n     * View to DOM mapping.\n     *\n     * @private\n     * @member {WeakMap} module:engine/view/domconverter~DomConverter#_viewToDomMapping\n     */\n\n    this._viewToDomMapping = new WeakMap();\n    /**\n     * Holds mapping between fake selection containers and corresponding view selections.\n     *\n     * @private\n     * @member {WeakMap} module:engine/view/domconverter~DomConverter#_fakeSelectionMapping\n     */\n\n    this._fakeSelectionMapping = new WeakMap();\n  }\n  /**\n   * Binds given DOM element that represents fake selection to {@link module:engine/view/documentselection~DocumentSelection\n   * document selection}. Document selection copy is stored and can be retrieved by\n   * {@link module:engine/view/domconverter~DomConverter#fakeSelectionToView} method.\n   *\n   * @param {HTMLElement} domElement\n   * @param {module:engine/view/documentselection~DocumentSelection} viewDocumentSelection\n   */\n\n\n  _createClass(DomConverter, [{\n    key: \"bindFakeSelection\",\n    value: function bindFakeSelection(domElement, viewDocumentSelection) {\n      this._fakeSelectionMapping.set(domElement, new ViewSelection(viewDocumentSelection));\n    }\n    /**\n     * Returns {@link module:engine/view/selection~Selection view selection} instance corresponding to\n     * given DOM element that represents fake selection. Returns `undefined` if binding to given DOM element does not exists.\n     *\n     * @param {HTMLElement} domElement\n     * @returns {module:engine/view/selection~Selection|undefined}\n     */\n\n  }, {\n    key: \"fakeSelectionToView\",\n    value: function fakeSelectionToView(domElement) {\n      return this._fakeSelectionMapping.get(domElement);\n    }\n    /**\n     * Binds DOM and View elements, so it will be possible to get corresponding elements using\n     * {@link module:engine/view/domconverter~DomConverter#mapDomToView} and\n     * {@link module:engine/view/domconverter~DomConverter#mapViewToDom}.\n     *\n     * @param {HTMLElement} domElement DOM element to bind.\n     * @param {module:engine/view/element~Element} viewElement View element to bind.\n     */\n\n  }, {\n    key: \"bindElements\",\n    value: function bindElements(domElement, viewElement) {\n      this._domToViewMapping.set(domElement, viewElement);\n\n      this._viewToDomMapping.set(viewElement, domElement);\n    }\n    /**\n     * Unbinds given `domElement` from the view element it was bound to. Unbinding is deep, meaning that all children of\n     * `domElement` will be unbound too.\n     *\n     * @param {HTMLElement} domElement DOM element to unbind.\n     */\n\n  }, {\n    key: \"unbindDomElement\",\n    value: function unbindDomElement(domElement) {\n      var viewElement = this._domToViewMapping.get(domElement);\n\n      if (viewElement) {\n        this._domToViewMapping.delete(domElement);\n\n        this._viewToDomMapping.delete(viewElement); // Use Array.from because of MS Edge (#923).\n\n\n        for (var _i = 0, _Array$from = Array.from(domElement.childNodes); _i < _Array$from.length; _i++) {\n          var child = _Array$from[_i];\n          this.unbindDomElement(child);\n        }\n      }\n    }\n    /**\n     * Binds DOM and View document fragments, so it will be possible to get corresponding document fragments using\n     * {@link module:engine/view/domconverter~DomConverter#mapDomToView} and\n     * {@link module:engine/view/domconverter~DomConverter#mapViewToDom}.\n     *\n     * @param {DocumentFragment} domFragment DOM document fragment to bind.\n     * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment View document fragment to bind.\n     */\n\n  }, {\n    key: \"bindDocumentFragments\",\n    value: function bindDocumentFragments(domFragment, viewFragment) {\n      this._domToViewMapping.set(domFragment, viewFragment);\n\n      this._viewToDomMapping.set(viewFragment, domFragment);\n    }\n    /**\n     * Converts view to DOM. For all text nodes, not bound elements and document fragments new items will\n     * be created. For bound elements and document fragments function will return corresponding items.\n     *\n     * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} viewNode\n     * View node or document fragment to transform.\n     * @param {Document} domDocument Document which will be used to create DOM nodes.\n     * @param {Object} [options] Conversion options.\n     * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\n     * @param {Boolean} [options.withChildren=true] If `true`, node's and document fragment's children will be converted too.\n     * @returns {Node|DocumentFragment} Converted node or DocumentFragment.\n     */\n\n  }, {\n    key: \"viewToDom\",\n    value: function viewToDom(viewNode, domDocument) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (viewNode.is('text')) {\n        var textData = this._processDataFromViewText(viewNode);\n\n        return domDocument.createTextNode(textData);\n      } else {\n        if (this.mapViewToDom(viewNode)) {\n          return this.mapViewToDom(viewNode);\n        }\n\n        var domElement;\n\n        if (viewNode.is('documentFragment')) {\n          // Create DOM document fragment.\n          domElement = domDocument.createDocumentFragment();\n\n          if (options.bind) {\n            this.bindDocumentFragments(domElement, viewNode);\n          }\n        } else if (viewNode.is('uiElement')) {\n          // UIElement has its own render() method (see #799).\n          domElement = viewNode.render(domDocument);\n\n          if (options.bind) {\n            this.bindElements(domElement, viewNode);\n          }\n\n          return domElement;\n        } else {\n          // Create DOM element.\n          domElement = domDocument.createElement(viewNode.name);\n\n          if (options.bind) {\n            this.bindElements(domElement, viewNode);\n          } // Copy element's attributes.\n\n\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = viewNode.getAttributeKeys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var key = _step.value;\n              domElement.setAttribute(key, viewNode.getAttribute(key));\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }\n\n        if (options.withChildren || options.withChildren === undefined) {\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = this.viewChildrenToDom(viewNode, domDocument, options)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var child = _step2.value;\n              domElement.appendChild(child);\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n\n        return domElement;\n      }\n    }\n    /**\n     * Converts children of the view element to DOM using the\n     * {@link module:engine/view/domconverter~DomConverter#viewToDom} method.\n     * Additionally, this method adds block {@link module:engine/view/filler filler} to the list of children, if needed.\n     *\n     * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewElement Parent view element.\n     * @param {Document} domDocument Document which will be used to create DOM nodes.\n     * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#viewToDom} options parameter.\n     * @returns {Iterable.<Node>} DOM nodes.\n     */\n\n  }, {\n    key: \"viewChildrenToDom\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function viewChildrenToDom(viewElement, domDocument) {\n      var options,\n          fillerPositionOffset,\n          offset,\n          _iteratorNormalCompletion3,\n          _didIteratorError3,\n          _iteratorError3,\n          _iterator3,\n          _step3,\n          childView,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function viewChildrenToDom$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              fillerPositionOffset = viewElement.getFillerOffset && viewElement.getFillerOffset();\n              offset = 0;\n              _iteratorNormalCompletion3 = true;\n              _didIteratorError3 = false;\n              _iteratorError3 = undefined;\n              _context.prev = 6;\n              _iterator3 = viewElement.getChildren()[Symbol.iterator]();\n\n            case 8:\n              if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n                _context.next = 19;\n                break;\n              }\n\n              childView = _step3.value;\n\n              if (!(fillerPositionOffset === offset)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 13;\n              return this.blockFiller(domDocument);\n\n            case 13:\n              _context.next = 15;\n              return this.viewToDom(childView, domDocument, options);\n\n            case 15:\n              offset++;\n\n            case 16:\n              _iteratorNormalCompletion3 = true;\n              _context.next = 8;\n              break;\n\n            case 19:\n              _context.next = 25;\n              break;\n\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](6);\n              _didIteratorError3 = true;\n              _iteratorError3 = _context.t0;\n\n            case 25:\n              _context.prev = 25;\n              _context.prev = 26;\n\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n\n            case 28:\n              _context.prev = 28;\n\n              if (!_didIteratorError3) {\n                _context.next = 31;\n                break;\n              }\n\n              throw _iteratorError3;\n\n            case 31:\n              return _context.finish(28);\n\n            case 32:\n              return _context.finish(25);\n\n            case 33:\n              if (!(fillerPositionOffset === offset)) {\n                _context.next = 36;\n                break;\n              }\n\n              _context.next = 36;\n              return this.blockFiller(domDocument);\n\n            case 36:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, viewChildrenToDom, this, [[6, 21, 25, 33], [26,, 28, 32]]);\n    })\n    /**\n     * Converts view {@link module:engine/view/range~Range} to DOM range.\n     * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\n     *\n     * @param {module:engine/view/range~Range} viewRange View range.\n     * @returns {Range} DOM range.\n     */\n\n  }, {\n    key: \"viewRangeToDom\",\n    value: function viewRangeToDom(viewRange) {\n      var domStart = this.viewPositionToDom(viewRange.start);\n      var domEnd = this.viewPositionToDom(viewRange.end);\n      var domRange = document.createRange();\n      domRange.setStart(domStart.parent, domStart.offset);\n      domRange.setEnd(domEnd.parent, domEnd.offset);\n      return domRange;\n    }\n    /**\n     * Converts view {@link module:engine/view/position~Position} to DOM parent and offset.\n     *\n     * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\n     * If the converted position is directly before inline filler it is moved inside the filler.\n     *\n     * @param {module:engine/view/position~Position} viewPosition View position.\n     * @returns {Object|null} position DOM position or `null` if view position could not be converted to DOM.\n     * @returns {Node} position.parent DOM position parent.\n     * @returns {Number} position.offset DOM position offset.\n     */\n\n  }, {\n    key: \"viewPositionToDom\",\n    value: function viewPositionToDom(viewPosition) {\n      var viewParent = viewPosition.parent;\n\n      if (viewParent.is('text')) {\n        var domParent = this.findCorrespondingDomText(viewParent);\n\n        if (!domParent) {\n          // Position is in a view text node that has not been rendered to DOM yet.\n          return null;\n        }\n\n        var offset = viewPosition.offset;\n\n        if (startsWithFiller(domParent)) {\n          offset += INLINE_FILLER_LENGTH;\n        }\n\n        return {\n          parent: domParent,\n          offset: offset\n        };\n      } else {\n        // viewParent is instance of ViewElement.\n        var _domParent, domBefore, domAfter;\n\n        if (viewPosition.offset === 0) {\n          _domParent = this.mapViewToDom(viewParent);\n\n          if (!_domParent) {\n            // Position is in a view element that has not been rendered to DOM yet.\n            return null;\n          }\n\n          domAfter = _domParent.childNodes[0];\n        } else {\n          var nodeBefore = viewPosition.nodeBefore;\n          domBefore = nodeBefore.is('text') ? this.findCorrespondingDomText(nodeBefore) : this.mapViewToDom(viewPosition.nodeBefore);\n\n          if (!domBefore) {\n            // Position is after a view element that has not been rendered to DOM yet.\n            return null;\n          }\n\n          _domParent = domBefore.parentNode;\n          domAfter = domBefore.nextSibling;\n        } // If there is an inline filler at position return position inside the filler. We should never return\n        // the position before the inline filler.\n\n\n        if (isText(domAfter) && startsWithFiller(domAfter)) {\n          return {\n            parent: domAfter,\n            offset: INLINE_FILLER_LENGTH\n          };\n        }\n\n        var _offset = domBefore ? indexOf(domBefore) + 1 : 0;\n\n        return {\n          parent: _domParent,\n          offset: _offset\n        };\n      }\n    }\n    /**\n     * Converts DOM to view. For all text nodes, not bound elements and document fragments new items will\n     * be created. For bound elements and document fragments function will return corresponding items. For\n     * {@link module:engine/view/filler fillers} `null` will be returned.\n     * For all DOM elements rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n     *\n     * @param {Node|DocumentFragment} domNode DOM node or document fragment to transform.\n     * @param {Object} [options] Conversion options.\n     * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\n     * @param {Boolean} [options.withChildren=true] If `true`, node's and document fragment's children will be converted too.\n     * @param {Boolean} [options.keepOriginalCase=false] If `false`, node's tag name will be converter to lower case.\n     * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} Converted node or document fragment\n     * or `null` if DOM node is a {@link module:engine/view/filler filler} or the given node is an empty text node.\n     */\n\n  }, {\n    key: \"domToView\",\n    value: function domToView(domNode) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (isBlockFiller(domNode, this.blockFiller)) {\n        return null;\n      } // When node is inside UIElement return that UIElement as it's view representation.\n\n\n      var uiElement = this.getParentUIElement(domNode, this._domToViewMapping);\n\n      if (uiElement) {\n        return uiElement;\n      }\n\n      if (isText(domNode)) {\n        if (isInlineFiller(domNode)) {\n          return null;\n        } else {\n          var textData = this._processDataFromDomText(domNode);\n\n          return textData === '' ? null : new ViewText(textData);\n        }\n      } else if (this.isComment(domNode)) {\n        return null;\n      } else {\n        if (this.mapDomToView(domNode)) {\n          return this.mapDomToView(domNode);\n        }\n\n        var viewElement;\n\n        if (this.isDocumentFragment(domNode)) {\n          // Create view document fragment.\n          viewElement = new ViewDocumentFragment();\n\n          if (options.bind) {\n            this.bindDocumentFragments(domNode, viewElement);\n          }\n        } else {\n          // Create view element.\n          var viewName = options.keepOriginalCase ? domNode.tagName : domNode.tagName.toLowerCase();\n          viewElement = new ViewElement(viewName);\n\n          if (options.bind) {\n            this.bindElements(domNode, viewElement);\n          } // Copy element's attributes.\n\n\n          var attrs = domNode.attributes;\n\n          for (var i = attrs.length - 1; i >= 0; i--) {\n            viewElement._setAttribute(attrs[i].name, attrs[i].value);\n          }\n        }\n\n        if (options.withChildren || options.withChildren === undefined) {\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = this.domChildrenToView(domNode, options)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var child = _step4.value;\n\n              viewElement._appendChild(child);\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n        }\n\n        return viewElement;\n      }\n    }\n    /**\n     * Converts children of the DOM element to view nodes using\n     * the {@link module:engine/view/domconverter~DomConverter#domToView} method.\n     * Additionally this method omits block {@link module:engine/view/filler filler}, if it exists in the DOM parent.\n     *\n     * @param {HTMLElement} domElement Parent DOM element.\n     * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#domToView} options parameter.\n     * @returns {Iterable.<module:engine/view/node~Node>} View nodes.\n     */\n\n  }, {\n    key: \"domChildrenToView\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function domChildrenToView(domElement) {\n      var options,\n          i,\n          domChild,\n          viewChild,\n          _args2 = arguments;\n      return _regeneratorRuntime.wrap(function domChildrenToView$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n              i = 0;\n\n            case 2:\n              if (!(i < domElement.childNodes.length)) {\n                _context2.next = 11;\n                break;\n              }\n\n              domChild = domElement.childNodes[i];\n              viewChild = this.domToView(domChild, options);\n\n              if (!(viewChild !== null)) {\n                _context2.next = 8;\n                break;\n              }\n\n              _context2.next = 8;\n              return viewChild;\n\n            case 8:\n              i++;\n              _context2.next = 2;\n              break;\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, domChildrenToView, this);\n    })\n    /**\n     * Converts DOM selection to view {@link module:engine/view/selection~Selection}.\n     * Ranges which cannot be converted will be omitted.\n     *\n     * @param {Selection} domSelection DOM selection.\n     * @returns {module:engine/view/selection~Selection} View selection.\n     */\n\n  }, {\n    key: \"domSelectionToView\",\n    value: function domSelectionToView(domSelection) {\n      // DOM selection might be placed in fake selection container.\n      // If container contains fake selection - return corresponding view selection.\n      if (domSelection.rangeCount === 1) {\n        var container = domSelection.getRangeAt(0).startContainer; // The DOM selection might be moved to the text node inside the fake selection container.\n\n        if (isText(container)) {\n          container = container.parentNode;\n        }\n\n        var viewSelection = this.fakeSelectionToView(container);\n\n        if (viewSelection) {\n          return viewSelection;\n        }\n      }\n\n      var isBackward = this.isDomSelectionBackward(domSelection);\n      var viewRanges = [];\n\n      for (var i = 0; i < domSelection.rangeCount; i++) {\n        // DOM Range have correct start and end, no matter what is the DOM Selection direction. So we don't have to fix anything.\n        var domRange = domSelection.getRangeAt(i);\n        var viewRange = this.domRangeToView(domRange);\n\n        if (viewRange) {\n          viewRanges.push(viewRange);\n        }\n      }\n\n      return new ViewSelection(viewRanges, {\n        backward: isBackward\n      });\n    }\n    /**\n     * Converts DOM Range to view {@link module:engine/view/range~Range}.\n     * If the start or end position can not be converted `null` is returned.\n     *\n     * @param {Range} domRange DOM range.\n     * @returns {module:engine/view/range~Range|null} View range.\n     */\n\n  }, {\n    key: \"domRangeToView\",\n    value: function domRangeToView(domRange) {\n      var viewStart = this.domPositionToView(domRange.startContainer, domRange.startOffset);\n      var viewEnd = this.domPositionToView(domRange.endContainer, domRange.endOffset);\n\n      if (viewStart && viewEnd) {\n        return new ViewRange(viewStart, viewEnd);\n      }\n\n      return null;\n    }\n    /**\n     * Converts DOM parent and offset to view {@link module:engine/view/position~Position}.\n     *\n     * If the position is inside a {@link module:engine/view/filler filler} which has no corresponding view node,\n     * position of the filler will be converted and returned.\n     *\n     * If the position is inside DOM element rendered by {@link module:engine/view/uielement~UIElement}\n     * that position will be converted to view position before that UIElement.\n     *\n     * If structures are too different and it is not possible to find corresponding position then `null` will be returned.\n     *\n     * @param {Node} domParent DOM position parent.\n     * @param {Number} domOffset DOM position offset.\n     * @returns {module:engine/view/position~Position} viewPosition View position.\n     */\n\n  }, {\n    key: \"domPositionToView\",\n    value: function domPositionToView(domParent, domOffset) {\n      if (isBlockFiller(domParent, this.blockFiller)) {\n        return this.domPositionToView(domParent.parentNode, indexOf(domParent));\n      } // If position is somewhere inside UIElement - return position before that element.\n\n\n      var viewElement = this.mapDomToView(domParent);\n\n      if (viewElement && viewElement.is('uiElement')) {\n        return ViewPosition._createBefore(viewElement);\n      }\n\n      if (isText(domParent)) {\n        if (isInlineFiller(domParent)) {\n          return this.domPositionToView(domParent.parentNode, indexOf(domParent));\n        }\n\n        var viewParent = this.findCorrespondingViewText(domParent);\n        var offset = domOffset;\n\n        if (!viewParent) {\n          return null;\n        }\n\n        if (startsWithFiller(domParent)) {\n          offset -= INLINE_FILLER_LENGTH;\n          offset = offset < 0 ? 0 : offset;\n        }\n\n        return new ViewPosition(viewParent, offset);\n      } // domParent instanceof HTMLElement.\n      else {\n          if (domOffset === 0) {\n            var _viewParent = this.mapDomToView(domParent);\n\n            if (_viewParent) {\n              return new ViewPosition(_viewParent, 0);\n            }\n          } else {\n            var domBefore = domParent.childNodes[domOffset - 1];\n            var viewBefore = isText(domBefore) ? this.findCorrespondingViewText(domBefore) : this.mapDomToView(domBefore); // TODO #663\n\n            if (viewBefore && viewBefore.parent) {\n              return new ViewPosition(viewBefore.parent, viewBefore.index + 1);\n            }\n          }\n\n          return null;\n        }\n    }\n    /**\n     * Returns corresponding view {@link module:engine/view/element~Element Element} or\n     * {@link module:engine/view/documentfragment~DocumentFragment} for provided DOM element or\n     * document fragment. If there is no view item {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n     * to the given DOM - `undefined` is returned.\n     * For all DOM elements rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n     *\n     * @param {DocumentFragment|Element} domElementOrDocumentFragment DOM element or document fragment.\n     * @returns {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|undefined}\n     * Corresponding view element, document fragment or `undefined` if no element was bound.\n     */\n\n  }, {\n    key: \"mapDomToView\",\n    value: function mapDomToView(domElementOrDocumentFragment) {\n      return this.getParentUIElement(domElementOrDocumentFragment) || this._domToViewMapping.get(domElementOrDocumentFragment);\n    }\n    /**\n     * Finds corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\n     * corresponding text node is returned based on the sibling or parent.\n     *\n     * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\n     * to find the corresponding text node.\n     *\n     * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n     * element, it is used to find the corresponding text node.\n     *\n     * For all text nodes rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n     *\n     * Otherwise `null` is returned.\n     *\n     * Note that for the block or inline {@link module:engine/view/filler filler} this method returns `null`.\n     *\n     * @param {Text} domText DOM text node.\n     * @returns {module:engine/view/text~Text|null} Corresponding view text node or `null`, if it was not possible to find a\n     * corresponding node.\n     */\n\n  }, {\n    key: \"findCorrespondingViewText\",\n    value: function findCorrespondingViewText(domText) {\n      if (isInlineFiller(domText)) {\n        return null;\n      } // If DOM text was rendered by UIElement - return that element.\n\n\n      var uiElement = this.getParentUIElement(domText);\n\n      if (uiElement) {\n        return uiElement;\n      }\n\n      var previousSibling = domText.previousSibling; // Try to use previous sibling to find the corresponding text node.\n\n      if (previousSibling) {\n        if (!this.isElement(previousSibling)) {\n          // The previous is text or comment.\n          return null;\n        }\n\n        var viewElement = this.mapDomToView(previousSibling);\n\n        if (viewElement) {\n          var nextSibling = viewElement.nextSibling; // It might be filler which has no corresponding view node.\n\n          if (nextSibling instanceof ViewText) {\n            return viewElement.nextSibling;\n          } else {\n            return null;\n          }\n        }\n      } // Try to use parent to find the corresponding text node.\n      else {\n          var _viewElement = this.mapDomToView(domText.parentNode);\n\n          if (_viewElement) {\n            var firstChild = _viewElement.getChild(0); // It might be filler which has no corresponding view node.\n\n\n            if (firstChild instanceof ViewText) {\n              return firstChild;\n            } else {\n              return null;\n            }\n          }\n        }\n\n      return null;\n    }\n    /**\n     * Returns corresponding DOM item for provided {@link module:engine/view/element~Element Element} or\n     * {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment}.\n     * To find a corresponding text for {@link module:engine/view/text~Text view Text instance}\n     * use {@link #findCorrespondingDomText}.\n     *\n     * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewNode\n     * View element or document fragment.\n     * @returns {Node|DocumentFragment|undefined} Corresponding DOM node or document fragment.\n     */\n\n  }, {\n    key: \"mapViewToDom\",\n    value: function mapViewToDom(documentFragmentOrElement) {\n      return this._viewToDomMapping.get(documentFragmentOrElement);\n    }\n    /**\n     * Finds corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\n     * corresponding text node is returned based on the sibling or parent.\n     *\n     * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\n     * to find the corresponding text node.\n     *\n     * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n     * element, it is used to find the corresponding text node.\n     *\n     * Otherwise `null` is returned.\n     *\n     * @param {module:engine/view/text~Text} viewText View text node.\n     * @returns {Text|null} Corresponding DOM text node or `null`, if it was not possible to find a corresponding node.\n     */\n\n  }, {\n    key: \"findCorrespondingDomText\",\n    value: function findCorrespondingDomText(viewText) {\n      var previousSibling = viewText.previousSibling; // Try to use previous sibling to find the corresponding text node.\n\n      if (previousSibling && this.mapViewToDom(previousSibling)) {\n        return this.mapViewToDom(previousSibling).nextSibling;\n      } // If this is a first node, try to use parent to find the corresponding text node.\n\n\n      if (!previousSibling && viewText.parent && this.mapViewToDom(viewText.parent)) {\n        return this.mapViewToDom(viewText.parent).childNodes[0];\n      }\n\n      return null;\n    }\n    /**\n     * Focuses DOM editable that is corresponding to provided {@link module:engine/view/editableelement~EditableElement}.\n     *\n     * @param {module:engine/view/editableelement~EditableElement} viewEditable\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus(viewEditable) {\n      var domEditable = this.mapViewToDom(viewEditable);\n\n      if (domEditable && domEditable.ownerDocument.activeElement !== domEditable) {\n        // Save the scrollX and scrollY positions before the focus.\n        var _global$window = global.window,\n            scrollX = _global$window.scrollX,\n            scrollY = _global$window.scrollY;\n        var scrollPositions = []; // Save all scrollLeft and scrollTop values starting from domEditable up to\n        // document#documentElement.\n\n        forEachDomNodeAncestor(domEditable, function (node) {\n          var scrollLeft = node.scrollLeft,\n              scrollTop = node.scrollTop;\n          scrollPositions.push([scrollLeft, scrollTop]);\n        });\n        domEditable.focus(); // Restore scrollLeft and scrollTop values starting from domEditable up to\n        // document#documentElement.\n        // https://github.com/ckeditor/ckeditor5-engine/issues/951\n        // https://github.com/ckeditor/ckeditor5-engine/issues/957\n\n        forEachDomNodeAncestor(domEditable, function (node) {\n          var _scrollPositions$shif = scrollPositions.shift(),\n              _scrollPositions$shif2 = _slicedToArray(_scrollPositions$shif, 2),\n              scrollLeft = _scrollPositions$shif2[0],\n              scrollTop = _scrollPositions$shif2[1];\n\n          node.scrollLeft = scrollLeft;\n          node.scrollTop = scrollTop;\n        }); // Restore the scrollX and scrollY positions after the focus.\n        // https://github.com/ckeditor/ckeditor5-engine/issues/951\n\n        global.window.scrollTo(scrollX, scrollY);\n      }\n    }\n    /**\n     * Returns `true` when `node.nodeType` equals `Node.ELEMENT_NODE`.\n     *\n     * @param {Node} node Node to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isElement\",\n    value: function isElement(node) {\n      return node && node.nodeType == Node.ELEMENT_NODE;\n    }\n    /**\n     * Returns `true` when `node.nodeType` equals `Node.DOCUMENT_FRAGMENT_NODE`.\n     *\n     * @param {Node} node Node to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isDocumentFragment\",\n    value: function isDocumentFragment(node) {\n      return node && node.nodeType == Node.DOCUMENT_FRAGMENT_NODE;\n    }\n    /**\n     * Returns `true` when `node.nodeType` equals `Node.COMMENT_NODE`.\n     *\n     * @param {Node} node Node to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isComment\",\n    value: function isComment(node) {\n      return node && node.nodeType == Node.COMMENT_NODE;\n    }\n    /**\n     * Returns `true` if given selection is a backward selection, that is, if it's `focus` is before `anchor`.\n     *\n     * @param {Selection} DOM Selection instance to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isDomSelectionBackward\",\n    value: function isDomSelectionBackward(selection) {\n      if (selection.isCollapsed) {\n        return false;\n      } // Since it takes multiple lines of code to check whether a \"DOM Position\" is before/after another \"DOM Position\",\n      // we will use the fact that range will collapse if it's end is before it's start.\n\n\n      var range = document.createRange();\n      range.setStart(selection.anchorNode, selection.anchorOffset);\n      range.setEnd(selection.focusNode, selection.focusOffset);\n      var backward = range.collapsed;\n      range.detach();\n      return backward;\n    }\n    /**\n     * Returns parent {@link module:engine/view/uielement~UIElement} for provided DOM node. Returns `null` if there is no\n     * parent UIElement.\n     *\n     * @param {Node} domNode\n     * @returns {module:engine/view/uielement~UIElement|null}\n     */\n\n  }, {\n    key: \"getParentUIElement\",\n    value: function getParentUIElement(domNode) {\n      var ancestors = getAncestors(domNode); // Remove domNode from the list.\n\n      ancestors.pop();\n\n      while (ancestors.length) {\n        var _domNode = ancestors.pop();\n\n        var viewNode = this._domToViewMapping.get(_domNode);\n\n        if (viewNode && viewNode.is('uiElement')) {\n          return viewNode;\n        }\n      }\n\n      return null;\n    }\n    /**\n     * Checks if given selection's boundaries are at correct places.\n     *\n     * The following places are considered as incorrect for selection boundaries:\n     * * before or in the middle of the inline filler sequence,\n     * * inside the DOM element which represents {@link module:engine/view/uielement~UIElement a view ui element}.\n     *\n     * @param {Selection} domSelection DOM Selection object to be checked.\n     * @returns {Boolean} `true` if the given selection is at a correct place, `false` otherwise.\n     */\n\n  }, {\n    key: \"isDomSelectionCorrect\",\n    value: function isDomSelectionCorrect(domSelection) {\n      return this._isDomSelectionPositionCorrect(domSelection.anchorNode, domSelection.anchorOffset) && this._isDomSelectionPositionCorrect(domSelection.focusNode, domSelection.focusOffset);\n    }\n    /**\n     * Checks if the given DOM position is a correct place for selection boundary. See {@link #isDomSelectionCorrect}.\n     *\n     * @private\n     * @param {Element} domParent Position parent.\n     * @param {Number} offset Position offset.\n     * @returns {Boolean} `true` if given position is at a correct place for selection boundary, `false` otherwise.\n     */\n\n  }, {\n    key: \"_isDomSelectionPositionCorrect\",\n    value: function _isDomSelectionPositionCorrect(domParent, offset) {\n      // If selection is before or in the middle of inline filler string, it is incorrect.\n      if (isText(domParent) && startsWithFiller(domParent) && offset < INLINE_FILLER_LENGTH) {\n        // Selection in a text node, at wrong position (before or in the middle of filler).\n        return false;\n      }\n\n      if (this.isElement(domParent) && startsWithFiller(domParent.childNodes[offset])) {\n        // Selection in an element node, before filler text node.\n        return false;\n      }\n\n      var viewParent = this.mapDomToView(domParent); // If selection is in `view.UIElement`, it is incorrect. Note that `mapDomToView()` returns `view.UIElement`\n      // also for any dom element that is inside the view ui element (so we don't need to perform any additional checks).\n\n      if (viewParent && viewParent.is('uiElement')) {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Takes text data from a given {@link module:engine/view/text~Text#data} and processes it so\n     * it is correctly displayed in the DOM.\n     *\n     * Following changes are done:\n     *\n     * * a space at the beginning is changed to `&nbsp;` if this is the first text node in its container\n     * element or if a previous text node ends with a space character,\n     * * space at the end of the text node is changed to `&nbsp;` if this is the last text node in its container,\n     * * remaining spaces are replaced to a chain of spaces and `&nbsp;` (e.g. `'x   x'` becomes `'x &nbsp; x'`).\n     *\n     * Content of {@link #preElements} is not processed.\n     *\n     * @private\n     * @param {module:engine/view/text~Text} node View text node to process.\n     * @returns {String} Processed text data.\n     */\n\n  }, {\n    key: \"_processDataFromViewText\",\n    value: function _processDataFromViewText(node) {\n      var _this = this;\n\n      var data = node.data; // If any of node ancestors has a name which is in `preElements` array, then currently processed\n      // view text node is (will be) in preformatted element. We should not change whitespaces then.\n\n      if (node.getAncestors().some(function (parent) {\n        return _this.preElements.includes(parent.name);\n      })) {\n        return data;\n      } // 1. Replace the first space with a nbsp if the previous node ends with a space or there is no previous node\n      // (container element boundary).\n\n\n      if (data.charAt(0) == ' ') {\n        var prevNode = this._getTouchingViewTextNode(node, false);\n\n        var prevEndsWithSpace = prevNode && this._nodeEndsWithSpace(prevNode);\n\n        if (prevEndsWithSpace || !prevNode) {\n          data = \"\\xA0\" + data.substr(1);\n        }\n      } // 2. Replace the last space with a nbsp if this is the last text node (container element boundary).\n\n\n      if (data.charAt(data.length - 1) == ' ') {\n        var nextNode = this._getTouchingViewTextNode(node, true);\n\n        if (!nextNode) {\n          data = data.substr(0, data.length - 1) + \"\\xA0\";\n        }\n      }\n\n      return data.replace(/ {2}/g, \" \\xA0\");\n    }\n    /**\n     * Checks whether given node ends with a space character after changing appropriate space characters to `&nbsp;`s.\n     *\n     * @private\n     * @param {module:engine/view/text~Text} node Node to check.\n     * @returns {Boolean} `true` if given `node` ends with space, `false` otherwise.\n     */\n\n  }, {\n    key: \"_nodeEndsWithSpace\",\n    value: function _nodeEndsWithSpace(node) {\n      var _this2 = this;\n\n      if (node.getAncestors().some(function (parent) {\n        return _this2.preElements.includes(parent.name);\n      })) {\n        return false;\n      }\n\n      var data = this._processDataFromViewText(node);\n\n      return data.charAt(data.length - 1) == ' ';\n    }\n    /**\n     * Takes text data from native `Text` node and processes it to a correct {@link module:engine/view/text~Text view text node} data.\n     *\n     * Following changes are done:\n     *\n     * * multiple whitespaces are replaced to a single space,\n     * * space at the beginning of a text node is removed if it is the first text node in its container\n     * element or if the previous text node ends with a space character,\n     * * space at the end of the text node is removed, if it is the last text node in its container.\n     *\n     * @param {Node} node DOM text node to process.\n     * @returns {String} Processed data.\n     * @private\n     */\n\n  }, {\n    key: \"_processDataFromDomText\",\n    value: function _processDataFromDomText(node) {\n      var data = node.data;\n\n      if (_hasDomParentOfType(node, this.preElements)) {\n        return getDataWithoutFiller(node);\n      } // Change all consecutive whitespace characters (from the [ \\n\\t\\r] set –\n      // see https://github.com/ckeditor/ckeditor5-engine/issues/822#issuecomment-311670249) to a single space character.\n      // That's how multiple whitespaces are treated when rendered, so we normalize those whitespaces.\n      // We're replacing 1+ (and not 2+) to also normalize singular \\n\\t\\r characters (#822).\n\n\n      data = data.replace(/[ \\n\\t\\r]{1,}/g, ' ');\n\n      var prevNode = this._getTouchingInlineDomNode(node, false);\n\n      var nextNode = this._getTouchingInlineDomNode(node, true);\n\n      var shouldLeftTrim = this._checkShouldLeftTrimDomText(prevNode);\n\n      var shouldRightTrim = this._checkShouldRightTrimDomText(node, nextNode); // If the previous dom text node does not exist or it ends by whitespace character, remove space character from the beginning\n      // of this text node. Such space character is treated as a whitespace.\n\n\n      if (shouldLeftTrim) {\n        data = data.replace(/^ /, '');\n      } // If the next text node does not exist remove space character from the end of this text node.\n\n\n      if (shouldRightTrim) {\n        data = data.replace(/ $/, '');\n      } // At the beginning and end of a block element, Firefox inserts normal space + <br> instead of non-breaking space.\n      // This means that the text node starts/end with normal space instead of non-breaking space.\n      // This causes a problem because the normal space would be removed in `.replace` calls above. To prevent that,\n      // the inline filler is removed only after the data is initially processed (by the `.replace` above). See ckeditor5#692.\n\n\n      data = getDataWithoutFiller(new Text(data)); // At this point we should have removed all whitespaces from DOM text data.\n      // Now we have to change &nbsp; chars, that were in DOM text data because of rendering reasons, to spaces.\n      // First, change all ` \\u00A0` pairs (space + &nbsp;) to two spaces. DOM converter changes two spaces from model/view as\n      // ` \\u00A0` to ensure proper rendering. Since here we convert back, we recognize those pairs and change them\n      // to `  ` which is what we expect to have in model/view.\n\n      data = data.replace(/ \\u00A0/g, '  '); // Then, change &nbsp; character that is at the beginning of the text node to space character.\n      // As above, that &nbsp; was created for rendering reasons but it's real meaning is just a space character.\n      // We do that replacement only if this is the first node or the previous node ends on whitespace character.\n\n      if (shouldLeftTrim) {\n        data = data.replace(/^\\u00A0/, ' ');\n      } // Since input text data could be: `x_ _`, we would not replace the first &nbsp; after `x` character.\n      // We have to fix it. Since we already change all ` &nbsp;`, we will have something like this at the end of text data:\n      // `x_ _ _` -> `x_    `. Find &nbsp; at the end of string (can be followed only by spaces).\n      // We do that replacement only if this is the last node or the next node starts with &nbsp; or is a <br>.\n\n\n      if (isText(nextNode) ? nextNode.data.charAt(0) == \"\\xA0\" : true) {\n        data = data.replace(/\\u00A0( *)$/, ' $1');\n      } // At this point, all whitespaces should be removed and all &nbsp; created for rendering reasons should be\n      // changed to normal space. All left &nbsp; are &nbsp; inserted intentionally.\n\n\n      return data;\n    }\n    /**\n     * Helper function which checks if a DOM text node, preceded by the given `prevNode` should\n     * be trimmed from the left side.\n     *\n     * @param {Node} prevNode\n     */\n\n  }, {\n    key: \"_checkShouldLeftTrimDomText\",\n    value: function _checkShouldLeftTrimDomText(prevNode) {\n      if (!prevNode) {\n        return true;\n      }\n\n      if (isElement(prevNode)) {\n        return true;\n      }\n\n      return /[^\\S\\u00A0]/.test(prevNode.data.charAt(prevNode.data.length - 1));\n    }\n    /**\n     * Helper function which checks if a DOM text node, succeeded by the given `nextNode` should\n     * be trimmed from the right side.\n     *\n     * @param {Node} node\n     * @param {Node} prevNode\n     */\n\n  }, {\n    key: \"_checkShouldRightTrimDomText\",\n    value: function _checkShouldRightTrimDomText(node, nextNode) {\n      if (nextNode) {\n        return false;\n      }\n\n      return !startsWithFiller(node);\n    }\n    /**\n     * Helper function. For given {@link module:engine/view/text~Text view text node}, it finds previous or next sibling\n     * that is contained in the same container element. If there is no such sibling, `null` is returned.\n     *\n     * @param {module:engine/view/text~Text} node Reference node.\n     * @param {Boolean} getNext\n     * @returns {module:engine/view/text~Text|null} Touching text node or `null` if there is no next or previous touching text node.\n     */\n\n  }, {\n    key: \"_getTouchingViewTextNode\",\n    value: function _getTouchingViewTextNode(node, getNext) {\n      var treeWalker = new ViewTreeWalker({\n        startPosition: getNext ? ViewPosition._createAfter(node) : ViewPosition._createBefore(node),\n        direction: getNext ? 'forward' : 'backward'\n      });\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = treeWalker[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var value = _step5.value;\n\n          // ViewContainerElement is found on a way to next ViewText node, so given `node` was first/last\n          // text node in its container element.\n          if (value.item.is('containerElement')) {\n            return null;\n          } // <br> found – it works like a block boundary, so do not scan further.\n          else if (value.item.is('br')) {\n              return null;\n            } // Found a text node in the same container element.\n            else if (value.item.is('textProxy')) {\n                return value.item;\n              }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return null;\n    }\n    /**\n     * Helper function. For the given text node, it finds the closest touching node which is either\n     * a text node or a `<br>`. The search is terminated at block element boundaries and if a matching node\n     * wasn't found so far, `null` is returned.\n     *\n     * In the following DOM structure:\n     *\n     *\t\t<p>foo<b>bar</b><br>bom</p>\n     *\n     * * `foo` doesn't have its previous touching inline node (`null` is returned),\n     * * `foo`'s next touching inline node is `bar`\n     * * `bar`'s next touching inline node is `<br>`\n     *\n     * This method returns text nodes and `<br>` elements because these types of nodes affect how\n     * spaces in the given text node need to be converted.\n     *\n     * @private\n     * @param {Text} node\n     * @param {Boolean} getNext\n     * @returns {Text|Element|null}\n     */\n\n  }, {\n    key: \"_getTouchingInlineDomNode\",\n    value: function _getTouchingInlineDomNode(node, getNext) {\n      if (!node.parentNode) {\n        return null;\n      }\n\n      var direction = getNext ? 'nextNode' : 'previousNode';\n      var document = node.ownerDocument;\n      var topmostParent = getAncestors(node)[0];\n      var treeWalker = document.createTreeWalker(topmostParent, NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT, {\n        acceptNode: function acceptNode(node) {\n          if (isText(node)) {\n            return NodeFilter.FILTER_ACCEPT;\n          }\n\n          if (node.tagName == 'BR') {\n            return NodeFilter.FILTER_ACCEPT;\n          }\n\n          return NodeFilter.FILTER_SKIP;\n        }\n      });\n      treeWalker.currentNode = node;\n      var touchingNode = treeWalker[direction]();\n\n      if (touchingNode !== null) {\n        var lca = getCommonAncestor(node, touchingNode); // If there is common ancestor between the text node and next/prev text node,\n        // and there are no block elements on a way from the text node to that ancestor,\n        // and there are no block elements on a way from next/prev text node to that ancestor...\n\n        if (lca && !_hasDomParentOfType(node, this.blockElements, lca) && !_hasDomParentOfType(touchingNode, this.blockElements, lca)) {\n          // Then they are in the same container element.\n          return touchingNode;\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  return DomConverter;\n}(); // Helper function.\n// Used to check if given native `Element` or `Text` node has parent with tag name from `types` array.\n//\n// @param {Node} node\n// @param {Array.<String>} types\n// @param {Boolean} [boundaryParent] Can be given if parents should be checked up to a given element (excluding that element).\n// @returns {Boolean} `true` if such parent exists or `false` if it does not.\n\n\nexport { DomConverter as default };\n\nfunction _hasDomParentOfType(node, types, boundaryParent) {\n  var parents = getAncestors(node);\n\n  if (boundaryParent) {\n    parents = parents.slice(parents.indexOf(boundaryParent) + 1);\n  }\n\n  return parents.some(function (parent) {\n    return parent.tagName && types.includes(parent.tagName.toLowerCase());\n  });\n} // A helper that executes given callback for each DOM node's ancestor, starting from the given node\n// and ending in document#documentElement.\n//\n// @param {Node} node\n// @param {Function} callback A callback to be executed for each ancestor.\n\n\nfunction forEachDomNodeAncestor(node, callback) {\n  while (node && node != global.document) {\n    callback(node);\n    node = node.parentNode;\n  }\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/getcommonancestor\n */\nimport getAncestors from './getancestors';\n/**\n * Searches and returns the lowest common ancestor of two given nodes.\n *\n * @param {Node} nodeA First node.\n * @param {Node} nodeB Second node.\n * @returns {Node|DocumentFragment|Document|null} Lowest common ancestor of both nodes or `null` if nodes do not have a common ancestor.\n */\n\nexport default function getCommonAncestor(nodeA, nodeB) {\n  var ancestorsA = getAncestors(nodeA);\n  var ancestorsB = getAncestors(nodeB);\n  var i = 0; // It does not matter which array is shorter.\n\n  while (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n    i++;\n  }\n\n  return i === 0 ? null : ancestorsA[i - 1];\n}","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nexport default nativeKeysIn;","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nexport default baseKeysIn;","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\n\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;","import overArg from './_overArg.js';\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeKeys = overArg(Object.keys, Object);\nexport default nativeKeys;","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nexport default baseKeys;","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nexport default arrayFilter;","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nexport default getSymbols;","import getNative from './_getNative.js';\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nexport default defineProperty;","import root from './_root.js';\n/** Built-in value references. */\n\nvar Uint8Array = root.Uint8Array;\nexport default Uint8Array;","import _toConsumableArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/containerelement\n */\nimport Element from './element';\n/**\n * Containers are elements which define document structure. They define boundaries for\n * {@link module:engine/view/attributeelement~AttributeElement attributes}. They are mostly used for block elements like `<p>` or `<div>`.\n *\n * Editing engine does not define a fixed HTML DTD. This is why a feature developer needs to choose between various\n * types (container element, {@link module:engine/view/attributeelement~AttributeElement attribute element},\n * {@link module:engine/view/emptyelement~EmptyElement empty element}, etc) when developing a feature.\n *\n * The container element should be your default choice when writing a converter, unless:\n *\n * * this element represents a model text attribute (then use {@link module:engine/view/attributeelement~AttributeElement}),\n * * this is an empty element like `<img>` (then use {@link module:engine/view/emptyelement~EmptyElement}),\n * * this is a root element,\n * * this is a nested editable element (then use  {@link module:engine/view/editableelement~EditableElement}).\n *\n * To create a new container element instance use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createContainerElement `DowncastWriter#createContainerElement()`}\n * method.\n *\n * @extends module:engine/view/element~Element\n */\n\nvar ContainerElement =\n/*#__PURE__*/\nfunction (_Element) {\n  _inherits(ContainerElement, _Element);\n\n  /**\n   * Creates a container element.\n   *\n   * @see module:engine/view/downcastwriter~DowncastWriter#createContainerElement\n   * @see module:engine/view/element~Element\n   * @protected\n   */\n  function ContainerElement(name, attrs, children) {\n    var _this;\n\n    _classCallCheck(this, ContainerElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContainerElement).call(this, name, attrs, children));\n    /**\n     * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n     *\n     * @method #getFillerOffset\n     * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n     */\n\n    _this.getFillerOffset = getFillerOffset;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ContainerElement, [{\n    key: \"is\",\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'containerElement' || _get(_getPrototypeOf(ContainerElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'containerElement' && name == this.name || _get(_getPrototypeOf(ContainerElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n  }]);\n\n  return ContainerElement;\n}(Element);\n/**\n * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n *\n * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n */\n\n\nexport { ContainerElement as default };\nexport function getFillerOffset() {\n  var children = _toConsumableArray(this.getChildren());\n\n  var lastChild = children[this.childCount - 1]; // Block filler is required after a `<br>` if it's the last element in its container. See #1422.\n\n  if (lastChild && lastChild.is('element', 'br')) {\n    return this.childCount;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var child = _step.value;\n\n      // If there's any non-UI element – don't render the bogus.\n      if (!child.is('uiElement')) {\n        return null;\n      }\n    } // If there are only UI elements – render the bogus at the end of the element.\n\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return this.childCount;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/iswindow\n */\n\n/**\n * Checks if the object is a native DOM Window.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isWindow(obj) {\n  var stringifiedObject = Object.prototype.toString.apply(obj); // Returns `true` for the `window` object in browser environments.\n\n  if (stringifiedObject == '[object Window]') {\n    return true;\n  } // Returns `true` for the `window` object in the Electron environment.\n\n\n  if (stringifiedObject == '[object global]') {\n    return true;\n  }\n\n  return false;\n}","import ListCache from './_ListCache.js';\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nexport default stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n/** Used as the size to enable large array optimizations. */\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nexport default Stack;","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/spy\n */\n\n/**\n * Creates a spy function (ala Sinon.js) that can be used to inspect call to it.\n *\n * The following are the present features:\n *\n * * spy.called: property set to `true` if the function has been called at least once.\n *\n * @returns {Function} The spy function.\n */\nfunction spy() {\n  return function spy() {\n    spy.called = true;\n  };\n}\n\nexport default spy;","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/eventinfo\n */\nimport spy from './spy';\n/**\n * The event object passed to event callbacks. It is used to provide information about the event as well as a tool to\n * manipulate it.\n */\n\nvar EventInfo =\n/**\n * @param {Object} source The emitter.\n * @param {String} name The event name.\n */\nfunction EventInfo(source, name) {\n  _classCallCheck(this, EventInfo);\n\n  /**\n   * The object that fired the event.\n   *\n   * @readonly\n   * @member {Object}\n   */\n  this.source = source;\n  /**\n   * The event name.\n   *\n   * @readonly\n   * @member {String}\n   */\n\n  this.name = name;\n  /**\n   * Path this event has followed. See {@link module:utils/emittermixin~EmitterMixin#delegate}.\n   *\n   * @readonly\n   * @member {Array.<Object>}\n   */\n\n  this.path = []; // The following methods are defined in the constructor because they must be re-created per instance.\n\n  /**\n   * Stops the event emitter to call further callbacks for this event interaction.\n   *\n   * @method #stop\n   */\n\n  this.stop = spy();\n  /**\n   * Removes the current callback from future interactions of this event.\n   *\n   * @method #off\n   */\n\n  this.off = spy();\n  /**\n   * The value which will be returned by {@link module:utils/emittermixin~EmitterMixin#fire}.\n   *\n   * It's `undefined` by default and can be changed by an event listener:\n   *\n   *\t\tdataController.fire( 'getSelectedContent', ( evt ) => {\n   *\t\t\t// This listener will make `dataController.fire( 'getSelectedContent' )`\n   *\t\t\t// always return an empty DocumentFragment.\n   *\t\t\tevt.return = new DocumentFragment();\n   *\n   *\t\t\t// Make sure no other listeners are executed.\n   *\t\t\tevt.stop();\n   *\t\t} );\n   *\n   * @member #return\n   */\n};\n\nexport { EventInfo as default };","var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/version\n */\n\n/* globals window, global */\nimport log from './log';\nimport { version } from 'ckeditor5/package.json';\nvar windowOrGlobal = typeof window === 'object' ? window : global;\n\nif (windowOrGlobal.CKEDITOR_VERSION) {\n  /**\n   * This error is thrown when due to a mistake in how CKEditor 5 was installed or initialized, some\n   * of its modules were duplicated (evaluated and executed twice). Module duplication leads to inevitable runtime\n   * errors.\n   *\n   * There are many situations in which some modules can be loaded twice. In the worst case scenario,\n   * you may need to check your project for each of those issues and fix them all.\n   *\n   * # Trying to add a plugin to an existing build\n   *\n   * If you import an existing CKEditor 5 build and a plugin like this:\n   *\n   *\t\timport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n   *\t\timport Highlight from '@ckeditor/ckeditor5-highlight/src/highlight';\n   *\n   * Then your project loads some CKEditor 5 packages twice. How does it happen?\n   *\n   * The build package contains a file which is already compiled with webpack,\n   * meaning that it contains all the necessary code from e.g. `@ckeditor/ckeditor5-engine` and `@ckeditor/ckeditor5-utils`.\n   *\n   * However, the `Highlight` plugin imports some of the modules from those packages too. If you ask webpack to\n   * build such a project, you will end up with those modules being included (and run) twice – first, because they are\n   * included inside the build package, and second because they are required by the `Highlight` plugin.\n   *\n   * Therefore, **you must never add plugins to an existing build** unless your plugin has no dependencies.\n   *\n   * Adding plugins to a build is done by taking the source version of this build (so, before it was built with webpack)\n   * and adding plugins there. In this situation, webpack will know that it only needs to load each plugins once.\n   *\n   * Read more in the {@glink builds/guides/integration/installing-plugins \"Installing plugins\"} guide.\n   *\n   * # Confused an editor build with an editor implementation\n   *\n   * This scenario is very similar to the previous one, but has a different origin.\n   *\n   * Let's assume, that you wanted to use CKEditor 5 from source, as explained in the\n   * {@glink builds/guides/integration/advanced-setup#scenario-2-building-from-source \"Building from source\"} section\n   * or in the {@glink framework/guides/quick-start \"Quick start\"} guide of the CKEditor 5 Framework.\n   *\n   * The correct way to do so is to import an editor and plugins and run them together like this:\n   *\n   *\t\timport ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\n   *\t\timport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\n   *\t\timport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n   *\t\timport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\n   *\t\timport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\n   *\n   *\t\tClassicEditor\n   *\t\t\t.create( document.querySelector( '#editor' ), {\n   *\t\t\t\tplugins: [ Essentials, Paragraph, Bold, Italic ],\n   *\t\t\t\ttoolbar: [ 'bold', 'italic' ]\n   *\t\t\t} )\n   *\t\t\t.then( editor => {\n   *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n   *\t\t\t} )\n   *\t\t\t.catch( error => {\n   *\t\t\t\tconsole.error( error.stack );\n   *\t\t\t} );\n   *\n   * However, you might have mistakenly import a build instead of a source `ClassicEditor`. In which case\n   * your imports will look like this:\n   *\n   *\t\timport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n   *\t\timport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\n   *\t\timport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n   *\t\timport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\n   *\t\timport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\n   *\n   * This creates the same situation as in the previous section because you use a build together with source plugins.\n   *\n   * Remember: `@ckeditor/ckeditor5-build-*` packages contain editor builds and `@ckeditor/ckeditor5-editor-*` source editors.\n   *\n   * # Loading two+ builds on one page\n   *\n   * If you use CKEditor 5 builds, you might have loaded two (or more) `ckeditor.js` files in one web page\n   * – check your web page for duplicated `<script>` elements or make sure your page builder/bundler includes CKEditor only once.\n   *\n   * If you want to use two different types of editors at once, see the\n   * {@glink builds/guides/integration/advanced-setup#scenario-3-using-two-different-editors \"Using two different editors\"}\n   * section.\n   *\n   * # Using outdated packages\n   *\n   * Building CKEditor 5 from source require using multiple npm packages. Those packages have their dependencies\n   * to other packages. If you use the latest version of let's say `@ckeditor/ckeditor5-editor-classic` with\n   * and outdated version of `@ckeditor/ckeditor5-image`, npm or yarn will need to install two different versions of\n   * `@ckeditor/ckeditor5-core` because `@ckeditor/ckeditor5-editor-classic` and `@ckeditor/ckeditor5-image` may require\n   * different versions of the core package.\n   *\n   * The solution to this issue is to update all packages to their latest version. We recommend\n   * using tools like [`node-check-updates`](https://www.npmjs.com/package/npm-check-updates) which simplify this process.\n   *\n   * # Conflicting version of dependencies\n   *\n   * This is a special case of the previous scenario. If you use CKEditor 5 with some 3rd party plugins,\n   * it may happen that even if you use the latest versions of the official packages and the latest version of\n   * those 3rd party packages, there will be a conflict between some of their dependencies.\n   *\n   * Such a problem can be resolved by either downgrading CKEditor 5 packages (which we do not recommend) or\n   * asking the author of the 3rd party package to upgrade its depdendencies (or forking his project and doing this yourself).\n   *\n   * # Packages were duplicated in `node_modules`\n   *\n   * In some situations, especially when calling `npm install` multiple times, it may happen\n   * than npm will not correctly \"deduplicate\" packages.\n   *\n   * Normally, npm deduplicates all packages so e.g. `@ckeditor/ckeditor5-core` is installed only once in `node_modules/`.\n   * However, it was known to fail to do so from time to time.\n   *\n   * We recommend checking if any of the below steps helps:\n   *\n   * * `rm -rf node_modules && npm install` to make sure you have a clean `node_modules/` – this step\n   * is known to help in majority of cases,\n   * * if you use `yarn.lock` or `package-lock.json`, remove it before `npm install`,\n   * * check whether all CKEditor 5 packages are up to date and reinstall them\n   * if you changed anything (`rm -rf node_modules && npm install`).\n   *\n   * If all packages are correct and compatible with each other the above steps are known to help. If not, you may\n   * try to check with `npm ls` how many times packages like `@ckeditor/ckeditor5-core`, `@ckeditor/ckeditor5-engine` and\n   *`@ckeditor/ckeditor5-utils` are installed. If more than once, verify which package causes that.\n   *\n   * @error ckeditor-duplicated-modules\n   */\n  log.error('ckeditor-duplicated-modules: Some CKEditor 5 modules are duplicated.');\n} else {\n  windowOrGlobal.CKEDITOR_VERSION = version;\n}","'use strict';\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n\nvar ReactIs = require('react-is');\n\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[ReactIs.ForwardRef] = FORWARD_REF_STATICS;\n\nfunction getStatics(component) {\n  if (ReactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  }\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\n\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n\n    return targetComponent;\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/matcher\n */\n\n/**\n * View matcher class.\n * Instance of this class can be used to find {@link module:engine/view/element~Element elements} that match given pattern.\n */\nvar Matcher =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates new instance of Matcher.\n   *\n   * @param {String|RegExp|Object} [pattern] Match patterns. See {@link module:engine/view/matcher~Matcher#add add method} for\n   * more information.\n   */\n  function Matcher() {\n    _classCallCheck(this, Matcher);\n\n    /**\n     * @private\n     * @type {Array<String|RegExp|Object>}\n     */\n    this._patterns = [];\n    this.add.apply(this, arguments);\n  }\n  /**\n   * Adds pattern or patterns to matcher instance.\n   *\n   *\t\t// String.\n   *\t\tmatcher.add( 'div' );\n   *\n   *\t\t// Regular expression.\n   *\t\tmatcher.add( /^\\w/ );\n   *\n   *\t\t// Single class.\n   *\t\tmatcher.add( {\n   *\t\t\tclasses: 'foobar'\n   *\t\t} );\n   *\n   * See {@link module:engine/view/matcher~MatcherPattern} for more examples.\n   *\n   * Multiple patterns can be added in one call:\n   *\n   * \t\tmatcher.add( 'div', { classes: 'foobar' } );\n   *\n   * @param {Object|String|RegExp|Function} pattern Object describing pattern details. If string or regular expression\n   * is provided it will be used to match element's name. Pattern can be also provided in a form\n   * of a function - then this function will be called with each {@link module:engine/view/element~Element element} as a parameter.\n   * Function's return value will be stored under `match` key of the object returned from\n   * {@link module:engine/view/matcher~Matcher#match match} or {@link module:engine/view/matcher~Matcher#matchAll matchAll} methods.\n   * @param {String|RegExp} [pattern.name] Name or regular expression to match element's name.\n   * @param {Object} [pattern.attributes] Object with key-value pairs representing attributes to match. Each object key\n   * represents attribute name. Value under that key can be either:\n   * * `true` - then attribute is just required (can be empty),\n   * * a string - then attribute has to be equal, or\n   * * a regular expression - then attribute has to match the expression.\n   * @param {String|RegExp|Array} [pattern.classes] Class name or array of class names to match. Each name can be\n   * provided in a form of string or regular expression.\n   * @param {Object} [pattern.styles] Object with key-value pairs representing styles to match. Each object key\n   * represents style name. Value under that key can be either a string or a regular expression and it will be used\n   * to match style value.\n   */\n\n\n  _createClass(Matcher, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, pattern = new Array(_len), _key = 0; _key < _len; _key++) {\n        pattern[_key] = arguments[_key];\n      }\n\n      for (var _i = 0, _pattern = pattern; _i < _pattern.length; _i++) {\n        var item = _pattern[_i];\n\n        // String or RegExp pattern is used as element's name.\n        if (typeof item == 'string' || item instanceof RegExp) {\n          item = {\n            name: item\n          };\n        } // Single class name/RegExp can be provided.\n\n\n        if (item.classes && (typeof item.classes == 'string' || item.classes instanceof RegExp)) {\n          item.classes = [item.classes];\n        }\n\n        this._patterns.push(item);\n      }\n    }\n    /**\n     * Matches elements for currently stored patterns. Returns match information about first found\n     * {@link module:engine/view/element~Element element}, otherwise returns `null`.\n     *\n     * Example of returned object:\n     *\n     *\t\t{\n     *\t\t\telement: <instance of found element>,\n     *\t\t\tpattern: <pattern used to match found element>,\n     *\t\t\tmatch: {\n     *\t\t\t\tname: true,\n     *\t\t\t\tattributes: [ 'title', 'href' ],\n     *\t\t\t\tclasses: [ 'foo' ],\n     *\t\t\t\tstyles: [ 'color', 'position' ]\n     *\t\t\t}\n     *\t\t}\n     *\n     * @see module:engine/view/matcher~Matcher#add\n     * @see module:engine/view/matcher~Matcher#matchAll\n     * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\n     * @returns {Object|null} result\n     * @returns {module:engine/view/element~Element} result.element Matched view element.\n     * @returns {Object|String|RegExp|Function} result.pattern Pattern that was used to find matched element.\n     * @returns {Object} result.match Object representing matched element parts.\n     * @returns {Boolean} [result.match.name] True if name of the element was matched.\n     * @returns {Array} [result.match.attributes] Array with matched attribute names.\n     * @returns {Array} [result.match.classes] Array with matched class names.\n     * @returns {Array} [result.match.styles] Array with matched style names.\n     */\n\n  }, {\n    key: \"match\",\n    value: function match() {\n      for (var _len2 = arguments.length, element = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        element[_key2] = arguments[_key2];\n      }\n\n      for (var _i2 = 0, _element = element; _i2 < _element.length; _i2++) {\n        var singleElement = _element[_i2];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this._patterns[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var pattern = _step.value;\n            var match = isElementMatching(singleElement, pattern);\n\n            if (match) {\n              return {\n                element: singleElement,\n                pattern: pattern,\n                match: match\n              };\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      return null;\n    }\n    /**\n     * Matches elements for currently stored patterns. Returns array of match information with all found\n     * {@link module:engine/view/element~Element elements}. If no element is found - returns `null`.\n     *\n     * @see module:engine/view/matcher~Matcher#add\n     * @see module:engine/view/matcher~Matcher#match\n     * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\n     * @returns {Array.<Object>|null} Array with match information about found elements or `null`. For more information\n     * see {@link module:engine/view/matcher~Matcher#match match method} description.\n     */\n\n  }, {\n    key: \"matchAll\",\n    value: function matchAll() {\n      var results = [];\n\n      for (var _len3 = arguments.length, element = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        element[_key3] = arguments[_key3];\n      }\n\n      for (var _i3 = 0, _element2 = element; _i3 < _element2.length; _i3++) {\n        var singleElement = _element2[_i3];\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this._patterns[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var pattern = _step2.value;\n            var match = isElementMatching(singleElement, pattern);\n\n            if (match) {\n              results.push({\n                element: singleElement,\n                pattern: pattern,\n                match: match\n              });\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      return results.length > 0 ? results : null;\n    }\n    /**\n     * Returns the name of the element to match if there is exactly one pattern added to the matcher instance\n     * and it matches element name defined by `string` (not `RegExp`). Otherwise, returns `null`.\n     *\n     * @returns {String|null} Element name trying to match.\n     */\n\n  }, {\n    key: \"getElementName\",\n    value: function getElementName() {\n      if (this._patterns.length !== 1) {\n        return null;\n      }\n\n      var pattern = this._patterns[0];\n      var name = pattern.name;\n      return typeof pattern != 'function' && name && !(name instanceof RegExp) ? name : null;\n    }\n  }]);\n\n  return Matcher;\n}(); // Returns match information if {@link module:engine/view/element~Element element} is matching provided pattern.\n// If element cannot be matched to provided pattern - returns `null`.\n//\n// @param {module:engine/view/element~Element} element\n// @param {Object|String|RegExp|Function} pattern\n// @returns {Object|null} Returns object with match information or null if element is not matching.\n\n\nexport { Matcher as default };\n\nfunction isElementMatching(element, pattern) {\n  // If pattern is provided as function - return result of that function;\n  if (typeof pattern == 'function') {\n    return pattern(element);\n  }\n\n  var match = {}; // Check element's name.\n\n  if (pattern.name) {\n    match.name = matchName(pattern.name, element.name);\n\n    if (!match.name) {\n      return null;\n    }\n  } // Check element's attributes.\n\n\n  if (pattern.attributes) {\n    match.attributes = matchAttributes(pattern.attributes, element);\n\n    if (!match.attributes) {\n      return null;\n    }\n  } // Check element's classes.\n\n\n  if (pattern.classes) {\n    match.classes = matchClasses(pattern.classes, element);\n\n    if (!match.classes) {\n      return false;\n    }\n  } // Check element's styles.\n\n\n  if (pattern.styles) {\n    match.styles = matchStyles(pattern.styles, element);\n\n    if (!match.styles) {\n      return false;\n    }\n  }\n\n  return match;\n} // Checks if name can be matched by provided pattern.\n//\n// @param {String|RegExp} pattern\n// @param {String} name\n// @returns {Boolean} Returns `true` if name can be matched, `false` otherwise.\n\n\nfunction matchName(pattern, name) {\n  // If pattern is provided as RegExp - test against this regexp.\n  if (pattern instanceof RegExp) {\n    return pattern.test(name);\n  }\n\n  return pattern === name;\n} // Checks if attributes of provided element can be matched against provided patterns.\n//\n// @param {Object} patterns Object with information about attributes to match. Each key of the object will be\n// used as attribute name. Value of each key can be a string or regular expression to match against attribute value.\n// @param {module:engine/view/element~Element} element Element which attributes will be tested.\n// @returns {Array|null} Returns array with matched attribute names or `null` if no attributes were matched.\n\n\nfunction matchAttributes(patterns, element) {\n  var match = [];\n\n  for (var name in patterns) {\n    var pattern = patterns[name];\n\n    if (element.hasAttribute(name)) {\n      var attribute = element.getAttribute(name);\n\n      if (pattern === true) {\n        match.push(name);\n      } else if (pattern instanceof RegExp) {\n        if (pattern.test(attribute)) {\n          match.push(name);\n        } else {\n          return null;\n        }\n      } else if (attribute === pattern) {\n        match.push(name);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  return match;\n} // Checks if classes of provided element can be matched against provided patterns.\n//\n// @param {Array.<String|RegExp>} patterns Array of strings or regular expressions to match against element's classes.\n// @param {module:engine/view/element~Element} element Element which classes will be tested.\n// @returns {Array|null} Returns array with matched class names or `null` if no classes were matched.\n\n\nfunction matchClasses(patterns, element) {\n  var match = [];\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = patterns[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var pattern = _step3.value;\n\n      if (pattern instanceof RegExp) {\n        var classes = element.getClassNames();\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = classes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var name = _step4.value;\n\n            if (pattern.test(name)) {\n              match.push(name);\n            }\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        if (match.length === 0) {\n          return null;\n        }\n      } else if (element.hasClass(pattern)) {\n        match.push(pattern);\n      } else {\n        return null;\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return match;\n} // Checks if styles of provided element can be matched against provided patterns.\n//\n// @param {Object} patterns Object with information about styles to match. Each key of the object will be\n// used as style name. Value of each key can be a string or regular expression to match against style value.\n// @param {module:engine/view/element~Element} element Element which styles will be tested.\n// @returns {Array|null} Returns array with matched style names or `null` if no styles were matched.\n\n\nfunction matchStyles(patterns, element) {\n  var match = [];\n\n  for (var name in patterns) {\n    var pattern = patterns[name];\n\n    if (element.hasStyle(name)) {\n      var style = element.getStyle(name);\n\n      if (pattern instanceof RegExp) {\n        if (pattern.test(style)) {\n          match.push(name);\n        } else {\n          return null;\n        }\n      } else if (style === pattern) {\n        match.push(name);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  return match;\n}\n/**\n * An entity that is a valid pattern recognized by a matcher. `MatcherPattern` is used by {@link ~Matcher} to recognize\n * if a view element fits in a group of view elements described by the pattern.\n *\n * `MatcherPattern` can be given as a `String`, a `RegExp`, an `Object` or a `Function`.\n *\n * If `MatcherPattern` is given as a `String` or `RegExp`, it will match any view element that has a matching name:\n *\n *\t\t// Match any element with name equal to 'div'.\n *\t\tconst pattern = 'div';\n *\n *\t\t// Match any element which name starts on 'p'.\n *\t\tconst pattern = /^p/;\n *\n * If `MatcherPattern` is given as an `Object`, all the object's properties will be matched with view element properties.\n *\n *\t\t// Match view element's name.\n *\t\tconst pattern = { name: /^p/ };\n *\n *\t\t// Match view element which has matching attributes.\n *\t\tconst pattern = {\n *\t\t\tattributes: {\n *\t\t\t\ttitle: 'foobar',\t// Attribute title should equal 'foobar'.\n *\t\t\t\tfoo: /^\\w+/,\t\t// Attribute foo should match /^\\w+/ regexp.\n *\t\t\t\tbar: true\t\t\t// Attribute bar should be set (can be empty).\n *\t\t\t}\n *\t\t};\n *\n *\t\t// Match view element which has given class.\n *\t\tconst pattern = {\n *\t\t\tclasses: 'foobar'\n *\t\t};\n *\n *\t\t// Match view element class using regular expression.\n *\t\tconst pattern = {\n *\t\t\tclasses: /foo.../\n *\t\t};\n *\n *\t\t// Multiple classes to match.\n *\t\tconst pattern = {\n *\t\t\tclasses: [ 'baz', 'bar', /foo.../ ]\n *\t\t};\n *\n *\t\t// Match view element which has given styles.\n *\t\tconst pattern = {\n *\t\t\tstyles: {\n *\t\t\t\tposition: 'absolute',\n *\t\t\t\tcolor: /^\\w*blue$/\n *\t\t\t}\n *\t\t};\n *\n *\t\t// Pattern with multiple properties.\n *\t\tconst pattern = {\n *\t\t\tname: 'span',\n *\t\t\tstyles: {\n *\t\t\t\t'font-weight': 'bold'\n *\t\t\t},\n *\t\t\tclasses: 'highlighted'\n *\t\t};\n *\n * If `MatcherPattern` is given as a `Function`, the function takes a view element as a first and only parameter and\n * the function should decide whether that element matches. If so, it should return what part of the view element has been matched.\n * Otherwise, the function should return `null`. The returned result will be included in `match` property of the object\n * returned by {@link ~Matcher#match} call.\n *\n *\t\t// Match an empty <div> element.\n *\t\tconst pattern = element => {\n *\t\t\tif ( element.name == 'div' && element.childCount > 0 ) {\n *\t\t\t\t// Return which part of the element was matched.\n *\t\t\t\treturn { name: true };\n *\t\t\t}\n *\n *\t\t\treturn null;\n *\t\t};\n *\n *\t\t// Match a <p> element with big font (\"heading-like\" element).\n *\t\tconst pattern = element => {\n *\t\t\tif ( element.name == 'p' ) {\n *\t\t\t\tconst fontSize = element.getStyle( 'font-size' );\n *\t\t\t\tconst size = fontSize.match( /(\\d+)/px );\n *\n *\t\t\t\tif ( size && Number( size[ 1 ] ) > 26 ) {\n *\t\t\t\t\treturn { name: true, attribute: [ 'font-size' ] };\n *\t\t\t\t}\n *\t\t\t}\n *\n *\t\t\treturn null;\n *\t\t};\n *\n * `MatcherPattern` is defined in a way that it is a superset of {@link module:engine/view/elementdefinition~ElementDefinition},\n * that is, every `ElementDefinition` also can be used as a `MatcherPattern`.\n *\n * @typedef {String|RegExp|Object|Function} module:engine/view/matcher~MatcherPattern\n *\n * @property {String|RegExp} [name] View element name to match.\n * @property {String|RegExp|Array.<String|RegExp>} [classes] View element's class name(s) to match.\n * @property {Object} [styles] Object with key-value pairs representing styles to match.\n * Each object key represents style name. Value can be given as `String` or `RegExp`.\n * @property {Object} [attributes] Object with key-value pairs representing attributes to match.\n * Each object key represents attribute name. Value can be given as `String` or `RegExp`.\n */","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/count\n */\n\n/**\n * Returns the number of items return by the iterator.\n *\n *\t\tcount( [ 1, 2, 3, 4, 5 ] ); // 5;\n *\n * @param {Iterable.<*>} iterator Any iterator.\n * @returns {Number} Number of items returned by that iterator.\n */\nexport default function count(iterator) {\n  var count = 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = iterator[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _ = _step.value;\n      // eslint-disable-line no-unused-vars\n      count++;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return count;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/isrange\n */\n\n/**\n * Checks if the object is a native DOM Range.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isRange(obj) {\n  return Object.prototype.toString.apply(obj) == '[object Range]';\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/rootattributeoperation\n */\nimport Operation from './operation';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Operation to change root element's attribute. Using this class you can add, remove or change value of the attribute.\n *\n * This operation is needed, because root elements can't be changed through\n * @link module:engine/model/operation/attributeoperation~AttributeOperation}.\n * It is because {@link module:engine/model/operation/attributeoperation~AttributeOperation}\n * requires a range to change and root element can't\n * be a part of range because every {@link module:engine/model/position~Position} has to be inside a root.\n * {@link module:engine/model/position~Position} can't be created before a root element.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar RootAttributeOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(RootAttributeOperation, _Operation);\n\n  /**\n   * Creates an operation that changes, removes or adds attributes on root element.\n   *\n   * @see module:engine/model/operation/attributeoperation~AttributeOperation\n   * @param {module:engine/model/rootelement~RootElement} root Root element to change.\n   * @param {String} key Key of an attribute to change or remove.\n   * @param {*} oldValue Old value of the attribute with given key or `null` if adding a new attribute.\n   * @param {*} newValue New value to set for the attribute. If `null`, then the operation just removes the attribute.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function RootAttributeOperation(root, key, oldValue, newValue, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, RootAttributeOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RootAttributeOperation).call(this, baseVersion));\n    /**\n     * Root element to change.\n     *\n     * @readonly\n     * @member {module:engine/model/rootelement~RootElement}\n     */\n\n    _this.root = root;\n    /**\n     * Key of an attribute to change or remove.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.key = key;\n    /**\n     * Old value of the attribute with given key or `null` if adding a new attribute.\n     *\n     * @readonly\n     * @member {*}\n     */\n\n    _this.oldValue = oldValue;\n    /**\n     * New value to set for the attribute. If `null`, then the operation just removes the attribute.\n     *\n     * @readonly\n     * @member {*}\n     */\n\n    _this.newValue = newValue;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(RootAttributeOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new RootAttributeOperation(this.root, this.key, this.oldValue, this.newValue, this.baseVersion);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      return new RootAttributeOperation(this.root, this.key, this.newValue, this.oldValue, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      if (this.root != this.root.root || this.root.is('documentFragment')) {\n        /**\n         * The element to change is not a root element.\n         *\n         * @error rootattribute-operation-not-a-root\n         * @param {module:engine/model/rootelement~RootElement} root\n         * @param {String} key\n         * @param {*} value\n         */\n        throw new CKEditorError('rootattribute-operation-not-a-root: The element to change is not a root element.', {\n          root: this.root,\n          key: this.key\n        });\n      }\n\n      if (this.oldValue !== null && this.root.getAttribute(this.key) !== this.oldValue) {\n        /**\n         * The attribute which should be removed does not exists for the given node.\n         *\n         * @error rootattribute-operation-wrong-old-value\n         * @param {module:engine/model/rootelement~RootElement} root\n         * @param {String} key\n         * @param {*} value\n         */\n        throw new CKEditorError('rootattribute-operation-wrong-old-value: Changed node has different attribute value than operation\\'s ' + 'old attribute value.', {\n          root: this.root,\n          key: this.key\n        });\n      }\n\n      if (this.oldValue === null && this.newValue !== null && this.root.hasAttribute(this.key)) {\n        /**\n         * The attribute with given key already exists for the given node.\n         *\n         * @error rootattribute-operation-attribute-exists\n         * @param {module:engine/model/rootelement~RootElement} root\n         * @param {String} key\n         */\n        throw new CKEditorError('rootattribute-operation-attribute-exists: The attribute with given key already exists.', {\n          root: this.root,\n          key: this.key\n        });\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      if (this.newValue !== null) {\n        this.root._setAttribute(this.key, this.newValue);\n      } else {\n        this.root._removeAttribute(this.key);\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(RootAttributeOperation.prototype), \"toJSON\", this).call(this);\n\n      json.root = this.root.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      if (this.oldValue === null) {\n        return 'addRootAttribute';\n      } else if (this.newValue === null) {\n        return 'removeRootAttribute';\n      } else {\n        return 'changeRootAttribute';\n      }\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates RootAttributeOperation object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation}\n     */\n    value: function fromJSON(json, document) {\n      if (!document.getRoot(json.root)) {\n        /**\n         * Cannot create RootAttributeOperation for document. Root with specified name does not exist.\n         *\n         * @error rootattributeoperation-fromjson-no-root\n         * @param {String} rootName\n         */\n        throw new CKEditorError('rootattribute-operation-fromjson-no-root: Cannot create RootAttributeOperation. Root with specified name does not exist.', {\n          rootName: json.root\n        });\n      }\n\n      return new RootAttributeOperation(document.getRoot(json.root), json.key, json.oldValue, json.newValue, json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'RootAttributeOperation';\n    }\n  }]);\n\n  return RootAttributeOperation;\n}(Operation);\n\nexport { RootAttributeOperation as default };","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function invariant(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n\n    throw error;\n  }\n};\n\nmodule.exports = invariant;","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n/** `Object#toString` result references. */\n\nvar objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to infer the `Object` constructor. */\n\nvar objectCtorString = funcToString.call(Object);\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\n\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n\n  var proto = getPrototype(value);\n\n  if (proto === null) {\n    return true;\n  }\n\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;","module.exports = function (originalModule) {\n  if (!originalModule.webpackPolyfill) {\n    var module = Object.create(originalModule); // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    Object.defineProperty(module, \"exports\", {\n      enumerable: true\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {\n    return;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nexport default freeGlobal;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n/** `Object#toString` result references. */\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;","import defineProperty from './_defineProperty.js';\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nexport default arrayPush;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nexport default isIndex;","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;","import setPrototypeOf from \"./setPrototypeOf\";\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/priorities\n */\n\n/**\n * String representing a priority value.\n *\n * @typedef {'highest'|'high'|'normal'|'low'|'lowest'} module:utils/priorities~PriorityString\n */\n\n/**\n * Provides group of constants to use instead of hardcoding numeric priority values.\n *\n * @namespace\n */\nvar priorities = {\n  /**\n   * Converts a string with priority name to it's numeric value. If `Number` is given, it just returns it.\n   *\n   * @static\n   * @param {module:utils/priorities~PriorityString|Number} priority Priority to convert.\n   * @returns {Number} Converted priority.\n   */\n  get: function get(priority) {\n    if (typeof priority != 'number') {\n      return this[priority] || this.normal;\n    } else {\n      return priority;\n    }\n  },\n  highest: 100000,\n  high: 1000,\n  normal: 0,\n  low: -1000,\n  lowest: -100000\n};\nexport default priorities;","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/objecttomap\n */\n\n/**\n * Transforms object to map.\n *\n *\t\tconst map = objectToMap( { 'foo': 1, 'bar': 2 } );\n *\t\tmap.get( 'foo' ); // 1\n *\n * @param {Object} obj Object to transform.\n * @returns {Map} Map created from object.\n */\nexport default function objectToMap(obj) {\n  var map = new Map();\n\n  for (var key in obj) {\n    map.set(key, obj[key]);\n  }\n\n  return map;\n}","import _regeneratorRuntime from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/documentselection\n */\nimport Selection from './selection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n/**\n * Class representing the document selection in the view.\n *\n * Its instance is available in {@link module:engine/view/document~Document#selection `Document#selection`}.\n *\n * It is similar to {@link module:engine/view/selection~Selection} but\n * it has a read-only API and can be modified only by the writer available in\n * the {@link module:engine/view/view~View#change `View#change()`} block\n * (so via {@link module:engine/view/downcastwriter~DowncastWriter#setSelection `DowncastWriter#setSelection()`}).\n */\n\nvar DocumentSelection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates new DocumentSelection instance.\n   *\n   * \t\t// Creates empty selection without ranges.\n   *\t\tconst selection = new DocumentSelection();\n   *\n   *\t\t// Creates selection at the given range.\n   *\t\tconst range = writer.createRange( start, end );\n   *\t\tconst selection = new DocumentSelection( range );\n   *\n   *\t\t// Creates selection at the given ranges\n   * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\n   *\t\tconst selection = new DocumentSelection( ranges );\n   *\n   *\t\t// Creates selection from the other selection.\n   *\t\tconst otherSelection = writer.createSelection();\n   *\t\tconst selection = new DocumentSelection( otherSelection );\n   *\n   * \t\t// Creates selection at the given position.\n   *\t\tconst position = writer.createPositionAt( root, offset );\n   *\t\tconst selection = new DocumentSelection( position );\n   *\n   *\t\t// Creates collapsed selection at the position of given item and offset.\n   *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n   *\t\tconst selection = new DocumentSelection( paragraph, offset );\n   *\n   *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n   *\t\t// first child of that element and ends after the last child of that element.\n   *\t\tconst selection = new DocumentSelection( paragraph, 'in' );\n   *\n   *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n   *\t\t// just after the item.\n   *\t\tconst selection = new DocumentSelection( paragraph, 'on' );\n   *\n   * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n   *\n   *\t\t// Creates backward selection.\n   *\t\tconst selection = new DocumentSelection( range, { backward: true } );\n   *\n   * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n   * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n   * represented in other way, for example by applying proper CSS class.\n   *\n   * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n   * (and be  properly handled by screen readers).\n   *\n   *\t\t// Creates fake selection with label.\n   *\t\tconst selection = new DocumentSelection( range, { fake: true, label: 'foo' } );\n   *\n   * @param {module:engine/view/selection~Selectable} [selectable=null]\n   * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n   * @param {Object} [options]\n   * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n   * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n   * @param {String} [options.label] Label for the fake selection.\n   */\n  function DocumentSelection() {\n    var selectable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var placeOrOffset = arguments.length > 1 ? arguments[1] : undefined;\n    var options = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, DocumentSelection);\n\n    /**\n     * Selection is used internally (`DocumentSelection` is a proxy to that selection).\n     *\n     * @private\n     * @member {module:engine/view/selection~Selection}\n     */\n    this._selection = new Selection(); // Delegate change event to be fired on DocumentSelection instance.\n\n    this._selection.delegate('change').to(this); // Set selection data.\n\n\n    this._selection.setTo(selectable, placeOrOffset, options);\n  }\n  /**\n   * Returns true if selection instance is marked as `fake`.\n   *\n   * @see #_setTo\n   * @returns {Boolean}\n   */\n\n\n  _createClass(DocumentSelection, [{\n    key: \"getRanges\",\n\n    /**\n     * Returns an iterable that contains copies of all ranges added to the selection.\n     *\n     * @returns {Iterable.<module:engine/view/range~Range>}\n     */\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getRanges() {\n      return _regeneratorRuntime.wrap(function getRanges$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.delegateYield(this._selection.getRanges(), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getRanges, this);\n    })\n    /**\n     * Returns copy of the first range in the selection. First range is the one which\n     * {@link module:engine/view/range~Range#start start} position {@link module:engine/view/position~Position#isBefore is before} start\n     * position of all other ranges (not to confuse with the first range added to the selection).\n     * Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/range~Range|null}\n     */\n\n  }, {\n    key: \"getFirstRange\",\n    value: function getFirstRange() {\n      return this._selection.getFirstRange();\n    }\n    /**\n     * Returns copy of the last range in the selection. Last range is the one which {@link module:engine/view/range~Range#end end}\n     * position {@link module:engine/view/position~Position#isAfter is after} end position of all other ranges (not to confuse\n     * with the last range added to the selection). Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/range~Range|null}\n     */\n\n  }, {\n    key: \"getLastRange\",\n    value: function getLastRange() {\n      return this._selection.getLastRange();\n    }\n    /**\n     * Returns copy of the first position in the selection. First position is the position that\n     * {@link module:engine/view/position~Position#isBefore is before} any other position in the selection ranges.\n     * Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/position~Position|null}\n     */\n\n  }, {\n    key: \"getFirstPosition\",\n    value: function getFirstPosition() {\n      return this._selection.getFirstPosition();\n    }\n    /**\n     * Returns copy of the last position in the selection. Last position is the position that\n     * {@link module:engine/view/position~Position#isAfter is after} any other position in the selection ranges.\n     * Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/position~Position|null}\n     */\n\n  }, {\n    key: \"getLastPosition\",\n    value: function getLastPosition() {\n      return this._selection.getLastPosition();\n    }\n    /**\n     * Returns the selected element. {@link module:engine/view/element~Element Element} is considered as selected if there is only\n     * one range in the selection, and that range contains exactly one element.\n     * Returns `null` if there is no selected element.\n     *\n     * @returns {module:engine/view/element~Element|null}\n     */\n\n  }, {\n    key: \"getSelectedElement\",\n    value: function getSelectedElement() {\n      return this._selection.getSelectedElement();\n    }\n    /**\n     * Checks whether, this selection is equal to given selection. Selections are equal if they have same directions,\n     * same number of ranges and all ranges from one selection equal to a range from other selection.\n     *\n     * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n     * Selection to compare with.\n     * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherSelection) {\n      return this._selection.isEqual(otherSelection);\n    }\n    /**\n     * Checks whether this selection is similar to given selection. Selections are similar if they have same directions, same\n     * number of ranges, and all {@link module:engine/view/range~Range#getTrimmed trimmed} ranges from one selection are\n     * equal to any trimmed range from other selection.\n     *\n     * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n     * Selection to compare with.\n     * @returns {Boolean} `true` if selections are similar, `false` otherwise.\n     */\n\n  }, {\n    key: \"isSimilar\",\n    value: function isSimilar(otherSelection) {\n      return this._selection.isSimilar(otherSelection);\n    }\n    /**\n     * Checks whether object is of given type following the convention set by\n     * {@link module:engine/view/node~Node#is `Node#is()`}.\n     *\n     *\t\tconst selection = new DocumentSelection( ... );\n     *\n     *\t\tselection.is( 'selection' ); // true\n     *\t\tselection.is( 'documentSelection' ); // true\n     *\t\tselection.is( 'node' ); // false\n     *\t\tselection.is( 'element' ); // false\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"is\",\n    value: function is(type) {\n      return type == 'selection' || type == 'documentSelection';\n    }\n    /**\n     * Sets this selection's ranges and direction to the specified location based on the given\n     * {@link module:engine/view/selection~Selectable selectable}.\n     *\n     *\t\t// Sets selection to the given range.\n     *\t\tconst range = writer.createRange( start, end );\n     *\t\tdocumentSelection._setTo( range );\n     *\n     *\t\t// Sets selection to given ranges.\n     * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\n     *\t\tdocumentSelection._setTo( range );\n     *\n     *\t\t// Sets selection to the other selection.\n     *\t\tconst otherSelection = writer.createSelection();\n     *\t\tdocumentSelection._setTo( otherSelection );\n     *\n     * \t\t// Sets collapsed selection at the given position.\n     *\t\tconst position = writer.createPositionAt( root, offset );\n     *\t\tdocumentSelection._setTo( position );\n     *\n     * \t\t// Sets collapsed selection at the position of given item and offset.\n     *\t\tdocumentSelection._setTo( paragraph, offset );\n     *\n     * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     *\t\tdocumentSelection._setTo( paragraph, 'in' );\n     *\n     * Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n     *\n     *\t\tdocumentSelection._setTo( paragraph, 'on' );\n     *\n     * \t\t// Clears selection. Removes all ranges.\n     *\t\tdocumentSelection._setTo( null );\n     *\n     * `Selection#_setTo()` method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n     *\n     *\t\t// Sets selection as backward.\n     *\t\tdocumentSelection._setTo( range, { backward: true } );\n     *\n     * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n     * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n     * represented in other way, for example by applying proper CSS class.\n     *\n     * Additionally fake's selection label can be provided. It will be used to des cribe fake selection in DOM\n     * (and be  properly handled by screen readers).\n     *\n     *\t\t// Creates fake selection with label.\n     *\t\tdocumentSelection._setTo( range, { fake: true, label: 'foo' } );\n     *\n     * @protected\n     * @fires change\n     * @param {module:engine/view/selection~Selectable} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n     * @param {String} [options.label] Label for the fake selection.\n     */\n\n  }, {\n    key: \"_setTo\",\n    value: function _setTo(selectable, placeOrOffset, options) {\n      this._selection.setTo(selectable, placeOrOffset, options);\n    }\n    /**\n     * Moves {@link #focus} to the specified location.\n     *\n     * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n     * parameters.\n     *\n     * @protected\n     * @fires change\n     * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/view/item~Item view item}.\n     */\n\n  }, {\n    key: \"_setFocus\",\n    value: function _setFocus(itemOrPosition, offset) {\n      this._selection.setFocus(itemOrPosition, offset);\n    }\n    /**\n     * Fired whenever selection ranges are changed through {@link ~DocumentSelection Selection API}.\n     *\n     * @event change\n     */\n\n  }, {\n    key: \"isFake\",\n    get: function get() {\n      return this._selection.isFake;\n    }\n    /**\n     * Returns fake selection label.\n     *\n     * @see #_setTo\n     * @returns {String}\n     */\n\n  }, {\n    key: \"fakeSelectionLabel\",\n    get: function get() {\n      return this._selection.fakeSelectionLabel;\n    }\n    /**\n     * Selection anchor. Anchor may be described as a position where the selection starts. Together with\n     * {@link #focus focus} they define the direction of selection, which is important\n     * when expanding/shrinking selection. Anchor is always the start or end of the most recent added range.\n     * It may be a bit unintuitive when there are multiple ranges in selection.\n     *\n     * @see #focus\n     * @type {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"anchor\",\n    get: function get() {\n      return this._selection.anchor;\n    }\n    /**\n     * Selection focus. Focus is a position where the selection ends.\n     *\n     * @see #anchor\n     * @type {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"focus\",\n    get: function get() {\n      return this._selection.focus;\n    }\n    /**\n     * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n     * collapsed.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      return this._selection.isCollapsed;\n    }\n    /**\n     * Returns number of ranges in selection.\n     *\n     * @type {Number}\n     */\n\n  }, {\n    key: \"rangeCount\",\n    get: function get() {\n      return this._selection.rangeCount;\n    }\n    /**\n     * Specifies whether the {@link #focus} precedes {@link #anchor}.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isBackward\",\n    get: function get() {\n      return this._selection.isBackward;\n    }\n    /**\n     * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this selection, or `null`\n     * if the selection is not inside an editable element.\n     *\n     * @type {module:engine/view/editableelement~EditableElement|null}\n     */\n\n  }, {\n    key: \"editableElement\",\n    get: function get() {\n      return this._selection.editableElement;\n    }\n    /**\n     * Used for the compatibility with the {@link module:engine/view/selection~Selection#isEqual} method.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_ranges\",\n    get: function get() {\n      return this._selection._ranges;\n    }\n  }]);\n\n  return DocumentSelection;\n}();\n\nexport { DocumentSelection as default };\nmix(DocumentSelection, EmitterMixin);","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/fastdiff\n */\n\n/**\n * Finds positions of the first and last change in the given string/array and generates a set of changes:\n *\n *\t\tfastDiff( '12a', '12xyza' );\n *\t\t// [ { index: 2, type: 'insert', values: [ 'x', 'y', 'z' ] } ]\n *\n *\t\tfastDiff( '12a', '12aa' );\n *\t\t// [ { index: 3, type: 'insert', values: [ 'a' ] } ]\n *\n *\t\tfastDiff( '12xyza', '12a' );\n *\t\t// [ { index: 2, type: 'delete', howMany: 3 } ]\n *\n *\t\tfastDiff( [ '1', '2', 'a', 'a' ], [ '1', '2', 'a' ] );\n *\t\t// [ { index: 3, type: 'delete', howMany: 1 } ]\n *\n *\t\tfastDiff( [ '1', '2', 'a', 'b', 'c', '3' ], [ '2', 'a', 'b' ] );\n *\t\t// [ { index: 0, type: 'insert', values: [ '2', 'a', 'b' ] }, { index: 3, type: 'delete', howMany: 6 } ]\n *\n * Passed arrays can contain any type of data, however to compare them correctly custom comparator function\n * should be passed as a third parameter:\n *\n *\t\tfastDiff( [ { value: 1 }, { value: 2 } ], [ { value: 1 }, { value: 3 } ], ( a, b ) => {\n *\t\t\treturn a.value === b.value;\n *\t\t} );\n *\t\t// [ { index: 1, type: 'insert', values: [ { value: 3 } ] }, { index: 2, type: 'delete', howMany: 1 } ]\n *\n * The resulted set of changes can be applied to the input in order to transform it into the output, for example:\n *\n *\t\tlet input = '12abc3';\n *\t\tconst output = '2ab';\n *\t\tconst changes = fastDiff( input, output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput = input.substring( 0, change.index ) + change.values.join( '' ) + input.substring( change.index );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput = input.substring( 0, change.index ) + input.substring( change.index + change.howMany );\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// input equals output now\n *\n * or in case of arrays:\n *\n *\t\tlet input = [ '1', '2', 'a', 'b', 'c', '3' ];\n *\t\tconst output = [ '2', 'a', 'b' ];\n *\t\tconst changes = fastDiff( input, output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput = input.slice( 0, change.index ).concat( change.values, input.slice( change.index ) );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput = input.slice( 0, change.index ).concat( input.slice( change.index + change.howMany ) );\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// input equals output now\n *\n * By passing `true` as the fourth parameter (`atomicChanges`) the output of this function will become compatible with\n * the {@link module:utils/diff~diff `diff()`} function:\n *\n *\t\tfastDiff( '12a', '12xyza' );\n *\t\t// [ 'equal', 'equal', 'insert', 'insert', 'insert', 'equal' ]\n *\n * The default output format of this function is compatible with the output format of\n * {@link module:utils/difftochanges~diffToChanges `diffToChanges()`}. The `diffToChanges()` input format is, in turn,\n * compatible with the output of {@link module:utils/diff~diff `diff()`}:\n *\n *\t\tconst a = '1234';\n *\t\tconst b = '12xyz34';\n *\n *\t\t// Both calls will return the same results (grouped changes format).\n *\t\tfastDiff( a, b );\n *\t\tdiffToChanges( diff( a, b ) );\n *\n *\t\t// Again, both calls will return the same results (atomic changes format).\n *\t\tfastDiff( a, b, null, true );\n *\t\tdiff( a, b );\n *\n *\n * @param {Array|String} a Input array or string.\n * @param {Array|String} b Input array or string.\n * @param {Function} [cmp] Optional function used to compare array values, by default `===` (strict equal operator) is used.\n * @param {Boolean} [atomicChanges=false] Whether an array of `inset|delete|equal` operations should\n * be returned instead of changes set. This makes this function compatible with {@link module:utils/diff~diff `diff()`}.\n * @returns {Array} Array of changes.\n */\nexport default function fastDiff(a, b, cmp) {\n  var atomicChanges = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  // Set the comparator function.\n  cmp = cmp || function (a, b) {\n    return a === b;\n  }; // Transform text or any iterable into arrays for easier, consistent processing.\n\n\n  if (!Array.isArray(a)) {\n    a = Array.from(a);\n  }\n\n  if (!Array.isArray(b)) {\n    b = Array.from(b);\n  } // Find first and last change.\n\n\n  var changeIndexes = findChangeBoundaryIndexes(a, b, cmp); // Transform into changes array.\n\n  return atomicChanges ? changeIndexesToAtomicChanges(changeIndexes, b.length) : changeIndexesToChanges(b, changeIndexes);\n} // Finds position of the first and last change in the given arrays. For example:\n//\n//\t\tconst indexes = findChangeBoundaryIndexes( [ '1', '2', '3', '4' ], [ '1', '3', '4', '2', '4' ] );\n//\t\tconsole.log( indexes ); // { firstIndex: 1, lastIndexOld: 3, lastIndexNew: 4 }\n//\n// The above indexes means that in the first array the modified part is `1[23]4` and in the second array it is `1[342]4`.\n// Based on such indexes, array with `insert`/`delete` operations which allows transforming first value into the second one\n// can be generated.\n//\n// @param {Array} arr1\n// @param {Array} arr2\n// @param {Function} cmp Comparator function.\n// @returns {Object}\n// @returns {Number} return.firstIndex Index of the first change in both values (always the same for both).\n// @returns {Number} result.lastIndexOld Index of the last common value in `arr1`.\n// @returns {Number} result.lastIndexNew Index of the last common value in `arr2`.\n\nfunction findChangeBoundaryIndexes(arr1, arr2, cmp) {\n  // Find the first difference between passed values.\n  var firstIndex = findFirstDifferenceIndex(arr1, arr2, cmp); // If arrays are equal return -1 indexes object.\n\n  if (firstIndex === -1) {\n    return {\n      firstIndex: -1,\n      lastIndexOld: -1,\n      lastIndexNew: -1\n    };\n  } // Remove the common part of each value and reverse them to make it simpler to find the last difference between them.\n\n\n  var oldArrayReversed = cutAndReverse(arr1, firstIndex);\n  var newArrayReversed = cutAndReverse(arr2, firstIndex); // Find the first difference between reversed values.\n  // It should be treated as \"how many elements from the end the last difference occurred\".\n  //\n  // For example:\n  //\n  // \t\t\t\tinitial\t->\tafter cut\t-> reversed:\n  // oldValue:\t'321ba'\t->\t'21ba'\t\t-> 'ab12'\n  // newValue:\t'31xba'\t->\t'1xba'\t\t-> 'abx1'\n  // lastIndex:\t\t\t\t\t\t\t-> 2\n  //\n  // So the last change occurred two characters from the end of the arrays.\n\n  var lastIndex = findFirstDifferenceIndex(oldArrayReversed, newArrayReversed, cmp); // Use `lastIndex` to calculate proper offset, starting from the beginning (`lastIndex` kind of starts from the end).\n\n  var lastIndexOld = arr1.length - lastIndex;\n  var lastIndexNew = arr2.length - lastIndex;\n  return {\n    firstIndex: firstIndex,\n    lastIndexOld: lastIndexOld,\n    lastIndexNew: lastIndexNew\n  };\n} // Returns a first index on which given arrays differ. If both arrays are the same, -1 is returned.\n//\n// @param {Array} arr1\n// @param {Array} arr2\n// @param {Function} cmp Comparator function.\n// @returns {Number}\n\n\nfunction findFirstDifferenceIndex(arr1, arr2, cmp) {\n  for (var i = 0; i < Math.max(arr1.length, arr2.length); i++) {\n    if (arr1[i] === undefined || arr2[i] === undefined || !cmp(arr1[i], arr2[i])) {\n      return i;\n    }\n  }\n\n  return -1; // Return -1 if arrays are equal.\n} // Returns a copy of the given array with `howMany` elements removed starting from the beginning and in reversed order.\n//\n// @param {Array} arr Array to be processed.\n// @param {Number} howMany How many elements from array beginning to remove.\n// @returns {Array} Shortened and reversed array.\n\n\nfunction cutAndReverse(arr, howMany) {\n  return arr.slice(howMany).reverse();\n} // Generates changes array based on change indexes from `findChangeBoundaryIndexes` function. This function will\n// generate array with 0 (no changes), 1 (deletion or insertion) or 2 records (insertion and deletion).\n//\n// @param {Array} newArray New array for which change indexes were calculated.\n// @param {Object} changeIndexes Change indexes object from `findChangeBoundaryIndexes` function.\n// @returns {Array.<Object>} Array of changes compatible with {@link module:utils/difftochanges~diffToChanges} format.\n\n\nfunction changeIndexesToChanges(newArray, changeIndexes) {\n  var result = [];\n  var firstIndex = changeIndexes.firstIndex,\n      lastIndexOld = changeIndexes.lastIndexOld,\n      lastIndexNew = changeIndexes.lastIndexNew; // Order operations as 'insert', 'delete' array to keep compatibility with {@link module:utils/difftochanges~diffToChanges}\n  // in most cases. However, 'diffToChanges' does not stick to any order so in some cases\n  // (for example replacing '12345' with 'abcd') it will generate 'delete', 'insert' order.\n\n  if (lastIndexNew - firstIndex > 0) {\n    result.push({\n      index: firstIndex,\n      type: 'insert',\n      values: newArray.slice(firstIndex, lastIndexNew)\n    });\n  }\n\n  if (lastIndexOld - firstIndex > 0) {\n    result.push({\n      index: firstIndex + (lastIndexNew - firstIndex),\n      // Increase index of what was inserted.\n      type: 'delete',\n      howMany: lastIndexOld - firstIndex\n    });\n  }\n\n  return result;\n} // Generates array with set `equal|insert|delete` operations based on change indexes from `findChangeBoundaryIndexes` function.\n//\n// @param {Object} changeIndexes Change indexes object from `findChangeBoundaryIndexes` function.\n// @param {Number} newLength Length of the new array on which `findChangeBoundaryIndexes` calculated change indexes.\n// @returns {Array.<String>} Array of changes compatible with {@link module:utils/diff~diff} format.\n\n\nfunction changeIndexesToAtomicChanges(changeIndexes, newLength) {\n  var firstIndex = changeIndexes.firstIndex,\n      lastIndexOld = changeIndexes.lastIndexOld,\n      lastIndexNew = changeIndexes.lastIndexNew; // No changes.\n\n  if (firstIndex === -1) {\n    return Array(newLength).fill('equal');\n  }\n\n  var result = [];\n\n  if (firstIndex > 0) {\n    result = result.concat(Array(firstIndex).fill('equal'));\n  }\n\n  if (lastIndexNew - firstIndex > 0) {\n    result = result.concat(Array(lastIndexNew - firstIndex).fill('insert'));\n  }\n\n  if (lastIndexOld - firstIndex > 0) {\n    result = result.concat(Array(lastIndexOld - firstIndex).fill('delete'));\n  }\n\n  if (lastIndexNew < newLength) {\n    result = result.concat(Array(newLength - lastIndexNew).fill('equal'));\n  }\n\n  return result;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/getborderwidths\n */\n\n/**\n * Returns an object containing CSS border widths of a specified HTML element.\n *\n * @param {HTMLElement} element An element which has CSS borders.\n * @returns {Object} An object containing `top`, `left`, `right` and `bottom` properties\n * with numerical values of the `border-[top,left,right,bottom]-width` CSS styles.\n */\nexport default function getBorderWidths(element) {\n  // Call getComputedStyle on the window the element document belongs to.\n  var style = element.ownerDocument.defaultView.getComputedStyle(element);\n  return {\n    top: parseInt(style.borderTopWidth, 10),\n    right: parseInt(style.borderRightWidth, 10),\n    bottom: parseInt(style.borderBottomWidth, 10),\n    left: parseInt(style.borderLeftWidth, 10)\n  };\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/viewcollection\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * Collects {@link module:ui/view~View} instances.\n *\n *\t\tconst parentView = new ParentView( locale );\n *\t\tconst collection = new ViewCollection( locale );\n *\n *\t\tcollection.setParent( parentView.element );\n *\n *\t\tconst viewA = new ChildView( locale );\n *\t\tconst viewB = new ChildView( locale );\n *\n * View collection renders and manages view {@link module:ui/view~View#element elements}:\n *\n *\t\tcollection.add( viewA );\n *\t\tcollection.add( viewB );\n *\n *\t\tconsole.log( parentView.element.firsChild ); // -> viewA.element\n *\t\tconsole.log( parentView.element.lastChild ); // -> viewB.element\n *\n * It {@link module:ui/viewcollection~ViewCollection#delegate propagates} DOM events too:\n *\n *\t\t// Delegate #click and #keydown events from viewA and viewB to the parentView.\n *\t\tcollection.delegate( 'click' ).to( parentView );\n *\n *\t\tparentView.on( 'click', ( evt ) => {\n *\t\t\tconsole.log( `${ evt.source } has been clicked.` );\n *\t\t} );\n *\n *\t\t// This event will be delegated to the parentView.\n *\t\tviewB.fire( 'click' );\n *\n * **Note**: A view collection can be used directly in the {@link module:ui/template~TemplateDefinition definition}\n * of a {@link module:ui/template~Template template}.\n *\n * @extends module:utils/collection~Collection\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar ViewCollection =\n/*#__PURE__*/\nfunction (_Collection) {\n  _inherits(ViewCollection, _Collection);\n\n  /**\n   * Creates a new instance of the {@link module:ui/viewcollection~ViewCollection}.\n   *\n   * @param {module:utils/locale~Locale} [locale] The {@link module:core/editor/editor~Editor editor's locale} instance.\n   */\n  function ViewCollection(locale) {\n    var _this;\n\n    _classCallCheck(this, ViewCollection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewCollection).call(this, {\n      // An #id Number attribute should be legal and not break the `ViewCollection` instance.\n      // https://github.com/ckeditor/ckeditor5-ui/issues/93\n      idProperty: 'viewUid'\n    })); // Handle {@link module:ui/view~View#element} in DOM when a new view is added to the collection.\n\n    _this.on('add', function (evt, view, index) {\n      if (!view.isRendered) {\n        view.render();\n      }\n\n      if (view.element && _this._parentElement) {\n        _this._parentElement.insertBefore(view.element, _this._parentElement.children[index]);\n      }\n    }); // Handle {@link module:ui/view~View#element} in DOM when a view is removed from the collection.\n\n\n    _this.on('remove', function (evt, view) {\n      if (view.element && _this._parentElement) {\n        view.element.remove();\n      }\n    });\n    /**\n     * The {@link module:core/editor/editor~Editor#locale editor's locale} instance.\n     * See the view {@link module:ui/view~View#locale locale} property.\n     *\n     * @member {module:utils/locale~Locale}\n     */\n\n\n    _this.locale = locale;\n    /**\n     * A parent element within which child views are rendered and managed in DOM.\n     *\n     * @protected\n     * @member {HTMLElement}\n     */\n\n    _this._parentElement = null;\n    return _this;\n  }\n  /**\n   * Destroys the view collection along with child views.\n   * See the view {@link module:ui/view~View#destroy} method.\n   */\n\n\n  _createClass(ViewCollection, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.map(function (view) {\n        return view.destroy();\n      });\n    }\n    /**\n     * Sets the parent HTML element of this collection. When parent is set, {@link #add adding} and\n     * {@link #remove removing} views in the collection synchronizes their\n     * {@link module:ui/view~View#element elements} in the parent element.\n     *\n     * @param {HTMLElement} element A new parent element.\n     */\n\n  }, {\n    key: \"setParent\",\n    value: function setParent(elementOrDocFragment) {\n      this._parentElement = elementOrDocFragment;\n    }\n    /**\n     * Delegates selected events coming from within views in the collection to any\n     * {@link module:utils/emittermixin~Emitter}.\n     *\n     * For the following views and collection:\n     *\n     *\t\tconst viewA = new View();\n     *\t\tconst viewB = new View();\n     *\t\tconst viewC = new View();\n     *\n     *\t\tconst views = parentView.createCollection();\n     *\n     *\t\tviews.delegate( 'eventX' ).to( viewB );\n     *\t\tviews.delegate( 'eventX', 'eventY' ).to( viewC );\n     *\n     *\t\tviews.add( viewA );\n     *\n     * the `eventX` is delegated (fired by) `viewB` and `viewC` along with `customData`:\n     *\n     *\t\tviewA.fire( 'eventX', customData );\n     *\n     * and `eventY` is delegated (fired by) `viewC` along with `customData`:\n     *\n     *\t\tviewA.fire( 'eventY', customData );\n     *\n     * See {@link module:utils/emittermixin~EmitterMixin#delegate}.\n     *\n     * @param {...String} events {@link module:ui/view~View} event names to be delegated to another\n     * {@link module:utils/emittermixin~Emitter}.\n     * @returns {Object}\n     * @returns {Function} return.to A function which accepts the destination of\n     * {@link module:utils/emittermixin~EmitterMixin#delegate delegated} events.\n     */\n\n  }, {\n    key: \"delegate\",\n    value: function delegate() {\n      var _this2 = this;\n\n      for (var _len = arguments.length, events = new Array(_len), _key = 0; _key < _len; _key++) {\n        events[_key] = arguments[_key];\n      }\n\n      if (!events.length || !isStringArray(events)) {\n        /**\n         * All event names must be strings.\n         *\n         * @error ui-viewcollection-delegate-wrong-events\n         */\n        throw new CKEditorError('ui-viewcollection-delegate-wrong-events: All event names must be strings.');\n      }\n\n      return {\n        /**\n         * Selects destination for {@link module:utils/emittermixin~EmitterMixin#delegate} events.\n         *\n         * @memberOf module:ui/viewcollection~ViewCollection#delegate\n         * @function module:ui/viewcollection~ViewCollection#delegate.to\n         * @param {module:utils/emittermixin~EmitterMixin} dest An `EmitterMixin` instance which is\n         * the destination for delegated events.\n         */\n        to: function to(dest) {\n          // Activate delegating on existing views in this collection.\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _this2[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var view = _step.value;\n\n              for (var _i3 = 0, _events3 = events; _i3 < _events3.length; _i3++) {\n                var evtName = _events3[_i3];\n                view.delegate(evtName).to(dest);\n              }\n            } // Activate delegating on future views in this collection.\n\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          _this2.on('add', function (evt, view) {\n            for (var _i = 0, _events = events; _i < _events.length; _i++) {\n              var evtName = _events[_i];\n              view.delegate(evtName).to(dest);\n            }\n          }); // Deactivate delegating when view is removed from this collection.\n\n\n          _this2.on('remove', function (evt, view) {\n            for (var _i2 = 0, _events2 = events; _i2 < _events2.length; _i2++) {\n              var evtName = _events2[_i2];\n              view.stopDelegating(evtName, dest);\n            }\n          });\n        }\n      };\n    }\n    /**\n     * Removes a child view from the collection. If the {@link #setParent parent element} of the\n     * collection has been set, the {@link module:ui/view~View#element element} of the view is also removed\n     * in DOM, reflecting the order of the collection.\n     *\n     * See the {@link #add} method.\n     *\n     * @method #remove\n     * @param {module:ui/view~View|Number|String} subject The view to remove, its id or index in the collection.\n     * @returns {Object} The removed view.\n     */\n\n  }]);\n\n  return ViewCollection;\n}(Collection);\n\nexport { ViewCollection as default };\nmix(Collection, ObservableMixin); // Check if all entries of the array are of `String` type.\n//\n// @private\n// @param {Array} arr An array to be checked.\n// @returns {Boolean}\n\nfunction isStringArray(arr) {\n  return arr.every(function (a) {\n    return typeof a == 'string';\n  });\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/focuscycler\n */\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\n/**\n * A utility class that helps cycling over focusable {@link module:ui/view~View views} in a\n * {@link module:ui/viewcollection~ViewCollection} when the focus is tracked by the\n * {@link module:utils/focustracker~FocusTracker} instance. It helps implementing keyboard\n * navigation in HTML forms, toolbars, lists and the like.\n *\n * To work properly it requires:\n * * a collection of focusable (HTML `tabindex` attribute) views that implement the `focus()` method,\n * * an associated focus tracker to determine which view is focused.\n *\n * A simple cycler setup can look like this:\n *\n *\t\tconst focusables = new ViewCollection();\n *\t\tconst focusTracker = new FocusTracker();\n *\n *\t\t// Add focusable views to the focus tracker.\n *\t\tfocusTracker.add( ... );\n *\n * Then, the cycler can be used manually:\n *\n *\t\tconst cycler = new FocusCycler( { focusables, focusTracker } );\n *\n *\t\t// Will focus the first focusable view in #focusables.\n *\t\tcycler.focusFirst();\n *\n *\t\t// Will log the next focusable item in #focusables.\n *\t\tconsole.log( cycler.next );\n *\n * Alternatively, it can work side by side with the {@link module:utils/keystrokehandler~KeystrokeHandler}:\n *\n *\t\tconst keystrokeHandler = new KeystrokeHandler();\n *\n *\t\t// Activate the keystroke handler.\n *\t\tkeystrokeHandler.listenTo( sourceOfEvents );\n *\n *\t\tconst cycler = new FocusCycler( {\n *\t\t\tfocusables, focusTracker, keystrokeHandler,\n *\t\t\tactions: {\n *\t\t\t\t// When arrowup of arrowleft is detected by the #keystrokeHandler,\n *\t\t\t\t// focusPrevious() will be called on the cycler.\n *\t\t\t\tfocusPrevious: [ 'arrowup', 'arrowleft' ],\n *\t\t\t}\n *\t\t} );\n */\n\nvar FocusCycler =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the focus cycler utility.\n   *\n   * @param {Object} options Configuration options.\n   * @param {module:utils/collection~Collection|Object} options.focusables\n   * @param {module:utils/focustracker~FocusTracker} options.focusTracker\n   * @param {module:utils/keystrokehandler~KeystrokeHandler} [options.keystrokeHandler]\n   * @param {Object} [options.actions]\n   */\n  function FocusCycler(options) {\n    var _this = this;\n\n    _classCallCheck(this, FocusCycler);\n\n    Object.assign(this, options);\n    /**\n     * A {@link module:ui/view~View view} collection that the cycler operates on.\n     *\n     * @readonly\n     * @member {module:utils/collection~Collection} #focusables\n     */\n\n    /**\n     * A focus tracker instance that the cycler uses to determine the current focus\n     * state in {@link #focusables}.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker} #focusTracker\n     */\n\n    /**\n     * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}\n     * which can respond to certain keystrokes and cycle the focus.\n     *\n     * @readonly\n     * @member {module:utils/keystrokehandler~KeystrokeHandler} #keystrokeHandler\n     */\n\n    /**\n     * Actions that the cycler can take when a keystroke is pressed. Requires\n     * `options.keystrokeHandler` to be passed and working. When an action is\n     * performed, `preventDefault` and `stopPropagation` will be called on the event\n     * the keystroke fired in the DOM.\n     *\n     *\t\tactions: {\n     *\t\t\t// Will call #focusPrevious() when arrowleft or arrowup is pressed.\n     *\t\t\tfocusPrevious: [ 'arrowleft', 'arrowup' ],\n     *\n     *\t\t\t// Will call #focusNext() when arrowdown is pressed.\n     *\t\t\tfocusNext: 'arrowdown'\n     *\t\t}\n     *\n     * @readonly\n     * @member {Object} #actions\n     */\n\n    if (options.actions && options.keystrokeHandler) {\n      var _loop = function _loop(methodName) {\n        var actions = options.actions[methodName];\n\n        if (typeof actions == 'string') {\n          actions = [actions];\n        }\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = actions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var keystroke = _step.value;\n            options.keystrokeHandler.set(keystroke, function (data, cancel) {\n              _this[methodName]();\n\n              cancel();\n            });\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      };\n\n      for (var methodName in options.actions) {\n        _loop(methodName);\n      }\n    }\n  }\n  /**\n   * Returns the first focusable view in {@link #focusables}.\n   * Returns `null` if there is none.\n   *\n   * @readonly\n   * @member {module:ui/view~View|null} #first\n   */\n\n\n  _createClass(FocusCycler, [{\n    key: \"focusFirst\",\n\n    /**\n     * Focuses the {@link #first} item in {@link #focusables}.\n     */\n    value: function focusFirst() {\n      this._focus(this.first);\n    }\n    /**\n     * Focuses the {@link #last} item in {@link #focusables}.\n     */\n\n  }, {\n    key: \"focusLast\",\n    value: function focusLast() {\n      this._focus(this.last);\n    }\n    /**\n     * Focuses the {@link #next} item in {@link #focusables}.\n     */\n\n  }, {\n    key: \"focusNext\",\n    value: function focusNext() {\n      this._focus(this.next);\n    }\n    /**\n     * Focuses the {@link #previous} item in {@link #focusables}.\n     */\n\n  }, {\n    key: \"focusPrevious\",\n    value: function focusPrevious() {\n      this._focus(this.previous);\n    }\n    /**\n     * Focuses the given view if it exists.\n     *\n     * @protected\n     * @param {module:ui/view~View} view\n     */\n\n  }, {\n    key: \"_focus\",\n    value: function _focus(view) {\n      if (view) {\n        view.focus();\n      }\n    }\n    /**\n     * Returns the next or previous focusable view in {@link #focusables} with respect\n     * to {@link #current}.\n     *\n     * @protected\n     * @param {Number} step Either `1` for checking forward from {@link #current} or\n     * `-1` for checking backwards.\n     * @returns {module:ui/view~View|null}\n     */\n\n  }, {\n    key: \"_getFocusableItem\",\n    value: function _getFocusableItem(step) {\n      // Cache for speed.\n      var current = this.current;\n      var collectionLength = this.focusables.length;\n\n      if (!collectionLength) {\n        return null;\n      } // Start from the beginning if no view is focused.\n      // https://github.com/ckeditor/ckeditor5-ui/issues/206\n\n\n      if (current === null) {\n        return this[step === 1 ? 'first' : 'last'];\n      } // Cycle in both directions.\n\n\n      var index = (current + collectionLength + step) % collectionLength;\n\n      do {\n        var view = this.focusables.get(index); // TODO: Check if view is visible.\n\n        if (isFocusable(view)) {\n          return view;\n        } // Cycle in both directions.\n\n\n        index = (index + collectionLength + step) % collectionLength;\n      } while (index !== current);\n\n      return null;\n    }\n  }, {\n    key: \"first\",\n    get: function get() {\n      return this.focusables.find(isFocusable) || null;\n    }\n    /**\n     * Returns the last focusable view in {@link #focusables}.\n     * Returns `null` if there is none.\n     *\n     * @readonly\n     * @member {module:ui/view~View|null} #last\n     */\n\n  }, {\n    key: \"last\",\n    get: function get() {\n      return this.focusables.filter(isFocusable).slice(-1)[0] || null;\n    }\n    /**\n     * Returns the next focusable view in {@link #focusables} based on {@link #current}.\n     * Returns `null` if there is none.\n     *\n     * @readonly\n     * @member {module:ui/view~View|null} #next\n     */\n\n  }, {\n    key: \"next\",\n    get: function get() {\n      return this._getFocusableItem(1);\n    }\n    /**\n     * Returns the previous focusable view in {@link #focusables} based on {@link #current}.\n     * Returns `null` if there is none.\n     *\n     * @readonly\n     * @member {module:ui/view~View|null} #previous\n     */\n\n  }, {\n    key: \"previous\",\n    get: function get() {\n      return this._getFocusableItem(-1);\n    }\n    /**\n     * An index of the view in the {@link #focusables} which is focused according\n     * to {@link #focusTracker}. Returns `null` when there is no such view.\n     *\n     * @readonly\n     * @member {Number|null} #current\n     */\n\n  }, {\n    key: \"current\",\n    get: function get() {\n      var _this2 = this;\n\n      var index = null; // There's no focused view in the focusables.\n\n      if (this.focusTracker.focusedElement === null) {\n        return null;\n      }\n\n      this.focusables.find(function (view, viewIndex) {\n        var focused = view.element === _this2.focusTracker.focusedElement;\n\n        if (focused) {\n          index = viewIndex;\n        }\n\n        return focused;\n      });\n      return index;\n    }\n  }]);\n\n  return FocusCycler;\n}(); // Checks whether a view is focusable.\n//\n// @private\n// @param {module:ui/view~View} view A view to be checked.\n// @returns {Boolean}\n\n\nexport { FocusCycler as default };\n\nfunction isFocusable(view) {\n  return !!(view.focus && global.window.getComputedStyle(view.element).display != 'none');\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* global DOMParser */\n\n/**\n * @module ui/icon/iconview\n */\nimport View from '../view';\nimport '../../theme/components/icon/icon.css';\n/**\n * The icon view class.\n *\n * @extends module:ui/view~View\n */\n\nvar IconView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(IconView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function IconView() {\n    var _this;\n\n    _classCallCheck(this, IconView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IconView).call(this));\n    var bind = _this.bindTemplate;\n    /**\n     * The SVG source of the icon.\n     *\n     * @observable\n     * @member {String} #content\n     */\n\n    _this.set('content', '');\n    /**\n     * This attribute specifies the boundaries to which the\n     * icon content should stretch.\n     *\n     * @observable\n     * @default '0 0 20 20'\n     * @member {String} #viewBox\n     */\n\n\n    _this.set('viewBox', '0 0 20 20');\n    /**\n     * The fill color of the child `path.ck-icon__fill`.\n     *\n     * @observable\n     * @default ''\n     * @member {String} #fillColor\n     */\n\n\n    _this.set('fillColor', '');\n\n    _this.setTemplate({\n      tag: 'svg',\n      ns: 'http://www.w3.org/2000/svg',\n      attributes: {\n        class: ['ck', 'ck-icon'],\n        viewBox: bind.to('viewBox')\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(IconView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(IconView.prototype), \"render\", this).call(this);\n\n      this._updateXMLContent();\n\n      this._colorFillPaths(); // This is a hack for lack of innerHTML binding.\n      // See: https://github.com/ckeditor/ckeditor5-ui/issues/99.\n\n\n      this.on('change:content', function () {\n        _this2._updateXMLContent();\n\n        _this2._colorFillPaths();\n      });\n      this.on('change:fillColor', function () {\n        _this2._colorFillPaths();\n      });\n    }\n    /**\n     * Updates the {@link #element} with the value of {@link #content}.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_updateXMLContent\",\n    value: function _updateXMLContent() {\n      if (this.content) {\n        var parsed = new DOMParser().parseFromString(this.content.trim(), 'image/svg+xml');\n        var svg = parsed.querySelector('svg');\n        var viewBox = svg.getAttribute('viewBox');\n\n        if (viewBox) {\n          this.viewBox = viewBox;\n        }\n\n        this.element.innerHTML = '';\n\n        while (svg.childNodes.length > 0) {\n          this.element.appendChild(svg.childNodes[0]);\n        }\n      }\n    }\n    /**\n     * Fills all child `path.ck-icon__fill` with the `#fillColor`.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_colorFillPaths\",\n    value: function _colorFillPaths() {\n      var _this3 = this;\n\n      if (this.fillColor) {\n        this.element.querySelectorAll('.ck-icon__fill').forEach(function (path) {\n          path.style.fill = _this3.fillColor;\n        });\n      }\n    }\n  }]);\n\n  return IconView;\n}(View);\n\nexport { IconView as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module basic-styles/attributecommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n/**\n * An extension of the base {@link module:core/command~Command} class, which provides utilities for a command\n * that toggles a single attribute on a text or an element.\n *\n * `AttributeCommand` uses {@link module:engine/model/document~Document#selection}\n * to decide which nodes (if any) should be changed, and applies or removes the attribute from them.\n *\n * The command checks the {@link module:engine/model/model~Model#schema} to decide if it can be enabled\n * for the current selection and to which nodes the attribute can be applied.\n *\n * @extends module:core/command~Command\n */\n\nvar AttributeCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(AttributeCommand, _Command);\n\n  /**\n   * @param {module:core/editor/editor~Editor} editor\n   * @param {String} attributeKey Attribute that will be set by the command.\n   */\n  function AttributeCommand(editor, attributeKey) {\n    var _this;\n\n    _classCallCheck(this, AttributeCommand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AttributeCommand).call(this, editor));\n    /**\n     * The attribute that will be set by the command.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.attributeKey = attributeKey;\n    /**\n     * Flag indicating whether the command is active. The command is active when the\n     * {@link module:engine/model/selection~Selection#hasAttribute selection has the attribute} which means that:\n     *\n     * * If the selection is not empty &ndash; That the attribute is set on the first node in the selection that allows this attribute.\n     * * If the selection is empty &ndash; That the selection has the attribute itself (which means that newly typed\n     * text will have this attribute, too).\n     *\n     * @observable\n     * @readonly\n     * @member {Boolean} #value\n     */\n\n    return _this;\n  }\n  /**\n   * Updates the command's {@link #value} and {@link #isEnabled} based on the current selection.\n   */\n\n\n  _createClass(AttributeCommand, [{\n    key: \"refresh\",\n    value: function refresh() {\n      var model = this.editor.model;\n      var doc = model.document;\n      this.value = this._getValueFromFirstAllowedNode();\n      this.isEnabled = model.schema.checkAttributeInSelection(doc.selection, this.attributeKey);\n    }\n    /**\n     * Executes the command &mdash; applies the attribute to the selection or removes it from the selection.\n     *\n     * If the command is active (`value == true`), it will remove attributes. Otherwise, it will set attributes.\n     *\n     * The execution result differs, depending on the {@link module:engine/model/document~Document#selection}:\n     *\n     * * If the selection is on a range, the command applies the attribute to all nodes in that range\n     * (if they are allowed to have this attribute by the {@link module:engine/model/schema~Schema schema}).\n     * * If the selection is collapsed in a non-empty node, the command applies the attribute to the\n     * {@link module:engine/model/document~Document#selection} itself (note that typed characters copy attributes from the selection).\n     * * If the selection is collapsed in an empty node, the command applies the attribute to the parent node of the selection (note\n     * that the selection inherits all attributes from a node if it is in an empty node).\n     *\n     * @fires execute\n     * @param {Object} [options] Command options.\n     * @param {Boolean} [options.forceValue] If set, it will force the command behavior. If `true`, the command will apply the attribute,\n     * otherwise the command will remove the attribute.\n     * If not set, the command will look for its current value to decide what it should do.\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var _this2 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var model = this.editor.model;\n      var doc = model.document;\n      var selection = doc.selection;\n      var value = options.forceValue === undefined ? !this.value : options.forceValue;\n      model.change(function (writer) {\n        if (selection.isCollapsed) {\n          if (value) {\n            writer.setSelectionAttribute(_this2.attributeKey, true);\n          } else {\n            writer.removeSelectionAttribute(_this2.attributeKey);\n          }\n        } else {\n          var ranges = model.schema.getValidRanges(selection.getRanges(), _this2.attributeKey);\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var range = _step.value;\n\n              if (value) {\n                writer.setAttribute(_this2.attributeKey, value, range);\n              } else {\n                writer.removeAttribute(_this2.attributeKey, range);\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }\n      });\n    }\n    /**\n     * Checks the attribute value of the first node in the selection that allows the attribute.\n     * For the collapsed selection returns the selection attribute.\n     *\n     * @private\n     * @returns {Boolean} The attribute value.\n     */\n\n  }, {\n    key: \"_getValueFromFirstAllowedNode\",\n    value: function _getValueFromFirstAllowedNode() {\n      var model = this.editor.model;\n      var schema = model.schema;\n      var selection = model.document.selection;\n\n      if (selection.isCollapsed) {\n        return selection.hasAttribute(this.attributeKey);\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = selection.getRanges()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var range = _step2.value;\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = range.getItems()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var item = _step3.value;\n\n              if (schema.checkAttribute(item, this.attributeKey)) {\n                return item.hasAttribute(this.attributeKey);\n              }\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return false;\n    }\n  }]);\n\n  return AttributeCommand;\n}(Command);\n\nexport { AttributeCommand as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/first\n */\n\n/**\n * Returns first item of the given `iterable`.\n *\n * @param {Iterable.<*>} iterable\n * @returns {*}\n */\nexport default function first(iterable) {\n  var iteratorItem = iterable.next();\n\n  if (iteratorItem.done) {\n    return null;\n  }\n\n  return iteratorItem.value;\n}","'use strict';\n\nvar base64_url_decode = require('./base64_url_decode');\n\nfunction InvalidTokenError(message) {\n  this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = 'InvalidTokenError';\n\nmodule.exports = function (token, options) {\n  if (typeof token !== 'string') {\n    throw new InvalidTokenError('Invalid token specified');\n  }\n\n  options = options || {};\n  var pos = options.header === true ? 0 : 1;\n\n  try {\n    return JSON.parse(base64_url_decode(token.split('.')[pos]));\n  } catch (e) {\n    throw new InvalidTokenError('Invalid token specified: ' + e.message);\n  }\n};\n\nmodule.exports.InvalidTokenError = InvalidTokenError;","import getNative from './_getNative.js';\n/* Built-in method references that are verified to be native. */\n\nvar nativeCreate = getNative(Object, 'create');\nexport default nativeCreate;","import nativeCreate from './_nativeCreate.js';\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;","import nativeCreate from './_nativeCreate.js';\n/** Used to stand-in for `undefined` hash values. */\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;","import nativeCreate from './_nativeCreate.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;","import nativeCreate from './_nativeCreate.js';\n/** Used to stand-in for `undefined` hash values. */\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nexport default Hash;","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nexport default mapCacheClear;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nexport default isKeyable;","import isKeyable from './_isKeyable.js';\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nexport default getMapData;","import getMapData from './_getMapData.js';\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;","import getMapData from './_getMapData.js';\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;","import getMapData from './_getMapData.js';\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;","import getMapData from './_getMapData.js';\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nexport default MapCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nexport default setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;","import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nexport default SetCache;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport default arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;","import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n/** Used to compose bitmasks for value comparisons. */\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;","import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n/** Used to compose bitmasks for value comparisons. */\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nexport default equalByTag;","import getAllKeys from './_getAllKeys.js';\n/** Used to compose bitmasks for value comparisons. */\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;","import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n/** Used to compose bitmasks for value comparisons. */\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;","import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nexport default baseTimes;","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nexport default isArguments;","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nexport default arrayLikeKeys;","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/toolbar/toolbarseparatorview\n */\nimport View from '../view';\n/**\n * The toolbar separator view class.\n *\n * @extends module:ui/view~View\n */\n\nvar ToolbarSeparatorView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(ToolbarSeparatorView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function ToolbarSeparatorView(locale) {\n    var _this;\n\n    _classCallCheck(this, ToolbarSeparatorView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToolbarSeparatorView).call(this, locale));\n\n    _this.setTemplate({\n      tag: 'span',\n      attributes: {\n        class: ['ck', 'ck-toolbar__separator']\n      }\n    });\n\n    return _this;\n  }\n\n  return ToolbarSeparatorView;\n}(View);\n\nexport { ToolbarSeparatorView as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _assertThisInitialized from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/toolbar/toolbarview\n */\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport ToolbarSeparatorView from './toolbarseparatorview';\nimport preventDefault from '../bindings/preventdefault.js';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport '../../theme/components/toolbar/toolbar.css';\n/**\n * The toolbar view class.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\n\nvar ToolbarView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(ToolbarView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function ToolbarView(locale) {\n    var _this;\n\n    _classCallCheck(this, ToolbarView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToolbarView).call(this, locale));\n    var bind = _this.bindTemplate;\n    /**\n     * Collection of the toolbar items (like buttons).\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    _this.items = _this.createCollection();\n    /**\n     * Tracks information about DOM focus in the list.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker}\n     */\n\n    _this.focusTracker = new FocusTracker();\n    /**\n     * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n     *\n     * @readonly\n     * @member {module:utils/keystrokehandler~KeystrokeHandler}\n     */\n\n    _this.keystrokes = new KeystrokeHandler();\n    /**\n     * Controls the orientation of toolbar items.\n     *\n     * @observable\n     * @member {Boolean} #isVertical\n     */\n\n    _this.set('isVertical', false);\n    /**\n     * An additional CSS class added to the {@link #element}.\n     *\n     * @observable\n     * @member {String} #class\n     */\n\n\n    _this.set('class');\n    /**\n     * Helps cycling over focusable {@link #items} in the toolbar.\n     *\n     * @readonly\n     * @protected\n     * @member {module:ui/focuscycler~FocusCycler}\n     */\n\n\n    _this._focusCycler = new FocusCycler({\n      focusables: _this.items,\n      focusTracker: _this.focusTracker,\n      keystrokeHandler: _this.keystrokes,\n      actions: {\n        // Navigate toolbar items backwards using the arrow[left,up] keys.\n        focusPrevious: ['arrowleft', 'arrowup'],\n        // Navigate toolbar items forwards using the arrow[right,down] keys.\n        focusNext: ['arrowright', 'arrowdown']\n      }\n    });\n\n    _this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-toolbar', bind.if('isVertical', 'ck-toolbar_vertical'), bind.to('class')]\n      },\n      children: _this.items,\n      on: {\n        // https://github.com/ckeditor/ckeditor5-ui/issues/206\n        mousedown: preventDefault(_assertThisInitialized(_this))\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ToolbarView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(ToolbarView.prototype), \"render\", this).call(this); // Items added before rendering should be known to the #focusTracker.\n\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          this.focusTracker.add(item.element);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.items.on('add', function (evt, item) {\n        _this2.focusTracker.add(item.element);\n      });\n      this.items.on('remove', function (evt, item) {\n        _this2.focusTracker.remove(item.element);\n      }); // Start listening for the keystrokes coming from #element.\n\n      this.keystrokes.listenTo(this.element);\n    }\n    /**\n     * Focuses the first focusable in {@link #items}.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this._focusCycler.focusFirst();\n    }\n    /**\n     * Focuses the last focusable in {@link #items}.\n     */\n\n  }, {\n    key: \"focusLast\",\n    value: function focusLast() {\n      this._focusCycler.focusLast();\n    }\n    /**\n     * A utility which expands a plain toolbar configuration into\n     * {@link module:ui/toolbar/toolbarview~ToolbarView#items} using a given component factory.\n     *\n     * @param {Array.<String>} config The toolbar items config.\n     * @param {module:ui/componentfactory~ComponentFactory} factory A factory producing toolbar items.\n     */\n\n  }, {\n    key: \"fillFromConfig\",\n    value: function fillFromConfig(config, factory) {\n      var _this3 = this;\n\n      config.map(function (name) {\n        if (name == '|') {\n          _this3.items.add(new ToolbarSeparatorView());\n        } else if (factory.has(name)) {\n          _this3.items.add(factory.create(name));\n        } else {\n          /**\n           * There was a problem processing the configuration of the toolbar. The item with the given\n           * name does not exist so it was omitted when rendering the toolbar.\n           *\n           * This warning usually shows up when the {@link module:core/plugin~Plugin} which is supposed\n           * to provide a toolbar item has not been loaded or there is a typo in the configuration.\n           *\n           * Make sure the plugin responsible for this toolbar item is loaded and the toolbar configuration\n           * is correct, e.g. {@link module:basic-styles/bold~Bold} is loaded for the `'bold'` toolbar item.\n           *\n           * You can use the following snippet to retrieve all available toolbar items:\n           *\n           *\t\tArray.from( editor.ui.componentFactory.names() );\n           *\n           * @error toolbarview-item-unavailable\n           * @param {String} name The name of the component.\n           */\n          log.warn('toolbarview-item-unavailable: The requested toolbar item is unavailable.', {\n            name: name\n          });\n        }\n      });\n    }\n  }]);\n\n  return ToolbarView;\n}(View);\n\nexport { ToolbarView as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/bindings/preventdefault\n */\n\n/**\n * A helper which executes a native `Event.preventDefault()` if the target of an event equals the\n * {@link module:ui/view~View#element element of the view}. It shortens the definition of a\n * {@link module:ui/view~View#template template}.\n *\n *\t\t// In a class extending View.\n *\t\timport preventDefault from '@ckeditor/ckeditor5-ui/src/bindings/preventdefault';\n *\n *\t\t// ...\n *\n *\t\tthis.setTemplate( {\n *\t\t\ttag: 'div',\n *\n *\t\t\ton: {\n *\t\t\t\t// Prevent the default mousedown action on this view.\n *\t\t\t\tmousedown: preventDefault( this )\n *\t\t\t}\n *\t\t} );\n *\n * @param {module:ui/view~View} view View instance that defines the template.\n * @returns {module:ui/template~TemplateToBinding}\n */\nexport default function preventDefault(view) {\n  return view.bindTemplate.to(function (evt) {\n    if (evt.target === view.element) {\n      evt.preventDefault();\n    }\n  });\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/dataprocessor/basichtmlwriter\n */\n\n/* globals document */\n\n/**\n * Basic HTML writer. It uses the native `innerHTML` property for basic conversion\n * from a document fragment to an HTML string.\n *\n * @implements module:engine/dataprocessor/htmlwriter~HtmlWriter\n */\nvar BasicHtmlWriter =\n/*#__PURE__*/\nfunction () {\n  function BasicHtmlWriter() {\n    _classCallCheck(this, BasicHtmlWriter);\n  }\n\n  _createClass(BasicHtmlWriter, [{\n    key: \"getHtml\",\n\n    /**\n     * Returns an HTML string created from the document fragment.\n     *\n     * @param {DocumentFragment} fragment\n     * @returns {String}\n     */\n    value: function getHtml(fragment) {\n      var doc = document.implementation.createHTMLDocument('');\n      var container = doc.createElement('div');\n      container.appendChild(fragment);\n      return container.innerHTML;\n    }\n  }]);\n\n  return BasicHtmlWriter;\n}();\n\nexport { BasicHtmlWriter as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/dataprocessor/htmldataprocessor\n */\n\n/* globals document, DOMParser */\nimport BasicHtmlWriter from './basichtmlwriter';\nimport DomConverter from '../view/domconverter';\nimport { NBSP_FILLER } from '../view/filler';\n/**\n * The HTML data processor class.\n * This data processor implementation uses HTML as input and output data.\n *\n * @implements module:engine/dataprocessor/dataprocessor~DataProcessor\n */\n\nvar HtmlDataProcessor =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new instance of the HTML data processor class.\n   */\n  function HtmlDataProcessor() {\n    _classCallCheck(this, HtmlDataProcessor);\n\n    /**\n     * A DOM parser instance used to parse an HTML string to an HTML document.\n     *\n     * @private\n     * @member {DOMParser}\n     */\n    this._domParser = new DOMParser();\n    /**\n     * A DOM converter used to convert DOM elements to view elements.\n     *\n     * @private\n     * @member {module:engine/view/domconverter~DomConverter}\n     */\n\n    this._domConverter = new DomConverter({\n      blockFiller: NBSP_FILLER\n    });\n    /**\n     * A basic HTML writer instance used to convert DOM elements to an HTML string.\n     *\n     * @private\n     * @member {module:engine/dataprocessor/basichtmlwriter~BasicHtmlWriter}\n     */\n\n    this._htmlWriter = new BasicHtmlWriter();\n  }\n  /**\n   * Converts a provided {@link module:engine/view/documentfragment~DocumentFragment document fragment}\n   * to data format &mdash; in this case to an HTML string.\n   *\n   * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment\n   * @returns {String} HTML string.\n   */\n\n\n  _createClass(HtmlDataProcessor, [{\n    key: \"toData\",\n    value: function toData(viewFragment) {\n      // Convert view DocumentFragment to DOM DocumentFragment.\n      var domFragment = this._domConverter.viewToDom(viewFragment, document); // Convert DOM DocumentFragment to HTML output.\n\n\n      return this._htmlWriter.getHtml(domFragment);\n    }\n    /**\n     * Converts the provided HTML string to a view tree.\n     *\n     * @param {String} data An HTML string.\n     * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} A converted view element.\n     */\n\n  }, {\n    key: \"toView\",\n    value: function toView(data) {\n      // Convert input HTML data to DOM DocumentFragment.\n      var domFragment = this._toDom(data); // Convert DOM DocumentFragment to view DocumentFragment.\n\n\n      return this._domConverter.domToView(domFragment);\n    }\n    /**\n     * Converts an HTML string to its DOM representation. Returns a document fragment containing nodes parsed from\n     * the provided data.\n     *\n     * @private\n     * @param {String} data\n     * @returns {DocumentFragment}\n     */\n\n  }, {\n    key: \"_toDom\",\n    value: function _toDom(data) {\n      var document = this._domParser.parseFromString(data, 'text/html');\n\n      var fragment = document.createDocumentFragment();\n      var nodes = document.body.childNodes;\n\n      while (nodes.length > 0) {\n        fragment.appendChild(nodes[0]);\n      }\n\n      return fragment;\n    }\n  }]);\n\n  return HtmlDataProcessor;\n}();\n\nexport { HtmlDataProcessor as default };","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n/* Node.js helper references. */\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nexport default isTypedArray;","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module paragraph/paragraphcommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n/**\n * The paragraph command.\n *\n * @extends module:core/command~Command\n */\n\nvar ParagraphCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(ParagraphCommand, _Command);\n\n  function ParagraphCommand() {\n    _classCallCheck(this, ParagraphCommand);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ParagraphCommand).apply(this, arguments));\n  }\n\n  _createClass(ParagraphCommand, [{\n    key: \"refresh\",\n\n    /**\n     * The value of the command. Indicates whether the selection start is placed in a paragraph.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} #value\n     */\n\n    /**\n     * @inheritDoc\n     */\n    value: function refresh() {\n      var model = this.editor.model;\n      var document = model.document;\n      var block = first(document.selection.getSelectedBlocks());\n      this.value = !!block && block.is('paragraph');\n      this.isEnabled = !!block && checkCanBecomeParagraph(block, model.schema);\n    }\n    /**\n     * Executes the command. All the blocks (see {@link module:engine/model/schema~Schema}) in the selection\n     * will be turned to paragraphs.\n     *\n     * @fires execute\n     * @param {Object} [options] Options for the executed command.\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} [options.selection]\n     * The selection that the command should be applied to.\n     * By default, if not provided, the command is applied to the {@link module:engine/model/document~Document#selection}.\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var model = this.editor.model;\n      var document = model.document;\n      model.change(function (writer) {\n        var blocks = (options.selection || document.selection).getSelectedBlocks();\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var block = _step.value;\n\n            if (!block.is('paragraph') && checkCanBecomeParagraph(block, model.schema)) {\n              writer.rename(block, 'paragraph');\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      });\n    }\n  }]);\n\n  return ParagraphCommand;\n}(Command); // Checks whether the given block can be replaced by a paragraph.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\n\n\nexport { ParagraphCommand as default };\n\nfunction checkCanBecomeParagraph(block, schema) {\n  return schema.checkChild(block.parent, 'paragraph') && !schema.isObject(block);\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module paragraph/paragraph\n */\nimport ParagraphCommand from './paragraphcommand';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n/**\n * The paragraph feature for the editor.\n *\n * It introduces the `<paragraph>` element in the model which renders as a `<p>` element in the DOM and data.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Paragraph =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Paragraph, _Plugin);\n\n  function Paragraph() {\n    _classCallCheck(this, Paragraph);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Paragraph).apply(this, arguments));\n  }\n\n  _createClass(Paragraph, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var _this = this;\n\n      var editor = this.editor;\n      var model = editor.model;\n      var data = editor.data;\n      editor.commands.add('paragraph', new ParagraphCommand(editor)); // Schema.\n\n      model.schema.register('paragraph', {\n        inheritAllFrom: '$block'\n      });\n      editor.conversion.elementToElement({\n        model: 'paragraph',\n        view: 'p'\n      }); // Content autoparagraphing. --------------------------------------------------\n      // Handles element which has not been converted by any plugin and checks if it would be converted if\n      // we wrap it in a paragraph or change it to a paragraph.\n\n      editor.conversion.for('upcast').elementToElement({\n        model: function model(viewElement, modelWriter) {\n          if (!Paragraph.paragraphLikeElements.has(viewElement.name)) {\n            return null;\n          } // Do not auto-paragraph empty elements.\n\n\n          if (viewElement.isEmpty) {\n            return null;\n          }\n\n          return modelWriter.createElement('paragraph');\n        },\n        converterPriority: 'low'\n      });\n      data.upcastDispatcher.on('element', function (evt, data, conversionApi) {\n        // Do not try auto-paragraphing if the element was already converted.\n        if (!conversionApi.consumable.test(data.viewItem, {\n          name: data.viewItem.name\n        })) {\n          return;\n        } // If the element is not paragraph-like try wrapping it in a paragraph.\n\n\n        if (isParagraphable(data.viewItem, data.modelCursor, conversionApi.schema)) {\n          Object.assign(data, wrapInParagraph(data.viewItem, data.modelCursor, conversionApi));\n        }\n      }, {\n        priority: 'low'\n      }); // Handles not converted text nodes and checks if would be converted if we wraps then by a paragraph.\n\n      data.upcastDispatcher.on('text', function (evt, data, conversionApi) {\n        // When node is already converted then do nothing.\n        if (data.modelRange) {\n          return;\n        }\n\n        if (isParagraphable(data.viewItem, data.modelCursor, conversionApi.schema)) {\n          Object.assign(data, wrapInParagraph(data.viewItem, data.modelCursor, conversionApi));\n        }\n      }, {\n        priority: 'lowest'\n      }); // Empty roots autoparagraphing. -----------------------------------------------\n      // Post-fixer which takes care of adding empty paragraph elements to empty roots.\n      // Besides fixing content on #changesDone we also need to handle editor.data#ready event because\n      // if initial data is empty or setData() wasn't even called there will be no #change fired.\n\n      model.document.registerPostFixer(function (writer) {\n        return _this._autoparagraphEmptyRoots(writer);\n      });\n      editor.data.on('ready', function () {\n        model.enqueueChange('transparent', function (writer) {\n          return _this._autoparagraphEmptyRoots(writer);\n        });\n      }, {\n        priority: 'lowest'\n      });\n    }\n    /**\n     * Fixes all empty roots.\n     *\n     * @private\n     * @returns {Boolean} `true` if any change has been applied, `false` otherwise.\n     */\n\n  }, {\n    key: \"_autoparagraphEmptyRoots\",\n    value: function _autoparagraphEmptyRoots(writer) {\n      var model = this.editor.model;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = model.document.getRootNames()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var rootName = _step.value;\n          var root = model.document.getRoot(rootName);\n\n          if (root.isEmpty && root.rootName != '$graveyard') {\n            // If paragraph element is allowed in the root, create paragraph element.\n            if (model.schema.checkChild(root, 'paragraph')) {\n              writer.insertElement('paragraph', root);\n              return true;\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'Paragraph';\n    }\n  }]);\n\n  return Paragraph;\n}(Plugin);\n/**\n * A list of element names which should be treated by the autoparagraphing algorithms as\n * paragraph-like. This means that e.g. the following content:\n *\n *\t\t<h1>Foo</h1>\n *\t\t<table>\n *\t\t\t<tr>\n *\t\t\t\t<td>X</td>\n *\t\t\t\t<td>\n *\t\t\t\t\t<ul>\n *\t\t\t\t\t\t<li>Y</li>\n *\t\t\t\t\t\t<li>Z</li>\n *\t\t\t\t\t</ul>\n *\t\t\t\t</td>\n *\t\t\t</tr>\n *\t\t</table>\n *\n * contains five paragraph-like elements: `<h1>`, two `<td>`s and two `<li>`s.\n * Hence, if none of the features is going to convert those elements the above content will be automatically handled\n * by the paragraph feature and converted to:\n *\n *\t\t<p>Foo</p>\n *\t\t<p>X</p>\n *\t\t<p>Y</p>\n *\t\t<p>Z</p>\n *\n * Note: The `<td>` containing two `<li>` elements was ignored as the innermost paragraph-like elements\n * have a priority upon conversion.\n *\n * @member {Set.<String>} module:paragraph/paragraph~Paragraph.paragraphLikeElements\n */\n\n\nexport { Paragraph as default };\nParagraph.paragraphLikeElements = new Set(['blockquote', 'dd', 'div', 'dt', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'li', 'p', 'td']);\n\nfunction wrapInParagraph(input, position, conversionApi) {\n  var paragraph = conversionApi.writer.createElement('paragraph');\n  conversionApi.writer.insert(paragraph, position);\n  return conversionApi.convertItem(input, conversionApi.writer.createPositionAt(paragraph, 0));\n}\n\nfunction isParagraphable(node, position, schema) {\n  var context = schema.createContext(position); // When paragraph is allowed in this context...\n\n  if (!schema.checkChild(context, 'paragraph')) {\n    return false;\n  } // And a node would be allowed in this paragraph...\n\n\n  if (!schema.checkChild(context.push('paragraph'), node)) {\n    return false;\n  }\n\n  return true;\n}","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0:\n      return func.call(thisArg);\n\n    case 1:\n      return func.call(thisArg, args[0]);\n\n    case 2:\n      return func.call(thisArg, args[0], args[1]);\n\n    case 3:\n      return func.call(thisArg, args[0], args[1], args[2]);\n  }\n\n  return func.apply(thisArg, args);\n}\n\nexport default apply;","import apply from './_apply.js';\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeMax = Math.max;\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\n\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? func.length - 1 : start, 0);\n  return function () {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n\n    index = -1;\n    var otherArgs = Array(start + 1);\n\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function () {\n    return value;\n  };\n}\n\nexport default constant;","import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\n\nvar baseSetToString = !defineProperty ? identity : function (func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\nexport default baseSetToString;","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeNow = Date.now;\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\n\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n  return function () {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n    lastCalled = stamp;\n\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;","import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\n\nvar setToString = shortOut(baseSetToString);\nexport default setToString;","import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\n\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;","import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\n\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n\n  var type = typeof index;\n\n  if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {\n    return eq(object[index], value);\n  }\n\n  return false;\n}\n\nexport default isIterateeCall;","import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\n\nfunction createAssigner(assigner) {\n  return baseRest(function (object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n    customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n\n    object = Object(object);\n\n    while (++index < length) {\n      var source = sources[index];\n\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n\n    return object;\n  });\n}\n\nexport default createAssigner;","import copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport keysIn from './keysIn.js';\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\n\nvar assignIn = createAssigner(function (object, source) {\n  copyObject(source, keysIn(source), object);\n});\nexport default assignIn;","'use strict';\n\nvar utils = require('./utils');\n\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {\n      return data;\n    }\n\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n\n    return data;\n  }],\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) {\n        /* Ignore */\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n  maxContentLength: -1,\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\nmodule.exports = defaults;","/* global window */\nimport ponyfill from './ponyfill.js';\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;","var isarray = require('isarray');\n/**\n * Expose `pathToRegexp`.\n */\n\n\nmodule.exports = pathToRegexp;\nmodule.exports.parse = parse;\nmodule.exports.compile = compile;\nmodule.exports.tokensToFunction = tokensToFunction;\nmodule.exports.tokensToRegExp = tokensToRegExp;\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\n\nvar PATH_REGEXP = new RegExp([// Match escaped characters that would otherwise appear in future matches.\n// This allows the user to escape special characters that won't transform.\n'(\\\\\\\\.)', // Match Express-style parameters and un-named parameters with a prefix\n// and optional suffixes. Matches appear as:\n//\n// \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n// \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n// \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n'([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'].join('|'), 'g');\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\n\nfunction parse(str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length; // Ignore already escaped sequences.\n\n    if (escaped) {\n      path += escaped[1];\n      continue;\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7]; // Push the current path onto the tokens.\n\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?'\n    });\n  } // Match any characters still remaining.\n\n\n  if (index < str.length) {\n    path += str.substr(index);\n  } // If the path exists, push it onto the end.\n\n\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens;\n}\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\n\n\nfunction compile(str, options) {\n  return tokensToFunction(parse(str, options));\n}\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\n\n\nfunction encodeURIComponentPretty(str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\n\n\nfunction encodeAsterisk(str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\n\n\nfunction tokensToFunction(tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length); // Compile all the patterns before compilation.\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n        continue;\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue;\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined');\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`');\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue;\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty');\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`');\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue;\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"');\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path;\n  };\n}\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\n\n\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1');\n}\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\n\n\nfunction escapeGroup(group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1');\n}\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\n\n\nfunction attachKeys(re, keys) {\n  re.keys = keys;\n  return re;\n}\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\n\n\nfunction flags(options) {\n  return options.sensitive ? '' : 'i';\n}\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\n\n\nfunction regexpToRegexp(path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys);\n}\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\n\n\nfunction arrayToRegexp(path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n  return attachKeys(regexp, keys);\n}\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\n\n\nfunction stringToRegexp(path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\n\n\nfunction tokensToRegExp(tokens, keys, options) {\n  if (!isarray(keys)) {\n    options =\n    /** @type {!Object} */\n    keys || options;\n    keys = [];\n  }\n\n  options = options || {};\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = ''; // Iterate over the tokens and create our regexp string.\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter; // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys);\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\n\n\nfunction pathToRegexp(path, keys, options) {\n  if (!isarray(keys)) {\n    options =\n    /** @type {!Object} */\n    keys || options;\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path,\n    /** @type {!Array} */\n    keys);\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(\n    /** @type {!Array} */\n    path,\n    /** @type {!Array} */\n    keys, options);\n  }\n\n  return stringToRegexp(\n  /** @type {string} */\n  path,\n  /** @type {!Array} */\n  keys, options);\n}","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n'use strict';\n/* eslint-disable no-unused-vars */\n\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n\n  return Object(val);\n}\n\nfunction shouldUseNative() {\n  try {\n    if (!Object.assign) {\n      return false;\n    } // Detect buggy property enumeration order in older V8 versions.\n    // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n    test1[5] = 'de';\n\n    if (Object.getOwnPropertyNames(test1)[0] === '5') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test2 = {};\n\n    for (var i = 0; i < 10; i++) {\n      test2['_' + String.fromCharCode(i)] = i;\n    }\n\n    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n      return test2[n];\n    });\n\n    if (order2.join('') !== '0123456789') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test3 = {};\n    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n      test3[letter] = letter;\n    });\n\n    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    // We don't expect any of the above to throw, but better to be safe.\n    return false;\n  }\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n  var from;\n  var to = toObject(target);\n  var symbols;\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from);\n\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n\n  return to;\n};","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    return fn.apply(thisArg, args);\n  };\n};","'use strict';\n\nvar utils = require('./../utils');\n\nvar settle = require('./../core/settle');\n\nvar buildURL = require('./../helpers/buildURL');\n\nvar parseHeaders = require('./../helpers/parseHeaders');\n\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\n\nvar createError = require('../core/createError');\n\nvar btoa = typeof window !== 'undefined' && window.btoa && window.btoa.bind(window) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false; // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n\n    if (process.env.NODE_ENV !== 'test' && typeof window !== 'undefined' && window.XDomainRequest && !('withCredentials' in request) && !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n\n      request.onprogress = function handleProgress() {};\n\n      request.ontimeout = function handleTimeout() {};\n    } // HTTP basic authentication\n\n\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true); // Set the request timeout in MS\n\n    request.timeout = config.timeout; // Listen for ready state\n\n    request[loadEvent] = function handleLoad() {\n      if (!request || request.readyState !== 4 && !xDomain) {\n        return;\n      } // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n\n\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      } // Prepare the response\n\n\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n      settle(resolve, reject, response); // Clean up request\n\n      request = null;\n    }; // Handle low level network errors\n\n\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request)); // Clean up request\n\n      request = null;\n    }; // Handle timeout\n\n\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', request)); // Clean up request\n\n      request = null;\n    }; // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n\n\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies'); // Add xsrf header\n\n\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    } // Add headers to the request\n\n\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    } // Add withCredentials to request if needed\n\n\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    } // Add responseType to request if needed\n\n\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    } // Handle progress if needed\n\n\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    } // Not all browsers support upload events\n\n\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel); // Clean up request\n\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    } // Send the request\n\n\n    request.send(requestData);\n  });\n};","'use strict';\n\nvar enhanceError = require('./enhanceError');\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\n\n\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};","'use strict';\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\n\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\nmodule.exports = Cancel;","export default function symbolObservablePonyfill(root) {\n  var result;\n  var Symbol = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      result = Symbol.observable;\n    } else {\n      result = Symbol('observable');\n      Symbol.observable = result;\n    }\n  } else {\n    result = '@@observable';\n  }\n\n  return result;\n}\n;","'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _implementation = require('./implementation');\n\nvar _implementation2 = _interopRequireDefault(_implementation);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = _react2.default.createContext || _implementation2.default;\nmodule.exports = exports['default'];","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;","import root from './_root.js';\n/** Detect free variable `exports`. */\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\n\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;","module.exports = __webpack_public_path__ + \"static/media/undo.af532aca.svg\";","module.exports = __webpack_public_path__ + \"static/media/redo.b4bff623.svg\";","module.exports = __webpack_public_path__ + \"static/media/bold.71f24f3f.svg\";","module.exports = __webpack_public_path__ + \"static/media/italic.e5127cb7.svg\";","module.exports = __webpack_public_path__ + \"static/media/dropdown-arrow.7ace8973.svg\";","function createThunkMiddleware(extraArgument) {\n  return function (_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        if (typeof action === 'function') {\n          return action(dispatch, getState, extraArgument);\n        }\n\n        return next(action);\n      };\n    };\n  };\n}\n\nvar thunk = createThunkMiddleware();\nthunk.withExtraArgument = createThunkMiddleware;\nexport default thunk;","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/config\n */\nimport { isPlainObject, isElement, cloneDeepWith } from 'lodash-es';\n/**\n * Handles a configuration dictionary.\n */\n\nvar Config =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the {@link ~Config} class.\n   *\n   * @param {Object} [configurations] The initial configurations to be set. Usually, provided by the user.\n   * @param {Object} [defaultConfigurations] The default configurations. Usually, provided by the system.\n   */\n  function Config(configurations, defaultConfigurations) {\n    _classCallCheck(this, Config);\n\n    /**\n     * Store for the whole configuration.\n     *\n     * @private\n     * @member {Object}\n     */\n    this._config = {}; // Set default configuration.\n\n    if (defaultConfigurations) {\n      this.define(defaultConfigurations);\n    } // Set initial configuration.\n\n\n    if (configurations) {\n      this._setObjectToTarget(this._config, configurations);\n    }\n  }\n  /**\n   * Set configuration values.\n   *\n   * It accepts both a name/value pair or an object, which properties and values will be used to set\n   * configurations.\n   *\n   * It also accepts setting a \"deep configuration\" by using dots in the name. For example, `'resize.width'` sets\n   * the value for the `width` configuration in the `resize` subset.\n   *\n   *\t\tconfig.set( 'width', 500 );\n   *\t\tconfig.set( 'toolbar.collapsed', true );\n   *\n   *\t\t// Equivalent to:\n   *\t\tconfig.set( {\n   *\t\t\twidth: 500\n   *\t\t\ttoolbar: {\n   *\t\t\t\tcollapsed: true\n   *\t\t\t}\n   *\t\t} );\n   *\n   * Passing an object as the value will amend the configuration, not replace it.\n   *\n   *\t\tconfig.set( 'toolbar', {\n   *\t\t\tcollapsed: true,\n   *\t\t} );\n   *\n   *\t\tconfig.set( 'toolbar', {\n   *\t\t\tcolor: 'red',\n   *\t\t} );\n   *\n   *\t\tconfig.get( 'toolbar.collapsed' ); // true\n   *\t\tconfig.get( 'toolbar.color' ); // 'red'\n   *\n   * @param {String|Object} name The configuration name or an object from which take properties as\n   * configuration entries. Configuration names are case-sensitive.\n   * @param {*} value The configuration value. Used if a name is passed.\n   */\n\n\n  _createClass(Config, [{\n    key: \"set\",\n    value: function set(name, value) {\n      this._setToTarget(this._config, name, value);\n    }\n    /**\n     * Does exactly the same as {@link #set} with one exception – passed configuration extends\n     * existing one, but does not overwrite already defined values.\n     *\n     * This method is supposed to be called by plugin developers to setup plugin's configurations. It would be\n     * rarely used for other needs.\n     *\n     * @param {String|Object} name The configuration name or an object from which take properties as\n     * configuration entries. Configuration names are case-sensitive.\n     * @param {*} value The configuration value. Used if a name is passed.\n     */\n\n  }, {\n    key: \"define\",\n    value: function define(name, value) {\n      var isDefine = true;\n\n      this._setToTarget(this._config, name, value, isDefine);\n    }\n    /**\n     * Gets the value for a configuration entry.\n     *\n     *\t\tconfig.get( 'name' );\n     *\n     * Deep configurations can be retrieved by separating each part with a dot.\n     *\n     *\t\tconfig.get( 'toolbar.collapsed' );\n     *\n     * @param {String} name The configuration name. Configuration names are case-sensitive.\n     * @returns {*} The configuration value or `undefined` if the configuration entry was not found.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      return this._getFromSource(this._config, name);\n    }\n    /**\n     * Saves passed configuration to the specified target (nested object).\n     *\n     * @private\n     * @param {Object} target Nested config object.\n     * @param {String|Object} name The configuration name or an object from which take properties as\n     * configuration entries. Configuration names are case-sensitive.\n     * @param {*} value The configuration value. Used if a name is passed.\n     * @param {Boolean} [isDefine=false] Define if passed configuration should overwrite existing one.\n     */\n\n  }, {\n    key: \"_setToTarget\",\n    value: function _setToTarget(target, name, value) {\n      var isDefine = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      // In case of an object, iterate through it and call `_setToTarget` again for each property.\n      if (isPlainObject(name)) {\n        this._setObjectToTarget(target, name, isDefine);\n\n        return;\n      } // The configuration name should be split into parts if it has dots. E.g. `resize.width` -> [`resize`, `width`].\n\n\n      var parts = name.split('.'); // Take the name of the configuration out of the parts. E.g. `resize.width` -> `width`.\n\n      name = parts.pop(); // Iterate over parts to check if currently stored configuration has proper structure.\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = parts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var part = _step.value;\n\n          // If there is no object for specified part then create one.\n          if (!isPlainObject(target[part])) {\n            target[part] = {};\n          } // Nested object becomes a target.\n\n\n          target = target[part];\n        } // In case of value is an object.\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (isPlainObject(value)) {\n        // We take care of proper config structure.\n        if (!isPlainObject(target[name])) {\n          target[name] = {};\n        }\n\n        target = target[name]; // And iterate through this object calling `_setToTarget` again for each property.\n\n        this._setObjectToTarget(target, value, isDefine);\n\n        return;\n      } // Do nothing if we are defining configuration for non empty name.\n\n\n      if (isDefine && typeof target[name] != 'undefined') {\n        return;\n      }\n\n      target[name] = value;\n    }\n    /**\n     * Get specified configuration from specified source (nested object).\n     *\n     * @private\n     * @param {Object} source level of nested object.\n     * @param {String} name The configuration name. Configuration names are case-sensitive.\n     * @returns {*} The configuration value or `undefined` if the configuration entry was not found.\n     */\n\n  }, {\n    key: \"_getFromSource\",\n    value: function _getFromSource(source, name) {\n      // The configuration name should be split into parts if it has dots. E.g. `resize.width` -> [`resize`, `width`].\n      var parts = name.split('.'); // Take the name of the configuration out of the parts. E.g. `resize.width` -> `width`.\n\n      name = parts.pop(); // Iterate over parts to check if currently stored configuration has proper structure.\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = parts[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var part = _step2.value;\n\n          if (!isPlainObject(source[part])) {\n            source = null;\n            break;\n          } // Nested object becomes a source.\n\n\n          source = source[part];\n        } // Always returns undefined for non existing configuration.\n\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return source ? cloneConfig(source[name]) : undefined;\n    }\n    /**\n     * Iterates through passed object and calls {@link #_setToTarget} method with object key and value for each property.\n     *\n     * @private\n     * @param {Object} target Nested config object.\n     * @param {Object} configuration Configuration data set\n     * @param {Boolean} [isDefine] Defines if passed configuration is default configuration or not.\n     */\n\n  }, {\n    key: \"_setObjectToTarget\",\n    value: function _setObjectToTarget(target, configuration, isDefine) {\n      var _this = this;\n\n      Object.keys(configuration).forEach(function (key) {\n        _this._setToTarget(target, key, configuration[key], isDefine);\n      });\n    }\n  }]);\n\n  return Config;\n}(); // Clones configuration object or value.\n// @param {*} source Source configuration\n// @returns {*} Cloned configuration value.\n\n\nexport { Config as default };\n\nfunction cloneConfig(source) {\n  return cloneDeepWith(source, leaveDOMReferences);\n} // A customizer function for cloneDeepWith.\n// It will leave references to DOM Elements instead of cloning them.\n//\n// @param {*} value\n// @returns {Element|undefined}\n\n\nfunction leaveDOMReferences(value) {\n  return isElement(value) ? value : undefined;\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/rooteditableelement\n */\nimport EditableElement from './editableelement';\nvar rootNameSymbol = Symbol('rootName');\n/**\n * Class representing a single root in the data view. A root can be either {@link ~RootEditableElement#isReadOnly editable or read-only},\n * but in both cases it is called \"an editable\". Roots can contain other {@link module:engine/view/editableelement~EditableElement\n * editable elements} making them \"nested editables\".\n *\n * @extends module:engine/view/editableelement~EditableElement\n */\n\nvar RootEditableElement =\n/*#__PURE__*/\nfunction (_EditableElement) {\n  _inherits(RootEditableElement, _EditableElement);\n\n  /**\n   * Creates root editable element.\n   *\n   * @param {String} name Node name.\n   */\n  function RootEditableElement(name) {\n    var _this;\n\n    _classCallCheck(this, RootEditableElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RootEditableElement).call(this, name));\n    /**\n     * Name of this root inside {@link module:engine/view/document~Document} that is an owner of this root. If no\n     * other name is set, `main` name is used.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.rootName = 'main';\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(RootEditableElement, [{\n    key: \"is\",\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'rootElement' || _get(_getPrototypeOf(RootEditableElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'rootElement' && name == this.name || _get(_getPrototypeOf(RootEditableElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n  }, {\n    key: \"rootName\",\n    get: function get() {\n      return this.getCustomProperty(rootNameSymbol);\n    },\n    set: function set(rootName) {\n      this._setCustomProperty(rootNameSymbol, rootName);\n    }\n    /**\n     * Overrides old element name and sets new one.\n     * This is needed because view roots are created before they are attached to the DOM.\n     * The name of the root element is temporary at this stage. It has to be changed when the\n     * view root element is attached to the DOM element.\n     *\n     * @protected\n     * @param {String} name The new name of element.\n     */\n\n  }, {\n    key: \"_name\",\n    set: function set(name) {\n      this.name = name;\n    }\n  }]);\n\n  return RootEditableElement;\n}(EditableElement);\n\nexport { RootEditableElement as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/document\n */\nimport DocumentSelection from './documentselection';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\n/**\n * Document class creates an abstract layer over the content editable area, contains a tree of view elements and\n * {@link module:engine/view/documentselection~DocumentSelection view selection} associated with this document.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Document =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a Document instance.\n   */\n  function Document() {\n    _classCallCheck(this, Document);\n\n    /**\n     * Selection done on this document.\n     *\n     * @readonly\n     * @member {module:engine/view/documentselection~DocumentSelection} module:engine/view/document~Document#selection\n     */\n    this.selection = new DocumentSelection();\n    /**\n     * Roots of the view tree. Collection of the {@link module:engine/view/element~Element view elements}.\n     *\n     * View roots are created as a result of binding between {@link module:engine/view/document~Document#roots} and\n     * {@link module:engine/model/document~Document#roots} and this is handled by\n     * {@link module:engine/controller/editingcontroller~EditingController}, so to create view root we need to create\n     * model root using {@link module:engine/model/document~Document#createRoot}.\n     *\n     * @readonly\n     * @member {module:utils/collection~Collection} module:engine/view/document~Document#roots\n     */\n\n    this.roots = new Collection({\n      idProperty: 'rootName'\n    });\n    /**\n     * Defines whether document is in read-only mode.\n     *\n     * When document is read-ony then all roots are read-only as well and caret placed inside this root is hidden.\n     *\n     * @observable\n     * @member {Boolean} #isReadOnly\n     */\n\n    this.set('isReadOnly', false);\n    /**\n     * True if document is focused.\n     *\n     * This property is updated by the {@link module:engine/view/observer/focusobserver~FocusObserver}.\n     * If the {@link module:engine/view/observer/focusobserver~FocusObserver} is disabled this property will not change.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} module:engine/view/document~Document#isFocused\n     */\n\n    this.set('isFocused', false);\n    /**\n     * True if composition is in progress inside the document.\n     *\n     * This property is updated by the {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n     * If the {@link module:engine/view/observer/compositionobserver~CompositionObserver} is disabled this property will not change.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} module:engine/view/document~Document#isComposing\n     */\n\n    this.set('isComposing', false);\n    /**\n     * Post-fixer callbacks registered to the view document.\n     *\n     * @private\n     * @member {Set}\n     */\n\n    this._postFixers = new Set();\n  }\n  /**\n   * Gets a {@link module:engine/view/document~Document#roots view root element} with the specified name. If the name is not\n   * specific \"main\" root is returned.\n   *\n   * @param {String} [name='main'] Name of the root.\n   * @returns {module:engine/view/rooteditableelement~RootEditableElement|null} The view root element with the specified name\n   * or null when there is no root of given name.\n   */\n\n\n  _createClass(Document, [{\n    key: \"getRoot\",\n    value: function getRoot() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n      return this.roots.get(name);\n    }\n    /**\n     * Used to register a post-fixer callback. A post-fixers mechanism allows to update view tree just before rendering\n     * to the DOM.\n     *\n     * Post-fixers are fired just after all changes from the outermost change block were applied but\n     * before the {@link module:engine/view/view~View#event:render render event} is fired. If a post-fixer callback made\n     * a change, it should return `true`. When this happens, all post-fixers are fired again to check if something else should\n     * not be fixed in the new document tree state.\n     *\n     * View post-fixers are useful when you wants to update view structure whenever it changes, for instance add some classes\n     * to elements based on the view structure or selection. However, is you need DOM elements to be already updated, use\n     * {@link module:engine/view/view~View#event:render render event}.\n     *\n     * As a parameter, a post-fixer callback receives a {@link module:engine/view/downcastwriter~DowncastWriter downcast writer}\n     * instance connected with the executed changes block.\n     *\n     * Note that registering a post-fixer won't re-render the editor's view. If the view should change after registering the post-fixer then\n     * it should be done manually calling `view.forceRender();`.\n     *\n     * @param {Function} postFixer\n     */\n\n  }, {\n    key: \"registerPostFixer\",\n    value: function registerPostFixer(postFixer) {\n      this._postFixers.add(postFixer);\n    }\n    /**\n     * Destroys this instance. Makes sure that all observers are destroyed and listeners removed.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.roots.map(function (root) {\n        return root.destroy();\n      });\n      this.stopListening();\n    }\n    /**\n     * Performs post-fixer loops. Executes post-fixer callbacks as long as none of them has done any changes to the model.\n     *\n     * @protected\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n     */\n\n  }, {\n    key: \"_callPostFixers\",\n    value: function _callPostFixers(writer) {\n      var wasFixed = false;\n\n      do {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this._postFixers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var callback = _step.value;\n            wasFixed = callback(writer);\n\n            if (wasFixed) {\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      } while (wasFixed);\n    }\n    /**\n     * Event fired whenever document content layout changes. It is fired whenever content is\n     * {@link module:engine/view/view~View#event:render rendered}, but should be also fired by observers in case of\n     * other actions which may change layout, for instance when image loads.\n     *\n     * @event layoutChanged\n     */\n\n  }]);\n\n  return Document;\n}();\n\nexport { Document as default };\nmix(Document, ObservableMixin);\n/**\n * Enum representing type of the change.\n *\n * Possible values:\n *\n * * `children` - for child list changes,\n * * `attributes` - for element attributes changes,\n * * `text` - for text nodes changes.\n *\n * @typedef {String} module:engine/view/document~ChangeType\n */","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/attributeelement\n */\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror'; // Default attribute priority.\n\nvar DEFAULT_PRIORITY = 10;\n/**\n * Attribute elements are used to represent formatting elements in the view (think – `<b>`, `<span style=\"font-size: 2em\">`, etc.).\n * Most often they are created when downcasting model text attributes.\n *\n * Editing engine does not define a fixed HTML DTD. This is why a feature developer needs to choose between various\n * types (container element, {@link module:engine/view/attributeelement~AttributeElement attribute element},\n * {@link module:engine/view/emptyelement~EmptyElement empty element}, etc) when developing a feature.\n *\n * To create a new attribute element instance use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createAttributeElement `DowncastWriter#createAttributeElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\n\nvar AttributeElement =\n/*#__PURE__*/\nfunction (_Element) {\n  _inherits(AttributeElement, _Element);\n\n  /**\n   * Creates an attribute element.\n   *\n   * @see module:engine/view/downcastwriter~DowncastWriter#createAttributeElement\n   * @see module:engine/view/element~Element\n   * @protected\n   */\n  function AttributeElement(name, attrs, children) {\n    var _this;\n\n    _classCallCheck(this, AttributeElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AttributeElement).call(this, name, attrs, children));\n    /**\n     * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n     *\n     * @method #getFillerOffset\n     * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n     */\n\n    _this.getFillerOffset = getFillerOffset;\n    /**\n     * Element priority. Decides in what order elements are wrapped by {@link module:engine/view/downcastwriter~DowncastWriter}.\n     *\n     * @protected\n     * @member {Number}\n     */\n\n    _this._priority = DEFAULT_PRIORITY;\n    /**\n     * Element identifier. If set, it is used by {@link module:engine/view/element~Element#isSimilar},\n     * and then two elements are considered similar if, and only if they have the same `_id`.\n     *\n     * @protected\n     * @member {String|Number}\n     */\n\n    _this._id = null;\n    /**\n     * Keeps all the attribute elements that have the same {@link module:engine/view/attributeelement~AttributeElement#id ids}\n     * and still exist in the view tree.\n     *\n     * This property is managed by {@link module:engine/view/downcastwriter~DowncastWriter}.\n     *\n     * @protected\n     * @member {Set.<module:engine/view/attributeelement~AttributeElement>|null}\n     */\n\n    _this._clonesGroup = null;\n    return _this;\n  }\n  /**\n   * Element priority. Decides in what order elements are wrapped by {@link module:engine/view/downcastwriter~DowncastWriter}.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\n  _createClass(AttributeElement, [{\n    key: \"getElementsWithSameId\",\n\n    /**\n     * Returns all {@link module:engine/view/attributeelement~AttributeElement attribute elements} that has the\n     * same {@link module:engine/view/attributeelement~AttributeElement#id id} and are in the view tree (were not removed).\n     *\n     * Note: If this element has been removed from the tree, returned set will not include it.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError attribute-element-get-elements-with-same-id-no-id}\n     * if this element has no `id`.\n     *\n     * @returns {Set.<module:engine/view/attributeelement~AttributeElement>} Set containing all the attribute elements\n     * with the same `id` that were added and not removed from the view tree.\n     */\n    value: function getElementsWithSameId() {\n      if (this.id === null) {\n        /**\n         * Cannot get elements with the same id for an attribute element without id.\n         *\n         * @error attribute-element-get-elements-with-same-id-no-id\n         */\n        throw new CKEditorError('attribute-element-get-elements-with-same-id-no-id: ' + 'Cannot get elements with the same id for an attribute element without id.');\n      }\n\n      return new Set(this._clonesGroup);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"is\",\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'attributeElement' || _get(_getPrototypeOf(AttributeElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'attributeElement' && name == this.name || _get(_getPrototypeOf(AttributeElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n    /**\n     * Checks if this element is similar to other element.\n     *\n     * If none of elements has set {@link module:engine/view/attributeelement~AttributeElement#id}, then both elements\n     * should have the same name, attributes and priority to be considered as similar. Two similar elements can contain\n     * different set of children nodes.\n     *\n     * If at least one element has {@link module:engine/view/attributeelement~AttributeElement#id} set, then both\n     * elements have to have the same {@link module:engine/view/attributeelement~AttributeElement#id} value to be\n     * considered similar.\n     *\n     * Similarity is important for {@link module:engine/view/downcastwriter~DowncastWriter}. For example:\n     *\n     * * two following similar elements can be merged together into one, longer element,\n     * * {@link module:engine/view/downcastwriter~DowncastWriter#unwrap} checks similarity of passed element and processed element to\n     * decide whether processed element should be unwrapped,\n     * * etc.\n     *\n     * @param {module:engine/view/element~Element} otherElement\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isSimilar\",\n    value: function isSimilar(otherElement) {\n      // If any element has an `id` set, just compare the ids.\n      if (this.id !== null || otherElement.id !== null) {\n        return this.id === otherElement.id;\n      }\n\n      return _get(_getPrototypeOf(AttributeElement.prototype), \"isSimilar\", this).call(this, otherElement) && this.priority == otherElement.priority;\n    }\n    /**\n     * Clones provided element with priority.\n     *\n     * @protected\n     * @param {Boolean} deep If set to `true` clones element and all its children recursively. When set to `false`,\n     * element will be cloned without any children.\n     * @returns {module:engine/view/attributeelement~AttributeElement} Clone of this element.\n     */\n\n  }, {\n    key: \"_clone\",\n    value: function _clone(deep) {\n      var cloned = _get(_getPrototypeOf(AttributeElement.prototype), \"_clone\", this).call(this, deep); // Clone priority too.\n\n\n      cloned._priority = this._priority; // And id too.\n\n      cloned._id = this._id;\n      return cloned;\n    }\n  }, {\n    key: \"priority\",\n    get: function get() {\n      return this._priority;\n    }\n    /**\n     * Element identifier. If set, it is used by {@link module:engine/view/element~Element#isSimilar},\n     * and then two elements are considered similar if, and only if they have the same `id`.\n     *\n     * @readonly\n     * @type {String|Number}\n     */\n\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n  }]);\n\n  return AttributeElement;\n}(Element);\n/**\n * Default attribute priority.\n *\n * @member {Number} module:engine/view/attributeelement~AttributeElement.DEFAULT_PRIORITY\n */\n\n\nexport { AttributeElement as default };\nAttributeElement.DEFAULT_PRIORITY = DEFAULT_PRIORITY; // Returns block {@link module:engine/view/filler~Filler filler} offset or `null` if block filler is not needed.\n//\n// @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n\nfunction getFillerOffset() {\n  // <b>foo</b> does not need filler.\n  if (nonUiChildrenCount(this)) {\n    return null;\n  }\n\n  var element = this.parent; // <p><b></b></p> needs filler -> <p><b><br></b></p>\n\n  while (element && element.is('attributeElement')) {\n    if (nonUiChildrenCount(element) > 1) {\n      return null;\n    }\n\n    element = element.parent;\n  }\n\n  if (!element || nonUiChildrenCount(element) > 1) {\n    return null;\n  } // Render block filler at the end of element (after all ui elements).\n\n\n  return this.childCount;\n} // Returns total count of children that are not {@link module:engine/view/uielement~UIElement UIElements}.\n//\n// @param {module:engine/view/element~Element} element\n// @returns {Number}\n\n\nfunction nonUiChildrenCount(element) {\n  return Array.from(element.getChildren()).filter(function (element) {\n    return !element.is('uiElement');\n  }).length;\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/emptyelement\n */\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Node from './node';\n/**\n * Empty element class. It is used to represent elements that cannot contain any child nodes (for example `<img>` elements).\n *\n * To create a new empty element use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createEmptyElement `downcastWriter#createEmptyElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\n\nvar EmptyElement =\n/*#__PURE__*/\nfunction (_Element) {\n  _inherits(EmptyElement, _Element);\n\n  /**\n   * Creates new instance of EmptyElement.\n   *\n   * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` when third parameter is passed,\n   * to inform that usage of EmptyElement is incorrect (adding child nodes to EmptyElement is forbidden).\n   *\n   * @see module:engine/view/downcastwriter~DowncastWriter#createEmptyElement\n   * @protected\n   * @param {String} name Node name.\n   * @param {Object|Iterable} [attributes] Collection of attributes.\n   */\n  function EmptyElement(name, attributes, children) {\n    var _this;\n\n    _classCallCheck(this, EmptyElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EmptyElement).call(this, name, attributes, children));\n    /**\n     * Returns `null` because filler is not needed for EmptyElements.\n     *\n     * @method #getFillerOffset\n     * @returns {null} Always returns null.\n     */\n\n    _this.getFillerOffset = getFillerOffset;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(EmptyElement, [{\n    key: \"is\",\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'emptyElement' || _get(_getPrototypeOf(EmptyElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'emptyElement' && name == this.name || _get(_getPrototypeOf(EmptyElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n    /**\n     * Overrides {@link module:engine/view/element~Element#_insertChild} method.\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` to prevent\n     * adding any child nodes to EmptyElement.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_insertChild\",\n    value: function _insertChild(index, nodes) {\n      if (nodes && (nodes instanceof Node || Array.from(nodes).length > 0)) {\n        /**\n         * Cannot add children to {@link module:engine/view/emptyelement~EmptyElement}.\n         *\n         * @error view-emptyelement-cannot-add\n         */\n        throw new CKEditorError('view-emptyelement-cannot-add: Cannot add child nodes to EmptyElement instance.');\n      }\n    }\n  }]);\n\n  return EmptyElement;\n}(Element); // Returns `null` because block filler is not needed for EmptyElements.\n//\n// @returns {null}\n\n\nexport { EmptyElement as default };\n\nfunction getFillerOffset() {\n  return null;\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/uielement\n */\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Node from './node';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n/**\n * UI element class. It should be used to represent editing UI which needs to be injected into the editing view\n * If possible, you should keep your UI outside the editing view. However, if that is not possible,\n * UI elements can be used.\n *\n * How a UI element is rendered is in your control (you pass a callback to\n * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`}).\n * The editor will ignore your UI element – the selection cannot be placed in it, it is skipped (invisible) when\n * the user modifies the selection by using arrow keys and the editor does not listen to any mutations which\n * happen inside your UI elements.\n *\n * The limitation is that you cannot convert a model element to a UI element. UI elements need to be\n * created for {@link module:engine/model/markercollection~Marker markers} or as additinal elements\n * inside normal {@link module:engine/view/containerelement~ContainerElement container elements}.\n *\n * To create a new UI element use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\n\nvar UIElement =\n/*#__PURE__*/\nfunction (_Element) {\n  _inherits(UIElement, _Element);\n\n  /**\n   * Creates new instance of UIElement.\n   *\n   * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` when third parameter is passed,\n   * to inform that usage of UIElement is incorrect (adding child nodes to UIElement is forbidden).\n   *\n   * @see module:engine/view/downcastwriter~DowncastWriter#createUIElement\n   * @protected\n   * @param {String} name Node name.\n   * @param {Object|Iterable} [attributes] Collection of attributes.\n   */\n  function UIElement(name, attributes, children) {\n    var _this;\n\n    _classCallCheck(this, UIElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UIElement).call(this, name, attributes, children));\n    /**\n     * Returns `null` because filler is not needed for UIElements.\n     *\n     * @method #getFillerOffset\n     * @returns {null} Always returns null.\n     */\n\n    _this.getFillerOffset = getFillerOffset;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(UIElement, [{\n    key: \"is\",\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'uiElement' || _get(_getPrototypeOf(UIElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'uiElement' && name == this.name || _get(_getPrototypeOf(UIElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n    /**\n     * Overrides {@link module:engine/view/element~Element#_insertChild} method.\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` to prevent adding any child nodes\n     * to UIElement.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_insertChild\",\n    value: function _insertChild(index, nodes) {\n      if (nodes && (nodes instanceof Node || Array.from(nodes).length > 0)) {\n        /**\n         * Cannot add children to {@link module:engine/view/uielement~UIElement}.\n         *\n         * @error view-uielement-cannot-add\n         */\n        throw new CKEditorError('view-uielement-cannot-add: Cannot add child nodes to UIElement instance.');\n      }\n    }\n    /**\n     * Renders this {@link module:engine/view/uielement~UIElement} to DOM. This method is called by\n     * {@link module:engine/view/domconverter~DomConverter}.\n     * Do not use inheritance to create custom rendering method, replace `render()` method instead:\n     *\n     *\t\tconst myUIElement = downcastWriter.createUIElement( 'span' );\n     *\t\tmyUIElement.render = function( domDocument ) {\n     *\t\t\tconst domElement = this.toDomElement( domDocument );\n     *\t\t\tdomElement.innerHTML = '<b>this is ui element</b>';\n     *\n     *\t\t\treturn domElement;\n     *\t\t};\n     *\n     * @param {Document} domDocument\n     * @returns {HTMLElement}\n     */\n\n  }, {\n    key: \"render\",\n    value: function render(domDocument) {\n      return this.toDomElement(domDocument);\n    }\n    /**\n     * Creates DOM element based on this view UIElement.\n     * Note that each time this method is called new DOM element is created.\n     *\n     * @param {Document} domDocument\n     * @returns {HTMLElement}\n     */\n\n  }, {\n    key: \"toDomElement\",\n    value: function toDomElement(domDocument) {\n      var domElement = domDocument.createElement(this.name);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.getAttributeKeys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var key = _step.value;\n          domElement.setAttribute(key, this.getAttribute(key));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return domElement;\n    }\n  }]);\n\n  return UIElement;\n}(Element);\n/**\n * This function injects UI element handling to the given {@link module:engine/view/document~Document document}.\n *\n * A callback is added to {@link module:engine/view/document~Document#event:keydown document keydown event}.\n * The callback handles the situation when right arrow key is pressed and selection is collapsed before a UI element.\n * Without this handler, it would be impossible to \"jump over\" UI element using right arrow key.\n *\n * @param {module:engine/view/view~View} view View controller to which the quirks handling will be injected.\n */\n\n\nexport { UIElement as default };\nexport function injectUiElementHandling(view) {\n  view.document.on('keydown', function (evt, data) {\n    return jumpOverUiElement(evt, data, view.domConverter);\n  });\n} // Returns `null` because block filler is not needed for UIElements.\n//\n// @returns {null}\n\nfunction getFillerOffset() {\n  return null;\n} // Selection cannot be placed in a `UIElement`. Whenever it is placed there, it is moved before it. This\n// causes a situation when it is impossible to jump over `UIElement` using right arrow key, because the selection\n// ends up in ui element (in DOM) and is moved back to the left. This handler fixes this situation.\n\n\nfunction jumpOverUiElement(evt, data, domConverter) {\n  if (data.keyCode == keyCodes.arrowright) {\n    var domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n    var domSelectionCollapsed = domSelection.rangeCount == 1 && domSelection.getRangeAt(0).collapsed; // Jump over UI element if selection is collapsed or shift key is pressed. These are the cases when selection would extend.\n\n    if (domSelectionCollapsed || data.shiftKey) {\n      var domParent = domSelection.focusNode;\n      var domOffset = domSelection.focusOffset;\n      var viewPosition = domConverter.domPositionToView(domParent, domOffset); // In case if dom element is not converted to view or is not mapped or something. Happens for example in some tests.\n\n      if (viewPosition === null) {\n        return;\n      } // Skip all following ui elements.\n\n\n      var jumpedOverAnyUiElement = false;\n      var nextViewPosition = viewPosition.getLastMatchingPosition(function (value) {\n        if (value.item.is('uiElement')) {\n          // Remember that there was at least one ui element.\n          jumpedOverAnyUiElement = true;\n        } // Jump over ui elements, jump over empty attribute elements, move up from inside of attribute element.\n\n\n        if (value.item.is('uiElement') || value.item.is('attributeElement')) {\n          return true;\n        } // Don't jump over text or don't get out of container element.\n\n\n        return false;\n      }); // If anything has been skipped, fix position.\n      // This `if` could be possibly omitted but maybe it is better not to mess with DOM selection if not needed.\n\n      if (jumpedOverAnyUiElement) {\n        var newDomPosition = domConverter.viewPositionToDom(nextViewPosition);\n\n        if (domSelectionCollapsed) {\n          // Selection was collapsed, so collapse it at further position.\n          domSelection.collapse(newDomPosition.parent, newDomPosition.offset);\n        } else {\n          // Selection was not collapse, so extend it instead of collapsing.\n          domSelection.extend(newDomPosition.parent, newDomPosition.offset);\n        }\n      }\n    }\n  }\n}","import _toConsumableArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module module:engine/view/downcastwriter\n */\nimport Position from './position';\nimport Range from './range';\nimport Selection from './selection';\nimport ContainerElement from './containerelement';\nimport AttributeElement from './attributeelement';\nimport EmptyElement from './emptyelement';\nimport UIElement from './uielement';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport DocumentFragment from './documentfragment';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport Text from './text';\nimport EditableElement from './editableelement';\nimport { isPlainObject } from 'lodash-es';\n/**\n * View downcast writer.\n *\n * It provides a set of methods used to manipulate view nodes.\n *\n * Do not create an instance of this writer manually. To modify a view structure, use\n * the {@link module:engine/view/view~View#change `View#change()`} block.\n *\n * The `DowncastWriter` is designed to work with semantic views which are the views that were/are being downcasted from the model.\n * To work with ordinary views (e.g. parsed from a pasted content) use the\n * {@link module:engine/view/upcastwriter~UpcastWriter upcast writer}.\n *\n * Read more about changing the view in the {@glink framework/guides/architecture/editing-engine#changing-the-view Changing the view}\n * section of the {@glink framework/guides/architecture/editing-engine Editing engine architecture} guide.\n */\n\nvar DowncastWriter =\n/*#__PURE__*/\nfunction () {\n  function DowncastWriter(document) {\n    _classCallCheck(this, DowncastWriter);\n\n    /**\n     * @readonly\n     * @type {module:engine/view/document~Document}\n     */\n    this.document = document;\n    /**\n     * Holds references to the attribute groups that share the same {@link module:engine/view/attributeelement~AttributeElement#id id}.\n     * The keys are `id`s, the values are `Set`s holding {@link module:engine/view/attributeelement~AttributeElement}s.\n     *\n     * @private\n     * @type {Map.<String,Set>}\n     */\n\n    this._cloneGroups = new Map();\n  }\n  /**\n   * Sets {@link module:engine/view/documentselection~DocumentSelection selection's} ranges and direction to the\n   * specified location based on the given {@link module:engine/view/selection~Selectable selectable}.\n   *\n   * Usage:\n   *\n   *\t\t// Sets selection to the given range.\n   *\t\tconst range = writer.createRange( start, end );\n   *\t\twriter.setSelection( range );\n   *\n   *\t\t// Sets backward selection to the given range.\n   *\t\tconst range = writer.createRange( start, end );\n   *\t\twriter.setSelection( range );\n   *\n   *\t\t// Sets selection to given ranges.\n   * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n   *\t\twriter.setSelection( range );\n   *\n   *\t\t// Sets selection to the other selection.\n   *\t\tconst otherSelection = writer.createSelection();\n   *\t\twriter.setSelection( otherSelection );\n   *\n   * \t\t// Sets collapsed selection at the given position.\n   *\t\tconst position = writer.createPositionFromPath( root, path );\n   *\t\twriter.setSelection( position );\n   *\n   * \t\t// Sets collapsed selection at the position of given item and offset.\n   *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n   *\t\twriter.setSelection( paragraph, offset );\n   *\n   * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n  \t * that element and ends after the last child of that element.\n   *\n   * \t\twriter.setSelection( paragraph, 'in' );\n   *\n   * Creates a range on the {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n   *\n   *\t\twriter.setSelection( paragraph, 'on' );\n   *\n   * \t\t// Removes all ranges.\n   *\t\twriter.setSelection( null );\n   *\n   * `DowncastWriter#setSelection()` allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n   *\n   *\t\t// Sets selection as backward.\n   *\t\twriter.setSelection( range, { backward: true } );\n   *\n   *\t\t// Sets selection as fake.\n   *\t\t// Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n   * \t\t// This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n   * \t\t// represented in other way, for example by applying proper CSS class.\n   *\t\twriter.setSelection( range, { fake: true } );\n   *\n   * \t\t// Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n   * \t\t// (and be  properly handled by screen readers).\n   *\t\twriter.setSelection( range, { fake: true, label: 'foo' } );\n   *\n   * @param {module:engine/view/selection~Selectable} selectable\n   * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n   * @param {Object} [options]\n   * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n   * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n   * @param {String} [options.label] Label for the fake selection.\n   */\n\n\n  _createClass(DowncastWriter, [{\n    key: \"setSelection\",\n    value: function setSelection(selectable, placeOrOffset, options) {\n      this.document.selection._setTo(selectable, placeOrOffset, options);\n    }\n    /**\n     * Moves {@link module:engine/view/documentselection~DocumentSelection#focus selection's focus} to the specified location.\n     *\n     * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n     * parameters.\n     *\n     * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/view/item~Item view item}.\n     */\n\n  }, {\n    key: \"setSelectionFocus\",\n    value: function setSelectionFocus(itemOrPosition, offset) {\n      this.document.selection._setFocus(itemOrPosition, offset);\n    }\n    /**\n     * Creates a new {@link module:engine/view/text~Text text node}.\n     *\n     *\t\twriter.createText( 'foo' );\n     *\n     * @param {String} data The text's data.\n     * @returns {module:engine/view/text~Text} The created text node.\n     */\n\n  }, {\n    key: \"createText\",\n    value: function createText(data) {\n      return new Text(data);\n    }\n    /**\n     * Creates new {@link module:engine/view/attributeelement~AttributeElement}.\n     *\n     *\t\twriter.createAttributeElement( 'strong' );\n     *\t\twriter.createAttributeElement( 'strong', { alignment: 'center' } );\n     *\n     *\t\t// Make `<a>` element contain other attributes element so the `<a>` element is not broken.\n     *\t\twriter.createAttributeElement( 'a', { href: 'foo.bar' }, { priority: 5 } );\n     *\n     *\t\t// Set `id` of a marker element so it is not joined or merged with \"normal\" elements.\n     *\t\twriter.createAttributeElement( 'span', { class: 'myMarker' }, { id: 'marker:my' } );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Element's attributes.\n     * @param {Object} [options] Element's options.\n     * @param {Number} [options.priority] Element's {@link module:engine/view/attributeelement~AttributeElement#priority priority}.\n     * @param {Number|String} [options.id] Element's {@link module:engine/view/attributeelement~AttributeElement#id id}.\n     * @returns {module:engine/view/attributeelement~AttributeElement} Created element.\n     */\n\n  }, {\n    key: \"createAttributeElement\",\n    value: function createAttributeElement(name, attributes) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var attributeElement = new AttributeElement(name, attributes);\n\n      if (options.priority) {\n        attributeElement._priority = options.priority;\n      }\n\n      if (options.id) {\n        attributeElement._id = options.id;\n      }\n\n      return attributeElement;\n    }\n    /**\n     * Creates new {@link module:engine/view/containerelement~ContainerElement}.\n     *\n     *\t\twriter.createContainerElement( 'paragraph' );\n     *\t\twriter.createContainerElement( 'paragraph', { alignment: 'center' } );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @returns {module:engine/view/containerelement~ContainerElement} Created element.\n     */\n\n  }, {\n    key: \"createContainerElement\",\n    value: function createContainerElement(name, attributes) {\n      return new ContainerElement(name, attributes);\n    }\n    /**\n     * Creates new {@link module:engine/view/editableelement~EditableElement}.\n     *\n     *\t\twriter.createEditableElement( 'div' );\n     *\t\twriter.createEditableElement( 'div', { alignment: 'center' } );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @returns {module:engine/view/editableelement~EditableElement} Created element.\n     */\n\n  }, {\n    key: \"createEditableElement\",\n    value: function createEditableElement(name, attributes) {\n      var editableElement = new EditableElement(name, attributes);\n      editableElement._document = this.document;\n      return editableElement;\n    }\n    /**\n     * Creates new {@link module:engine/view/emptyelement~EmptyElement}.\n     *\n     *\t\twriter.createEmptyElement( 'img' );\n     *\t\twriter.createEmptyElement( 'img', { alignment: 'center' } );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @returns {module:engine/view/emptyelement~EmptyElement} Created element.\n     */\n\n  }, {\n    key: \"createEmptyElement\",\n    value: function createEmptyElement(name, attributes) {\n      return new EmptyElement(name, attributes);\n    }\n    /**\n     * Creates new {@link module:engine/view/uielement~UIElement}.\n     *\n     *\t\twriter.createUIElement( 'span' );\n     *\t\twriter.createUIElement( 'span', { alignment: 'center' } );\n     *\n     * Custom render function can be provided as third parameter:\n     *\n     *\t\twriter.createUIElement( 'span', null, function( domDocument ) {\n     *\t\t\tconst domElement = this.toDomElement( domDocument );\n     *\t\t\tdomElement.innerHTML = '<b>this is ui element</b>';\n     *\n     *\t\t\treturn domElement;\n     *\t\t} );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @param {Function} [renderFunction] Custom render function.\n     * @returns {module:engine/view/uielement~UIElement} Created element.\n     */\n\n  }, {\n    key: \"createUIElement\",\n    value: function createUIElement(name, attributes, renderFunction) {\n      var uiElement = new UIElement(name, attributes);\n\n      if (renderFunction) {\n        uiElement.render = renderFunction;\n      }\n\n      return uiElement;\n    }\n    /**\n     * Adds or overwrite element's attribute with a specified key and value.\n     *\n     *\t\twriter.setAttribute( 'href', 'http://ckeditor.com', linkElement );\n     *\n     * @param {String} key Attribute key.\n     * @param {String} value Attribute value.\n     * @param {module:engine/view/element~Element} element\n     */\n\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(key, value, element) {\n      element._setAttribute(key, value);\n    }\n    /**\n     * Removes attribute from the element.\n     *\n     *\t\twriter.removeAttribute( 'href', linkElement );\n     *\n     * @param {String} key Attribute key.\n     * @param {module:engine/view/element~Element} element\n     */\n\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(key, element) {\n      element._removeAttribute(key);\n    }\n    /**\n     * Adds specified class to the element.\n     *\n     *\t\twriter.addClass( 'foo', linkElement );\n     *\t\twriter.addClass( [ 'foo', 'bar' ], linkElement );\n     *\n     * @param {Array.<String>|String} className\n     * @param {module:engine/view/element~Element} element\n     */\n\n  }, {\n    key: \"addClass\",\n    value: function addClass(className, element) {\n      element._addClass(className);\n    }\n    /**\n     * Removes specified class from the element.\n     *\n     *\t\twriter.removeClass( 'foo', linkElement );\n     *\t\twriter.removeClass( [ 'foo', 'bar' ], linkElement );\n     *\n     * @param {Array.<String>|String} className\n     * @param {module:engine/view/element~Element} element\n     */\n\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(className, element) {\n      element._removeClass(className);\n    }\n    /**\n     * Adds style to the element.\n     *\n     *\t\twriter.setStyle( 'color', 'red', element );\n     *\t\twriter.setStyle( {\n     *\t\t\tcolor: 'red',\n     *\t\t\tposition: 'fixed'\n     *\t\t}, element );\n     *\n     * @param {String|Object} property Property name or object with key - value pairs.\n     * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\n     * @param {module:engine/view/element~Element} element Element to set styles on.\n     */\n\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(property, value, element) {\n      if (isPlainObject(property) && element === undefined) {\n        element = value;\n      }\n\n      element._setStyle(property, value);\n    }\n    /**\n     * Removes specified style from the element.\n     *\n     *\t\twriter.removeStyle( 'color', element );  // Removes 'color' style.\n     *\t\twriter.removeStyle( [ 'color', 'border-top' ], element ); // Removes both 'color' and 'border-top' styles.\n     *\n     * @param {Array.<String>|String} property\n     * @param {module:engine/view/element~Element} element\n     */\n\n  }, {\n    key: \"removeStyle\",\n    value: function removeStyle(property, element) {\n      element._removeStyle(property);\n    }\n    /**\n     * Sets a custom property on element. Unlike attributes, custom properties are not rendered to the DOM,\n     * so they can be used to add special data to elements.\n     *\n     * @param {String|Symbol} key\n     * @param {*} value\n     * @param {module:engine/view/element~Element} element\n     */\n\n  }, {\n    key: \"setCustomProperty\",\n    value: function setCustomProperty(key, value, element) {\n      element._setCustomProperty(key, value);\n    }\n    /**\n     * Removes a custom property stored under the given key.\n     *\n     * @param {String|Symbol} key\n     * @param {module:engine/view/element~Element} element\n     * @returns {Boolean} Returns true if property was removed.\n     */\n\n  }, {\n    key: \"removeCustomProperty\",\n    value: function removeCustomProperty(key, element) {\n      return element._removeCustomProperty(key);\n    }\n    /**\n     * Breaks attribute nodes at provided position or at boundaries of provided range. It breaks attribute elements inside\n     * up to a container element.\n     *\n     * In following examples `<p>` is a container, `<b>` and `<u>` are attribute nodes:\n     *\n     *        <p>foo<b><u>bar{}</u></b></p> -> <p>foo<b><u>bar</u></b>[]</p>\n     *        <p>foo<b><u>{}bar</u></b></p> -> <p>foo{}<b><u>bar</u></b></p>\n     *        <p>foo<b><u>b{}ar</u></b></p> -> <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\n     *        <p><b>fo{o</b><u>ba}r</u></p> -> <p><b>fo</b><b>o</b><u>ba</u><u>r</u></b></p>\n     *\n     * **Note:** {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\n     *\n     * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes breakAttributes} and\n     * {@link module:engine/view/downcastwriter~DowncastWriter#breakContainer breakContainer} is that `breakAttributes` breaks all\n     * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of given `position`,\n     * up to the first encountered {@link module:engine/view/containerelement~ContainerElement container element}.\n     * `breakContainer` assumes that given `position` is directly in container element and breaks that container element.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container`\n     * when {@link module:engine/view/range~Range#start start}\n     * and {@link module:engine/view/range~Range#end end} positions of a passed range are not placed inside same parent container.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-empty-element`\n     * when trying to break attributes\n     * inside {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-ui-element`\n     * when trying to break attributes\n     * inside {@link module:engine/view/uielement~UIElement UIElement}.\n     *\n     * @see module:engine/view/attributeelement~AttributeElement\n     * @see module:engine/view/containerelement~ContainerElement\n     * @see module:engine/view/downcastwriter~DowncastWriter#breakContainer\n     * @param {module:engine/view/position~Position|module:engine/view/range~Range} positionOrRange Position where\n     * to break attribute elements.\n     * @returns {module:engine/view/position~Position|module:engine/view/range~Range} New position or range, after breaking the attribute\n     * elements.\n     */\n\n  }, {\n    key: \"breakAttributes\",\n    value: function breakAttributes(positionOrRange) {\n      if (positionOrRange instanceof Position) {\n        return this._breakAttributes(positionOrRange);\n      } else {\n        return this._breakAttributesRange(positionOrRange);\n      }\n    }\n    /**\n     * Breaks {@link module:engine/view/containerelement~ContainerElement container view element} into two, at the given position. Position\n     * has to be directly inside container element and cannot be in root. Does not break if position is at the beginning\n     * or at the end of it's parent element.\n     *\n     *        <p>foo^bar</p> -> <p>foo</p><p>bar</p>\n     *        <div><p>foo</p>^<p>bar</p></div> -> <div><p>foo</p></div><div><p>bar</p></div>\n     *        <p>^foobar</p> -> ^<p>foobar</p>\n     *        <p>foobar^</p> -> <p>foobar</p>^\n     *\n     * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes breakAttributes} and\n     * {@link module:engine/view/downcastwriter~DowncastWriter#breakContainer breakContainer} is that `breakAttributes` breaks all\n     * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of given `position`,\n     * up to the first encountered {@link module:engine/view/containerelement~ContainerElement container element}.\n     * `breakContainer` assumes that given `position` is directly in container element and breaks that container element.\n     *\n     * @see module:engine/view/attributeelement~AttributeElement\n     * @see module:engine/view/containerelement~ContainerElement\n     * @see module:engine/view/downcastwriter~DowncastWriter#breakAttributes\n     * @param {module:engine/view/position~Position} position Position where to break element.\n     * @returns {module:engine/view/position~Position} Position between broken elements. If element has not been broken,\n     * the returned position is placed either before it or after it.\n     */\n\n  }, {\n    key: \"breakContainer\",\n    value: function breakContainer(position) {\n      var element = position.parent;\n\n      if (!element.is('containerElement')) {\n        /**\n         * Trying to break an element which is not a container element.\n         *\n         * @error view-writer-break-non-container-element\n         */\n        throw new CKEditorError('view-writer-break-non-container-element: Trying to break an element which is not a container element.');\n      }\n\n      if (!element.parent) {\n        /**\n         * Trying to break root element.\n         *\n         * @error view-writer-break-root\n         */\n        throw new CKEditorError('view-writer-break-root: Trying to break root element.');\n      }\n\n      if (position.isAtStart) {\n        return Position._createBefore(element);\n      } else if (!position.isAtEnd) {\n        var newElement = element._clone(false);\n\n        this.insert(Position._createAfter(element), newElement);\n        var sourceRange = new Range(position, Position._createAt(element, 'end'));\n        var targetPosition = new Position(newElement, 0);\n        this.move(sourceRange, targetPosition);\n      }\n\n      return Position._createAfter(element);\n    }\n    /**\n     * Merges {@link module:engine/view/attributeelement~AttributeElement attribute elements}. It also merges text nodes if needed.\n     * Only {@link module:engine/view/attributeelement~AttributeElement#isSimilar similar} attribute elements can be merged.\n     *\n     * In following examples `<p>` is a container and `<b>` is an attribute element:\n     *\n     *        <p>foo[]bar</p> -> <p>foo{}bar</p>\n     *        <p><b>foo</b>[]<b>bar</b></p> -> <p><b>foo{}bar</b></p>\n     *        <p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p> -> <p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p>\n     *\n     * It will also take care about empty attributes when merging:\n     *\n     *        <p><b>[]</b></p> -> <p>[]</p>\n     *        <p><b>foo</b><i>[]</i><b>bar</b></p> -> <p><b>foo{}bar</b></p>\n     *\n     * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#mergeAttributes mergeAttributes} and\n     * {@link module:engine/view/downcastwriter~DowncastWriter#mergeContainers mergeContainers} is that `mergeAttributes` merges two\n     * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\n     * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\n     *\n     * @see module:engine/view/attributeelement~AttributeElement\n     * @see module:engine/view/containerelement~ContainerElement\n     * @see module:engine/view/downcastwriter~DowncastWriter#mergeContainers\n     * @param {module:engine/view/position~Position} position Merge position.\n     * @returns {module:engine/view/position~Position} Position after merge.\n     */\n\n  }, {\n    key: \"mergeAttributes\",\n    value: function mergeAttributes(position) {\n      var positionOffset = position.offset;\n      var positionParent = position.parent; // When inside text node - nothing to merge.\n\n      if (positionParent.is('text')) {\n        return position;\n      } // When inside empty attribute - remove it.\n\n\n      if (positionParent.is('attributeElement') && positionParent.childCount === 0) {\n        var parent = positionParent.parent;\n        var offset = positionParent.index;\n\n        positionParent._remove();\n\n        this._removeFromClonedElementsGroup(positionParent);\n\n        return this.mergeAttributes(new Position(parent, offset));\n      }\n\n      var nodeBefore = positionParent.getChild(positionOffset - 1);\n      var nodeAfter = positionParent.getChild(positionOffset); // Position should be placed between two nodes.\n\n      if (!nodeBefore || !nodeAfter) {\n        return position;\n      } // When position is between two text nodes.\n\n\n      if (nodeBefore.is('text') && nodeAfter.is('text')) {\n        return mergeTextNodes(nodeBefore, nodeAfter);\n      } // When position is between two same attribute elements.\n      else if (nodeBefore.is('attributeElement') && nodeAfter.is('attributeElement') && nodeBefore.isSimilar(nodeAfter)) {\n          // Move all children nodes from node placed after selection and remove that node.\n          var count = nodeBefore.childCount;\n\n          nodeBefore._appendChild(nodeAfter.getChildren());\n\n          nodeAfter._remove();\n\n          this._removeFromClonedElementsGroup(nodeAfter); // New position is located inside the first node, before new nodes.\n          // Call this method recursively to merge again if needed.\n\n\n          return this.mergeAttributes(new Position(nodeBefore, count));\n        }\n\n      return position;\n    }\n    /**\n     * Merges two {@link module:engine/view/containerelement~ContainerElement container elements} that are before and after given position.\n     * Precisely, the element after the position is removed and it's contents are moved to element before the position.\n     *\n     *        <p>foo</p>^<p>bar</p> -> <p>foo^bar</p>\n     *        <div>foo</div>^<p>bar</p> -> <div>foo^bar</div>\n     *\n     * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#mergeAttributes mergeAttributes} and\n     * {@link module:engine/view/downcastwriter~DowncastWriter#mergeContainers mergeContainers} is that `mergeAttributes` merges two\n     * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\n     * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\n     *\n     * @see module:engine/view/attributeelement~AttributeElement\n     * @see module:engine/view/containerelement~ContainerElement\n     * @see module:engine/view/downcastwriter~DowncastWriter#mergeAttributes\n     * @param {module:engine/view/position~Position} position Merge position.\n     * @returns {module:engine/view/position~Position} Position after merge.\n     */\n\n  }, {\n    key: \"mergeContainers\",\n    value: function mergeContainers(position) {\n      var prev = position.nodeBefore;\n      var next = position.nodeAfter;\n\n      if (!prev || !next || !prev.is('containerElement') || !next.is('containerElement')) {\n        /**\n         * Element before and after given position cannot be merged.\n         *\n         * @error view-writer-merge-containers-invalid-position\n         */\n        throw new CKEditorError('view-writer-merge-containers-invalid-position: ' + 'Element before and after given position cannot be merged.');\n      }\n\n      var lastChild = prev.getChild(prev.childCount - 1);\n      var newPosition = lastChild instanceof Text ? Position._createAt(lastChild, 'end') : Position._createAt(prev, 'end');\n      this.move(Range._createIn(next), Position._createAt(prev, 'end'));\n      this.remove(Range._createOn(next));\n      return newPosition;\n    }\n    /**\n     * Insert node or nodes at specified position. Takes care about breaking attributes before insertion\n     * and merging them afterwards.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\n     * contains instances that are not {@link module:engine/view/text~Text Texts},\n     * {@link module:engine/view/attributeelement~AttributeElement AttributeElements},\n     * {@link module:engine/view/containerelement~ContainerElement ContainerElements},\n     * {@link module:engine/view/emptyelement~EmptyElement EmptyElements} or\n     * {@link module:engine/view/uielement~UIElement UIElements}.\n     *\n     * @param {module:engine/view/position~Position} position Insertion position.\n     * @param {module:engine/view/text~Text|module:engine/view/attributeelement~AttributeElement|\n     * module:engine/view/containerelement~ContainerElement|module:engine/view/emptyelement~EmptyElement|\n     * module:engine/view/uielement~UIElement|Iterable.<module:engine/view/text~Text|\n     * module:engine/view/attributeelement~AttributeElement|module:engine/view/containerelement~ContainerElement|\n     * module:engine/view/emptyelement~EmptyElement|module:engine/view/uielement~UIElement>} nodes Node or nodes to insert.\n     * @returns {module:engine/view/range~Range} Range around inserted nodes.\n     */\n\n  }, {\n    key: \"insert\",\n    value: function insert(position, nodes) {\n      nodes = isIterable(nodes) ? _toConsumableArray(nodes) : [nodes]; // Check if nodes to insert are instances of AttributeElements, ContainerElements, EmptyElements, UIElements or Text.\n\n      validateNodesToInsert(nodes);\n      var container = getParentContainer(position);\n\n      if (!container) {\n        /**\n         * Position's parent container cannot be found.\n         *\n         * @error view-writer-invalid-position-container\n         */\n        throw new CKEditorError('view-writer-invalid-position-container');\n      }\n\n      var insertionPosition = this._breakAttributes(position, true);\n\n      var length = container._insertChild(insertionPosition.offset, nodes);\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var node = _step.value;\n\n          this._addToClonedElementsGroup(node);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var endPosition = insertionPosition.getShiftedBy(length);\n      var start = this.mergeAttributes(insertionPosition); // When no nodes were inserted - return collapsed range.\n\n      if (length === 0) {\n        return new Range(start, start);\n      } else {\n        // If start position was merged - move end position.\n        if (!start.isEqual(insertionPosition)) {\n          endPosition.offset--;\n        }\n\n        var end = this.mergeAttributes(endPosition);\n        return new Range(start, end);\n      }\n    }\n    /**\n     * Removes provided range from the container.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n     * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n     * same parent container.\n     *\n     * @param {module:engine/view/range~Range|module:engine/view/item~Item} rangeOrItem Range to remove from container\n     * or an {@link module:engine/view/item~Item item} to remove. If range is provided, after removing, it will be updated\n     * to a collapsed range showing the new position.\n     * @returns {module:engine/view/documentfragment~DocumentFragment} Document fragment containing removed nodes.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(rangeOrItem) {\n      var range = rangeOrItem instanceof Range ? rangeOrItem : Range._createOn(rangeOrItem);\n      validateRangeContainer(range); // If range is collapsed - nothing to remove.\n\n      if (range.isCollapsed) {\n        return new DocumentFragment();\n      } // Break attributes at range start and end.\n\n\n      var _this$_breakAttribute = this._breakAttributesRange(range, true),\n          breakStart = _this$_breakAttribute.start,\n          breakEnd = _this$_breakAttribute.end;\n\n      var parentContainer = breakStart.parent;\n      var count = breakEnd.offset - breakStart.offset; // Remove nodes in range.\n\n      var removed = parentContainer._removeChildren(breakStart.offset, count);\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = removed[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var node = _step2.value;\n\n          this._removeFromClonedElementsGroup(node);\n        } // Merge after removing.\n\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var mergePosition = this.mergeAttributes(breakStart);\n      range.start = mergePosition;\n      range.end = mergePosition.clone(); // Return removed nodes.\n\n      return new DocumentFragment(removed);\n    }\n    /**\n     * Removes matching elements from given range.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n     * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n     * same parent container.\n     *\n     * @param {module:engine/view/range~Range} range Range to clear.\n     * @param {module:engine/view/element~Element} element Element to remove.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear(range, element) {\n      validateRangeContainer(range); // Create walker on given range.\n      // We walk backward because when we remove element during walk it modifies range end position.\n\n      var walker = range.getWalker({\n        direction: 'backward',\n        ignoreElementEnd: true\n      }); // Let's walk.\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = walker[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var current = _step3.value;\n          var item = current.item;\n          var rangeToRemove = void 0; // When current item matches to the given element.\n\n          if (item.is('element') && element.isSimilar(item)) {\n            // Create range on this element.\n            rangeToRemove = Range._createOn(item); // When range starts inside Text or TextProxy element.\n          } else if (!current.nextPosition.isAfter(range.start) && item.is('textProxy')) {\n            // We need to check if parent of this text matches to given element.\n            var parentElement = item.getAncestors().find(function (ancestor) {\n              return ancestor.is('element') && element.isSimilar(ancestor);\n            }); // If it is then create range inside this element.\n\n            if (parentElement) {\n              rangeToRemove = Range._createIn(parentElement);\n            }\n          } // If we have found element to remove.\n\n\n          if (rangeToRemove) {\n            // We need to check if element range stick out of the given range and truncate if it is.\n            if (rangeToRemove.end.isAfter(range.end)) {\n              rangeToRemove.end = range.end;\n            }\n\n            if (rangeToRemove.start.isBefore(range.start)) {\n              rangeToRemove.start = range.start;\n            } // At the end we remove range with found element.\n\n\n            this.remove(rangeToRemove);\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n    /**\n     * Moves nodes from provided range to target position.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n     * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n     * same parent container.\n     *\n     * @param {module:engine/view/range~Range} sourceRange Range containing nodes to move.\n     * @param {module:engine/view/position~Position} targetPosition Position to insert.\n     * @returns {module:engine/view/range~Range} Range in target container. Inserted nodes are placed between\n     * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions.\n     */\n\n  }, {\n    key: \"move\",\n    value: function move(sourceRange, targetPosition) {\n      var nodes;\n\n      if (targetPosition.isAfter(sourceRange.end)) {\n        targetPosition = this._breakAttributes(targetPosition, true);\n        var parent = targetPosition.parent;\n        var countBefore = parent.childCount;\n        sourceRange = this._breakAttributesRange(sourceRange, true);\n        nodes = this.remove(sourceRange);\n        targetPosition.offset += parent.childCount - countBefore;\n      } else {\n        nodes = this.remove(sourceRange);\n      }\n\n      return this.insert(targetPosition, nodes);\n    }\n    /**\n        * Wraps elements within range with provided {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n        * If a collapsed range is provided, it will be wrapped only if it is equal to view selection.\n        *\n        * If a collapsed range was passed and is same as selection, the selection\n        * will be moved to the inside of the wrapped attribute element.\n        *\n        * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-invalid-range-container`\n        * when {@link module:engine/view/range~Range#start}\n        * and {@link module:engine/view/range~Range#end} positions are not placed inside same parent container.\n        *\n        * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n        * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n        *\n        * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-nonselection-collapsed-range` when passed range\n        * is collapsed and different than view selection.\n        *\n        * @param {module:engine/view/range~Range} range Range to wrap.\n        * @param {module:engine/view/attributeelement~AttributeElement} attribute Attribute element to use as wrapper.\n        * @returns {module:engine/view/range~Range} range Range after wrapping, spanning over wrapping attribute element.\n       */\n\n  }, {\n    key: \"wrap\",\n    value: function wrap(range, attribute) {\n      if (!(attribute instanceof AttributeElement)) {\n        throw new CKEditorError('view-writer-wrap-invalid-attribute');\n      }\n\n      validateRangeContainer(range);\n\n      if (!range.isCollapsed) {\n        // Non-collapsed range. Wrap it with the attribute element.\n        return this._wrapRange(range, attribute);\n      } else {\n        // Collapsed range. Wrap position.\n        var position = range.start;\n\n        if (position.parent.is('element') && !_hasNonUiChildren(position.parent)) {\n          position = position.getLastMatchingPosition(function (value) {\n            return value.item.is('uiElement');\n          });\n        }\n\n        position = this._wrapPosition(position, attribute);\n        var viewSelection = this.document.selection; // If wrapping position is equal to view selection, move view selection inside wrapping attribute element.\n\n        if (viewSelection.isCollapsed && viewSelection.getFirstPosition().isEqual(range.start)) {\n          this.setSelection(position);\n        }\n\n        return new Range(position);\n      }\n    }\n    /**\n     * Unwraps nodes within provided range from attribute element.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n     * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n     * same parent container.\n     *\n     * @param {module:engine/view/range~Range} range\n     * @param {module:engine/view/attributeelement~AttributeElement} attribute\n     */\n\n  }, {\n    key: \"unwrap\",\n    value: function unwrap(range, attribute) {\n      if (!(attribute instanceof AttributeElement)) {\n        /**\n         * Attribute element need to be instance of attribute element.\n         *\n         * @error view-writer-unwrap-invalid-attribute\n         */\n        throw new CKEditorError('view-writer-unwrap-invalid-attribute');\n      }\n\n      validateRangeContainer(range); // If range is collapsed - nothing to unwrap.\n\n      if (range.isCollapsed) {\n        return range;\n      } // Break attributes at range start and end.\n\n\n      var _this$_breakAttribute2 = this._breakAttributesRange(range, true),\n          breakStart = _this$_breakAttribute2.start,\n          breakEnd = _this$_breakAttribute2.end;\n\n      var parentContainer = breakStart.parent; // Unwrap children located between break points.\n\n      var newRange = this._unwrapChildren(parentContainer, breakStart.offset, breakEnd.offset, attribute); // Merge attributes at the both ends and return a new range.\n\n\n      var start = this.mergeAttributes(newRange.start); // If start position was merged - move end position back.\n\n      if (!start.isEqual(newRange.start)) {\n        newRange.end.offset--;\n      }\n\n      var end = this.mergeAttributes(newRange.end);\n      return new Range(start, end);\n    }\n    /**\n     * Renames element by creating a copy of renamed element but with changed name and then moving contents of the\n     * old element to the new one. Keep in mind that this will invalidate all {@link module:engine/view/position~Position positions} which\n     * has renamed element as {@link module:engine/view/position~Position#parent a parent}.\n     *\n     * New element has to be created because `Element#tagName` property in DOM is readonly.\n     *\n     * Since this function creates a new element and removes the given one, the new element is returned to keep reference.\n     *\n     * @param {String} newName New name for element.\n     * @param {module:engine/view/containerelement~ContainerElement} viewElement Element to be renamed.\n     */\n\n  }, {\n    key: \"rename\",\n    value: function rename(newName, viewElement) {\n      var newElement = new ContainerElement(newName, viewElement.getAttributes());\n      this.insert(Position._createAfter(viewElement), newElement);\n      this.move(Range._createIn(viewElement), Position._createAt(newElement, 0));\n      this.remove(Range._createOn(viewElement));\n      return newElement;\n    }\n    /**\n     * Cleans up memory by removing obsolete cloned elements group from the writer.\n     *\n     * Should be used whenever all {@link module:engine/view/attributeelement~AttributeElement attribute elements}\n     * with the same {@link module:engine/view/attributeelement~AttributeElement#id id} are going to be removed from the view and\n     * the group will no longer be needed.\n     *\n     * Cloned elements group are not removed automatically in case if the group is still needed after all its elements\n     * were removed from the view.\n     *\n     * Keep in mind that group names are equal to the `id` property of the attribute element.\n     *\n     * @param {String} groupName Name of the group to clear.\n     */\n\n  }, {\n    key: \"clearClonedElementsGroup\",\n    value: function clearClonedElementsGroup(groupName) {\n      this._cloneGroups.delete(groupName);\n    }\n    /**\n     * Creates position at the given location. The location can be specified as:\n     *\n     * * a {@link module:engine/view/position~Position position},\n     * * parent element and offset (offset defaults to `0`),\n     * * parent element and `'end'` (sets position at the end of that element),\n     * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n     *\n     * This method is a shortcut to other constructors such as:\n     *\n     * * {@link #createPositionBefore},\n     * * {@link #createPositionAfter},\n     *\n     * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/view/item~Item view item}.\n     */\n\n  }, {\n    key: \"createPositionAt\",\n    value: function createPositionAt(itemOrPosition, offset) {\n      return Position._createAt(itemOrPosition, offset);\n    }\n    /**\n     * Creates a new position after given view item.\n     *\n     * @param {module:engine/view/item~Item} item View item after which the position should be located.\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"createPositionAfter\",\n    value: function createPositionAfter(item) {\n      return Position._createAfter(item);\n    }\n    /**\n     * Creates a new position before given view item.\n     *\n     * @param {module:engine/view/item~Item} item View item before which the position should be located.\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"createPositionBefore\",\n    value: function createPositionBefore(item) {\n      return Position._createBefore(item);\n    }\n    /**\n     * Creates a range spanning from `start` position to `end` position.\n     *\n     * **Note:** This factory method creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n     *\n     * @param {module:engine/view/position~Position} start Start position.\n     * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"createRange\",\n    value: function createRange(start, end) {\n      return new Range(start, end);\n    }\n    /**\n     * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n     *\n     * @param {module:engine/view/item~Item} item\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"createRangeOn\",\n    value: function createRangeOn(item) {\n      return Range._createOn(item);\n    }\n    /**\n     * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"createRangeIn\",\n    value: function createRangeIn(element) {\n      return Range._createIn(element);\n    }\n    /**\n     Creates new {@link module:engine/view/selection~Selection} instance.\n     *\n     * \t\t// Creates empty selection without ranges.\n     *\t\tconst selection = writer.createSelection();\n     *\n     *\t\t// Creates selection at the given range.\n     *\t\tconst range = writer.createRange( start, end );\n     *\t\tconst selection = writer.createSelection( range );\n     *\n     *\t\t// Creates selection at the given ranges\n     * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n     *\t\tconst selection = writer.createSelection( ranges );\n     *\n     *\t\t// Creates selection from the other selection.\n     *\t\tconst otherSelection = writer.createSelection();\n     *\t\tconst selection = writer.createSelection( otherSelection );\n     *\n     *\t\t// Creates selection from the document selection.\n     *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\n     *\n     * \t\t// Creates selection at the given position.\n     *\t\tconst position = writer.createPositionFromPath( root, path );\n     *\t\tconst selection = writer.createSelection( position );\n     *\n     *\t\t// Creates collapsed selection at the position of given item and offset.\n     *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n     *\t\tconst selection = writer.createSelection( paragraph, offset );\n     *\n     *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n     *\t\t// first child of that element and ends after the last child of that element.\n     *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n     *\n     *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n     *\t\t// just after the item.\n     *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n     *\n     * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n     *\n     *\t\t// Creates backward selection.\n     *\t\tconst selection = writer.createSelection( range, { backward: true } );\n     *\n     * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n     * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n     * represented in other way, for example by applying proper CSS class.\n     *\n     * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n     * (and be  properly handled by screen readers).\n     *\n     *\t\t// Creates fake selection with label.\n     *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\n     *\n     * @param {module:engine/view/selection~Selectable} [selectable=null]\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n     * @param {String} [options.label] Label for the fake selection.\n     * @returns {module:engine/view/selection~Selection}\n     */\n\n  }, {\n    key: \"createSelection\",\n    value: function createSelection(selectable, placeOrOffset, options) {\n      return new Selection(selectable, placeOrOffset, options);\n    }\n    /**\n     * Wraps children with provided `wrapElement`. Only children contained in `parent` element between\n     * `startOffset` and `endOffset` will be wrapped.\n     *\n     * @private\n     * @param {module:engine/view/element~Element} parent\n     * @param {Number} startOffset\n     * @param {Number} endOffset\n     * @param {module:engine/view/element~Element} wrapElement\n     */\n\n  }, {\n    key: \"_wrapChildren\",\n    value: function _wrapChildren(parent, startOffset, endOffset, wrapElement) {\n      var i = startOffset;\n      var wrapPositions = [];\n\n      while (i < endOffset) {\n        var child = parent.getChild(i);\n        var isText = child.is('text');\n        var isAttribute = child.is('attributeElement');\n        var isEmpty = child.is('emptyElement');\n        var isUI = child.is('uiElement'); //\n        // (In all examples, assume that `wrapElement` is `<span class=\"foo\">` element.)\n        //\n        // Check if `wrapElement` can be joined with the wrapped element. One of requirements is having same name.\n        // If possible, join elements.\n        //\n        // <p><span class=\"bar\">abc</span></p>  -->  <p><span class=\"foo bar\">abc</span></p>\n        //\n\n        if (isAttribute && this._wrapAttributeElement(wrapElement, child)) {\n          wrapPositions.push(new Position(parent, i));\n        } //\n        // Wrap the child if it is not an attribute element or if it is an attribute element that should be inside\n        // `wrapElement` (due to priority).\n        //\n        // <p>abc</p>                   -->  <p><span class=\"foo\">abc</span></p>\n        // <p><strong>abc</strong></p>  -->  <p><span class=\"foo\"><strong>abc</strong></span></p>\n        //\n        else if (isText || isEmpty || isUI || isAttribute && shouldABeOutsideB(wrapElement, child)) {\n            // Clone attribute.\n            var newAttribute = wrapElement._clone(); // Wrap current node with new attribute.\n\n\n            child._remove();\n\n            newAttribute._appendChild(child);\n\n            parent._insertChild(i, newAttribute);\n\n            this._addToClonedElementsGroup(newAttribute);\n\n            wrapPositions.push(new Position(parent, i));\n          } //\n          // If other nested attribute is found and it wasn't wrapped (see above), continue wrapping inside it.\n          //\n          // <p><a href=\"foo.html\">abc</a></p>  -->  <p><a href=\"foo.html\"><span class=\"foo\">abc</span></a></p>\n          //\n          else if (isAttribute) {\n              this._wrapChildren(child, 0, child.childCount, wrapElement);\n            }\n\n        i++;\n      } // Merge at each wrap.\n\n\n      var offsetChange = 0;\n\n      for (var _i = 0, _wrapPositions = wrapPositions; _i < _wrapPositions.length; _i++) {\n        var position = _wrapPositions[_i];\n        position.offset -= offsetChange; // Do not merge with elements outside selected children.\n\n        if (position.offset == startOffset) {\n          continue;\n        }\n\n        var newPosition = this.mergeAttributes(position); // If nodes were merged - other merge offsets will change.\n\n        if (!newPosition.isEqual(position)) {\n          offsetChange++;\n          endOffset--;\n        }\n      }\n\n      return Range._createFromParentsAndOffsets(parent, startOffset, parent, endOffset);\n    }\n    /**\n     * Unwraps children from provided `unwrapElement`. Only children contained in `parent` element between\n     * `startOffset` and `endOffset` will be unwrapped.\n     *\n     * @private\n     * @param {module:engine/view/element~Element} parent\n     * @param {Number} startOffset\n     * @param {Number} endOffset\n     * @param {module:engine/view/element~Element} unwrapElement\n     */\n\n  }, {\n    key: \"_unwrapChildren\",\n    value: function _unwrapChildren(parent, startOffset, endOffset, unwrapElement) {\n      var i = startOffset;\n      var unwrapPositions = []; // Iterate over each element between provided offsets inside parent.\n      // We don't use tree walker or range iterator because we will be removing and merging potentially multiple nodes,\n      // so it could get messy. It is safer to it manually in this case.\n\n      while (i < endOffset) {\n        var child = parent.getChild(i); // Skip all text nodes. There should be no container element's here either.\n\n        if (!child.is('attributeElement')) {\n          i++;\n          continue;\n        } //\n        // (In all examples, assume that `unwrapElement` is `<span class=\"foo\">` element.)\n        //\n        // If the child is similar to the given attribute element, unwrap it - it will be completely removed.\n        //\n        // <p><span class=\"foo\">abc</span>xyz</p>  -->  <p>abcxyz</p>\n        //\n\n\n        if (child.isSimilar(unwrapElement)) {\n          var unwrapped = child.getChildren();\n          var count = child.childCount; // Replace wrapper element with its children\n\n          child._remove();\n\n          parent._insertChild(i, unwrapped);\n\n          this._removeFromClonedElementsGroup(child); // Save start and end position of moved items.\n\n\n          unwrapPositions.push(new Position(parent, i), new Position(parent, i + count)); // Skip elements that were unwrapped. Assuming there won't be another element to unwrap in child elements.\n\n          i += count;\n          endOffset += count - 1;\n          continue;\n        } //\n        // If the child is not similar but is an attribute element, try partial unwrapping - remove the same attributes/styles/classes.\n        // Partial unwrapping will happen only if the elements have the same name.\n        //\n        // <p><span class=\"foo bar\">abc</span>xyz</p>  -->  <p><span class=\"bar\">abc</span>xyz</p>\n        // <p><i class=\"foo\">abc</i>xyz</p>            -->  <p><i class=\"foo\">abc</i>xyz</p>\n        //\n\n\n        if (this._unwrapAttributeElement(unwrapElement, child)) {\n          unwrapPositions.push(new Position(parent, i), new Position(parent, i + 1));\n          i++;\n          continue;\n        } //\n        // If other nested attribute is found, look through it's children for elements to unwrap.\n        //\n        // <p><i><span class=\"foo\">abc</span></i><p>  -->  <p><i>abc</i><p>\n        //\n\n\n        this._unwrapChildren(child, 0, child.childCount, unwrapElement);\n\n        i++;\n      } // Merge at each unwrap.\n\n\n      var offsetChange = 0;\n\n      for (var _i2 = 0, _unwrapPositions = unwrapPositions; _i2 < _unwrapPositions.length; _i2++) {\n        var position = _unwrapPositions[_i2];\n        position.offset -= offsetChange; // Do not merge with elements outside selected children.\n\n        if (position.offset == startOffset || position.offset == endOffset) {\n          continue;\n        }\n\n        var newPosition = this.mergeAttributes(position); // If nodes were merged - other merge offsets will change.\n\n        if (!newPosition.isEqual(position)) {\n          offsetChange++;\n          endOffset--;\n        }\n      }\n\n      return Range._createFromParentsAndOffsets(parent, startOffset, parent, endOffset);\n    }\n    /**\n     * Helper function for `view.writer.wrap`. Wraps range with provided attribute element.\n     * This method will also merge newly added attribute element with its siblings whenever possible.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n     * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n     *\n     * @private\n     * @param {module:engine/view/range~Range} range\n     * @param {module:engine/view/attributeelement~AttributeElement} attribute\n     * @returns {module:engine/view/range~Range} New range after wrapping, spanning over wrapping attribute element.\n     */\n\n  }, {\n    key: \"_wrapRange\",\n    value: function _wrapRange(range, attribute) {\n      // Break attributes at range start and end.\n      var _this$_breakAttribute3 = this._breakAttributesRange(range, true),\n          breakStart = _this$_breakAttribute3.start,\n          breakEnd = _this$_breakAttribute3.end;\n\n      var parentContainer = breakStart.parent; // Wrap all children with attribute.\n\n      var newRange = this._wrapChildren(parentContainer, breakStart.offset, breakEnd.offset, attribute); // Merge attributes at the both ends and return a new range.\n\n\n      var start = this.mergeAttributes(newRange.start); // If start position was merged - move end position back.\n\n      if (!start.isEqual(newRange.start)) {\n        newRange.end.offset--;\n      }\n\n      var end = this.mergeAttributes(newRange.end);\n      return new Range(start, end);\n    }\n    /**\n     * Helper function for {@link #wrap}. Wraps position with provided attribute element.\n     * This method will also merge newly added attribute element with its siblings whenever possible.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n     * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n     *\n     * @private\n     * @param {module:engine/view/position~Position} position\n     * @param {module:engine/view/attributeelement~AttributeElement} attribute\n     * @returns {module:engine/view/position~Position} New position after wrapping.\n     */\n\n  }, {\n    key: \"_wrapPosition\",\n    value: function _wrapPosition(position, attribute) {\n      // Return same position when trying to wrap with attribute similar to position parent.\n      if (attribute.isSimilar(position.parent)) {\n        return movePositionToTextNode(position.clone());\n      } // When position is inside text node - break it and place new position between two text nodes.\n\n\n      if (position.parent.is('text')) {\n        position = breakTextNode(position);\n      } // Create fake element that will represent position, and will not be merged with other attributes.\n\n\n      var fakePosition = this.createAttributeElement();\n      fakePosition._priority = Number.POSITIVE_INFINITY;\n\n      fakePosition.isSimilar = function () {\n        return false;\n      }; // Insert fake element in position location.\n\n\n      position.parent._insertChild(position.offset, fakePosition); // Range around inserted fake attribute element.\n\n\n      var wrapRange = new Range(position, position.getShiftedBy(1)); // Wrap fake element with attribute (it will also merge if possible).\n\n      this.wrap(wrapRange, attribute); // Remove fake element and place new position there.\n\n      var newPosition = new Position(fakePosition.parent, fakePosition.index);\n\n      fakePosition._remove(); // If position is placed between text nodes - merge them and return position inside.\n\n\n      var nodeBefore = newPosition.nodeBefore;\n      var nodeAfter = newPosition.nodeAfter;\n\n      if (nodeBefore instanceof Text && nodeAfter instanceof Text) {\n        return mergeTextNodes(nodeBefore, nodeAfter);\n      } // If position is next to text node - move position inside.\n\n\n      return movePositionToTextNode(newPosition);\n    }\n    /**\n     * \tWraps one {@link module:engine/view/attributeelement~AttributeElement AttributeElement} into another by\n     * \tmerging them if possible. When merging is possible - all attributes, styles and classes are moved from wrapper\n     * \telement to element being wrapped.\n     *\n     * \t@private\n     * \t@param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\n     * \t@param {module:engine/view/attributeelement~AttributeElement} toWrap AttributeElement to wrap using wrapper element.\n     * \t@returns {Boolean} Returns `true` if elements are merged.\n     */\n\n  }, {\n    key: \"_wrapAttributeElement\",\n    value: function _wrapAttributeElement(wrapper, toWrap) {\n      if (!canBeJoined(wrapper, toWrap)) {\n        return false;\n      } // Can't merge if name or priority differs.\n\n\n      if (wrapper.name !== toWrap.name || wrapper.priority !== toWrap.priority) {\n        return false;\n      } // Check if attributes can be merged.\n\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = wrapper.getAttributeKeys()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var key = _step4.value;\n\n          // Classes and styles should be checked separately.\n          if (key === 'class' || key === 'style') {\n            continue;\n          } // If some attributes are different we cannot wrap.\n\n\n          if (toWrap.hasAttribute(key) && toWrap.getAttribute(key) !== wrapper.getAttribute(key)) {\n            return false;\n          }\n        } // Check if styles can be merged.\n\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = wrapper.getStyleNames()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var _key = _step5.value;\n\n          if (toWrap.hasStyle(_key) && toWrap.getStyle(_key) !== wrapper.getStyle(_key)) {\n            return false;\n          }\n        } // Move all attributes/classes/styles from wrapper to wrapped AttributeElement.\n\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = wrapper.getAttributeKeys()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var _key2 = _step6.value;\n\n          // Classes and styles should be checked separately.\n          if (_key2 === 'class' || _key2 === 'style') {\n            continue;\n          } // Move only these attributes that are not present - other are similar.\n\n\n          if (!toWrap.hasAttribute(_key2)) {\n            this.setAttribute(_key2, wrapper.getAttribute(_key2), toWrap);\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = wrapper.getStyleNames()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var _key3 = _step7.value;\n\n          if (!toWrap.hasStyle(_key3)) {\n            this.setStyle(_key3, wrapper.getStyle(_key3), toWrap);\n          }\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n            _iterator7.return();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = wrapper.getClassNames()[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var _key4 = _step8.value;\n\n          if (!toWrap.hasClass(_key4)) {\n            this.addClass(_key4, toWrap);\n          }\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Unwraps {@link module:engine/view/attributeelement~AttributeElement AttributeElement} from another by removing\n     * corresponding attributes, classes and styles. All attributes, classes and styles from wrapper should be present\n     * inside element being unwrapped.\n     *\n     * @private\n     * @param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\n     * @param {module:engine/view/attributeelement~AttributeElement} toUnwrap AttributeElement to unwrap using wrapper element.\n     * @returns {Boolean} Returns `true` if elements are unwrapped.\n     **/\n\n  }, {\n    key: \"_unwrapAttributeElement\",\n    value: function _unwrapAttributeElement(wrapper, toUnwrap) {\n      if (!canBeJoined(wrapper, toUnwrap)) {\n        return false;\n      } // Can't unwrap if name or priority differs.\n\n\n      if (wrapper.name !== toUnwrap.name || wrapper.priority !== toUnwrap.priority) {\n        return false;\n      } // Check if AttributeElement has all wrapper attributes.\n\n\n      var _iteratorNormalCompletion9 = true;\n      var _didIteratorError9 = false;\n      var _iteratorError9 = undefined;\n\n      try {\n        for (var _iterator9 = wrapper.getAttributeKeys()[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n          var key = _step9.value;\n\n          // Classes and styles should be checked separately.\n          if (key === 'class' || key === 'style') {\n            continue;\n          } // If some attributes are missing or different we cannot unwrap.\n\n\n          if (!toUnwrap.hasAttribute(key) || toUnwrap.getAttribute(key) !== wrapper.getAttribute(key)) {\n            return false;\n          }\n        } // Check if AttributeElement has all wrapper classes.\n\n      } catch (err) {\n        _didIteratorError9 = true;\n        _iteratorError9 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n            _iterator9.return();\n          }\n        } finally {\n          if (_didIteratorError9) {\n            throw _iteratorError9;\n          }\n        }\n      }\n\n      if (!toUnwrap.hasClass.apply(toUnwrap, _toConsumableArray(wrapper.getClassNames()))) {\n        return false;\n      } // Check if AttributeElement has all wrapper styles.\n\n\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = wrapper.getStyleNames()[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var _key5 = _step10.value;\n\n          // If some styles are missing or different we cannot unwrap.\n          if (!toUnwrap.hasStyle(_key5) || toUnwrap.getStyle(_key5) !== wrapper.getStyle(_key5)) {\n            return false;\n          }\n        } // Remove all wrapper's attributes from unwrapped element.\n\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n            _iterator10.return();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion11 = true;\n      var _didIteratorError11 = false;\n      var _iteratorError11 = undefined;\n\n      try {\n        for (var _iterator11 = wrapper.getAttributeKeys()[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n          var _key6 = _step11.value;\n\n          // Classes and styles should be checked separately.\n          if (_key6 === 'class' || _key6 === 'style') {\n            continue;\n          }\n\n          this.removeAttribute(_key6, toUnwrap);\n        } // Remove all wrapper's classes from unwrapped element.\n\n      } catch (err) {\n        _didIteratorError11 = true;\n        _iteratorError11 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n            _iterator11.return();\n          }\n        } finally {\n          if (_didIteratorError11) {\n            throw _iteratorError11;\n          }\n        }\n      }\n\n      this.removeClass(Array.from(wrapper.getClassNames()), toUnwrap); // Remove all wrapper's styles from unwrapped element.\n\n      this.removeStyle(Array.from(wrapper.getStyleNames()), toUnwrap);\n      return true;\n    }\n    /**\n     * Helper function used by other `DowncastWriter` methods. Breaks attribute elements at the boundaries of given range.\n     *\n     * @private\n     * @param {module:engine/view/range~Range} range Range which `start` and `end` positions will be used to break attributes.\n     * @param {Boolean} [forceSplitText=false] If set to `true`, will break text nodes even if they are directly in container element.\n     * This behavior will result in incorrect view state, but is needed by other view writing methods which then fixes view state.\n     * @returns {module:engine/view/range~Range} New range with located at break positions.\n     */\n\n  }, {\n    key: \"_breakAttributesRange\",\n    value: function _breakAttributesRange(range) {\n      var forceSplitText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var rangeStart = range.start;\n      var rangeEnd = range.end;\n      validateRangeContainer(range); // Break at the collapsed position. Return new collapsed range.\n\n      if (range.isCollapsed) {\n        var position = this._breakAttributes(range.start, forceSplitText);\n\n        return new Range(position, position);\n      }\n\n      var breakEnd = this._breakAttributes(rangeEnd, forceSplitText);\n\n      var count = breakEnd.parent.childCount;\n\n      var breakStart = this._breakAttributes(rangeStart, forceSplitText); // Calculate new break end offset.\n\n\n      breakEnd.offset += breakEnd.parent.childCount - count;\n      return new Range(breakStart, breakEnd);\n    }\n    /**\n     * Helper function used by other `DowncastWriter` methods. Breaks attribute elements at given position.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-empty-element` when break position\n     * is placed inside {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-ui-element` when break position\n     * is placed inside {@link module:engine/view/uielement~UIElement UIElement}.\n     *\n     * @private\n     * @param {module:engine/view/position~Position} position Position where to break attributes.\n     * @param {Boolean} [forceSplitText=false] If set to `true`, will break text nodes even if they are directly in container element.\n     * This behavior will result in incorrect view state, but is needed by other view writing methods which then fixes view state.\n     * @returns {module:engine/view/position~Position} New position after breaking the attributes.\n     */\n\n  }, {\n    key: \"_breakAttributes\",\n    value: function _breakAttributes(position) {\n      var forceSplitText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var positionOffset = position.offset;\n      var positionParent = position.parent; // If position is placed inside EmptyElement - throw an exception as we cannot break inside.\n\n      if (position.parent.is('emptyElement')) {\n        /**\n         * Cannot break inside EmptyElement instance.\n         *\n         * @error view-writer-cannot-break-empty-element\n         */\n        throw new CKEditorError('view-writer-cannot-break-empty-element');\n      } // If position is placed inside UIElement - throw an exception as we cannot break inside.\n\n\n      if (position.parent.is('uiElement')) {\n        /**\n         * Cannot break inside UIElement instance.\n         *\n         * @error view-writer-cannot-break-ui-element\n         */\n        throw new CKEditorError('view-writer-cannot-break-ui-element');\n      } // There are no attributes to break and text nodes breaking is not forced.\n\n\n      if (!forceSplitText && positionParent.is('text') && isContainerOrFragment(positionParent.parent)) {\n        return position.clone();\n      } // Position's parent is container, so no attributes to break.\n\n\n      if (isContainerOrFragment(positionParent)) {\n        return position.clone();\n      } // Break text and start again in new position.\n\n\n      if (positionParent.is('text')) {\n        return this._breakAttributes(breakTextNode(position), forceSplitText);\n      }\n\n      var length = positionParent.childCount; // <p>foo<b><u>bar{}</u></b></p>\n      // <p>foo<b><u>bar</u>[]</b></p>\n      // <p>foo<b><u>bar</u></b>[]</p>\n\n      if (positionOffset == length) {\n        var newPosition = new Position(positionParent.parent, positionParent.index + 1);\n        return this._breakAttributes(newPosition, forceSplitText);\n      } else // <p>foo<b><u>{}bar</u></b></p>\n        // <p>foo<b>[]<u>bar</u></b></p>\n        // <p>foo{}<b><u>bar</u></b></p>\n        if (positionOffset === 0) {\n          var _newPosition = new Position(positionParent.parent, positionParent.index);\n\n          return this._breakAttributes(_newPosition, forceSplitText);\n        } // <p>foo<b><u>b{}ar</u></b></p>\n        // <p>foo<b><u>b[]ar</u></b></p>\n        // <p>foo<b><u>b</u>[]<u>ar</u></b></p>\n        // <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\n        else {\n            var offsetAfter = positionParent.index + 1; // Break element.\n\n            var clonedNode = positionParent._clone(); // Insert cloned node to position's parent node.\n\n\n            positionParent.parent._insertChild(offsetAfter, clonedNode);\n\n            this._addToClonedElementsGroup(clonedNode); // Get nodes to move.\n\n\n            var count = positionParent.childCount - positionOffset;\n\n            var nodesToMove = positionParent._removeChildren(positionOffset, count); // Move nodes to cloned node.\n\n\n            clonedNode._appendChild(nodesToMove); // Create new position to work on.\n\n\n            var _newPosition2 = new Position(positionParent.parent, offsetAfter);\n\n            return this._breakAttributes(_newPosition2, forceSplitText);\n          }\n    }\n    /**\n     * Stores the information that an {@link module:engine/view/attributeelement~AttributeElement attribute element} was\n     * added to the tree. Saves the reference to the group in the given element and updates the group, so other elements\n     * from the group now keep a reference to the given attribute element.\n     *\n     * The clones group can be obtained using {@link module:engine/view/attributeelement~AttributeElement#getElementsWithSameId}.\n     *\n     * Does nothing if added element has no {@link module:engine/view/attributeelement~AttributeElement#id id}.\n     *\n     * @private\n     * @param {module:engine/view/attributeelement~AttributeElement} element Attribute element to save.\n     */\n\n  }, {\n    key: \"_addToClonedElementsGroup\",\n    value: function _addToClonedElementsGroup(element) {\n      // Add only if the element is in document tree.\n      if (!element.root.is('rootElement')) {\n        return;\n      } // Traverse the element's children recursively to find other attribute elements that also might got inserted.\n      // The loop is at the beginning so we can make fast returns later in the code.\n\n\n      if (element.is('element')) {\n        var _iteratorNormalCompletion12 = true;\n        var _didIteratorError12 = false;\n        var _iteratorError12 = undefined;\n\n        try {\n          for (var _iterator12 = element.getChildren()[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n            var child = _step12.value;\n\n            this._addToClonedElementsGroup(child);\n          }\n        } catch (err) {\n          _didIteratorError12 = true;\n          _iteratorError12 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n              _iterator12.return();\n            }\n          } finally {\n            if (_didIteratorError12) {\n              throw _iteratorError12;\n            }\n          }\n        }\n      }\n\n      var id = element.id;\n\n      if (!id) {\n        return;\n      }\n\n      var group = this._cloneGroups.get(id);\n\n      if (!group) {\n        group = new Set();\n\n        this._cloneGroups.set(id, group);\n      }\n\n      group.add(element);\n      element._clonesGroup = group;\n    }\n    /**\n     * Removes all the information about the given {@link module:engine/view/attributeelement~AttributeElement attribute element}\n     * from its clones group.\n     *\n     * Keep in mind, that the element will still keep a reference to the group (but the group will not keep a reference to it).\n     * This allows to reference the whole group even if the element was already removed from the tree.\n     *\n     * Does nothing if the element has no {@link module:engine/view/attributeelement~AttributeElement#id id}.\n     *\n     * @private\n     * @param {module:engine/view/attributeelement~AttributeElement} element Attribute element to remove.\n     */\n\n  }, {\n    key: \"_removeFromClonedElementsGroup\",\n    value: function _removeFromClonedElementsGroup(element) {\n      // Traverse the element's children recursively to find other attribute elements that also got removed.\n      // The loop is at the beginning so we can make fast returns later in the code.\n      if (element.is('element')) {\n        var _iteratorNormalCompletion13 = true;\n        var _didIteratorError13 = false;\n        var _iteratorError13 = undefined;\n\n        try {\n          for (var _iterator13 = element.getChildren()[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n            var child = _step13.value;\n\n            this._removeFromClonedElementsGroup(child);\n          }\n        } catch (err) {\n          _didIteratorError13 = true;\n          _iteratorError13 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n              _iterator13.return();\n            }\n          } finally {\n            if (_didIteratorError13) {\n              throw _iteratorError13;\n            }\n          }\n        }\n      }\n\n      var id = element.id;\n\n      if (!id) {\n        return;\n      }\n\n      var group = this._cloneGroups.get(id);\n\n      if (!group) {\n        return;\n      }\n\n      group.delete(element); // Not removing group from element on purpose!\n      // If other parts of code have reference to this element, they will be able to get references to other elements from the group.\n    }\n  }]);\n\n  return DowncastWriter;\n}(); // Helper function for `view.writer.wrap`. Checks if given element has any children that are not ui elements.\n\n\nexport { DowncastWriter as default };\n\nfunction _hasNonUiChildren(parent) {\n  return Array.from(parent.getChildren()).some(function (child) {\n    return !child.is('uiElement');\n  });\n}\n/**\n * Attribute element need to be instance of attribute element.\n *\n * @error view-writer-wrap-invalid-attribute\n */\n// Returns first parent container of specified {@link module:engine/view/position~Position Position}.\n// Position's parent node is checked as first, then next parents are checked.\n// Note that {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\n//\n// @param {module:engine/view/position~Position} position Position used as a start point to locate parent container.\n// @returns {module:engine/view/containerelement~ContainerElement|module:engine/view/documentfragment~DocumentFragment|undefined}\n// Parent container element or `undefined` if container is not found.\n\n\nfunction getParentContainer(position) {\n  var parent = position.parent;\n\n  while (!isContainerOrFragment(parent)) {\n    if (!parent) {\n      return undefined;\n    }\n\n    parent = parent.parent;\n  }\n\n  return parent;\n} // Checks if first {@link module:engine/view/attributeelement~AttributeElement AttributeElement} provided to the function\n// can be wrapped otuside second element. It is done by comparing elements'\n// {@link module:engine/view/attributeelement~AttributeElement#priority priorities}, if both have same priority\n// {@link module:engine/view/element~Element#getIdentity identities} are compared.\n//\n// @param {module:engine/view/attributeelement~AttributeElement} a\n// @param {module:engine/view/attributeelement~AttributeElement} b\n// @returns {Boolean}\n\n\nfunction shouldABeOutsideB(a, b) {\n  if (a.priority < b.priority) {\n    return true;\n  } else if (a.priority > b.priority) {\n    return false;\n  } // When priorities are equal and names are different - use identities.\n\n\n  return a.getIdentity() < b.getIdentity();\n} // Returns new position that is moved to near text node. Returns same position if there is no text node before of after\n// specified position.\n//\n//\t\t<p>foo[]</p>  ->  <p>foo{}</p>\n//\t\t<p>[]foo</p>  ->  <p>{}foo</p>\n//\n// @param {module:engine/view/position~Position} position\n// @returns {module:engine/view/position~Position} Position located inside text node or same position if there is no text nodes\n// before or after position location.\n\n\nfunction movePositionToTextNode(position) {\n  var nodeBefore = position.nodeBefore;\n\n  if (nodeBefore && nodeBefore.is('text')) {\n    return new Position(nodeBefore, nodeBefore.data.length);\n  }\n\n  var nodeAfter = position.nodeAfter;\n\n  if (nodeAfter && nodeAfter.is('text')) {\n    return new Position(nodeAfter, 0);\n  }\n\n  return position;\n} // Breaks text node into two text nodes when possible.\n//\n//\t\t<p>foo{}bar</p> -> <p>foo[]bar</p>\n//\t\t<p>{}foobar</p> -> <p>[]foobar</p>\n//\t\t<p>foobar{}</p> -> <p>foobar[]</p>\n//\n// @param {module:engine/view/position~Position} position Position that need to be placed inside text node.\n// @returns {module:engine/view/position~Position} New position after breaking text node.\n\n\nfunction breakTextNode(position) {\n  if (position.offset == position.parent.data.length) {\n    return new Position(position.parent.parent, position.parent.index + 1);\n  }\n\n  if (position.offset === 0) {\n    return new Position(position.parent.parent, position.parent.index);\n  } // Get part of the text that need to be moved.\n\n\n  var textToMove = position.parent.data.slice(position.offset); // Leave rest of the text in position's parent.\n\n  position.parent._data = position.parent.data.slice(0, position.offset); // Insert new text node after position's parent text node.\n\n  position.parent.parent._insertChild(position.parent.index + 1, new Text(textToMove)); // Return new position between two newly created text nodes.\n\n\n  return new Position(position.parent.parent, position.parent.index + 1);\n} // Merges two text nodes into first node. Removes second node and returns merge position.\n//\n// @param {module:engine/view/text~Text} t1 First text node to merge. Data from second text node will be moved at the end of\n// this text node.\n// @param {module:engine/view/text~Text} t2 Second text node to merge. This node will be removed after merging.\n// @returns {module:engine/view/position~Position} Position after merging text nodes.\n\n\nfunction mergeTextNodes(t1, t2) {\n  // Merge text data into first text node and remove second one.\n  var nodeBeforeLength = t1.data.length;\n  t1._data += t2.data;\n\n  t2._remove();\n\n  return new Position(t1, nodeBeforeLength);\n} // Checks if provided nodes are valid to insert. Checks if each node is an instance of\n// {@link module:engine/view/text~Text Text} or {@link module:engine/view/attributeelement~AttributeElement AttributeElement},\n// {@link module:engine/view/containerelement~ContainerElement ContainerElement},\n// {@link module:engine/view/emptyelement~EmptyElement EmptyElement} or\n// {@link module:engine/view/uielement~UIElement UIElement}.\n//\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\n// contains instances that are not {@link module:engine/view/text~Text Texts},\n// {@link module:engine/view/emptyelement~EmptyElement EmptyElements},\n// {@link module:engine/view/uielement~UIElement UIElements},\n// {@link module:engine/view/attributeelement~AttributeElement AttributeElements} or\n// {@link module:engine/view/containerelement~ContainerElement ContainerElements}.\n//\n// @param Iterable.<module:engine/view/text~Text|module:engine/view/attributeelement~AttributeElement\n// |module:engine/view/containerelement~ContainerElement> nodes\n\n\nfunction validateNodesToInsert(nodes) {\n  var _iteratorNormalCompletion14 = true;\n  var _didIteratorError14 = false;\n  var _iteratorError14 = undefined;\n\n  try {\n    var _loop = function _loop() {\n      var node = _step14.value;\n\n      if (!validNodesToInsert.some(function (validNode) {\n        return node instanceof validNode;\n      })) {\n        // eslint-disable-line no-use-before-define\n\n        /**\n         * Inserted nodes should be valid to insert. of {@link module:engine/view/attributeelement~AttributeElement AttributeElement},\n         * {@link module:engine/view/containerelement~ContainerElement ContainerElement},\n         * {@link module:engine/view/emptyelement~EmptyElement EmptyElement},\n         * {@link module:engine/view/uielement~UIElement UIElement}, {@link module:engine/view/text~Text Text}.\n         *\n         * @error view-writer-insert-invalid-node\n         */\n        throw new CKEditorError('view-writer-insert-invalid-node');\n      }\n\n      if (!node.is('text')) {\n        validateNodesToInsert(node.getChildren());\n      }\n    };\n\n    for (var _iterator14 = nodes[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n      _loop();\n    }\n  } catch (err) {\n    _didIteratorError14 = true;\n    _iteratorError14 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n        _iterator14.return();\n      }\n    } finally {\n      if (_didIteratorError14) {\n        throw _iteratorError14;\n      }\n    }\n  }\n}\n\nvar validNodesToInsert = [Text, AttributeElement, ContainerElement, EmptyElement, UIElement]; // Checks if node is ContainerElement or DocumentFragment, because in most cases they should be treated the same way.\n//\n// @param {module:engine/view/node~Node} node\n// @returns {Boolean} Returns `true` if node is instance of ContainerElement or DocumentFragment.\n\nfunction isContainerOrFragment(node) {\n  return node && (node.is('containerElement') || node.is('documentFragment'));\n} // Checks if {@link module:engine/view/range~Range#start range start} and {@link module:engine/view/range~Range#end range end} are placed\n// inside same {@link module:engine/view/containerelement~ContainerElement container element}.\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when validation fails.\n//\n// @param {module:engine/view/range~Range} range\n\n\nfunction validateRangeContainer(range) {\n  var startContainer = getParentContainer(range.start);\n  var endContainer = getParentContainer(range.end);\n\n  if (!startContainer || !endContainer || startContainer !== endContainer) {\n    /**\n     * Range container is invalid. This can happen if {@link module:engine/view/range~Range#start range start} and\n     * {@link module:engine/view/range~Range#end range end} positions are not placed inside same container or\n     * parent container for these positions cannot be found.\n     *\n     * @error view-writer-invalid-range-container\n     */\n    throw new CKEditorError('view-writer-invalid-range-container');\n  }\n} // Checks if two attribute elements can be joined together. Elements can be joined together if, and only if\n// they do not have ids specified.\n//\n// @private\n// @param {module:engine/view/element~Element} a\n// @param {module:engine/view/element~Element} b\n// @returns {Boolean}\n\n\nfunction canBeJoined(a, b) {\n  return a.id === null && b.id === null;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/insertat\n */\n\n/**\n * Inserts node to the parent at given index.\n *\n * @param {Element} parentElement Parent element.\n * @param {Number} index Insertions index.\n * @param {Node} nodeToInsert Node to insert.\n */\nexport default function insertAt(parentElement, index, nodeToInsert) {\n  parentElement.insertBefore(nodeToInsert, parentElement.childNodes[index] || null);\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/remove\n */\n\n/**\n * Removes given node from parent.\n *\n * @param {Node} node Node to remove.\n */\nexport default function remove(node) {\n  var parent = node.parentNode;\n\n  if (parent) {\n    parent.removeChild(node);\n  }\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals Node */\n\n/**\n * @module engine/view/renderer\n */\nimport ViewText from './text';\nimport ViewPosition from './position';\nimport { INLINE_FILLER, INLINE_FILLER_LENGTH, startsWithFiller, isInlineFiller, isBlockFiller } from './filler';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport insertAt from '@ckeditor/ckeditor5-utils/src/dom/insertat';\nimport remove from '@ckeditor/ckeditor5-utils/src/dom/remove';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\nimport isNode from '@ckeditor/ckeditor5-utils/src/dom/isnode';\nimport fastDiff from '@ckeditor/ckeditor5-utils/src/fastdiff';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n/**\n * Renderer is responsible for updating the DOM structure and the DOM selection based on\n * the {@link module:engine/view/renderer~Renderer#markToSync information about updated view nodes}.\n * In other words, it renders the view to the DOM.\n *\n * Its main responsibility is to make only the necessary, minimal changes to the DOM. However, unlike in many\n * virtual DOM implementations, the primary reason for doing minimal changes is not the performance but ensuring\n * that native editing features such as text composition, autocompletion, spell checking, selection's x-index are\n * affected as little as possible.\n *\n * Renderer uses {@link module:engine/view/domconverter~DomConverter} to transform view nodes and positions\n * to and from the DOM.\n */\n\nvar Renderer =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a renderer instance.\n   *\n   * @param {module:engine/view/domconverter~DomConverter} domConverter Converter instance.\n   * @param {module:engine/view/documentselection~DocumentSelection} selection View selection.\n   */\n  function Renderer(domConverter, selection) {\n    _classCallCheck(this, Renderer);\n\n    /**\n     * Set of DOM Documents instances.\n     *\n     * @readonly\n     * @member {Set.<Document>}\n     */\n    this.domDocuments = new Set();\n    /**\n     * Converter instance.\n     *\n     * @readonly\n     * @member {module:engine/view/domconverter~DomConverter}\n     */\n\n    this.domConverter = domConverter;\n    /**\n     * Set of nodes which attributes changed and may need to be rendered.\n     *\n     * @readonly\n     * @member {Set.<module:engine/view/node~Node>}\n     */\n\n    this.markedAttributes = new Set();\n    /**\n     * Set of elements which child lists changed and may need to be rendered.\n     *\n     * @readonly\n     * @member {Set.<module:engine/view/node~Node>}\n     */\n\n    this.markedChildren = new Set();\n    /**\n     * Set of text nodes which text data changed and may need to be rendered.\n     *\n     * @readonly\n     * @member {Set.<module:engine/view/node~Node>}\n     */\n\n    this.markedTexts = new Set();\n    /**\n     * View selection. Renderer updates DOM selection based on the view selection.\n     *\n     * @readonly\n     * @member {module:engine/view/documentselection~DocumentSelection}\n     */\n\n    this.selection = selection;\n    /**\n     * Indicates if the view document is focused and selection can be rendered. Selection will not be rendered if\n     * this is set to `false`.\n     *\n     * @member {Boolean}\n     */\n\n    this.isFocused = false;\n    /**\n     * The text node in which the inline filler was rendered.\n     *\n     * @private\n     * @member {Text}\n     */\n\n    this._inlineFiller = null;\n    /**\n     * DOM element containing fake selection.\n     *\n     * @private\n     * @type {null|HTMLElement}\n     */\n\n    this._fakeSelectionContainer = null;\n  }\n  /**\n   * Marks a view node to be updated in the DOM by {@link #render `render()`}.\n   *\n   * Note that only view nodes whose parents have corresponding DOM elements need to be marked to be synchronized.\n   *\n   * @see #markedAttributes\n   * @see #markedChildren\n   * @see #markedTexts\n   *\n   * @param {module:engine/view/document~ChangeType} type Type of the change.\n   * @param {module:engine/view/node~Node} node Node to be marked.\n   */\n\n\n  _createClass(Renderer, [{\n    key: \"markToSync\",\n    value: function markToSync(type, node) {\n      if (type === 'text') {\n        if (this.domConverter.mapViewToDom(node.parent)) {\n          this.markedTexts.add(node);\n        }\n      } else {\n        // If the node has no DOM element it is not rendered yet,\n        // its children/attributes do not need to be marked to be sync.\n        if (!this.domConverter.mapViewToDom(node)) {\n          return;\n        }\n\n        if (type === 'attributes') {\n          this.markedAttributes.add(node);\n        } else if (type === 'children') {\n          this.markedChildren.add(node);\n        } else {\n          /**\n           * Unknown type passed to Renderer.markToSync.\n           *\n           * @error renderer-unknown-type\n           */\n          throw new CKEditorError('view-renderer-unknown-type: Unknown type passed to Renderer.markToSync.');\n        }\n      }\n    }\n    /**\n     * Renders all buffered changes ({@link #markedAttributes}, {@link #markedChildren} and {@link #markedTexts}) and\n     * the current view selection (if needed) to the DOM by applying a minimal set of changes to it.\n     *\n     * Renderer tries not to break the text composition (e.g. IME) and x-index of the selection,\n     * so it does as little as it is needed to update the DOM.\n     *\n     * Renderer also handles {@link module:engine/view/filler fillers}. Especially, it checks if the inline filler is needed\n     * at the selection position and adds or removes it. To prevent breaking text composition inline filler will not be\n     * removed as long as the selection is in the text node which needed it at first.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var inlineFillerPosition; // Refresh mappings.\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.markedChildren[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var element = _step.value;\n\n          this._updateChildrenMappings(element);\n        } // There was inline filler rendered in the DOM but it's not\n        // at the selection position any more, so we can remove it\n        // (cause even if it's needed, it must be placed in another location).\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (this._inlineFiller && !this._isSelectionInInlineFiller()) {\n        this._removeInlineFiller();\n      } // If we've got the filler, let's try to guess its position in the view.\n\n\n      if (this._inlineFiller) {\n        inlineFillerPosition = this._getInlineFillerPosition();\n      } // Otherwise, if it's needed, create it at the selection position.\n      else if (this._needsInlineFillerAtSelection()) {\n          inlineFillerPosition = this.selection.getFirstPosition(); // Do not use `markToSync` so it will be added even if the parent is already added.\n\n          this.markedChildren.add(inlineFillerPosition.parent);\n        }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.markedAttributes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _element = _step2.value;\n\n          this._updateAttrs(_element);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.markedChildren[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _element2 = _step3.value;\n\n          this._updateChildren(_element2, {\n            inlineFillerPosition: inlineFillerPosition\n          });\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.markedTexts[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var node = _step4.value;\n\n          if (!this.markedChildren.has(node.parent) && this.domConverter.mapViewToDom(node.parent)) {\n            this._updateText(node, {\n              inlineFillerPosition: inlineFillerPosition\n            });\n          }\n        } // Check whether the inline filler is required and where it really is in the DOM.\n        // At this point in most cases it will be in the DOM, but there are exceptions.\n        // For example, if the inline filler was deep in the created DOM structure, it will not be created.\n        // Similarly, if it was removed at the beginning of this function and then neither text nor children were updated,\n        // it will not be present.\n        // Fix those and similar scenarios.\n\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      if (inlineFillerPosition) {\n        var fillerDomPosition = this.domConverter.viewPositionToDom(inlineFillerPosition);\n        var domDocument = fillerDomPosition.parent.ownerDocument;\n\n        if (!startsWithFiller(fillerDomPosition.parent)) {\n          // Filler has not been created at filler position. Create it now.\n          this._inlineFiller = addInlineFiller(domDocument, fillerDomPosition.parent, fillerDomPosition.offset);\n        } else {\n          // Filler has been found, save it.\n          this._inlineFiller = fillerDomPosition.parent;\n        }\n      } else {\n        // There is no filler needed.\n        this._inlineFiller = null;\n      }\n\n      this._updateSelection();\n\n      this._updateFocus();\n\n      this.markedTexts.clear();\n      this.markedAttributes.clear();\n      this.markedChildren.clear();\n    }\n    /**\n     * Updates mappings of view element's children.\n     *\n     * Children that were replaced in the view structure by similar elements (same tag name) are treated as 'replaced'.\n     * This means that their mappings can be updated so the new view elements are mapped to the existing DOM elements.\n     * Thanks to that these elements do not need to be re-rendered completely.\n     *\n     * @private\n     * @param {module:engine/view/node~Node} viewElement The view element whose children mappings will be updated.\n     */\n\n  }, {\n    key: \"_updateChildrenMappings\",\n    value: function _updateChildrenMappings(viewElement) {\n      var domElement = this.domConverter.mapViewToDom(viewElement);\n\n      if (!domElement) {\n        // If there is no `domElement` it means that it was already removed from DOM and there is no need to process it.\n        return;\n      }\n\n      var actualDomChildren = this.domConverter.mapViewToDom(viewElement).childNodes;\n      var expectedDomChildren = Array.from(this.domConverter.viewChildrenToDom(viewElement, domElement.ownerDocument, {\n        withChildren: false\n      }));\n\n      var diff = this._diffNodeLists(actualDomChildren, expectedDomChildren);\n\n      var actions = this._findReplaceActions(diff, actualDomChildren, expectedDomChildren);\n\n      if (actions.indexOf('replace') !== -1) {\n        var counter = {\n          equal: 0,\n          insert: 0,\n          delete: 0\n        };\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = actions[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var action = _step5.value;\n\n            if (action === 'replace') {\n              var insertIndex = counter.equal + counter.insert;\n              var deleteIndex = counter.equal + counter.delete;\n              var viewChild = viewElement.getChild(insertIndex); // The 'uiElement' is a special one and its children are not stored in a view (#799),\n              // so we cannot use it with replacing flow (since it uses view children during rendering\n              // which will always result in rendering empty element).\n\n              if (viewChild && !viewChild.is('uiElement')) {\n                this._updateElementMappings(viewChild, actualDomChildren[deleteIndex]);\n              }\n\n              remove(expectedDomChildren[insertIndex]);\n              counter.equal++;\n            } else {\n              counter[action]++;\n            }\n          }\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n              _iterator5.return();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Updates mappings of a given view element.\n     *\n     * @private\n     * @param {module:engine/view/node~Node} viewElement The view element whose mappings will be updated.\n     * @param {Node} domElement The DOM element representing the given view element.\n     */\n\n  }, {\n    key: \"_updateElementMappings\",\n    value: function _updateElementMappings(viewElement, domElement) {\n      // Remap 'DomConverter' bindings.\n      this.domConverter.unbindDomElement(domElement);\n      this.domConverter.bindElements(domElement, viewElement); // View element may have children which needs to be updated, but are not marked, mark them to update.\n\n      this.markedChildren.add(viewElement); // Because we replace new view element mapping with the existing one, the corresponding DOM element\n      // will not be rerendered. The new view element may have different attributes than the previous one.\n      // Since its corresponding DOM element will not be rerendered, new attributes will not be added\n      // to the DOM, so we need to mark it here to make sure its attributes gets updated. See #1427 for more\n      // detailed case study.\n      // Also there are cases where replaced element is removed from the view structure and then has\n      // its attributes changed or removed. In such cases the element will not be present in `markedAttributes`\n      // and also may be the same (`element.isSimilar()`) as the reused element not having its attributes updated.\n      // To prevent such situations we always mark reused element to have its attributes rerenderd (#1560).\n\n      this.markedAttributes.add(viewElement);\n    }\n    /**\n     * Gets the position of the inline filler based on the current selection.\n     * Here, we assume that we know that the filler is needed and\n     * {@link #_isSelectionInInlineFiller is at the selection position}, and, since it is needed,\n     * it is somewhere at the selection position.\n     *\n     * Note: The filler position cannot be restored based on the filler's DOM text node, because\n     * when this method is called (before rendering), the bindings will often be broken. View-to-DOM\n     * bindings are only dependable after rendering.\n     *\n     * @private\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"_getInlineFillerPosition\",\n    value: function _getInlineFillerPosition() {\n      var firstPos = this.selection.getFirstPosition();\n\n      if (firstPos.parent.is('text')) {\n        return ViewPosition._createBefore(this.selection.getFirstPosition().parent);\n      } else {\n        return firstPos;\n      }\n    }\n    /**\n     * Returns `true` if the selection has not left the inline filler's text node.\n     * If it is `true`, it means that the filler had been added for a reason and the selection did not\n     * leave the filler's text node. For example, the user can be in the middle of a composition so it should not be touched.\n     *\n     * @private\n     * @returns {Boolean} `true` if the inline filler and selection are in the same place.\n     */\n\n  }, {\n    key: \"_isSelectionInInlineFiller\",\n    value: function _isSelectionInInlineFiller() {\n      if (this.selection.rangeCount != 1 || !this.selection.isCollapsed) {\n        return false;\n      } // Note, we can't check if selection's position equals position of the\n      // this._inlineFiller node, because of #663. We may not be able to calculate\n      // the filler's position in the view at this stage.\n      // Instead, we check it the other way – whether selection is anchored in\n      // that text node or next to it.\n      // Possible options are:\n      // \"FILLER{}\"\n      // \"FILLERadded-text{}\"\n\n\n      var selectionPosition = this.selection.getFirstPosition();\n      var position = this.domConverter.viewPositionToDom(selectionPosition);\n\n      if (position && isText(position.parent) && startsWithFiller(position.parent)) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Removes the inline filler.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_removeInlineFiller\",\n    value: function _removeInlineFiller() {\n      var domFillerNode = this._inlineFiller; // Something weird happened and the stored node doesn't contain the filler's text.\n\n      if (!startsWithFiller(domFillerNode)) {\n        /**\n         * The inline filler node was lost. Most likely, something overwrote the filler text node\n         * in the DOM.\n         *\n         * @error view-renderer-filler-was-lost\n         */\n        throw new CKEditorError('view-renderer-filler-was-lost: The inline filler node was lost.');\n      }\n\n      if (isInlineFiller(domFillerNode)) {\n        domFillerNode.parentNode.removeChild(domFillerNode);\n      } else {\n        domFillerNode.data = domFillerNode.data.substr(INLINE_FILLER_LENGTH);\n      }\n\n      this._inlineFiller = null;\n    }\n    /**\n     * Checks if the inline {@link module:engine/view/filler filler} should be added.\n     *\n     * @private\n     * @returns {Boolean} `true` if the inline filler should be added.\n     */\n\n  }, {\n    key: \"_needsInlineFillerAtSelection\",\n    value: function _needsInlineFillerAtSelection() {\n      if (this.selection.rangeCount != 1 || !this.selection.isCollapsed) {\n        return false;\n      }\n\n      var selectionPosition = this.selection.getFirstPosition();\n      var selectionParent = selectionPosition.parent;\n      var selectionOffset = selectionPosition.offset; // If there is no DOM root we do not care about fillers.\n\n      if (!this.domConverter.mapViewToDom(selectionParent.root)) {\n        return false;\n      }\n\n      if (!selectionParent.is('element')) {\n        return false;\n      } // Prevent adding inline filler inside elements with contenteditable=false.\n      // https://github.com/ckeditor/ckeditor5-engine/issues/1170\n\n\n      if (!isEditable(selectionParent)) {\n        return false;\n      } // We have block filler, we do not need inline one.\n\n\n      if (selectionOffset === selectionParent.getFillerOffset()) {\n        return false;\n      }\n\n      var nodeBefore = selectionPosition.nodeBefore;\n      var nodeAfter = selectionPosition.nodeAfter;\n\n      if (nodeBefore instanceof ViewText || nodeAfter instanceof ViewText) {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Checks if text needs to be updated and possibly updates it.\n     *\n     * @private\n     * @param {module:engine/view/text~Text} viewText View text to update.\n     * @param {Object} options\n     * @param {module:engine/view/position~Position} options.inlineFillerPosition The position where the inline\n     * filler should be rendered.\n     */\n\n  }, {\n    key: \"_updateText\",\n    value: function _updateText(viewText, options) {\n      var domText = this.domConverter.findCorrespondingDomText(viewText);\n      var newDomText = this.domConverter.viewToDom(viewText, domText.ownerDocument);\n      var actualText = domText.data;\n      var expectedText = newDomText.data;\n      var filler = options.inlineFillerPosition;\n\n      if (filler && filler.parent == viewText.parent && filler.offset == viewText.index) {\n        expectedText = INLINE_FILLER + expectedText;\n      }\n\n      if (actualText != expectedText) {\n        var actions = fastDiff(actualText, expectedText);\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n          for (var _iterator6 = actions[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n            var action = _step6.value;\n\n            if (action.type === 'insert') {\n              domText.insertData(action.index, action.values.join(''));\n            } else {\n              // 'delete'\n              domText.deleteData(action.index, action.howMany);\n            }\n          }\n        } catch (err) {\n          _didIteratorError6 = true;\n          _iteratorError6 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n              _iterator6.return();\n            }\n          } finally {\n            if (_didIteratorError6) {\n              throw _iteratorError6;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Checks if attribute list needs to be updated and possibly updates it.\n     *\n     * @private\n     * @param {module:engine/view/element~Element} viewElement The view element to update.\n     */\n\n  }, {\n    key: \"_updateAttrs\",\n    value: function _updateAttrs(viewElement) {\n      var domElement = this.domConverter.mapViewToDom(viewElement);\n\n      if (!domElement) {\n        // If there is no `domElement` it means that 'viewElement' is outdated as its mapping was updated\n        // in 'this._updateChildrenMappings()'. There is no need to process it as new view element which\n        // replaced old 'viewElement' mapping was also added to 'this.markedAttributes'\n        // in 'this._updateChildrenMappings()' so it will be processed separately.\n        return;\n      }\n\n      var domAttrKeys = Array.from(domElement.attributes).map(function (attr) {\n        return attr.name;\n      });\n      var viewAttrKeys = viewElement.getAttributeKeys(); // Add or overwrite attributes.\n\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = viewAttrKeys[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var key = _step7.value;\n          domElement.setAttribute(key, viewElement.getAttribute(key));\n        } // Remove from DOM attributes which do not exists in the view.\n\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n            _iterator7.return();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = domAttrKeys[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var _key = _step8.value;\n\n          if (!viewElement.hasAttribute(_key)) {\n            domElement.removeAttribute(_key);\n          }\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n    }\n    /**\n     * Checks if elements child list needs to be updated and possibly updates it.\n     *\n     * @private\n     * @param {module:engine/view/element~Element} viewElement View element to update.\n     * @param {Object} options\n     * @param {module:engine/view/position~Position} options.inlineFillerPosition The position where the inline\n     * filler should be rendered.\n     */\n\n  }, {\n    key: \"_updateChildren\",\n    value: function _updateChildren(viewElement, options) {\n      var domElement = this.domConverter.mapViewToDom(viewElement);\n\n      if (!domElement) {\n        // If there is no `domElement` it means that it was already removed from DOM.\n        // There is no need to process it. It will be processed when re-inserted.\n        return;\n      }\n\n      var inlineFillerPosition = options.inlineFillerPosition;\n      var actualDomChildren = this.domConverter.mapViewToDom(viewElement).childNodes;\n      var expectedDomChildren = Array.from(this.domConverter.viewChildrenToDom(viewElement, domElement.ownerDocument, {\n        bind: true,\n        inlineFillerPosition: inlineFillerPosition\n      })); // Inline filler element has to be created as it is present in the DOM, but not in the view. It is required\n      // during diffing so text nodes could be compared correctly and also during rendering to maintain\n      // proper order and indexes while updating the DOM.\n\n      if (inlineFillerPosition && inlineFillerPosition.parent === viewElement) {\n        addInlineFiller(domElement.ownerDocument, expectedDomChildren, inlineFillerPosition.offset);\n      }\n\n      var diff = this._diffNodeLists(actualDomChildren, expectedDomChildren);\n\n      var i = 0;\n      var nodesToUnbind = new Set();\n      var _iteratorNormalCompletion9 = true;\n      var _didIteratorError9 = false;\n      var _iteratorError9 = undefined;\n\n      try {\n        for (var _iterator9 = diff[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n          var action = _step9.value;\n\n          if (action === 'insert') {\n            insertAt(domElement, i, expectedDomChildren[i]);\n            i++;\n          } else if (action === 'delete') {\n            nodesToUnbind.add(actualDomChildren[i]);\n            remove(actualDomChildren[i]);\n          } else {\n            // 'equal'\n            // Force updating text nodes inside elements which did not change and do not need to be re-rendered (#1125).\n            this._markDescendantTextToSync(this.domConverter.domToView(expectedDomChildren[i]));\n\n            i++;\n          }\n        } // Unbind removed nodes. When node does not have a parent it means that it was removed from DOM tree during\n        // comparision with the expected DOM. We don't need to check child nodes, because if child node was reinserted,\n        // it was moved to DOM tree out of the removed node.\n\n      } catch (err) {\n        _didIteratorError9 = true;\n        _iteratorError9 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n            _iterator9.return();\n          }\n        } finally {\n          if (_didIteratorError9) {\n            throw _iteratorError9;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = nodesToUnbind[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var node = _step10.value;\n\n          if (!node.parentNode) {\n            this.domConverter.unbindDomElement(node);\n          }\n        }\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n            _iterator10.return();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n    }\n    /**\n     * Shorthand for diffing two arrays or node lists of DOM nodes.\n     *\n     * @private\n     * @param {Array.<Node>|NodeList} actualDomChildren Actual DOM children\n     * @param {Array.<Node>|NodeList} expectedDomChildren Expected DOM children.\n     * @returns {Array.<String>} The list of actions based on the {@link module:utils/diff~diff} function.\n     */\n\n  }, {\n    key: \"_diffNodeLists\",\n    value: function _diffNodeLists(actualDomChildren, expectedDomChildren) {\n      actualDomChildren = filterOutFakeSelectionContainer(actualDomChildren, this._fakeSelectionContainer);\n      return diff(actualDomChildren, expectedDomChildren, sameNodes.bind(null, this.domConverter.blockFiller));\n    }\n    /**\n     * Finds DOM nodes that were replaced with the similar nodes (same tag name) in the view. All nodes are compared\n     * within one `insert`/`delete` action group, for example:\n     *\n     * \t\tActual DOM:\t\t<p><b>Foo</b>Bar<i>Baz</i><b>Bax</b></p>\n     * \t\tExpected DOM:\t<p>Bar<b>123</b><i>Baz</i><b>456</b></p>\n     * \t\tInput actions:\t[ insert, insert, delete, delete, equal, insert, delete ]\n     * \t\tOutput actions:\t[ insert, replace, delete, equal, replace ]\n     *\n     * @private\n     * @param {Array.<String>} actions Actions array which is a result of the {@link module:utils/diff~diff} function.\n     * @param {Array.<Node>|NodeList} actualDom Actual DOM children\n     * @param {Array.<Node>} expectedDom Expected DOM children.\n     * @returns {Array.<String>} Actions array modified with the `replace` actions.\n     */\n\n  }, {\n    key: \"_findReplaceActions\",\n    value: function _findReplaceActions(actions, actualDom, expectedDom) {\n      // If there is no both 'insert' and 'delete' actions, no need to check for replaced elements.\n      if (actions.indexOf('insert') === -1 || actions.indexOf('delete') === -1) {\n        return actions;\n      }\n\n      var newActions = [];\n      var actualSlice = [];\n      var expectedSlice = [];\n      var counter = {\n        equal: 0,\n        insert: 0,\n        delete: 0\n      };\n      var _iteratorNormalCompletion11 = true;\n      var _didIteratorError11 = false;\n      var _iteratorError11 = undefined;\n\n      try {\n        for (var _iterator11 = actions[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n          var action = _step11.value;\n\n          if (action === 'insert') {\n            expectedSlice.push(expectedDom[counter.equal + counter.insert]);\n          } else if (action === 'delete') {\n            actualSlice.push(actualDom[counter.equal + counter.delete]);\n          } else {\n            // equal\n            newActions = newActions.concat(diff(actualSlice, expectedSlice, areSimilar).map(function (x) {\n              return x === 'equal' ? 'replace' : x;\n            }));\n            newActions.push('equal'); // Reset stored elements on 'equal'.\n\n            actualSlice = [];\n            expectedSlice = [];\n          }\n\n          counter[action]++;\n        }\n      } catch (err) {\n        _didIteratorError11 = true;\n        _iteratorError11 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n            _iterator11.return();\n          }\n        } finally {\n          if (_didIteratorError11) {\n            throw _iteratorError11;\n          }\n        }\n      }\n\n      return newActions.concat(diff(actualSlice, expectedSlice, areSimilar).map(function (x) {\n        return x === 'equal' ? 'replace' : x;\n      }));\n    }\n    /**\n     * Marks text nodes to be synchronized.\n     *\n     * If a text node is passed, it will be marked. If an element is passed, all descendant text nodes inside it will be marked.\n     *\n     * @private\n     * @param {module:engine/view/node~Node} viewNode View node to sync.\n     */\n\n  }, {\n    key: \"_markDescendantTextToSync\",\n    value: function _markDescendantTextToSync(viewNode) {\n      if (!viewNode) {\n        return;\n      }\n\n      if (viewNode.is('text')) {\n        this.markedTexts.add(viewNode);\n      } else if (viewNode.is('element')) {\n        var _iteratorNormalCompletion12 = true;\n        var _didIteratorError12 = false;\n        var _iteratorError12 = undefined;\n\n        try {\n          for (var _iterator12 = viewNode.getChildren()[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n            var child = _step12.value;\n\n            this._markDescendantTextToSync(child);\n          }\n        } catch (err) {\n          _didIteratorError12 = true;\n          _iteratorError12 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n              _iterator12.return();\n            }\n          } finally {\n            if (_didIteratorError12) {\n              throw _iteratorError12;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Checks if the selection needs to be updated and possibly updates it.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_updateSelection\",\n    value: function _updateSelection() {\n      // If there is no selection - remove DOM and fake selections.\n      if (this.selection.rangeCount === 0) {\n        this._removeDomSelection();\n\n        this._removeFakeSelection();\n\n        return;\n      }\n\n      var domRoot = this.domConverter.mapViewToDom(this.selection.editableElement); // Do nothing if there is no focus, or there is no DOM element corresponding to selection's editable element.\n\n      if (!this.isFocused || !domRoot) {\n        return;\n      } // Render selection.\n\n\n      if (this.selection.isFake) {\n        this._updateFakeSelection(domRoot);\n      } else {\n        this._removeFakeSelection();\n\n        this._updateDomSelection(domRoot);\n      }\n    }\n    /**\n     * Updates the fake selection.\n     *\n     * @private\n     * @param {HTMLElement} domRoot A valid DOM root where the fake selection container should be added.\n     */\n\n  }, {\n    key: \"_updateFakeSelection\",\n    value: function _updateFakeSelection(domRoot) {\n      var domDocument = domRoot.ownerDocument;\n      var container = this._fakeSelectionContainer; // Create fake selection container if one does not exist.\n\n      if (!container) {\n        this._fakeSelectionContainer = container = domDocument.createElement('div');\n        Object.assign(container.style, {\n          position: 'fixed',\n          top: 0,\n          left: '-9999px',\n          // See https://github.com/ckeditor/ckeditor5/issues/752.\n          width: '42px'\n        }); // Fill it with a text node so we can update it later.\n\n        container.textContent = \"\\xA0\";\n      }\n\n      if (!container.parentElement || container.parentElement != domRoot) {\n        domRoot.appendChild(container);\n      } // Update contents.\n\n\n      container.textContent = this.selection.fakeSelectionLabel || \"\\xA0\"; // Update selection.\n\n      var domSelection = domDocument.getSelection();\n      var domRange = domDocument.createRange();\n      domSelection.removeAllRanges();\n      domRange.selectNodeContents(container);\n      domSelection.addRange(domRange); // Bind fake selection container with current selection.\n\n      this.domConverter.bindFakeSelection(container, this.selection);\n    }\n    /**\n     * Updates the DOM selection.\n     *\n     * @private\n     * @param {HTMLElement} domRoot A valid DOM root where the DOM selection should be rendered.\n     */\n\n  }, {\n    key: \"_updateDomSelection\",\n    value: function _updateDomSelection(domRoot) {\n      var domSelection = domRoot.ownerDocument.defaultView.getSelection(); // Let's check whether DOM selection needs updating at all.\n\n      if (!this._domSelectionNeedsUpdate(domSelection)) {\n        return;\n      } // Multi-range selection is not available in most browsers, and, at least in Chrome, trying to\n      // set such selection, that is not continuous, throws an error. Because of that, we will just use anchor\n      // and focus of view selection.\n      // Since we are not supporting multi-range selection, we also do not need to check if proper editable is\n      // selected. If there is any editable selected, it is okay (editable is taken from selection anchor).\n\n\n      var anchor = this.domConverter.viewPositionToDom(this.selection.anchor);\n      var focus = this.domConverter.viewPositionToDom(this.selection.focus); // Focus the new editing host.\n      // Otherwise, FF may throw an error (https://github.com/ckeditor/ckeditor5/issues/721).\n\n      domRoot.focus();\n      domSelection.collapse(anchor.parent, anchor.offset);\n      domSelection.extend(focus.parent, focus.offset); // Firefox–specific hack (https://github.com/ckeditor/ckeditor5-engine/issues/1439).\n\n      if (env.isGecko) {\n        fixGeckoSelectionAfterBr(focus, domSelection);\n      }\n    }\n    /**\n     * Checks whether a given DOM selection needs to be updated.\n     *\n     * @private\n     * @param {Selection} domSelection The DOM selection to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_domSelectionNeedsUpdate\",\n    value: function _domSelectionNeedsUpdate(domSelection) {\n      if (!this.domConverter.isDomSelectionCorrect(domSelection)) {\n        // Current DOM selection is in incorrect position. We need to update it.\n        return true;\n      }\n\n      var oldViewSelection = domSelection && this.domConverter.domSelectionToView(domSelection);\n\n      if (oldViewSelection && this.selection.isEqual(oldViewSelection)) {\n        return false;\n      } // If selection is not collapsed, it does not need to be updated if it is similar.\n\n\n      if (!this.selection.isCollapsed && this.selection.isSimilar(oldViewSelection)) {\n        // Selection did not changed and is correct, do not update.\n        return false;\n      } // Selections are not similar.\n\n\n      return true;\n    }\n    /**\n     * Removes the DOM selection.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_removeDomSelection\",\n    value: function _removeDomSelection() {\n      var _iteratorNormalCompletion13 = true;\n      var _didIteratorError13 = false;\n      var _iteratorError13 = undefined;\n\n      try {\n        for (var _iterator13 = this.domDocuments[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n          var doc = _step13.value;\n          var domSelection = doc.getSelection();\n\n          if (domSelection.rangeCount) {\n            var activeDomElement = doc.activeElement;\n            var viewElement = this.domConverter.mapDomToView(activeDomElement);\n\n            if (activeDomElement && viewElement) {\n              doc.getSelection().removeAllRanges();\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError13 = true;\n        _iteratorError13 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n            _iterator13.return();\n          }\n        } finally {\n          if (_didIteratorError13) {\n            throw _iteratorError13;\n          }\n        }\n      }\n    }\n    /**\n     * Removes the fake selection.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_removeFakeSelection\",\n    value: function _removeFakeSelection() {\n      var container = this._fakeSelectionContainer;\n\n      if (container) {\n        container.remove();\n      }\n    }\n    /**\n     * Checks if focus needs to be updated and possibly updates it.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_updateFocus\",\n    value: function _updateFocus() {\n      if (this.isFocused) {\n        var editable = this.selection.editableElement;\n\n        if (editable) {\n          this.domConverter.focus(editable);\n        }\n      }\n    }\n  }]);\n\n  return Renderer;\n}();\n\nexport { Renderer as default };\nmix(Renderer, ObservableMixin); // Checks if provided element is editable.\n//\n// @private\n// @param {module:engine/view/element~Element} element\n// @returns {Boolean}\n\nfunction isEditable(element) {\n  if (element.getAttribute('contenteditable') == 'false') {\n    return false;\n  }\n\n  var parent = element.findAncestor(function (element) {\n    return element.hasAttribute('contenteditable');\n  });\n  return !parent || parent.getAttribute('contenteditable') == 'true';\n} // Adds inline filler at a given position.\n//\n// The position can be given as an array of DOM nodes and an offset in that array,\n// or a DOM parent element and an offset in that element.\n//\n// @private\n// @param {Document} domDocument\n// @param {Element|Array.<Node>} domParentOrArray\n// @param {Number} offset\n// @returns {Text} The DOM text node that contains an inline filler.\n\n\nfunction addInlineFiller(domDocument, domParentOrArray, offset) {\n  var childNodes = domParentOrArray instanceof Array ? domParentOrArray : domParentOrArray.childNodes;\n  var nodeAfterFiller = childNodes[offset];\n\n  if (isText(nodeAfterFiller)) {\n    nodeAfterFiller.data = INLINE_FILLER + nodeAfterFiller.data;\n    return nodeAfterFiller;\n  } else {\n    var fillerNode = domDocument.createTextNode(INLINE_FILLER);\n\n    if (Array.isArray(domParentOrArray)) {\n      childNodes.splice(offset, 0, fillerNode);\n    } else {\n      insertAt(domParentOrArray, offset, fillerNode);\n    }\n\n    return fillerNode;\n  }\n} // Whether two DOM nodes should be considered as similar.\n// Nodes are considered similar if they have the same tag name.\n//\n// @private\n// @param {Node} node1\n// @param {Node} node2\n// @returns {Boolean}\n\n\nfunction areSimilar(node1, node2) {\n  return isNode(node1) && isNode(node2) && !isText(node1) && !isText(node2) && node1.tagName.toLowerCase() === node2.tagName.toLowerCase();\n} // Whether two dom nodes should be considered as the same.\n// Two nodes which are considered the same are:\n//\n//\t\t* Text nodes with the same text.\n//\t\t* Element nodes represented by the same object.\n//\t\t* Two block filler elements.\n//\n// @private\n// @param {Function} blockFiller Block filler creator function, see {@link module:engine/view/domconverter~DomConverter#blockFiller}.\n// @param {Node} node1\n// @param {Node} node2\n// @returns {Boolean}\n\n\nfunction sameNodes(blockFiller, actualDomChild, expectedDomChild) {\n  // Elements.\n  if (actualDomChild === expectedDomChild) {\n    return true;\n  } // Texts.\n  else if (isText(actualDomChild) && isText(expectedDomChild)) {\n      return actualDomChild.data === expectedDomChild.data;\n    } // Block fillers.\n    else if (isBlockFiller(actualDomChild, blockFiller) && isBlockFiller(expectedDomChild, blockFiller)) {\n        return true;\n      } // Not matching types.\n\n\n  return false;\n} // The following is a Firefox–specific hack (https://github.com/ckeditor/ckeditor5-engine/issues/1439).\n// When the native DOM selection is at the end of the block and preceded by <br /> e.g.\n//\n//\t\t<p>foo<br/>[]</p>\n//\n// which happens a lot when using the soft line break, the browser fails to (visually) move the\n// caret to the new line. A quick fix is as simple as force–refreshing the selection with the same range.\n\n\nfunction fixGeckoSelectionAfterBr(focus, domSelection) {\n  var parent = focus.parent; // This fix works only when the focus point is at the very end of an element.\n  // There is no point in running it in cases unrelated to the browser bug.\n\n  if (parent.nodeType != Node.ELEMENT_NODE || focus.offset != parent.childNodes.length - 1) {\n    return;\n  }\n\n  var childAtOffset = parent.childNodes[focus.offset]; // To stay on the safe side, the fix being as specific as possible, it targets only the\n  // selection which is at the very end of the element and preceded by <br />.\n\n  if (childAtOffset && childAtOffset.tagName == 'BR') {\n    domSelection.addRange(domSelection.getRangeAt(0));\n  }\n}\n\nfunction filterOutFakeSelectionContainer(domChildList, fakeSelectionContainer) {\n  var childList = Array.from(domChildList);\n\n  if (childList.length == 0 || !fakeSelectionContainer) {\n    return childList;\n  }\n\n  var last = childList[childList.length - 1];\n\n  if (last == fakeSelectionContainer) {\n    childList.pop();\n  }\n\n  return childList;\n}","import baseIsEqual from './_baseIsEqual.js';\n/**\n * This method is like `_.isEqual` except that it accepts `customizer` which\n * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n * are handled by the method instead. The `customizer` is invoked with up to\n * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * function isGreeting(value) {\n *   return /^h(?:i|ello)$/.test(value);\n * }\n *\n * function customizer(objValue, othValue) {\n *   if (isGreeting(objValue) && isGreeting(othValue)) {\n *     return true;\n *   }\n * }\n *\n * var array = ['hello', 'goodbye'];\n * var other = ['hi', 'goodbye'];\n *\n * _.isEqualWith(array, other, customizer);\n * // => true\n */\n\nfunction isEqualWith(value, other, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  var result = customizer ? customizer(value, other) : undefined;\n  return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n}\n\nexport default isEqualWith;","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _assertThisInitialized from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/mutationobserver\n */\n\n/* globals window */\nimport Observer from './observer';\nimport ViewSelection from '../selection';\nimport { startsWithFiller, getDataWithoutFiller } from '../filler';\nimport { isEqualWith } from 'lodash-es';\n/**\n * Mutation observer class observes changes in the DOM, fires {@link module:engine/view/document~Document#event:mutations} event, mark view\n * elements as changed and call {@link module:engine/view/renderer~Renderer#render}.\n * Because all mutated nodes are marked as \"to be rendered\" and the\n * {@link module:engine/view/renderer~Renderer#render} is called, all changes will be reverted, unless the mutation will be handled by the\n * {@link module:engine/view/document~Document#event:mutations} event listener. It means user will see only handled changes, and the editor\n * will block all changes which are not handled.\n *\n * Mutation Observer also take care of reducing number of mutations which are fired. It removes duplicates and\n * mutations on elements which do not have corresponding view elements. Also\n * {@link module:engine/view/observer/mutationobserver~MutatedText text mutation} is fired only if parent element do not change child list.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\n\nvar MutationObserver =\n/*#__PURE__*/\nfunction (_Observer) {\n  _inherits(MutationObserver, _Observer);\n\n  function MutationObserver(view) {\n    var _this;\n\n    _classCallCheck(this, MutationObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MutationObserver).call(this, view));\n    /**\n     * Native mutation observer config.\n     *\n     * @private\n     * @member {Object}\n     */\n\n    _this._config = {\n      childList: true,\n      characterData: true,\n      characterDataOldValue: true,\n      subtree: true\n    };\n    /**\n     * Reference to the {@link module:engine/view/view~View#domConverter}.\n     *\n     * @member {module:engine/view/domconverter~DomConverter}\n     */\n\n    _this.domConverter = view.domConverter;\n    /**\n     * Reference to the {@link module:engine/view/view~View#_renderer}.\n     *\n     * @member {module:engine/view/renderer~Renderer}\n     */\n\n    _this.renderer = view._renderer;\n    /**\n     * Observed DOM elements.\n     *\n     * @private\n     * @member {Array.<HTMLElement>}\n     */\n\n    _this._domElements = [];\n    /**\n     * Native mutation observer.\n     *\n     * @private\n     * @member {MutationObserver}\n     */\n\n    _this._mutationObserver = new window.MutationObserver(_this._onMutations.bind(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /**\n   * Synchronously fires {@link module:engine/view/document~Document#event:mutations} event with all mutations in record queue.\n   * At the same time empties the queue so mutations will not be fired twice.\n   */\n\n\n  _createClass(MutationObserver, [{\n    key: \"flush\",\n    value: function flush() {\n      this._onMutations(this._mutationObserver.takeRecords());\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"observe\",\n    value: function observe(domElement) {\n      this._domElements.push(domElement);\n\n      if (this.isEnabled) {\n        this._mutationObserver.observe(domElement, this._config);\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      _get(_getPrototypeOf(MutationObserver.prototype), \"enable\", this).call(this);\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._domElements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var domElement = _step.value;\n\n          this._mutationObserver.observe(domElement, this._config);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      _get(_getPrototypeOf(MutationObserver.prototype), \"disable\", this).call(this);\n\n      this._mutationObserver.disconnect();\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(MutationObserver.prototype), \"destroy\", this).call(this);\n\n      this._mutationObserver.disconnect();\n    }\n    /**\n     * Handles mutations. Deduplicates, mark view elements to sync, fire event and call render.\n     *\n     * @private\n     * @param {Array.<Object>} domMutations Array of native mutations.\n     */\n\n  }, {\n    key: \"_onMutations\",\n    value: function _onMutations(domMutations) {\n      // As a result of this.flush() we can have an empty collection.\n      if (domMutations.length === 0) {\n        return;\n      }\n\n      var domConverter = this.domConverter; // Use map and set for deduplication.\n\n      var mutatedTexts = new Map();\n      var mutatedElements = new Set(); // Handle `childList` mutations first, so we will be able to check if the `characterData` mutation is in the\n      // element with changed structure anyway.\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = domMutations[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var mutation = _step2.value;\n\n          if (mutation.type === 'childList') {\n            var element = domConverter.mapDomToView(mutation.target); // Do not collect mutations from UIElements.\n\n            if (element && element.is('uiElement')) {\n              continue;\n            }\n\n            if (element && !this._isBogusBrMutation(mutation)) {\n              mutatedElements.add(element);\n            }\n          }\n        } // Handle `characterData` mutations later, when we have the full list of nodes which changed structure.\n\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = domMutations[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _mutation = _step3.value;\n\n          var _element = domConverter.mapDomToView(_mutation.target); // Do not collect mutations from UIElements.\n\n\n          if (_element && _element.is('uiElement')) {\n            continue;\n          }\n\n          if (_mutation.type === 'characterData') {\n            var text = domConverter.findCorrespondingViewText(_mutation.target);\n\n            if (text && !mutatedElements.has(text.parent)) {\n              // Use text as a key, for deduplication. If there will be another mutation on the same text element\n              // we will have only one in the map.\n              mutatedTexts.set(text, {\n                type: 'text',\n                oldText: text.data,\n                newText: getDataWithoutFiller(_mutation.target),\n                node: text\n              });\n            } // When we added first letter to the text node which had only inline filler, for the DOM it is mutation\n            // on text, but for the view, where filler text node did not existed, new text node was created, so we\n            // need to fire 'children' mutation instead of 'text'.\n            else if (!text && startsWithFiller(_mutation.target)) {\n                mutatedElements.add(domConverter.mapDomToView(_mutation.target.parentNode));\n              }\n          }\n        } // Now we build the list of mutations to fire and mark elements. We did not do it earlier to avoid marking the\n        // same node multiple times in case of duplication.\n        // List of mutations we will fire.\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      var viewMutations = [];\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = mutatedTexts.values()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var mutatedText = _step4.value;\n          this.renderer.markToSync('text', mutatedText.node);\n          viewMutations.push(mutatedText);\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = mutatedElements[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var viewElement = _step5.value;\n          var domElement = domConverter.mapViewToDom(viewElement);\n          var viewChildren = Array.from(viewElement.getChildren());\n          var newViewChildren = Array.from(domConverter.domChildrenToView(domElement, {\n            withChildren: false\n          })); // It may happen that as a result of many changes (sth was inserted and then removed),\n          // both elements haven't really changed. #1031\n\n          if (!isEqualWith(viewChildren, newViewChildren, sameNodes)) {\n            this.renderer.markToSync('children', viewElement);\n            viewMutations.push({\n              type: 'children',\n              oldChildren: viewChildren,\n              newChildren: newViewChildren,\n              node: viewElement\n            });\n          }\n        } // Retrieve `domSelection` using `ownerDocument` of one of mutated nodes.\n        // There should not be simultaneous mutation in multiple documents, so it's fine.\n\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      var domSelection = domMutations[0].target.ownerDocument.getSelection();\n      var viewSelection = null;\n\n      if (domSelection && domSelection.anchorNode) {\n        // If `domSelection` is inside a dom node that is already bound to a view node from view tree, get\n        // corresponding selection in the view and pass it together with `viewMutations`. The `viewSelection` may\n        // be used by features handling mutations.\n        // Only one range is supported.\n        var viewSelectionAnchor = domConverter.domPositionToView(domSelection.anchorNode, domSelection.anchorOffset);\n        var viewSelectionFocus = domConverter.domPositionToView(domSelection.focusNode, domSelection.focusOffset); // Anchor and focus has to be properly mapped to view.\n\n        if (viewSelectionAnchor && viewSelectionFocus) {\n          viewSelection = new ViewSelection(viewSelectionAnchor);\n          viewSelection.setFocus(viewSelectionFocus);\n        }\n      }\n\n      this.document.fire('mutations', viewMutations, viewSelection); // If nothing changes on `mutations` event, at this point we have \"dirty DOM\" (changed) and de-synched\n      // view (which has not been changed). In order to \"reset DOM\" we render the view again.\n\n      this.view.forceRender();\n\n      function sameNodes(child1, child2) {\n        // First level of comparison (array of children vs array of children) – use the Lodash's default behavior.\n        if (Array.isArray(child1)) {\n          return;\n        } // Elements.\n\n\n        if (child1 === child2) {\n          return true;\n        } // Texts.\n        else if (child1.is('text') && child2.is('text')) {\n            return child1.data === child2.data;\n          } // Not matching types.\n\n\n        return false;\n      }\n    }\n    /**\n     * Checks if mutation was generated by the browser inserting bogus br on the end of the block element.\n     * Such mutations are generated while pressing space or performing native spellchecker correction\n     * on the end of the block element in Firefox browser.\n     *\n     * @private\n     * @param {Object} mutation Native mutation object.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_isBogusBrMutation\",\n    value: function _isBogusBrMutation(mutation) {\n      var addedNode = null; // Check if mutation added only one node on the end of its parent.\n\n      if (mutation.nextSibling === null && mutation.removedNodes.length === 0 && mutation.addedNodes.length == 1) {\n        addedNode = this.domConverter.domToView(mutation.addedNodes[0], {\n          withChildren: false\n        });\n      }\n\n      return addedNode && addedNode.is('element', 'br');\n    }\n  }]);\n\n  return MutationObserver;\n}(Observer);\n/**\n * Fired when mutation occurred. If tree view is not changed on this event, DOM will be reverted to the state before\n * mutation, so all changes which should be applied, should be handled on this event.\n *\n * Introduced by {@link module:engine/view/observer/mutationobserver~MutationObserver}.\n *\n * Note that because {@link module:engine/view/observer/mutationobserver~MutationObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/mutationobserver~MutationObserver\n * @event module:engine/view/document~Document#event:mutations\n * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|module:engine/view/observer/mutationobserver~MutatedChildren>}\n * viewMutations Array of mutations.\n * For mutated texts it will be {@link module:engine/view/observer/mutationobserver~MutatedText} and for mutated elements it will be\n * {@link module:engine/view/observer/mutationobserver~MutatedChildren}. You can recognize the type based on the `type` property.\n * @param {module:engine/view/selection~Selection|null} viewSelection View selection that is a result of converting DOM selection to view.\n * Keep in\n * mind that the DOM selection is already \"updated\", meaning that it already acknowledges changes done in mutation.\n */\n\n/**\n * Mutation item for text.\n *\n * @see module:engine/view/document~Document#event:mutations\n * @see module:engine/view/observer/mutationobserver~MutatedChildren\n *\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedText\n *\n * @property {String} type For text mutations it is always 'text'.\n * @property {module:engine/view/text~Text} node Mutated text node.\n * @property {String} oldText Old text.\n * @property {String} newText New text.\n */\n\n/**\n * Mutation item for child nodes.\n *\n * @see module:engine/view/document~Document#event:mutations\n * @see module:engine/view/observer/mutationobserver~MutatedText\n *\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedChildren\n *\n * @property {String} type For child nodes mutations it is always 'children'.\n * @property {module:engine/view/element~Element} node Parent of the mutated children.\n * @property {Array.<module:engine/view/node~Node>} oldChildren Old child nodes.\n * @property {Array.<module:engine/view/node~Node>} newChildren New child nodes.\n */\n\n\nexport { MutationObserver as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/keyobserver\n */\nimport DomEventObserver from './domeventobserver';\nimport { getCode } from '@ckeditor/ckeditor5-utils/src/keyboard';\n/**\n * {@link module:engine/view/document~Document#event:keydown Key down} event observer.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\n\nvar KeyObserver =\n/*#__PURE__*/\nfunction (_DomEventObserver) {\n  _inherits(KeyObserver, _DomEventObserver);\n\n  function KeyObserver(view) {\n    var _this;\n\n    _classCallCheck(this, KeyObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(KeyObserver).call(this, view));\n    _this.domEventType = ['keydown', 'keyup'];\n    return _this;\n  }\n\n  _createClass(KeyObserver, [{\n    key: \"onDomEvent\",\n    value: function onDomEvent(domEvt) {\n      this.fire(domEvt.type, domEvt, {\n        keyCode: domEvt.keyCode,\n        altKey: domEvt.altKey,\n        ctrlKey: domEvt.ctrlKey || domEvt.metaKey,\n        shiftKey: domEvt.shiftKey,\n\n        get keystroke() {\n          return getCode(this);\n        }\n\n      });\n    }\n  }]);\n\n  return KeyObserver;\n}(DomEventObserver);\n/**\n * Fired when a key has been pressed.\n *\n * Introduced by {@link module:engine/view/observer/keyobserver~KeyObserver}.\n *\n * Note that because {@link module:engine/view/observer/keyobserver~KeyObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/keyobserver~KeyObserver\n * @event module:engine/view/document~Document#event:keydown\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData\n */\n\n/**\n * Fired when a key has been released.\n *\n * Introduced by {@link module:engine/view/observer/keyobserver~KeyObserver}.\n *\n * Note that because {@link module:engine/view/observer/keyobserver~KeyObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/keyobserver~KeyObserver\n * @event module:engine/view/document~Document#event:keyup\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData\n */\n\n/**\n * The value of both events - {@link module:engine/view/document~Document#event:keydown} and\n * {@link module:engine/view/document~Document#event:keyup}.\n *\n * @class module:engine/view/observer/keyobserver~KeyEventData\n * @extends module:engine/view/observer/domeventdata~DomEventData\n * @implements module:utils/keyboard~KeystrokeInfo\n */\n\n/**\n * Code of the whole keystroke. See {@link module:utils/keyboard~getCode}.\n *\n * @readonly\n * @member {Number} module:engine/view/observer/keyobserver~KeyEventData#keystroke\n */\n\n\nexport { KeyObserver as default };","import root from './_root.js';\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\n\nvar now = function now() {\n  return root.Date.now();\n};\n\nexport default now;","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n/** `Object#toString` result references. */\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nexport default isSymbol;","import isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n/** Used as references for various `Number` constants. */\n\nvar NAN = 0 / 0;\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nexport default toNumber;","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n/** Error message constants. */\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\n\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  wait = toNumber(wait) || 0;\n\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time; // Start the timer for the trailing edge.\n\n    timerId = setTimeout(timerExpired, wait); // Invoke the leading edge.\n\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n    return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime; // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n\n    return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n  }\n\n  function timerExpired() {\n    var time = now();\n\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    } // Restart the timer.\n\n\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined; // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n\n    return result;\n  }\n\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/fakeselectionobserver\n */\nimport Observer from './observer';\nimport ViewSelection from '../selection';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport { debounce } from 'lodash-es';\n/**\n * Fake selection observer class. If view selection is fake it is placed in dummy DOM container. This observer listens\n * on {@link module:engine/view/document~Document#event:keydown keydown} events and handles moving fake view selection to the correct place\n * if arrow keys are pressed.\n * Fires {@link module:engine/view/document~Document#event:selectionChange selectionChange event} simulating natural behaviour of\n * {@link module:engine/view/observer/selectionobserver~SelectionObserver SelectionObserver}.\n *\n * @extends module:engine/view/observer/observer~Observer.Observer\n */\n\nvar FakeSelectionObserver =\n/*#__PURE__*/\nfunction (_Observer) {\n  _inherits(FakeSelectionObserver, _Observer);\n\n  /**\n   * Creates new FakeSelectionObserver instance.\n   *\n   * @param {module:engine/view/view~View} view\n   */\n  function FakeSelectionObserver(view) {\n    var _this;\n\n    _classCallCheck(this, FakeSelectionObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FakeSelectionObserver).call(this, view));\n    /**\n     * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n     *\n     * @private\n     * @param {Object} data Selection change data.\n     * @method #_fireSelectionChangeDoneDebounced\n     */\n\n    _this._fireSelectionChangeDoneDebounced = debounce(function (data) {\n      return _this.document.fire('selectionChangeDone', data);\n    }, 200);\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(FakeSelectionObserver, [{\n    key: \"observe\",\n    value: function observe() {\n      var _this2 = this;\n\n      var document = this.document;\n      document.on('keydown', function (eventInfo, data) {\n        var selection = document.selection;\n\n        if (selection.isFake && _isArrowKeyCode(data.keyCode) && _this2.isEnabled) {\n          // Prevents default key down handling - no selection change will occur.\n          data.preventDefault();\n\n          _this2._handleSelectionMove(data.keyCode);\n        }\n      }, {\n        priority: 'lowest'\n      });\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(FakeSelectionObserver.prototype), \"destroy\", this).call(this);\n\n      this._fireSelectionChangeDoneDebounced.cancel();\n    }\n    /**\n     * Handles collapsing view selection according to given key code. If left or up key is provided - new selection will be\n     * collapsed to left. If right or down key is pressed - new selection will be collapsed to right.\n     *\n     * This method fires {@link module:engine/view/document~Document#event:selectionChange} and\n     * {@link module:engine/view/document~Document#event:selectionChangeDone} events imitating behaviour of\n     * {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n     *\n     * @private\n     * @param {Number} keyCode\n     * @fires module:engine/view/document~Document#event:selectionChange\n     * @fires module:engine/view/document~Document#event:selectionChangeDone\n     */\n\n  }, {\n    key: \"_handleSelectionMove\",\n    value: function _handleSelectionMove(keyCode) {\n      var selection = this.document.selection;\n      var newSelection = new ViewSelection(selection.getRanges(), {\n        backward: selection.isBackward,\n        fake: false\n      }); // Left or up arrow pressed - move selection to start.\n\n      if (keyCode == keyCodes.arrowleft || keyCode == keyCodes.arrowup) {\n        newSelection.setTo(newSelection.getFirstPosition());\n      } // Right or down arrow pressed - move selection to end.\n\n\n      if (keyCode == keyCodes.arrowright || keyCode == keyCodes.arrowdown) {\n        newSelection.setTo(newSelection.getLastPosition());\n      }\n\n      var data = {\n        oldSelection: selection,\n        newSelection: newSelection,\n        domSelection: null\n      }; // Fire dummy selection change event.\n\n      this.document.fire('selectionChange', data); // Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n      // This function is debounced what means that `selectionChangeDone` event will be fired only when\n      // defined int the function time will elapse since the last time the function was called.\n      // So `selectionChangeDone` will be fired when selection will stop changing.\n\n      this._fireSelectionChangeDoneDebounced(data);\n    }\n  }]);\n\n  return FakeSelectionObserver;\n}(Observer); // Checks if one of the arrow keys is pressed.\n//\n// @private\n// @param {Number} keyCode\n// @returns {Boolean}\n\n\nexport { FakeSelectionObserver as default };\n\nfunction _isArrowKeyCode(keyCode) {\n  return keyCode == keyCodes.arrowright || keyCode == keyCodes.arrowleft || keyCode == keyCodes.arrowup || keyCode == keyCodes.arrowdown;\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/selectionobserver\n */\n\n/* global setInterval, clearInterval */\nimport Observer from './observer';\nimport MutationObserver from './mutationobserver';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport { debounce } from 'lodash-es';\n/**\n * Selection observer class observes selection changes in the document. If selection changes on the document this\n * observer checks if there are any mutations and if DOM selection is different than the\n * {@link module:engine/view/document~Document#selection view selection}. Selection observer fires\n * {@link module:engine/view/document~Document#event:selectionChange} event only if selection change was the only change in the document\n * and DOM selection is different then the view selection.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @see module:engine/view/observer/mutationobserver~MutationObserver\n * @extends module:engine/view/observer/observer~Observer\n */\n\nvar SelectionObserver =\n/*#__PURE__*/\nfunction (_Observer) {\n  _inherits(SelectionObserver, _Observer);\n\n  function SelectionObserver(view) {\n    var _this;\n\n    _classCallCheck(this, SelectionObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectionObserver).call(this, view));\n    /**\n     * Instance of the mutation observer. Selection observer calls\n     * {@link module:engine/view/observer/mutationobserver~MutationObserver#flush} to ensure that the mutations will be handled\n     * before the {@link module:engine/view/document~Document#event:selectionChange} event is fired.\n     *\n     * @readonly\n     * @member {module:engine/view/observer/mutationobserver~MutationObserver}\n     * module:engine/view/observer/selectionobserver~SelectionObserver#mutationObserver\n     */\n\n    _this.mutationObserver = view.getObserver(MutationObserver);\n    /**\n     * Reference to the view {@link module:engine/view/documentselection~DocumentSelection} object used to compare\n     * new selection with it.\n     *\n     * @readonly\n     * @member {module:engine/view/documentselection~DocumentSelection}\n     * module:engine/view/observer/selectionobserver~SelectionObserver#selection\n     */\n\n    _this.selection = _this.document.selection;\n    /* eslint-disable max-len */\n\n    /**\n     * Reference to the {@link module:engine/view/view~View#domConverter}.\n     *\n     * @readonly\n     * @member {module:engine/view/domconverter~DomConverter} module:engine/view/observer/selectionobserver~SelectionObserver#domConverter\n     */\n\n    /* eslint-enable max-len */\n\n    _this.domConverter = view.domConverter;\n    /**\n     * Set of documents which have added \"selectionchange\" listener to avoid adding listener twice to the same\n     * document.\n     *\n     * @private\n     * @member {WeakSet.<Document>} module:engine/view/observer/selectionobserver~SelectionObserver#_documents\n     */\n\n    _this._documents = new WeakSet();\n    /**\n     * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n     *\n     * @private\n     * @param {Object} data Selection change data.\n     * @method #_fireSelectionChangeDoneDebounced\n     */\n\n    _this._fireSelectionChangeDoneDebounced = debounce(function (data) {\n      return _this.document.fire('selectionChangeDone', data);\n    }, 200);\n    _this._clearInfiniteLoopInterval = setInterval(function () {\n      return _this._clearInfiniteLoop();\n    }, 1000);\n    /**\n     * Private property to check if the code does not enter infinite loop.\n     *\n     * @private\n     * @member {Number} module:engine/view/observer/selectionobserver~SelectionObserver#_loopbackCounter\n     */\n\n    _this._loopbackCounter = 0;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(SelectionObserver, [{\n    key: \"observe\",\n    value: function observe(domElement) {\n      var _this2 = this;\n\n      var domDocument = domElement.ownerDocument; // Add listener once per each document.\n\n      if (this._documents.has(domDocument)) {\n        return;\n      }\n\n      this.listenTo(domDocument, 'selectionchange', function () {\n        _this2._handleSelectionChange(domDocument);\n      });\n\n      this._documents.add(domDocument);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(SelectionObserver.prototype), \"destroy\", this).call(this);\n\n      clearInterval(this._clearInfiniteLoopInterval);\n\n      this._fireSelectionChangeDoneDebounced.cancel();\n    }\n    /**\n     * Selection change listener. {@link module:engine/view/observer/mutationobserver~MutationObserver#flush Flush} mutations, check if\n     * selection changes and fires {@link module:engine/view/document~Document#event:selectionChange} event on every change\n     * and {@link module:engine/view/document~Document#event:selectionChangeDone} when selection stop changing.\n     *\n     * @private\n     * @param {Document} domDocument DOM document.\n     */\n\n  }, {\n    key: \"_handleSelectionChange\",\n    value: function _handleSelectionChange(domDocument) {\n      // Selection is handled when document is not focused but is read-only. This is because in read-only\n      // mode contenteditable is set as false and editor won't receive focus but we still need to know\n      // selection position.\n      if (!this.isEnabled || !this.document.isFocused && !this.document.isReadOnly) {\n        return;\n      } // Ensure the mutation event will be before selection event on all browsers.\n\n\n      this.mutationObserver.flush(); // If there were mutations then the view will be re-rendered by the mutation observer and selection\n      // will be updated, so selections will equal and event will not be fired, as expected.\n\n      var domSelection = domDocument.defaultView.getSelection();\n      var newViewSelection = this.domConverter.domSelectionToView(domSelection);\n\n      if (this.selection.isEqual(newViewSelection) && this.domConverter.isDomSelectionCorrect(domSelection)) {\n        return;\n      } // Ensure we are not in the infinite loop (#400).\n      // This counter is reset each second. 60 selection changes in 1 second is enough high number\n      // to be very difficult (impossible) to achieve using just keyboard keys (during normal editor use).\n\n\n      if (++this._loopbackCounter > 60) {\n        /**\n         * Selection change observer detected an infinite rendering loop.\n         * Most probably you try to put the selection in the position which is not allowed\n         * by the browser and browser fixes it automatically what causes `selectionchange` event on\n         * which a loopback through a model tries to re-render the wrong selection and again.\n         *\n         * @error selectionchange-infinite-loop\n         */\n        log.warn('selectionchange-infinite-loop: Selection change observer detected an infinite rendering loop.');\n        return;\n      }\n\n      if (this.selection.isSimilar(newViewSelection)) {\n        // If selection was equal and we are at this point of algorithm, it means that it was incorrect.\n        // Just re-render it, no need to fire any events, etc.\n        this.view.forceRender();\n      } else {\n        var data = {\n          oldSelection: this.selection,\n          newSelection: newViewSelection,\n          domSelection: domSelection\n        }; // Prepare data for new selection and fire appropriate events.\n\n        this.document.fire('selectionChange', data); // Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n        // This function is debounced what means that `selectionChangeDone` event will be fired only when\n        // defined int the function time will elapse since the last time the function was called.\n        // So `selectionChangeDone` will be fired when selection will stop changing.\n\n        this._fireSelectionChangeDoneDebounced(data);\n      }\n    }\n    /**\n     * Clears `SelectionObserver` internal properties connected with preventing infinite loop.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_clearInfiniteLoop\",\n    value: function _clearInfiniteLoop() {\n      this._loopbackCounter = 0;\n    }\n  }]);\n\n  return SelectionObserver;\n}(Observer);\n/**\n * Fired when selection has changed. This event is fired only when the selection change was the only change that happened\n * in the document, and old selection is different then the new selection.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChange\n * @param {Object} data\n * @param {module:engine/view/documentselection~DocumentSelection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\n\n/**\n * Fired when selection stops changing.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChangeDone\n * @param {Object} data\n * @param {module:engine/view/documentselection~DocumentSelection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\n\n\nexport { SelectionObserver as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/focusobserver\n */\n\n/* globals setTimeout, clearTimeout */\nimport DomEventObserver from './domeventobserver';\n/**\n * {@link module:engine/view/document~Document#event:focus Focus}\n * and {@link module:engine/view/document~Document#event:blur blur} events observer.\n * Focus observer handle also {@link module:engine/view/rooteditableelement~RootEditableElement#isFocused isFocused} property of the\n * {@link module:engine/view/rooteditableelement~RootEditableElement root elements}.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\n\nvar FocusObserver =\n/*#__PURE__*/\nfunction (_DomEventObserver) {\n  _inherits(FocusObserver, _DomEventObserver);\n\n  function FocusObserver(view) {\n    var _this;\n\n    _classCallCheck(this, FocusObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FocusObserver).call(this, view));\n    _this.domEventType = ['focus', 'blur'];\n    _this.useCapture = true;\n    var document = _this.document;\n    document.on('focus', function () {\n      document.isFocused = true; // Unfortunately native `selectionchange` event is fired asynchronously.\n      // We need to wait until `SelectionObserver` handle the event and then render. Otherwise rendering will\n      // overwrite new DOM selection with selection from the view.\n      // See https://github.com/ckeditor/ckeditor5-engine/issues/795 for more details.\n      // Long timeout is needed to solve #676 and https://github.com/ckeditor/ckeditor5-engine/issues/1157 issues.\n\n      _this._renderTimeoutId = setTimeout(function () {\n        return view.forceRender();\n      }, 50);\n    });\n    document.on('blur', function (evt, data) {\n      var selectedEditable = document.selection.editableElement;\n\n      if (selectedEditable === null || selectedEditable === data.target) {\n        document.isFocused = false; // Re-render the document to update view elements.\n\n        view.forceRender();\n      }\n    });\n    /**\n     * Identifier of the timeout currently used by focus listener to delay rendering execution.\n     *\n     * @private\n     * @member {Number} #_renderTimeoutId\n     */\n\n    return _this;\n  }\n\n  _createClass(FocusObserver, [{\n    key: \"onDomEvent\",\n    value: function onDomEvent(domEvent) {\n      this.fire(domEvent.type, domEvent);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this._renderTimeoutId) {\n        clearTimeout(this._renderTimeoutId);\n      }\n\n      _get(_getPrototypeOf(FocusObserver.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return FocusObserver;\n}(DomEventObserver);\n/**\n * Fired when one of the editables gets focus.\n *\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\n *\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/focusobserver~FocusObserver\n * @event module:engine/view/document~Document#event:focus\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when one of the editables loses focus.\n *\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\n *\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/focusobserver~FocusObserver\n * @event module:engine/view/document~Document#event:blur\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n\nexport { FocusObserver as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/compositionobserver\n */\nimport DomEventObserver from './domeventobserver';\n/**\n * {@link module:engine/view/document~Document#event:compositionstart Compositionstart},\n * {@link module:engine/view/document~Document#event:compositionupdate compositionupdate} and\n * {@link module:engine/view/document~Document#event:compositionend compositionend} events observer.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\n\nvar CompositionObserver =\n/*#__PURE__*/\nfunction (_DomEventObserver) {\n  _inherits(CompositionObserver, _DomEventObserver);\n\n  function CompositionObserver(view) {\n    var _this;\n\n    _classCallCheck(this, CompositionObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CompositionObserver).call(this, view));\n    _this.domEventType = ['compositionstart', 'compositionupdate', 'compositionend'];\n    var document = _this.document;\n    document.on('compositionstart', function () {\n      document.isComposing = true;\n    });\n    document.on('compositionend', function () {\n      document.isComposing = false;\n    });\n    return _this;\n  }\n\n  _createClass(CompositionObserver, [{\n    key: \"onDomEvent\",\n    value: function onDomEvent(domEvent) {\n      this.fire(domEvent.type, domEvent);\n    }\n  }]);\n\n  return CompositionObserver;\n}(DomEventObserver);\n/**\n * Fired when composition starts inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionstart\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when composition is updated inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionupdate\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when composition ends inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionend\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n\nexport { CompositionObserver as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/scroll\n */\nimport isRange from './isrange';\nimport Rect from './rect';\nimport isText from './istext';\nvar utils = {};\n/**\n * Makes any page `HTMLElement` or `Range` (`target`) visible inside the browser viewport.\n * This helper will scroll all `target` ancestors and the web browser viewport to reveal the target to\n * the user. If the `target` is already visible, nothing will happen.\n *\n * @param {HTMLElement|Range} options.target A target, which supposed to become visible to the user.\n * @param {Number} [options.viewportOffset] An offset from the edge of the viewport (in pixels)\n * the `target` will be moved by when the viewport is scrolled. It enhances the user experience\n * by keeping the `target` some distance from the edge of the viewport and thus making it easier to\n * read or edit by the user.\n */\n\nexport function scrollViewportToShowTarget(_ref) {\n  var target = _ref.target,\n      _ref$viewportOffset = _ref.viewportOffset,\n      viewportOffset = _ref$viewportOffset === void 0 ? 0 : _ref$viewportOffset;\n  var targetWindow = getWindow(target);\n  var currentWindow = targetWindow;\n  var currentFrame = null; // Iterate over all windows, starting from target's parent window up to window#top.\n\n  while (currentWindow) {\n    var firstAncestorToScroll = void 0; // Let's scroll target's ancestors first to reveal it. Then, once the ancestor scrolls\n    // settled down, the algorithm can eventually scroll the viewport of the current window.\n    //\n    // Note: If the current window is target's **original** window (e.g. the first one),\n    // start scrolling the closest parent of the target. If not, scroll the closest parent\n    // of an iframe that resides in the current window.\n\n    if (currentWindow == targetWindow) {\n      firstAncestorToScroll = getParentElement(target);\n    } else {\n      firstAncestorToScroll = getParentElement(currentFrame);\n    } // Scroll the target's ancestors first. Once done, scrolling the viewport is easy.\n\n\n    scrollAncestorsToShowRect(firstAncestorToScroll, function () {\n      // Note: If the target does not belong to the current window **directly**,\n      // i.e. it resides in an iframe belonging to the window, obtain the target's rect\n      // in the coordinates of the current window. By default, a Rect returns geometry\n      // relative to the current window's viewport. To make it work in a parent window,\n      // it must be shifted.\n      return getRectRelativeToWindow(target, currentWindow);\n    }); // Obtain the rect of the target after it has been scrolled within its ancestors.\n    // It's time to scroll the viewport.\n\n    var targetRect = getRectRelativeToWindow(target, currentWindow);\n    scrollWindowToShowRect(currentWindow, targetRect, viewportOffset);\n\n    if (currentWindow.parent != currentWindow) {\n      // Keep the reference to the <iframe> element the \"previous current window\" was\n      // rendered within. It will be useful to re–calculate the rect of the target\n      // in the parent window's relative geometry. The target's rect must be shifted\n      // by it's iframe's position.\n      currentFrame = currentWindow.frameElement;\n      currentWindow = currentWindow.parent; // If the current window has some parent but frameElement is inaccessible, then they have\n      // different domains/ports and, due to security reasons, accessing and scrolling\n      // the parent window won't be possible.\n      // See https://github.com/ckeditor/ckeditor5/issues/930.\n\n      if (!currentFrame) {\n        return;\n      }\n    } else {\n      currentWindow = null;\n    }\n  }\n}\n/**\n * Makes any page `HTMLElement` or `Range` (target) visible within its scrollable ancestors,\n * e.g. if they have `overflow: scroll` CSS style.\n *\n * @param {HTMLElement|Range} target A target, which supposed to become visible to the user.\n */\n\nexport function scrollAncestorsToShowTarget(target) {\n  var targetParent = getParentElement(target);\n  scrollAncestorsToShowRect(targetParent, function () {\n    return new Rect(target);\n  });\n} // TODO: Using a property value shorthand in the top of the file\n// causes JSDoc to throw errors. See https://github.com/cksource/docs-builder/issues/75.\n\nObject.assign(utils, {\n  scrollViewportToShowTarget: scrollViewportToShowTarget,\n  scrollAncestorsToShowTarget: scrollAncestorsToShowTarget\n}); // Makes a given rect visible within its parent window.\n//\n// Note: Avoid the situation where the caret is still in the viewport, but totally\n// at the edge of it. In such situation, if it moved beyond the viewport in the next\n// action e.g. after paste, the scrolling would move it to the viewportOffset level\n// and it all would look like the caret visually moved up/down:\n//\n// 1.\n//\t\t| foo[]\n//\t\t|                                    <--- N px of space below the caret\n//\t\t+---------------------------------...\n//\n// 2. *paste*\n// 3.\n//\t\t|\n//\t\t|\n//\t\t+-foo-----------------------------...\n//\t\t  bar[]                              <--- caret below viewport, scrolling...\n//\n// 4. *scrolling*\n// 5.\n//\t\t|\n//\t\t| foo\n//\t\t| bar[]                              <--- caret precisely at the edge\n//\t\t+---------------------------------...\n//\n// To prevent this, this method checks the rects moved by the viewportOffset to cover\n// the upper/lower edge of the viewport. It makes sure if the action repeats, there's\n// no twitching – it's a purely visual improvement:\n//\n// 5. (after fix)\n//\t\t|\n//\t\t| foo\n//\t\t| bar[]\n//\t\t|                                    <--- N px of space below the caret\n//\t\t+---------------------------------...\n//\n// @private\n// @param {Window} window A window which is scrolled to reveal the rect.\n// @param {module:utils/dom/rect~Rect} rect A rect which is to be revealed.\n// @param {Number} viewportOffset See scrollViewportToShowTarget.\n\nfunction scrollWindowToShowRect(window, rect, viewportOffset) {\n  var targetShiftedDownRect = rect.clone().moveBy(0, viewportOffset);\n  var targetShiftedUpRect = rect.clone().moveBy(0, -viewportOffset);\n  var viewportRect = new Rect(window).excludeScrollbarsAndBorders();\n  var rects = [targetShiftedUpRect, targetShiftedDownRect];\n\n  if (!rects.every(function (rect) {\n    return viewportRect.contains(rect);\n  })) {\n    var scrollX = window.scrollX,\n        scrollY = window.scrollY;\n\n    if (isAbove(targetShiftedUpRect, viewportRect)) {\n      scrollY -= viewportRect.top - rect.top + viewportOffset;\n    } else if (isBelow(targetShiftedDownRect, viewportRect)) {\n      scrollY += rect.bottom - viewportRect.bottom + viewportOffset;\n    } // TODO: Web browsers scroll natively to place the target in the middle\n    // of the viewport. It's not a very popular case, though.\n\n\n    if (isLeftOf(rect, viewportRect)) {\n      scrollX -= viewportRect.left - rect.left + viewportOffset;\n    } else if (isRightOf(rect, viewportRect)) {\n      scrollX += rect.right - viewportRect.right + viewportOffset;\n    }\n\n    window.scrollTo(scrollX, scrollY);\n  }\n} // Recursively scrolls element ancestors to visually reveal a rect.\n//\n// @private\n// @param {HTMLElement} A parent The first ancestors to start scrolling.\n// @param {Function} getRect A function which returns the Rect, which is to be revealed.\n\n\nfunction scrollAncestorsToShowRect(parent, getRect) {\n  var parentWindow = getWindow(parent);\n  var parentRect, targetRect;\n\n  while (parent != parentWindow.document.body) {\n    targetRect = getRect();\n    parentRect = new Rect(parent).excludeScrollbarsAndBorders();\n\n    if (!parentRect.contains(targetRect)) {\n      if (isAbove(targetRect, parentRect)) {\n        parent.scrollTop -= parentRect.top - targetRect.top;\n      } else if (isBelow(targetRect, parentRect)) {\n        parent.scrollTop += targetRect.bottom - parentRect.bottom;\n      }\n\n      if (isLeftOf(targetRect, parentRect)) {\n        parent.scrollLeft -= parentRect.left - targetRect.left;\n      } else if (isRightOf(targetRect, parentRect)) {\n        parent.scrollLeft += targetRect.right - parentRect.right;\n      }\n    }\n\n    parent = parent.parentNode;\n  }\n} // Determines if a given `Rect` extends beyond the bottom edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\n\n\nfunction isBelow(firstRect, secondRect) {\n  return firstRect.bottom > secondRect.bottom;\n} // Determines if a given `Rect` extends beyond the top edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\n\n\nfunction isAbove(firstRect, secondRect) {\n  return firstRect.top < secondRect.top;\n} // Determines if a given `Rect` extends beyond the left edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\n\n\nfunction isLeftOf(firstRect, secondRect) {\n  return firstRect.left < secondRect.left;\n} // Determines if a given `Rect` extends beyond the right edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\n\n\nfunction isRightOf(firstRect, secondRect) {\n  return firstRect.right > secondRect.right;\n} // Returns the closest window of an element or range.\n//\n// @private\n// @param {HTMLElement|Range} firstRect\n// @returns {Window}\n\n\nfunction getWindow(elementOrRange) {\n  if (isRange(elementOrRange)) {\n    return elementOrRange.startContainer.ownerDocument.defaultView;\n  } else {\n    return elementOrRange.ownerDocument.defaultView;\n  }\n} // Returns the closest parent of an element or DOM range.\n//\n// @private\n// @param {HTMLElement|Range} firstRect\n// @returns {HTMLelement}\n\n\nfunction getParentElement(elementOrRange) {\n  if (isRange(elementOrRange)) {\n    var parent = elementOrRange.commonAncestorContainer; // If a Range is attached to the Text, use the closest element ancestor.\n\n    if (isText(parent)) {\n      parent = parent.parentNode;\n    }\n\n    return parent;\n  } else {\n    return elementOrRange.parentNode;\n  }\n} // Returns the rect of an element or range residing in an iframe.\n// The result rect is relative to the geometry of the passed window instance.\n//\n// @private\n// @param {HTMLElement|Range} target Element or range which rect should be returned.\n// @param {Window} relativeWindow A window the rect should be relative to.\n// @returns {module:utils/dom/rect~Rect}\n\n\nfunction getRectRelativeToWindow(target, relativeWindow) {\n  var targetWindow = getWindow(target);\n  var rect = new Rect(target);\n\n  if (targetWindow === relativeWindow) {\n    return rect;\n  } else {\n    var currentWindow = targetWindow;\n\n    while (currentWindow != relativeWindow) {\n      var frame = currentWindow.frameElement;\n      var frameRect = new Rect(frame).excludeScrollbarsAndBorders();\n      rect.moveBy(frameRect.left, frameRect.top);\n      currentWindow = currentWindow.parent;\n    }\n  }\n\n  return rect;\n}","import _slicedToArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/view\n */\nimport Document from './document';\nimport DowncastWriter from './downcastwriter';\nimport Renderer from './renderer';\nimport DomConverter from './domconverter';\nimport Position from './position';\nimport Range from './range';\nimport Selection from './selection';\nimport MutationObserver from './observer/mutationobserver';\nimport KeyObserver from './observer/keyobserver';\nimport FakeSelectionObserver from './observer/fakeselectionobserver';\nimport SelectionObserver from './observer/selectionobserver';\nimport FocusObserver from './observer/focusobserver';\nimport CompositionObserver from './observer/compositionobserver';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { scrollViewportToShowTarget } from '@ckeditor/ckeditor5-utils/src/dom/scroll';\nimport { injectUiElementHandling } from './uielement';\nimport { injectQuirksHandling } from './filler';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Editor's view controller class. Its main responsibility is DOM - View management for editing purposes, to provide\n * abstraction over the DOM structure and events and hide all browsers quirks.\n *\n * View controller renders view document to DOM whenever view structure changes. To determine when view can be rendered,\n * all changes need to be done using the {@link module:engine/view/view~View#change} method, using\n * {@link module:engine/view/downcastwriter~DowncastWriter}:\n *\n *\t\tview.change( writer => {\n *\t\t\twriter.insert( position, writer.createText( 'foo' ) );\n *\t\t} );\n *\n * View controller also register {@link module:engine/view/observer/observer~Observer observers} which observes changes\n * on DOM and fire events on the {@link module:engine/view/document~Document Document}.\n * Note that the following observers are added by the class constructor and are always available:\n *\n * * {@link module:engine/view/observer/mutationobserver~MutationObserver},\n * * {@link module:engine/view/observer/selectionobserver~SelectionObserver},\n * * {@link module:engine/view/observer/focusobserver~FocusObserver},\n * * {@link module:engine/view/observer/keyobserver~KeyObserver},\n * * {@link module:engine/view/observer/fakeselectionobserver~FakeSelectionObserver}.\n * * {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * This class also {@link module:engine/view/view~View#attachDomRoot binds the DOM and the view elements}.\n *\n * If you do not need full a DOM - view management, and only want to transform a tree of view elements to a tree of DOM\n * elements you do not need this controller. You can use the {@link module:engine/view/domconverter~DomConverter DomConverter} instead.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar View =\n/*#__PURE__*/\nfunction () {\n  function View() {\n    var _this = this;\n\n    _classCallCheck(this, View);\n\n    /**\n     * Instance of the {@link module:engine/view/document~Document} associated with this view controller.\n     *\n     * @readonly\n     * @type {module:engine/view/document~Document}\n     */\n    this.document = new Document();\n    /**\n     * Instance of the {@link module:engine/view/domconverter~DomConverter domConverter} used by\n     * {@link module:engine/view/view~View#_renderer renderer}\n     * and {@link module:engine/view/observer/observer~Observer observers}.\n     *\n     * @readonly\n     * @type {module:engine/view/domconverter~DomConverter}\n     */\n\n    this.domConverter = new DomConverter();\n    /**\n     * Roots of the DOM tree. Map on the `HTMLElement`s with roots names as keys.\n     *\n     * @readonly\n     * @type {Map.<String, HTMLElement>}\n     */\n\n    this.domRoots = new Map();\n    /**\n     * Used to prevent calling {@link #forceRender} and {@link #change} during rendering view to the DOM.\n     *\n     * @readonly\n     * @member {Boolean} #isRenderingInProgress\n     */\n\n    this.set('isRenderingInProgress', false);\n    /**\n     * Instance of the {@link module:engine/view/renderer~Renderer renderer}.\n     *\n     * @protected\n     * @type {module:engine/view/renderer~Renderer}\n     */\n\n    this._renderer = new Renderer(this.domConverter, this.document.selection);\n\n    this._renderer.bind('isFocused').to(this.document);\n    /**\n     * A DOM root attributes cache. It saves the initial values of DOM root attributes before the DOM element\n     * is {@link module:engine/view/view~View#attachDomRoot attached} to the view so later on, when\n     * the view is destroyed ({@link module:engine/view/view~View#detachDomRoot}), they can be easily restored.\n     * This way, the DOM element can go back to the (clean) state as if the editing view never used it.\n     *\n     * @private\n     * @member {WeakMap.<HTMLElement,Object>}\n     */\n\n\n    this._initialDomRootAttributes = new WeakMap();\n    /**\n     * Map of registered {@link module:engine/view/observer/observer~Observer observers}.\n     *\n     * @private\n     * @type {Map.<Function, module:engine/view/observer/observer~Observer>}\n     */\n\n    this._observers = new Map();\n    /**\n     * Is set to `true` when {@link #change view changes} are currently in progress.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    this._ongoingChange = false;\n    /**\n     * Used to prevent calling {@link #forceRender} and {@link #change} during rendering view to the DOM.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    this._postFixersInProgress = false;\n    /**\n     * Internal flag to temporary disable rendering. See the usage in the {@link #_disableRendering}.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    this._renderingDisabled = false;\n    /**\n     * Internal flag that disables rendering when there are no changes since the last rendering.\n     * It stores information about changed selection and changed elements from attached document roots.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    this._hasChangedSinceTheLastRendering = false;\n    /**\n     * DowncastWriter instance used in {@link #change change method} callbacks.\n     *\n     * @private\n     * @type {module:engine/view/downcastwriter~DowncastWriter}\n     */\n\n    this._writer = new DowncastWriter(this.document); // Add default observers.\n\n    this.addObserver(MutationObserver);\n    this.addObserver(SelectionObserver);\n    this.addObserver(FocusObserver);\n    this.addObserver(KeyObserver);\n    this.addObserver(FakeSelectionObserver);\n    this.addObserver(CompositionObserver); // Inject quirks handlers.\n\n    injectQuirksHandling(this);\n    injectUiElementHandling(this); // Use 'normal' priority so that rendering is performed as first when using that priority.\n\n    this.on('render', function () {\n      _this._render(); // Informs that layout has changed after render.\n\n\n      _this.document.fire('layoutChanged'); // Reset the `_hasChangedSinceTheLastRendering` flag after rendering.\n\n\n      _this._hasChangedSinceTheLastRendering = false;\n    }); // Listen to the document selection changes directly.\n\n    this.listenTo(this.document.selection, 'change', function () {\n      _this._hasChangedSinceTheLastRendering = true;\n    });\n  }\n  /**\n   * Attaches a DOM root element to the view element and enable all observers on that element.\n   * Also {@link module:engine/view/renderer~Renderer#markToSync mark element} to be synchronized\n   * with the view what means that all child nodes will be removed and replaced with content of the view root.\n   *\n   * This method also will change view element name as the same as tag name of given dom root.\n   * Name is always transformed to lower case.\n   *\n   * **Note:** Use {@link #detachDomRoot `detachDomRoot()`} to revert this action.\n   *\n   * @param {Element} domRoot DOM root element.\n   * @param {String} [name='main'] Name of the root.\n   */\n\n\n  _createClass(View, [{\n    key: \"attachDomRoot\",\n    value: function attachDomRoot(domRoot) {\n      var _this2 = this;\n\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'main';\n      var viewRoot = this.document.getRoot(name); // Set view root name the same as DOM root tag name.\n\n      viewRoot._name = domRoot.tagName.toLowerCase();\n      var initialDomRootAttributes = {}; // 1. Copy and cache the attributes to remember the state of the element before attaching.\n      //    The cached attributes will be restored in detachDomRoot() so the element goes to the\n      //    clean state as if the editing view never used it.\n      // 2. Apply the attributes using the view writer, so they all go under the control of the engine.\n      //    The editing view takes over the attribute management completely because various\n      //    features (e.g. addPlaceholder()) require dynamic changes of those attributes and they\n      //    cannot be managed by the engine and the UI library at the same time.\n\n      for (var _i = 0, _Array$from = Array.from(domRoot.attributes); _i < _Array$from.length; _i++) {\n        var _Array$from$_i = _Array$from[_i],\n            _name = _Array$from$_i.name,\n            value = _Array$from$_i.value;\n        initialDomRootAttributes[_name] = value; // Do not use writer.setAttribute() for the class attribute. The EditableUIView class\n        // and its descendants could have already set some using the writer.addClass() on the view\n        // document root. They haven't been rendered yet so they are not present in the DOM root.\n        // Using writer.setAttribute( 'class', ... ) would override them completely.\n\n        if (_name === 'class') {\n          this._writer.addClass(value.split(' '), viewRoot);\n        } else {\n          this._writer.setAttribute(_name, value, viewRoot);\n        }\n      }\n\n      this._initialDomRootAttributes.set(domRoot, initialDomRootAttributes);\n\n      var updateContenteditableAttribute = function updateContenteditableAttribute() {\n        _this2._writer.setAttribute('contenteditable', !viewRoot.isReadOnly, viewRoot);\n\n        if (viewRoot.isReadOnly) {\n          _this2._writer.addClass('ck-read-only', viewRoot);\n        } else {\n          _this2._writer.removeClass('ck-read-only', viewRoot);\n        }\n      }; // Set initial value.\n\n\n      updateContenteditableAttribute();\n      this.domRoots.set(name, domRoot);\n      this.domConverter.bindElements(domRoot, viewRoot);\n\n      this._renderer.markToSync('children', viewRoot);\n\n      this._renderer.markToSync('attributes', viewRoot);\n\n      this._renderer.domDocuments.add(domRoot.ownerDocument);\n\n      viewRoot.on('change:children', function (evt, node) {\n        return _this2._renderer.markToSync('children', node);\n      });\n      viewRoot.on('change:attributes', function (evt, node) {\n        return _this2._renderer.markToSync('attributes', node);\n      });\n      viewRoot.on('change:text', function (evt, node) {\n        return _this2._renderer.markToSync('text', node);\n      });\n      viewRoot.on('change:isReadOnly', function () {\n        return _this2.change(updateContenteditableAttribute);\n      });\n      viewRoot.on('change', function () {\n        _this2._hasChangedSinceTheLastRendering = true;\n      });\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._observers.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var observer = _step.value;\n          observer.observe(domRoot, name);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n    /**\n     * Detaches a DOM root element from the view element and restores its attributes to the state before\n     * {@link #attachDomRoot `attachDomRoot()`}.\n     *\n     * @param {String} name Name of the root to detach.\n     */\n\n  }, {\n    key: \"detachDomRoot\",\n    value: function detachDomRoot(name) {\n      var domRoot = this.domRoots.get(name); // Remove all root attributes so the DOM element is \"bare\".\n\n      Array.from(domRoot.attributes).forEach(function (_ref) {\n        var name = _ref.name;\n        return domRoot.removeAttribute(name);\n      });\n\n      var initialDomRootAttributes = this._initialDomRootAttributes.get(domRoot); // Revert all view root attributes back to the state before attachDomRoot was called.\n\n\n      for (var attribute in initialDomRootAttributes) {\n        domRoot.setAttribute(attribute, initialDomRootAttributes[attribute]);\n      }\n\n      this.domRoots.delete(name);\n      this.domConverter.unbindDomElement(domRoot);\n    }\n    /**\n     * Gets DOM root element.\n     *\n     * @param {String} [name='main']  Name of the root.\n     * @returns {Element} DOM root element instance.\n     */\n\n  }, {\n    key: \"getDomRoot\",\n    value: function getDomRoot() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n      return this.domRoots.get(name);\n    }\n    /**\n     * Creates observer of the given type if not yet created, {@link module:engine/view/observer/observer~Observer#enable enables} it\n     * and {@link module:engine/view/observer/observer~Observer#observe attaches} to all existing and future\n     * {@link #domRoots DOM roots}.\n     *\n     * Note: Observers are recognized by their constructor (classes). A single observer will be instantiated and used only\n     * when registered for the first time. This means that features and other components can register a single observer\n     * multiple times without caring whether it has been already added or not.\n     *\n     * @param {Function} Observer The constructor of an observer to add.\n     * Should create an instance inheriting from {@link module:engine/view/observer/observer~Observer}.\n     * @returns {module:engine/view/observer/observer~Observer} Added observer instance.\n     */\n\n  }, {\n    key: \"addObserver\",\n    value: function addObserver(Observer) {\n      var observer = this._observers.get(Observer);\n\n      if (observer) {\n        return observer;\n      }\n\n      observer = new Observer(this);\n\n      this._observers.set(Observer, observer);\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.domRoots[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n              name = _step2$value[0],\n              domElement = _step2$value[1];\n\n          observer.observe(domElement, name);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      observer.enable();\n      return observer;\n    }\n    /**\n     * Returns observer of the given type or `undefined` if such observer has not been added yet.\n     *\n     * @param {Function} Observer The constructor of an observer to get.\n     * @returns {module:engine/view/observer/observer~Observer|undefined} Observer instance or undefined.\n     */\n\n  }, {\n    key: \"getObserver\",\n    value: function getObserver(Observer) {\n      return this._observers.get(Observer);\n    }\n    /**\n     * Disables all added observers.\n     */\n\n  }, {\n    key: \"disableObservers\",\n    value: function disableObservers() {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this._observers.values()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var observer = _step3.value;\n          observer.disable();\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n    /**\n     * Enables all added observers.\n     */\n\n  }, {\n    key: \"enableObservers\",\n    value: function enableObservers() {\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this._observers.values()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var observer = _step4.value;\n          observer.enable();\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n    }\n    /**\n     * Scrolls the page viewport and {@link #domRoots} with their ancestors to reveal the\n     * caret, if not already visible to the user.\n     */\n\n  }, {\n    key: \"scrollToTheSelection\",\n    value: function scrollToTheSelection() {\n      var range = this.document.selection.getFirstRange();\n\n      if (range) {\n        scrollViewportToShowTarget({\n          target: this.domConverter.viewRangeToDom(range),\n          viewportOffset: 20\n        });\n      }\n    }\n    /**\n     * It will focus DOM element representing {@link module:engine/view/editableelement~EditableElement EditableElement}\n     * that is currently having selection inside.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (!this.document.isFocused) {\n        var editable = this.document.selection.editableElement;\n\n        if (editable) {\n          this.domConverter.focus(editable);\n          this.forceRender();\n        } else {\n          /**\n           * Before focusing view document, selection should be placed inside one of the view's editables.\n           * Normally its selection will be converted from model document (which have default selection), but\n           * when using view document on its own, we need to manually place selection before focusing it.\n           *\n           * @error view-focus-no-selection\n           */\n          log.warn('view-focus-no-selection: There is no selection in any editable to focus.');\n        }\n      }\n    }\n    /**\n     * The `change()` method is the primary way of changing the view. You should use it to modify any node in the view tree.\n     * It makes sure that after all changes are made the view is rendered to the DOM (assuming that the view will be changed\n     * inside the callback). It prevents situations when the DOM is updated when the view state is not yet correct. It allows\n     * to nest calls one inside another and still performs a single rendering after all those changes are made.\n     * It also returns the return value of its callback.\n     *\n     *\t\tconst text = view.change( writer => {\n     *\t\t\tconst newText = writer.createText( 'foo' );\n     *\t\t\twriter.insert( position1, newText );\n     *\n     *\t\t\tview.change( writer => {\n     *\t\t\t\twriter.insert( position2, writer.createText( 'bar' ) );\n     *\t\t\t} );\n     *\n     * \t\t\twriter.remove( range );\n     *\n     * \t\t\treturn newText;\n     *\t\t} );\n     *\n     * When the outermost change block is done and rendering to the DOM is over the\n     * {@link module:engine/view/view~View#event:render `View#render`} event is fired.\n     *\n     * This method throws a `applying-view-changes-on-rendering` error when\n     * the change block is used after rendering to the DOM has started.\n     *\n     * @param {Function} callback Callback function which may modify the view.\n     * @returns {*} Value returned by the callback.\n     */\n\n  }, {\n    key: \"change\",\n    value: function change(callback) {\n      if (this.isRenderingInProgress || this._postFixersInProgress) {\n        /**\n         * Thrown when there is an attempt to make changes to the view tree when it is in incorrect state. This may\n         * cause some unexpected behaviour and inconsistency between the DOM and the view.\n         * This may be caused by:\n         *\n         * * calling {@link #change} or {@link #forceRender} during rendering process,\n         * * calling {@link #change} or {@link #forceRender} inside of\n         *   {@link module:engine/view/document~Document#registerPostFixer post-fixer function}.\n         *\n         * @error cannot-change-view-tree\n         */\n        throw new CKEditorError('cannot-change-view-tree: ' + 'Attempting to make changes to the view when it is in an incorrect state: rendering or post-fixers are in progress. ' + 'This may cause some unexpected behavior and inconsistency between the DOM and the view.');\n      } // Recursive call to view.change() method - execute listener immediately.\n\n\n      if (this._ongoingChange) {\n        return callback(this._writer);\n      } // This lock will assure that all recursive calls to view.change() will end up in same block - one \"render\"\n      // event for all nested calls.\n\n\n      this._ongoingChange = true;\n      var callbackResult = callback(this._writer);\n      this._ongoingChange = false; // This lock is used by editing controller to render changes from outer most model.change() once. As plugins might call\n      // view.change() inside model.change() block - this will ensures that postfixers and rendering are called once after all changes.\n      // Also, we don't need to render anything if there're no changes since last rendering.\n\n      if (!this._renderingDisabled && this._hasChangedSinceTheLastRendering) {\n        this._postFixersInProgress = true;\n\n        this.document._callPostFixers(this._writer);\n\n        this._postFixersInProgress = false;\n        this.fire('render');\n      }\n\n      return callbackResult;\n    }\n    /**\n     * Forces rendering {@link module:engine/view/document~Document view document} to DOM. If any view changes are\n     * currently in progress, rendering will start after all {@link #change change blocks} are processed.\n     *\n     * Note that this method is dedicated for special cases. All view changes should be wrapped in the {@link #change}\n     * block and the view will automatically check whether it needs to render DOM or not.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `applying-view-changes-on-rendering` when\n     * trying to re-render when rendering to DOM has already started.\n     */\n\n  }, {\n    key: \"forceRender\",\n    value: function forceRender() {\n      this._hasChangedSinceTheLastRendering = true;\n      this.change(function () {});\n    }\n    /**\n     * Destroys this instance. Makes sure that all observers are destroyed and listeners removed.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this._observers.values()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var observer = _step5.value;\n          observer.destroy();\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      this.document.destroy();\n      this.stopListening();\n    }\n    /**\n     * Creates position at the given location. The location can be specified as:\n     *\n     * * a {@link module:engine/view/position~Position position},\n     * * parent element and offset (offset defaults to `0`),\n     * * parent element and `'end'` (sets position at the end of that element),\n     * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n     *\n     * This method is a shortcut to other constructors such as:\n     *\n     * * {@link #createPositionBefore},\n     * * {@link #createPositionAfter},\n     *\n     * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/view/item~Item view item}.\n     */\n\n  }, {\n    key: \"createPositionAt\",\n    value: function createPositionAt(itemOrPosition, offset) {\n      return Position._createAt(itemOrPosition, offset);\n    }\n    /**\n     * Creates a new position after given view item.\n     *\n     * @param {module:engine/view/item~Item} item View item after which the position should be located.\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"createPositionAfter\",\n    value: function createPositionAfter(item) {\n      return Position._createAfter(item);\n    }\n    /**\n     * Creates a new position before given view item.\n     *\n     * @param {module:engine/view/item~Item} item View item before which the position should be located.\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"createPositionBefore\",\n    value: function createPositionBefore(item) {\n      return Position._createBefore(item);\n    }\n    /**\n     * Creates a range spanning from `start` position to `end` position.\n     *\n     * **Note:** This factory method creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n     *\n     * @param {module:engine/view/position~Position} start Start position.\n     * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"createRange\",\n    value: function createRange(start, end) {\n      return new Range(start, end);\n    }\n    /**\n     * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n     *\n     * @param {module:engine/view/item~Item} item\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"createRangeOn\",\n    value: function createRangeOn(item) {\n      return Range._createOn(item);\n    }\n    /**\n     * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"createRangeIn\",\n    value: function createRangeIn(element) {\n      return Range._createIn(element);\n    }\n    /**\n     Creates new {@link module:engine/view/selection~Selection} instance.\n     *\n     * \t\t// Creates empty selection without ranges.\n     *\t\tconst selection = view.createSelection();\n     *\n     *\t\t// Creates selection at the given range.\n     *\t\tconst range = view.createRange( start, end );\n     *\t\tconst selection = view.createSelection( range );\n     *\n     *\t\t// Creates selection at the given ranges\n     * \t\tconst ranges = [ view.createRange( start1, end2 ), view.createRange( star2, end2 ) ];\n     *\t\tconst selection = view.createSelection( ranges );\n     *\n     *\t\t// Creates selection from the other selection.\n     *\t\tconst otherSelection = view.createSelection();\n     *\t\tconst selection = view.createSelection( otherSelection );\n     *\n     *\t\t// Creates selection from the document selection.\n     *\t\tconst selection = view.createSelection( editor.editing.view.document.selection );\n     *\n     * \t\t// Creates selection at the given position.\n     *\t\tconst position = view.createPositionFromPath( root, path );\n     *\t\tconst selection = view.createSelection( position );\n     *\n     *\t\t// Creates collapsed selection at the position of given item and offset.\n     *\t\tconst paragraph = view.createContainerElement( 'paragraph' );\n     *\t\tconst selection = view.createSelection( paragraph, offset );\n     *\n     *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n     *\t\t// first child of that element and ends after the last child of that element.\n     *\t\tconst selection = view.createSelection( paragraph, 'in' );\n     *\n     *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n     *\t\t// just after the item.\n     *\t\tconst selection = view.createSelection( paragraph, 'on' );\n     *\n     * `Selection`'s factory method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n     *\n     *\t\t// Creates backward selection.\n     *\t\tconst selection = view.createSelection( range, { backward: true } );\n     *\n     * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n     * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n     * represented in other way, for example by applying proper CSS class.\n     *\n     * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n     * (and be  properly handled by screen readers).\n     *\n     *\t\t// Creates fake selection with label.\n     *\t\tconst selection = view.createSelection( range, { fake: true, label: 'foo' } );\n     *\n     * @param {module:engine/view/selection~Selectable} [selectable=null]\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n     * @param {String} [options.label] Label for the fake selection.\n     * @returns {module:engine/view/selection~Selection}\n     */\n\n  }, {\n    key: \"createSelection\",\n    value: function createSelection(selectable, placeOrOffset, options) {\n      return new Selection(selectable, placeOrOffset, options);\n    }\n    /**\n     * Disables or enables rendering. If the flag is set to `true` then the rendering will be disabled.\n     * If the flag is set to `false` and if there was some change in the meantime, then the rendering action will be performed.\n     *\n     * @protected\n     * @param {Boolean} flag A flag indicates whether the rendering should be disabled.\n     */\n\n  }, {\n    key: \"_disableRendering\",\n    value: function _disableRendering(flag) {\n      this._renderingDisabled = flag;\n\n      if (flag == false) {\n        // Render when you stop blocking rendering.\n        this.change(function () {});\n      }\n    }\n    /**\n     * Renders all changes. In order to avoid triggering the observers (e.g. mutations) all observers are disabled\n     * before rendering and re-enabled after that.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.isRenderingInProgress = true;\n      this.disableObservers();\n\n      this._renderer.render();\n\n      this.enableObservers();\n      this.isRenderingInProgress = false;\n    }\n    /**\n     * Fired after a topmost {@link module:engine/view/view~View#change change block} and all\n     * {@link module:engine/view/document~Document#registerPostFixer post-fixers} are executed.\n     *\n     * Actual rendering is performed as a first listener on 'normal' priority.\n     *\n     *\t\tview.on( 'render', () => {\n     *\t\t\t// Rendering to the DOM is complete.\n     *\t\t} );\n     *\n     * This event is useful when you want to update interface elements after the rendering, e.g. position of the\n     * balloon panel. If you wants to change view structure use\n     * {@link module:engine/view/document~Document#registerPostFixer post-fixers}.\n     *\n     * @event module:engine/view/view~View#event:render\n     */\n\n  }]);\n\n  return View;\n}();\n\nexport { View as default };\nmix(View, ObservableMixin);","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/mapper\n */\nimport ModelPosition from '../model/position';\nimport ModelRange from '../model/range';\nimport ViewPosition from '../view/position';\nimport ViewRange from '../view/range';\nimport ViewText from '../view/text';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * Maps elements, positions and markers between {@link module:engine/view/document~Document the view} and\n * {@link module:engine/model/model the model}.\n *\n * Mapper use bound elements to find corresponding elements and positions, so, to get proper results,\n * all model elements should be {@link module:engine/conversion/mapper~Mapper#bindElements bound}.\n *\n * To map complex model to/from view relations, you may provide custom callbacks for\n * {@link module:engine/conversion/mapper~Mapper#event:modelToViewPosition modelToViewPosition event} and\n * {@link module:engine/conversion/mapper~Mapper#event:viewToModelPosition viewToModelPosition event} that are fired whenever\n * a position mapping request occurs.\n * Those events are fired by {@link module:engine/conversion/mapper~Mapper#toViewPosition toViewPosition}\n * and {@link module:engine/conversion/mapper~Mapper#toModelPosition toModelPosition} methods. `Mapper` adds it's own default callbacks\n * with `'lowest'` priority. To override default `Mapper` mapping, add custom callback with higher priority and\n * stop the event.\n */\n\nvar Mapper =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the mapper.\n   */\n  function Mapper() {\n    var _this = this;\n\n    _classCallCheck(this, Mapper);\n\n    /**\n     * Model element to view element mapping.\n     *\n     * @private\n     * @member {WeakMap}\n     */\n    this._modelToViewMapping = new WeakMap();\n    /**\n     * View element to model element mapping.\n     *\n     * @private\n     * @member {WeakMap}\n     */\n\n    this._viewToModelMapping = new WeakMap();\n    /**\n     * A map containing callbacks between view element names and functions evaluating length of view elements\n     * in model.\n     *\n     * @private\n     * @member {Map}\n     */\n\n    this._viewToModelLengthCallbacks = new Map();\n    /**\n     * Model marker name to view elements mapping.\n     *\n     * Keys are `String`s while values are `Set`s with {@link module:engine/view/element~Element view elements}.\n     * One marker (name) can be mapped to multiple elements.\n     *\n     * @private\n     * @member {Map}\n     */\n\n    this._markerNameToElements = new Map(); // Default mapper algorithm for mapping model position to view position.\n\n    this.on('modelToViewPosition', function (evt, data) {\n      if (data.viewPosition) {\n        return;\n      }\n\n      var viewContainer = _this._modelToViewMapping.get(data.modelPosition.parent);\n\n      data.viewPosition = _this._findPositionIn(viewContainer, data.modelPosition.offset);\n    }, {\n      priority: 'low'\n    }); // Default mapper algorithm for mapping view position to model position.\n\n    this.on('viewToModelPosition', function (evt, data) {\n      if (data.modelPosition) {\n        return;\n      }\n\n      var viewBlock = _this.findMappedViewAncestor(data.viewPosition);\n\n      var modelParent = _this._viewToModelMapping.get(viewBlock);\n\n      var modelOffset = _this._toModelOffset(data.viewPosition.parent, data.viewPosition.offset, viewBlock);\n\n      data.modelPosition = ModelPosition._createAt(modelParent, modelOffset);\n    }, {\n      priority: 'low'\n    });\n  }\n  /**\n   * Marks model and view elements as corresponding. Corresponding elements can be retrieved by using\n   * the {@link module:engine/conversion/mapper~Mapper#toModelElement toModelElement} and\n   * {@link module:engine/conversion/mapper~Mapper#toViewElement toViewElement} methods.\n   * The information that elements are bound is also used to translate positions.\n   *\n   * @param {module:engine/model/element~Element} modelElement Model element.\n   * @param {module:engine/view/element~Element} viewElement View element.\n   */\n\n\n  _createClass(Mapper, [{\n    key: \"bindElements\",\n    value: function bindElements(modelElement, viewElement) {\n      this._modelToViewMapping.set(modelElement, viewElement);\n\n      this._viewToModelMapping.set(viewElement, modelElement);\n    }\n    /**\n     * Unbinds given {@link module:engine/view/element~Element view element} from the map.\n     *\n     * **Note:** view-to-model binding will be removed, if it existed. However, corresponding model-to-view binding\n     * will be removed only if model element is still bound to passed `viewElement`.\n     *\n     * This behavior lets for re-binding model element to another view element without fear of losing the new binding\n     * when the previously bound view element is unbound.\n     *\n     * @param {module:engine/view/element~Element} viewElement View element to unbind.\n     */\n\n  }, {\n    key: \"unbindViewElement\",\n    value: function unbindViewElement(viewElement) {\n      var modelElement = this.toModelElement(viewElement);\n\n      this._viewToModelMapping.delete(viewElement);\n\n      if (this._modelToViewMapping.get(modelElement) == viewElement) {\n        this._modelToViewMapping.delete(modelElement);\n      }\n    }\n    /**\n     * Unbinds given {@link module:engine/model/element~Element model element} from the map.\n     *\n     * **Note:** model-to-view binding will be removed, if it existed. However, corresponding view-to-model binding\n     * will be removed only if view element is still bound to passed `modelElement`.\n     *\n     * This behavior lets for re-binding view element to another model element without fear of losing the new binding\n     * when the previously bound model element is unbound.\n     *\n     * @param {module:engine/model/element~Element} modelElement Model element to unbind.\n     */\n\n  }, {\n    key: \"unbindModelElement\",\n    value: function unbindModelElement(modelElement) {\n      var viewElement = this.toViewElement(modelElement);\n\n      this._modelToViewMapping.delete(modelElement);\n\n      if (this._viewToModelMapping.get(viewElement) == modelElement) {\n        this._viewToModelMapping.delete(viewElement);\n      }\n    }\n    /**\n     * Binds given marker name with given {@link module:engine/view/element~Element view element}. The element\n     * will be added to the current set of elements bound with given marker name.\n     *\n     * @param {module:engine/view/element~Element} element Element to bind.\n     * @param {String} name Marker name.\n     */\n\n  }, {\n    key: \"bindElementToMarker\",\n    value: function bindElementToMarker(element, name) {\n      var elements = this._markerNameToElements.get(name) || new Set();\n      elements.add(element);\n\n      this._markerNameToElements.set(name, elements);\n    }\n    /**\n     * Unbinds all elements from given marker name.\n     *\n     * @param {String} name Marker name.\n     */\n\n  }, {\n    key: \"unbindElementsFromMarkerName\",\n    value: function unbindElementsFromMarkerName(name) {\n      this._markerNameToElements.delete(name);\n    }\n    /**\n     * Removes all model to view and view to model bindings.\n     */\n\n  }, {\n    key: \"clearBindings\",\n    value: function clearBindings() {\n      this._modelToViewMapping = new WeakMap();\n      this._viewToModelMapping = new WeakMap();\n      this._markerNameToElements = new Map();\n    }\n    /**\n     * Gets the corresponding model element.\n     *\n     * **Note:** {@link module:engine/view/uielement~UIElement} does not have corresponding element in model.\n     *\n     * @param {module:engine/view/element~Element} viewElement View element.\n     * @returns {module:engine/model/element~Element|undefined} Corresponding model element or `undefined` if not found.\n     */\n\n  }, {\n    key: \"toModelElement\",\n    value: function toModelElement(viewElement) {\n      return this._viewToModelMapping.get(viewElement);\n    }\n    /**\n     * Gets the corresponding view element.\n     *\n     * @param {module:engine/model/element~Element} modelElement Model element.\n     * @returns {module:engine/view/element~Element|undefined} Corresponding view element or `undefined` if not found.\n     */\n\n  }, {\n    key: \"toViewElement\",\n    value: function toViewElement(modelElement) {\n      return this._modelToViewMapping.get(modelElement);\n    }\n    /**\n     * Gets the corresponding model range.\n     *\n     * @param {module:engine/view/range~Range} viewRange View range.\n     * @returns {module:engine/model/range~Range} Corresponding model range.\n     */\n\n  }, {\n    key: \"toModelRange\",\n    value: function toModelRange(viewRange) {\n      return new ModelRange(this.toModelPosition(viewRange.start), this.toModelPosition(viewRange.end));\n    }\n    /**\n     * Gets the corresponding view range.\n     *\n     * @param {module:engine/model/range~Range} modelRange Model range.\n     * @returns {module:engine/view/range~Range} Corresponding view range.\n     */\n\n  }, {\n    key: \"toViewRange\",\n    value: function toViewRange(modelRange) {\n      return new ViewRange(this.toViewPosition(modelRange.start), this.toViewPosition(modelRange.end));\n    }\n    /**\n     * Gets the corresponding model position.\n     *\n     * @fires viewToModelPosition\n     * @param {module:engine/view/position~Position} viewPosition View position.\n     * @returns {module:engine/model/position~Position} Corresponding model position.\n     */\n\n  }, {\n    key: \"toModelPosition\",\n    value: function toModelPosition(viewPosition) {\n      var data = {\n        viewPosition: viewPosition,\n        mapper: this\n      };\n      this.fire('viewToModelPosition', data);\n      return data.modelPosition;\n    }\n    /**\n     * Gets the corresponding view position.\n     *\n     * @fires modelToViewPosition\n     * @param {module:engine/model/position~Position} modelPosition Model position.\n     * @param {Object} [options] Additional options for position mapping process.\n     * @param {Boolean} [options.isPhantom=false] Should be set to `true` if the model position to map is pointing to a place\n     * in model tree which no longer exists. For example, it could be an end of a removed model range.\n     * @returns {module:engine/view/position~Position} Corresponding view position.\n     */\n\n  }, {\n    key: \"toViewPosition\",\n    value: function toViewPosition(modelPosition) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        isPhantom: false\n      };\n      var data = {\n        modelPosition: modelPosition,\n        mapper: this,\n        isPhantom: options.isPhantom\n      };\n      this.fire('modelToViewPosition', data);\n      return data.viewPosition;\n    }\n    /**\n     * Gets all view elements bound to the given marker name.\n     *\n     * @param {String} name Marker name.\n     * @returns {Set.<module:engine/view/element~Element>|null} View elements bound with given marker name or `null`\n     * if no elements are bound to given marker name.\n     */\n\n  }, {\n    key: \"markerNameToElements\",\n    value: function markerNameToElements(name) {\n      var boundElements = this._markerNameToElements.get(name);\n\n      if (!boundElements) {\n        return null;\n      }\n\n      var elements = new Set();\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = boundElements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var element = _step.value;\n\n          if (element.is('attributeElement')) {\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n              for (var _iterator2 = element.getElementsWithSameId()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var clone = _step2.value;\n                elements.add(clone);\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                  _iterator2.return();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n          } else {\n            elements.add(element);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return elements;\n    }\n    /**\n     * Registers a callback that evaluates the length in the model of a view element with given name.\n     *\n     * The callback is fired with one argument, which is a view element instance. The callback is expected to return\n     * a number representing the length of view element in model.\n     *\n     *\t\t// List item in view may contain nested list, which have other list items. In model though,\n     *\t\t// the lists are represented by flat structure. Because of those differences, length of list view element\n     *\t\t// may be greater than one. In the callback it's checked how many nested list items are in evaluated list item.\n     *\n     *\t\tfunction getViewListItemLength( element ) {\n     *\t\t\tlet length = 1;\n     *\n     *\t\t\tfor ( let child of element.getChildren() ) {\n     *\t\t\t\tif ( child.name == 'ul' || child.name == 'ol' ) {\n     *\t\t\t\t\tfor ( let item of child.getChildren() ) {\n     *\t\t\t\t\t\tlength += getViewListItemLength( item );\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t}\n     *\n     *\t\t\treturn length;\n     *\t\t}\n     *\n     *\t\tmapper.registerViewToModelLength( 'li', getViewListItemLength );\n     *\n     * @param {String} viewElementName Name of view element for which callback is registered.\n     * @param {Function} lengthCallback Function return a length of view element instance in model.\n     */\n\n  }, {\n    key: \"registerViewToModelLength\",\n    value: function registerViewToModelLength(viewElementName, lengthCallback) {\n      this._viewToModelLengthCallbacks.set(viewElementName, lengthCallback);\n    }\n    /**\n     * For given `viewPosition`, finds and returns the closest ancestor of this position that has a mapping to\n     * the model.\n     *\n     * @param {module:engine/view/position~Position} viewPosition Position for which mapped ancestor should be found.\n     * @returns {module:engine/view/element~Element}\n     */\n\n  }, {\n    key: \"findMappedViewAncestor\",\n    value: function findMappedViewAncestor(viewPosition) {\n      var parent = viewPosition.parent;\n\n      while (!this._viewToModelMapping.has(parent)) {\n        parent = parent.parent;\n      }\n\n      return parent;\n    }\n    /**\n     * Calculates model offset based on the view position and the block element.\n     *\n     * Example:\n     *\n     *\t\t<p>foo<b>ba|r</b></p> // _toModelOffset( b, 2, p ) -> 5\n     *\n     * Is a sum of:\n     *\n     *\t\t<p>foo|<b>bar</b></p> // _toModelOffset( p, 3, p ) -> 3\n     *\t\t<p>foo<b>ba|r</b></p> // _toModelOffset( b, 2, b ) -> 2\n     *\n     * @private\n     * @param {module:engine/view/element~Element} viewParent Position parent.\n     * @param {Number} viewOffset Position offset.\n     * @param {module:engine/view/element~Element} viewBlock Block used as a base to calculate offset.\n     * @returns {Number} Offset in the model.\n     */\n\n  }, {\n    key: \"_toModelOffset\",\n    value: function _toModelOffset(viewParent, viewOffset, viewBlock) {\n      if (viewBlock != viewParent) {\n        // See example.\n        var offsetToParentStart = this._toModelOffset(viewParent.parent, viewParent.index, viewBlock);\n\n        var offsetInParent = this._toModelOffset(viewParent, viewOffset, viewParent);\n\n        return offsetToParentStart + offsetInParent;\n      } // viewBlock == viewParent, so we need to calculate the offset in the parent element.\n      // If the position is a text it is simple (\"ba|r\" -> 2).\n\n\n      if (viewParent.is('text')) {\n        return viewOffset;\n      } // If the position is in an element we need to sum lengths of siblings ( <b> bar </b> foo | -> 3 + 3 = 6 ).\n\n\n      var modelOffset = 0;\n\n      for (var i = 0; i < viewOffset; i++) {\n        modelOffset += this.getModelLength(viewParent.getChild(i));\n      }\n\n      return modelOffset;\n    }\n    /**\n     * Gets the length of the view element in the model.\n     *\n     * The length is calculated as follows:\n     * * if {@link #registerViewToModelLength length mapping callback} is provided for given `viewNode` it is used to\n     * evaluate model length (`viewNode` is used as first and only parameter passed to the callback),\n     * * length of a {@link module:engine/view/text~Text text node} is equal to the length of it's\n     * {@link module:engine/view/text~Text#data data},\n     * * length of a {@link module:engine/view/uielement~UIElement ui element} is equal to 0,\n     * * length of a mapped {@link module:engine/view/element~Element element} is equal to 1,\n     * * length of a not-mapped {@link module:engine/view/element~Element element} is equal to the length of it's children.\n     *\n     * Examples:\n     *\n     *\t\tfoo                          -> 3 // Text length is equal to it's data length.\n     *\t\t<p>foo</p>                   -> 1 // Length of an element which is mapped is by default equal to 1.\n     *\t\t<b>foo</b>                   -> 3 // Length of an element which is not mapped is a length of its children.\n     *\t\t<div><p>x</p><p>y</p></div>  -> 2 // Assuming that <div> is not mapped and <p> are mapped.\n     *\n     * @param {module:engine/view/element~Element} viewNode View node.\n     * @returns {Number} Length of the node in the tree model.\n     */\n\n  }, {\n    key: \"getModelLength\",\n    value: function getModelLength(viewNode) {\n      if (this._viewToModelLengthCallbacks.get(viewNode.name)) {\n        var callback = this._viewToModelLengthCallbacks.get(viewNode.name);\n\n        return callback(viewNode);\n      } else if (this._viewToModelMapping.has(viewNode)) {\n        return 1;\n      } else if (viewNode.is('text')) {\n        return viewNode.data.length;\n      } else if (viewNode.is('uiElement')) {\n        return 0;\n      } else {\n        var len = 0;\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = viewNode.getChildren()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var child = _step3.value;\n            len += this.getModelLength(child);\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        return len;\n      }\n    }\n    /**\n     * Finds the position in the view node (or its children) with the expected model offset.\n     *\n     * Example:\n     *\n     *\t\t<p>fo<b>bar</b>bom</p> -> expected offset: 4\n     *\n     *\t\t_findPositionIn( p, 4 ):\n     *\t\t<p>|fo<b>bar</b>bom</p> -> expected offset: 4, actual offset: 0\n     *\t\t<p>fo|<b>bar</b>bom</p> -> expected offset: 4, actual offset: 2\n     *\t\t<p>fo<b>bar</b>|bom</p> -> expected offset: 4, actual offset: 5 -> we are too far\n     *\n     *\t\t_findPositionIn( b, 4 - ( 5 - 3 ) ):\n     *\t\t<p>fo<b>|bar</b>bom</p> -> expected offset: 2, actual offset: 0\n     *\t\t<p>fo<b>bar|</b>bom</p> -> expected offset: 2, actual offset: 3 -> we are too far\n     *\n     *\t\t_findPositionIn( bar, 2 - ( 3 - 3 ) ):\n     *\t\tWe are in the text node so we can simple find the offset.\n     *\t\t<p>fo<b>ba|r</b>bom</p> -> expected offset: 2, actual offset: 2 -> position found\n     *\n     * @private\n     * @param {module:engine/view/element~Element} viewParent Tree view element in which we are looking for the position.\n     * @param {Number} expectedOffset Expected offset.\n     * @returns {module:engine/view/position~Position} Found position.\n     */\n\n  }, {\n    key: \"_findPositionIn\",\n    value: function _findPositionIn(viewParent, expectedOffset) {\n      // Last scanned view node.\n      var viewNode; // Length of the last scanned view node.\n\n      var lastLength = 0;\n      var modelOffset = 0;\n      var viewOffset = 0; // In the text node it is simple: offset in the model equals offset in the text.\n\n      if (viewParent.is('text')) {\n        return new ViewPosition(viewParent, expectedOffset);\n      } // In other cases we add lengths of child nodes to find the proper offset.\n      // If it is smaller we add the length.\n\n\n      while (modelOffset < expectedOffset) {\n        viewNode = viewParent.getChild(viewOffset);\n        lastLength = this.getModelLength(viewNode);\n        modelOffset += lastLength;\n        viewOffset++;\n      } // If it equals we found the position.\n\n\n      if (modelOffset == expectedOffset) {\n        return this._moveViewPositionToTextNode(new ViewPosition(viewParent, viewOffset));\n      } // If it is higher we need to enter last child.\n      else {\n          // ( modelOffset - lastLength ) is the offset to the child we enter,\n          // so we subtract it from the expected offset to fine the offset in the child.\n          return this._findPositionIn(viewNode, expectedOffset - (modelOffset - lastLength));\n        }\n    }\n    /**\n     * Because we prefer positions in text nodes over positions next to text node moves view position to the text node\n     * if it was next to it.\n     *\n     *\t\t<p>[]<b>foo</b></p> -> <p>[]<b>foo</b></p> // do not touch if position is not directly next to text\n     *\t\t<p>foo[]<b>foo</b></p> -> <p>foo{}<b>foo</b></p> // move to text node\n     *\t\t<p><b>[]foo</b></p> -> <p><b>{}foo</b></p> // move to text node\n     *\n     * @private\n     * @param {module:engine/view/position~Position} viewPosition Position potentially next to text node.\n     * @returns {module:engine/view/position~Position} Position in text node if possible.\n     */\n\n  }, {\n    key: \"_moveViewPositionToTextNode\",\n    value: function _moveViewPositionToTextNode(viewPosition) {\n      // If the position is just after text node, put it at the end of that text node.\n      // If the position is just before text node, put it at the beginning of that text node.\n      var nodeBefore = viewPosition.nodeBefore;\n      var nodeAfter = viewPosition.nodeAfter;\n\n      if (nodeBefore instanceof ViewText) {\n        return new ViewPosition(nodeBefore, nodeBefore.data.length);\n      } else if (nodeAfter instanceof ViewText) {\n        return new ViewPosition(nodeAfter, 0);\n      } // Otherwise, just return the given position.\n\n\n      return viewPosition;\n    }\n    /**\n     * Fired for each model-to-view position mapping request. The purpose of this event is to enable custom model-to-view position\n     * mapping. Callbacks added to this event take {@link module:engine/model/position~Position model position} and are expected to\n     * calculate {@link module:engine/view/position~Position view position}. Calculated view position should be added as `viewPosition`\n     * value in `data` object that is passed as one of parameters to the event callback.\n     *\n     * \t\t// Assume that \"captionedImage\" model element is converted to <img> and following <span> elements in view,\n     * \t\t// and the model element is bound to <img> element. Force mapping model positions inside \"captionedImage\" to that\n     * \t\t// <span> element.\n     *\t\tmapper.on( 'modelToViewPosition', ( evt, data ) => {\n     *\t\t\tconst positionParent = modelPosition.parent;\n     *\n     *\t\t\tif ( positionParent.name == 'captionedImage' ) {\n     *\t\t\t\tconst viewImg = data.mapper.toViewElement( positionParent );\n     *\t\t\t\tconst viewCaption = viewImg.nextSibling; // The <span> element.\n     *\n     *\t\t\t\tdata.viewPosition = new ViewPosition( viewCaption, modelPosition.offset );\n     *\n     *\t\t\t\t// Stop the event if other callbacks should not modify calculated value.\n     *\t\t\t\tevt.stop();\n     *\t\t\t}\n     *\t\t} );\n     *\n     * **Note:** keep in mind that sometimes a \"phantom\" model position is being converted. \"Phantom\" model position is\n     * a position that points to a non-existing place in model. Such position might still be valid for conversion, though\n     * (it would point to a correct place in view when converted). One example of such situation is when a range is\n     * removed from model, there may be a need to map the range's end (which is no longer valid model position). To\n     * handle such situation, check `data.isPhantom` flag:\n     *\n     * \t\t// Assume that there is \"customElement\" model element and whenever position is before it, we want to move it\n     * \t\t// to the inside of the view element bound to \"customElement\".\n     *\t\tmapper.on( 'modelToViewPosition', ( evt, data ) => {\n     *\t\t\tif ( data.isPhantom ) {\n     *\t\t\t\treturn;\n     *\t\t\t}\n     *\n     *\t\t\t// Below line might crash for phantom position that does not exist in model.\n     *\t\t\tconst sibling = data.modelPosition.nodeBefore;\n     *\n     *\t\t\t// Check if this is the element we are interested in.\n     *\t\t\tif ( !sibling.is( 'customElement' ) ) {\n     *\t\t\t\treturn;\n     *\t\t\t}\n     *\n     *\t\t\tconst viewElement = data.mapper.toViewElement( sibling );\n     *\n     *\t\t\tdata.viewPosition = new ViewPosition( sibling, 0 );\n     *\n     *\t\t\tevt.stop();\n     *\t\t} );\n     *\n     * **Note:** default mapping callback is provided with `low` priority setting and does not cancel the event, so it is possible to\n     * attach a custom callback after default callback and also use `data.viewPosition` calculated by default callback\n     * (for example to fix it).\n     *\n     * **Note:** default mapping callback will not fire if `data.viewPosition` is already set.\n     *\n     * **Note:** these callbacks are called **very often**. For efficiency reasons, it is advised to use them only when position\n     * mapping between given model and view elements is unsolvable using just elements mapping and default algorithm. Also,\n     * the condition that checks if special case scenario happened should be as simple as possible.\n     *\n     * @event modelToViewPosition\n     * @param {Object} data Data pipeline object that can store and pass data between callbacks. The callback should add\n     * `viewPosition` value to that object with calculated {@link module:engine/view/position~Position view position}.\n     * @param {module:engine/conversion/mapper~Mapper} data.mapper Mapper instance that fired the event.\n     */\n\n    /**\n     * Fired for each view-to-model position mapping request. See {@link module:engine/conversion/mapper~Mapper#event:modelToViewPosition}.\n     *\n     * \t\t// See example in `modelToViewPosition` event description.\n     * \t\t// This custom mapping will map positions from <span> element next to <img> to the \"captionedImage\" element.\n     *\t\tmapper.on( 'viewToModelPosition', ( evt, data ) => {\n     *\t\t\tconst positionParent = viewPosition.parent;\n     *\n     *\t\t\tif ( positionParent.hasClass( 'image-caption' ) ) {\n     *\t\t\t\tconst viewImg = positionParent.previousSibling;\n     *\t\t\t\tconst modelImg = data.mapper.toModelElement( viewImg );\n     *\n     *\t\t\t\tdata.modelPosition = new ModelPosition( modelImg, viewPosition.offset );\n     *\t\t\t\tevt.stop();\n     *\t\t\t}\n     *\t\t} );\n     *\n     * **Note:** default mapping callback is provided with `low` priority setting and does not cancel the event, so it is possible to\n     * attach a custom callback after default callback and also use `data.modelPosition` calculated by default callback\n     * (for example to fix it).\n     *\n     * **Note:** default mapping callback will not fire if `data.modelPosition` is already set.\n     *\n     * **Note:** these callbacks are called **very often**. For efficiency reasons, it is advised to use them only when position\n     * mapping between given model and view elements is unsolvable using just elements mapping and default algorithm. Also,\n     * the condition that checks if special case scenario happened should be as simple as possible.\n     *\n     * @event viewToModelPosition\n     * @param {Object} data Data pipeline object that can store and pass data between callbacks. The callback should add\n     * `modelPosition` value to that object with calculated {@link module:engine/model/position~Position model position}.\n     * @param {module:engine/conversion/mapper~Mapper} data.mapper Mapper instance that fired the event.\n     */\n\n  }]);\n\n  return Mapper;\n}();\n\nexport { Mapper as default };\nmix(Mapper, EmitterMixin);","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/modelconsumable\n */\nimport TextProxy from '../model/textproxy';\n/**\n * Manages a list of consumable values for {@link module:engine/model/item~Item model items}.\n *\n * Consumables are various aspects of the model. A model item can be broken down into singular properties that might be\n * taken into consideration when converting that item.\n *\n * `ModelConsumable` is used by {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} while analyzing changed\n * parts of {@link module:engine/model/document~Document the document}. The added / changed / removed model items are broken down\n * into singular properties (the item itself and it's attributes). All those parts are saved in `ModelConsumable`. Then,\n * during conversion, when given part of model item is converted (i.e. the view element has been inserted into the view,\n * but without attributes), consumable value is removed from `ModelConsumable`.\n *\n * For model items, `ModelConsumable` stores consumable values of one of following types: `insert`, `addattribute:<attributeKey>`,\n * `changeattributes:<attributeKey>`, `removeattributes:<attributeKey>`.\n *\n * In most cases, it is enough to let {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}\n * gather consumable values, so there is no need to use\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#add add method} directly.\n * However, it is important to understand how consumable values can be\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed}.\n * See {@link module:engine/conversion/downcasthelpers default downcast converters} for more information.\n *\n * Keep in mind, that one conversion event may have multiple callbacks (converters) attached to it. Each of those is\n * able to convert one or more parts of the model. However, when one of those callbacks actually converts\n * something, other should not, because they would duplicate the results. Using `ModelConsumable` helps avoiding\n * this situation, because callbacks should only convert those values, which were not yet consumed from `ModelConsumable`.\n *\n * Consuming multiple values in a single callback:\n *\n *\t\t// Converter for custom `image` element that might have a `caption` element inside which changes\n *\t\t// how the image is displayed in the view:\n *\t\t//\n *\t\t// Model:\n *\t\t//\n *\t\t// [image]\n *\t\t//   └─ [caption]\n *\t\t//       └─ foo\n *\t\t//\n *\t\t// View:\n *\t\t//\n *\t\t// <figure>\n *\t\t//   ├─ <img />\n *\t\t//   └─ <caption>\n *\t\t//       └─ foo\n *\t\tmodelConversionDispatcher.on( 'insert:image', ( evt, data, conversionApi ) => {\n *\t\t\t// First, consume the `image` element.\n *\t\t\tconversionApi.consumable.consume( data.item, 'insert' );\n *\n *\t\t\t// Just create normal image element for the view.\n *\t\t\t// Maybe it will be \"decorated\" later.\n *\t\t\tconst viewImage = new ViewElement( 'img' );\n *\t\t\tconst insertPosition = conversionApi.mapper.toViewPosition( data.range.start );\n *\t\t\tconst viewWriter = conversionApi.writer;\n *\n *\t\t\t// Check if the `image` element has children.\n *\t\t\tif ( data.item.childCount > 0 ) {\n *\t\t\t\tconst modelCaption = data.item.getChild( 0 );\n *\n *\t\t\t\t// `modelCaption` insertion change is consumed from consumable values.\n *\t\t\t\t// It will not be converted by other converters, but it's children (probably some text) will be.\n *\t\t\t\t// Through mapping, converters for text will know where to insert contents of `modelCaption`.\n *\t\t\t\tif ( conversionApi.consumable.consume( modelCaption, 'insert' ) ) {\n *\t\t\t\t\tconst viewCaption = new ViewElement( 'figcaption' );\n *\n *\t\t\t\t\tconst viewImageHolder = new ViewElement( 'figure', null, [ viewImage, viewCaption ] );\n *\n *\t\t\t\t\tconversionApi.mapper.bindElements( modelCaption, viewCaption );\n *\t\t\t\t\tconversionApi.mapper.bindElements( data.item, viewImageHolder );\n *\t\t\t\t\tviewWriter.insert( insertPosition, viewImageHolder );\n *\t\t\t\t}\n *\t\t\t} else {\n *\t\t\t\tconversionApi.mapper.bindElements( data.item, viewImage );\n *\t\t\t\tviewWriter.insert( insertPosition, viewImage );\n *\t\t\t}\n *\n *\t\t\tevt.stop();\n *\t\t} );\n */\n\nvar ModelConsumable =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an empty consumables list.\n   */\n  function ModelConsumable() {\n    _classCallCheck(this, ModelConsumable);\n\n    /**\n     * Contains list of consumable values.\n     *\n     * @private\n     * @member {Map} module:engine/conversion/modelconsumable~ModelConsumable#_consumable\n     */\n    this._consumable = new Map();\n    /**\n     * For each {@link module:engine/model/textproxy~TextProxy} added to `ModelConsumable`, this registry holds parent\n     * of that `TextProxy` and start and end indices of that `TextProxy`. This allows identification of `TextProxy`\n     * instances that points to the same part of the model but are different instances. Each distinct `TextProxy`\n     * is given unique `Symbol` which is then registered as consumable. This process is transparent for `ModelConsumable`\n     * API user because whenever `TextProxy` is added, tested, consumed or reverted, internal mechanisms of\n     * `ModelConsumable` translates `TextProxy` to that unique `Symbol`.\n     *\n     * @private\n     * @member {Map} module:engine/conversion/modelconsumable~ModelConsumable#_textProxyRegistry\n     */\n\n    this._textProxyRegistry = new Map();\n  }\n  /**\n   * Adds a consumable value to the consumables list and links it with given model item.\n   *\n   *\t\tmodelConsumable.add( modelElement, 'insert' ); // Add `modelElement` insertion change to consumable values.\n   *\t\tmodelConsumable.add( modelElement, 'addAttribute:bold' ); // Add `bold` attribute insertion on `modelElement` change.\n   *\t\tmodelConsumable.add( modelElement, 'removeAttribute:bold' ); // Add `bold` attribute removal on `modelElement` change.\n   *\t\tmodelConsumable.add( modelSelection, 'selection' ); // Add `modelSelection` to consumable values.\n   *\t\tmodelConsumable.add( modelRange, 'range' ); // Add `modelRange` to consumable values.\n   *\n   * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n   * Model item, range or selection that has the consumable.\n   * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\n   * Second colon and everything after will be cut. Passing event name is a safe and good practice.\n   */\n\n\n  _createClass(ModelConsumable, [{\n    key: \"add\",\n    value: function add(item, type) {\n      type = _normalizeConsumableType(type);\n\n      if (item instanceof TextProxy) {\n        item = this._getSymbolForTextProxy(item);\n      }\n\n      if (!this._consumable.has(item)) {\n        this._consumable.set(item, new Map());\n      }\n\n      this._consumable.get(item).set(type, true);\n    }\n    /**\n     * Removes given consumable value from given model item.\n     *\n     *\t\tmodelConsumable.consume( modelElement, 'insert' ); // Remove `modelElement` insertion change from consumable values.\n     *\t\tmodelConsumable.consume( modelElement, 'addAttribute:bold' ); // Remove `bold` attribute insertion on `modelElement` change.\n     *\t\tmodelConsumable.consume( modelElement, 'removeAttribute:bold' ); // Remove `bold` attribute removal on `modelElement` change.\n     *\t\tmodelConsumable.consume( modelSelection, 'selection' ); // Remove `modelSelection` from consumable values.\n     *\t\tmodelConsumable.consume( modelRange, 'range' ); // Remove 'modelRange' from consumable values.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n     * Model item, range or selection from which consumable will be consumed.\n     * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\n     * Second colon and everything after will be cut. Passing event name is a safe and good practice.\n     * @returns {Boolean} `true` if consumable value was available and was consumed, `false` otherwise.\n     */\n\n  }, {\n    key: \"consume\",\n    value: function consume(item, type) {\n      type = _normalizeConsumableType(type);\n\n      if (item instanceof TextProxy) {\n        item = this._getSymbolForTextProxy(item);\n      }\n\n      if (this.test(item, type)) {\n        this._consumable.get(item).set(type, false);\n\n        return true;\n      } else {\n        return false;\n      }\n    }\n    /**\n     * Tests whether there is a consumable value of given type connected with given model item.\n     *\n     *\t\tmodelConsumable.test( modelElement, 'insert' ); // Check for `modelElement` insertion change.\n     *\t\tmodelConsumable.test( modelElement, 'addAttribute:bold' ); // Check for `bold` attribute insertion on `modelElement` change.\n     *\t\tmodelConsumable.test( modelElement, 'removeAttribute:bold' ); // Check for `bold` attribute removal on `modelElement` change.\n     *\t\tmodelConsumable.test( modelSelection, 'selection' ); // Check if `modelSelection` is consumable.\n     *\t\tmodelConsumable.test( modelRange, 'range' ); // Check if `modelRange` is consumable.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n     * Model item, range or selection to be tested.\n     * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\n     * Second colon and everything after will be cut. Passing event name is a safe and good practice.\n     * @returns {null|Boolean} `null` if such consumable was never added, `false` if the consumable values was\n     * already consumed or `true` if it was added and not consumed yet.\n     */\n\n  }, {\n    key: \"test\",\n    value: function test(item, type) {\n      type = _normalizeConsumableType(type);\n\n      if (item instanceof TextProxy) {\n        item = this._getSymbolForTextProxy(item);\n      }\n\n      var itemConsumables = this._consumable.get(item);\n\n      if (itemConsumables === undefined) {\n        return null;\n      }\n\n      var value = itemConsumables.get(type);\n\n      if (value === undefined) {\n        return null;\n      }\n\n      return value;\n    }\n    /**\n     * Reverts consuming of consumable value.\n     *\n     *\t\tmodelConsumable.revert( modelElement, 'insert' ); // Revert consuming `modelElement` insertion change.\n     *\t\tmodelConsumable.revert( modelElement, 'addAttribute:bold' ); // Revert consuming `bold` attribute insert from `modelElement`.\n     *\t\tmodelConsumable.revert( modelElement, 'removeAttribute:bold' ); // Revert consuming `bold` attribute remove from `modelElement`.\n     *\t\tmodelConsumable.revert( modelSelection, 'selection' ); // Revert consuming `modelSelection`.\n     *\t\tmodelConsumable.revert( modelRange, 'range' ); // Revert consuming `modelRange`.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n     * Model item, range or selection to be reverted.\n     * @param {String} type Consumable type.\n     * @returns {null|Boolean} `true` if consumable has been reversed, `false` otherwise. `null` if the consumable has\n     * never been added.\n     */\n\n  }, {\n    key: \"revert\",\n    value: function revert(item, type) {\n      type = _normalizeConsumableType(type);\n\n      if (item instanceof TextProxy) {\n        item = this._getSymbolForTextProxy(item);\n      }\n\n      var test = this.test(item, type);\n\n      if (test === false) {\n        this._consumable.get(item).set(type, true);\n\n        return true;\n      } else if (test === true) {\n        return false;\n      }\n\n      return null;\n    }\n    /**\n     * Gets a unique symbol for passed {@link module:engine/model/textproxy~TextProxy} instance. All `TextProxy` instances that\n     * have same parent, same start index and same end index will get the same symbol.\n     *\n     * Used internally to correctly consume `TextProxy` instances.\n     *\n     * @private\n     * @param {module:engine/model/textproxy~TextProxy} textProxy `TextProxy` instance to get a symbol for.\n     * @returns {Symbol} Symbol representing all equal instances of `TextProxy`.\n     */\n\n  }, {\n    key: \"_getSymbolForTextProxy\",\n    value: function _getSymbolForTextProxy(textProxy) {\n      var symbol = null;\n\n      var startMap = this._textProxyRegistry.get(textProxy.startOffset);\n\n      if (startMap) {\n        var endMap = startMap.get(textProxy.endOffset);\n\n        if (endMap) {\n          symbol = endMap.get(textProxy.parent);\n        }\n      }\n\n      if (!symbol) {\n        symbol = this._addSymbolForTextProxy(textProxy.startOffset, textProxy.endOffset, textProxy.parent);\n      }\n\n      return symbol;\n    }\n    /**\n     * Adds a symbol for given properties that characterizes a {@link module:engine/model/textproxy~TextProxy} instance.\n     *\n     * Used internally to correctly consume `TextProxy` instances.\n     *\n     * @private\n     * @param {Number} startIndex Text proxy start index in it's parent.\n     * @param {Number} endIndex Text proxy end index in it's parent.\n     * @param {module:engine/model/element~Element} parent Text proxy parent.\n     * @returns {Symbol} Symbol generated for given properties.\n     */\n\n  }, {\n    key: \"_addSymbolForTextProxy\",\n    value: function _addSymbolForTextProxy(start, end, parent) {\n      var symbol = Symbol('textProxySymbol');\n      var startMap, endMap;\n      startMap = this._textProxyRegistry.get(start);\n\n      if (!startMap) {\n        startMap = new Map();\n\n        this._textProxyRegistry.set(start, startMap);\n      }\n\n      endMap = startMap.get(end);\n\n      if (!endMap) {\n        endMap = new Map();\n        startMap.set(end, endMap);\n      }\n\n      endMap.set(parent, symbol);\n      return symbol;\n    }\n  }]);\n\n  return ModelConsumable;\n}(); // Returns a normalized consumable type name from given string. A normalized consumable type name is a string that has\n// at most one colon, for example: `insert` or `addMarker:highlight`. If string to normalize has more \"parts\" (more colons),\n// the other parts are dropped, for example: `addattribute:bold:$text` -> `addattributes:bold`.\n//\n// @param {String} type Consumable type.\n// @returns {String} Normalized consumable type.\n\n\nexport { ModelConsumable as default };\n\nfunction _normalizeConsumableType(type) {\n  var parts = type.split(':');\n  return parts.length > 1 ? parts[0] + ':' + parts[1] : parts[0];\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/downcastdispatcher\n */\nimport Consumable from './modelconsumable';\nimport Range from '../model/range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { extend } from 'lodash-es';\n/**\n * `DowncastDispatcher` is a central point of downcasting (conversion from model to view), which is a process of reacting to changes\n * in the model and firing a set of events. Callbacks listening to those events are called converters. Those\n * converters role is to convert the model changes to changes in view (for example, adding view nodes or\n * changing attributes on view elements).\n *\n * During conversion process, `DowncastDispatcher` fires events, basing on state of the model and prepares\n * data for those events. It is important to understand that those events are connected with changes done on model,\n * for example: \"node has been inserted\" or \"attribute has changed\". This is in a contrary to upcasting (view to model conversion),\n * where we convert view state (view nodes) to a model tree.\n *\n * The events are prepared basing on a diff created by {@link module:engine/model/differ~Differ Differ}, which buffers them\n * and then passes to `DowncastDispatcher` as a diff between old model state and new model state.\n *\n * Note, that because changes are converted there is a need to have a mapping between model structure and view structure.\n * To map positions and elements during downcast (model to view conversion) use {@link module:engine/conversion/mapper~Mapper}.\n *\n * `DowncastDispatcher` fires following events for model tree changes:\n *\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert insert}\n * if a range of nodes has been inserted to the model tree,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:remove remove}\n * if a range of nodes has been removed from the model tree,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute attribute}\n * if attribute has been added, changed or removed from a model node.\n *\n * For {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert insert}\n * and {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute attribute},\n * `DowncastDispatcher` generates {@link module:engine/conversion/modelconsumable~ModelConsumable consumables}.\n * These are used to have a control over which changes has been already consumed. It is useful when some converters\n * overwrite other or converts multiple changes (for example converts insertion of an element and also converts that\n * element's attributes during insertion).\n *\n * Additionally, `DowncastDispatcher` fires events for {@link module:engine/model/markercollection~Marker marker} changes:\n *\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker} if a marker has been added,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:removeMarker} if a marker has been removed.\n *\n * Note, that changing a marker is done through removing the marker from the old range, and adding on the new range,\n * so both those events are fired.\n *\n * Finally, `DowncastDispatcher` also handles firing events for {@link module:engine/model/selection model selection}\n * conversion:\n *\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:selection}\n * which converts selection from model to view,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute}\n * which is fired for every selection attribute,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}\n * which is fired for every marker which contains selection.\n *\n * Unlike model tree and markers, events for selection are not fired for changes but for selection state.\n *\n * When providing custom listeners for `DowncastDispatcher` remember to check whether given change has not been\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed} yet.\n *\n * When providing custom listeners for `DowncastDispatcher` keep in mind that any callback that had\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed} a value from a consumable and\n * converted the change should also stop the event (for efficiency purposes).\n *\n * When providing custom listeners for `DowncastDispatcher` remember to use provided\n * {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer} to apply changes to the view document.\n *\n * Example of a custom converter for `DowncastDispatcher`:\n *\n *\t\t// We will convert inserting \"paragraph\" model element into the model.\n *\t\tdowncastDispatcher.on( 'insert:paragraph', ( evt, data, conversionApi ) => {\n *\t\t\t// Remember to check whether the change has not been consumed yet and consume it.\n *\t\t\tif ( conversionApi.consumable.consume( data.item, 'insert' ) ) {\n *\t\t\t\treturn;\n *\t\t\t}\n *\n *\t\t\t// Translate position in model to position in view.\n *\t\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n *\n *\t\t\t// Create <p> element that will be inserted in view at `viewPosition`.\n *\t\t\tconst viewElement = conversionApi.writer.createContainerElement( 'p' );\n *\n *\t\t\t// Bind the newly created view element to model element so positions will map accordingly in future.\n *\t\t\tconversionApi.mapper.bindElements( data.item, viewElement );\n *\n *\t\t\t// Add the newly created view element to the view.\n *\t\t\tconversionApi.writer.insert( viewPosition, viewElement );\n *\n *\t\t\t// Remember to stop the event propagation.\n *\t\t\tevt.stop();\n *\t\t} );\n */\n\nvar DowncastDispatcher =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a `DowncastDispatcher` instance.\n   *\n   * @see module:engine/conversion/downcastdispatcher~DowncastConversionApi\n   * @param {Object} [conversionApi] Additional properties for interface that will be passed to events fired\n   * by `DowncastDispatcher`.\n   */\n  function DowncastDispatcher() {\n    var conversionApi = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, DowncastDispatcher);\n\n    /**\n     * Interface passed by dispatcher to the events callbacks.\n     *\n     * @member {module:engine/conversion/downcastdispatcher~DowncastConversionApi}\n     */\n    this.conversionApi = extend({\n      dispatcher: this\n    }, conversionApi);\n  }\n  /**\n   * Takes {@link module:engine/model/differ~Differ model differ} object with buffered changes and fires conversion basing on it.\n   *\n   * @param {module:engine/model/differ~Differ} differ Differ object with buffered changes.\n   * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n   */\n\n\n  _createClass(DowncastDispatcher, [{\n    key: \"convertChanges\",\n    value: function convertChanges(differ, writer) {\n      // Before the view is updated, remove markers which have changed.\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = differ.getMarkersToRemove()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var change = _step.value;\n          this.convertMarkerRemove(change.name, change.range, writer);\n        } // Convert changes that happened on model tree.\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = differ.getChanges()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var entry = _step2.value;\n\n          if (entry.type == 'insert') {\n            this.convertInsert(Range._createFromPositionAndShift(entry.position, entry.length), writer);\n          } else if (entry.type == 'remove') {\n            this.convertRemove(entry.position, entry.length, entry.name, writer);\n          } else {\n            // entry.type == 'attribute'.\n            this.convertAttribute(entry.range, entry.attributeKey, entry.attributeOldValue, entry.attributeNewValue, writer);\n          }\n        } // After the view is updated, convert markers which have changed.\n\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = differ.getMarkersToAdd()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _change = _step3.value;\n          this.convertMarkerAdd(_change.name, _change.range, writer);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n    /**\n     * Starts conversion of a range insertion.\n     *\n     * For each node in the range, {@link #event:insert insert event is fired}. For each attribute on each node,\n     * {@link #event:attribute attribute event is fired}.\n     *\n     * @fires insert\n     * @fires attribute\n     * @param {module:engine/model/range~Range} range Inserted range.\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n     */\n\n  }, {\n    key: \"convertInsert\",\n    value: function convertInsert(range, writer) {\n      this.conversionApi.writer = writer; // Create a list of things that can be consumed, consisting of nodes and their attributes.\n\n      this.conversionApi.consumable = this._createInsertConsumable(range); // Fire a separate insert event for each node and text fragment contained in the range.\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = range[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var value = _step4.value;\n          var item = value.item;\n\n          var itemRange = Range._createFromPositionAndShift(value.previousPosition, value.length);\n\n          var data = {\n            item: item,\n            range: itemRange\n          };\n\n          this._testAndFire('insert', data); // Fire a separate addAttribute event for each attribute that was set on inserted items.\n          // This is important because most attributes converters will listen only to add/change/removeAttribute events.\n          // If we would not add this part, attributes on inserted nodes would not be converted.\n\n\n          var _iteratorNormalCompletion5 = true;\n          var _didIteratorError5 = false;\n          var _iteratorError5 = undefined;\n\n          try {\n            for (var _iterator5 = item.getAttributeKeys()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n              var key = _step5.value;\n              data.attributeKey = key;\n              data.attributeOldValue = null;\n              data.attributeNewValue = item.getAttribute(key);\n\n              this._testAndFire(\"attribute:\".concat(key), data);\n            }\n          } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n                _iterator5.return();\n              }\n            } finally {\n              if (_didIteratorError5) {\n                throw _iteratorError5;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      this._clearConversionApi();\n    }\n    /**\n     * Fires conversion of a single node removal. Fires {@link #event:remove remove event} with provided data.\n     *\n     * @param {module:engine/model/position~Position} position Position from which node was removed.\n     * @param {Number} length Offset size of removed node.\n     * @param {String} name Name of removed node.\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n     */\n\n  }, {\n    key: \"convertRemove\",\n    value: function convertRemove(position, length, name, writer) {\n      this.conversionApi.writer = writer;\n      this.fire('remove:' + name, {\n        position: position,\n        length: length\n      }, this.conversionApi);\n\n      this._clearConversionApi();\n    }\n    /**\n     * Starts conversion of attribute change on given `range`.\n     *\n     * For each node in the given `range`, {@link #event:attribute attribute event} is fired with the passed data.\n     *\n     * @fires attribute\n     * @param {module:engine/model/range~Range} range Changed range.\n     * @param {String} key Key of the attribute that has changed.\n     * @param {*} oldValue Attribute value before the change or `null` if the attribute has not been set before.\n     * @param {*} newValue New attribute value or `null` if the attribute has been removed.\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n     */\n\n  }, {\n    key: \"convertAttribute\",\n    value: function convertAttribute(range, key, oldValue, newValue, writer) {\n      this.conversionApi.writer = writer; // Create a list with attributes to consume.\n\n      this.conversionApi.consumable = this._createConsumableForRange(range, \"attribute:\".concat(key)); // Create a separate attribute event for each node in the range.\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = range[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var value = _step6.value;\n          var item = value.item;\n\n          var itemRange = Range._createFromPositionAndShift(value.previousPosition, value.length);\n\n          var data = {\n            item: item,\n            range: itemRange,\n            attributeKey: key,\n            attributeOldValue: oldValue,\n            attributeNewValue: newValue\n          };\n\n          this._testAndFire(\"attribute:\".concat(key), data);\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      this._clearConversionApi();\n    }\n    /**\n     * Starts model selection conversion.\n     *\n     * Fires events for given {@link module:engine/model/selection~Selection selection} to start selection conversion.\n     *\n     * @fires selection\n     * @fires addMarker\n     * @fires attribute\n     * @param {module:engine/model/selection~Selection} selection Selection to convert.\n     * @param {Array.<module:engine/model/markercollection~Marker>} markers Array of markers containing model markers.\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n     */\n\n  }, {\n    key: \"convertSelection\",\n    value: function convertSelection(selection, markers, writer) {\n      var markersAtSelection = Array.from(markers.getMarkersAtPosition(selection.getFirstPosition()));\n      this.conversionApi.writer = writer;\n      this.conversionApi.consumable = this._createSelectionConsumable(selection, markersAtSelection);\n      this.fire('selection', {\n        selection: selection\n      }, this.conversionApi);\n\n      if (!selection.isCollapsed) {\n        return;\n      }\n\n      for (var _i = 0, _markersAtSelection = markersAtSelection; _i < _markersAtSelection.length; _i++) {\n        var marker = _markersAtSelection[_i];\n        var markerRange = marker.getRange();\n\n        if (!shouldMarkerChangeBeConverted(selection.getFirstPosition(), marker, this.conversionApi.mapper)) {\n          continue;\n        }\n\n        var data = {\n          item: selection,\n          markerName: marker.name,\n          markerRange: markerRange\n        };\n\n        if (this.conversionApi.consumable.test(selection, 'addMarker:' + marker.name)) {\n          this.fire('addMarker:' + marker.name, data, this.conversionApi);\n        }\n      }\n\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = selection.getAttributeKeys()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var key = _step7.value;\n          var _data = {\n            item: selection,\n            range: selection.getFirstRange(),\n            attributeKey: key,\n            attributeOldValue: null,\n            attributeNewValue: selection.getAttribute(key)\n          }; // Do not fire event if the attribute has been consumed.\n\n          if (this.conversionApi.consumable.test(selection, 'attribute:' + _data.attributeKey)) {\n            this.fire('attribute:' + _data.attributeKey + ':$text', _data, this.conversionApi);\n          }\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n            _iterator7.return();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n\n      this._clearConversionApi();\n    }\n    /**\n     * Converts added marker. Fires {@link #event:addMarker addMarker} event for each item\n     * in marker's range. If range is collapsed single event is dispatched. See event description for more details.\n     *\n     * @fires addMarker\n     * @param {String} markerName Marker name.\n     * @param {module:engine/model/range~Range} markerRange Marker range.\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n     */\n\n  }, {\n    key: \"convertMarkerAdd\",\n    value: function convertMarkerAdd(markerName, markerRange, writer) {\n      // Do not convert if range is in graveyard or not in the document (e.g. in DocumentFragment).\n      if (!markerRange.root.document || markerRange.root.rootName == '$graveyard') {\n        return;\n      }\n\n      this.conversionApi.writer = writer; // In markers' case, event name == consumable name.\n\n      var eventName = 'addMarker:' + markerName; //\n      // First, fire an event for the whole marker.\n      //\n\n      var consumable = new Consumable();\n      consumable.add(markerRange, eventName);\n      this.conversionApi.consumable = consumable;\n      this.fire(eventName, {\n        markerName: markerName,\n        markerRange: markerRange\n      }, this.conversionApi); //\n      // Do not fire events for each item inside the range if the range got consumed.\n      //\n\n      if (!consumable.test(markerRange, eventName)) {\n        return;\n      } //\n      // Then, fire an event for each item inside the marker range.\n      //\n\n\n      this.conversionApi.consumable = this._createConsumableForRange(markerRange, eventName);\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = markerRange.getItems()[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var item = _step8.value;\n\n          // Do not fire event for already consumed items.\n          if (!this.conversionApi.consumable.test(item, eventName)) {\n            continue;\n          }\n\n          var data = {\n            item: item,\n            range: Range._createOn(item),\n            markerName: markerName,\n            markerRange: markerRange\n          };\n          this.fire(eventName, data, this.conversionApi);\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n\n      this._clearConversionApi();\n    }\n    /**\n     * Fires conversion of marker removal. Fires {@link #event:removeMarker removeMarker} event with provided data.\n     *\n     * @fires removeMarker\n     * @param {String} markerName Marker name.\n     * @param {module:engine/model/range~Range} markerRange Marker range.\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n     */\n\n  }, {\n    key: \"convertMarkerRemove\",\n    value: function convertMarkerRemove(markerName, markerRange, writer) {\n      // Do not convert if range is in graveyard or not in the document (e.g. in DocumentFragment).\n      if (!markerRange.root.document || markerRange.root.rootName == '$graveyard') {\n        return;\n      }\n\n      this.conversionApi.writer = writer;\n      this.fire('removeMarker:' + markerName, {\n        markerName: markerName,\n        markerRange: markerRange\n      }, this.conversionApi);\n\n      this._clearConversionApi();\n    }\n    /**\n     * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with values to consume from given range,\n     * assuming that the range has just been inserted to the model.\n     *\n     * @private\n     * @param {module:engine/model/range~Range} range Inserted range.\n     * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n     */\n\n  }, {\n    key: \"_createInsertConsumable\",\n    value: function _createInsertConsumable(range) {\n      var consumable = new Consumable();\n      var _iteratorNormalCompletion9 = true;\n      var _didIteratorError9 = false;\n      var _iteratorError9 = undefined;\n\n      try {\n        for (var _iterator9 = range[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n          var value = _step9.value;\n          var item = value.item;\n          consumable.add(item, 'insert');\n          var _iteratorNormalCompletion10 = true;\n          var _didIteratorError10 = false;\n          var _iteratorError10 = undefined;\n\n          try {\n            for (var _iterator10 = item.getAttributeKeys()[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n              var key = _step10.value;\n              consumable.add(item, 'attribute:' + key);\n            }\n          } catch (err) {\n            _didIteratorError10 = true;\n            _iteratorError10 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n                _iterator10.return();\n              }\n            } finally {\n              if (_didIteratorError10) {\n                throw _iteratorError10;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError9 = true;\n        _iteratorError9 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n            _iterator9.return();\n          }\n        } finally {\n          if (_didIteratorError9) {\n            throw _iteratorError9;\n          }\n        }\n      }\n\n      return consumable;\n    }\n    /**\n     * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with values to consume for given range.\n     *\n     * @private\n     * @param {module:engine/model/range~Range} range Affected range.\n     * @param {String} type Consumable type.\n     * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n     */\n\n  }, {\n    key: \"_createConsumableForRange\",\n    value: function _createConsumableForRange(range, type) {\n      var consumable = new Consumable();\n      var _iteratorNormalCompletion11 = true;\n      var _didIteratorError11 = false;\n      var _iteratorError11 = undefined;\n\n      try {\n        for (var _iterator11 = range.getItems()[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n          var item = _step11.value;\n          consumable.add(item, type);\n        }\n      } catch (err) {\n        _didIteratorError11 = true;\n        _iteratorError11 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n            _iterator11.return();\n          }\n        } finally {\n          if (_didIteratorError11) {\n            throw _iteratorError11;\n          }\n        }\n      }\n\n      return consumable;\n    }\n    /**\n     * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with selection consumable values.\n     *\n     * @private\n     * @param {module:engine/model/selection~Selection} selection Selection to create consumable from.\n     * @param {Iterable.<module:engine/model/markercollection~Marker>} markers Markers which contains selection.\n     * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n     */\n\n  }, {\n    key: \"_createSelectionConsumable\",\n    value: function _createSelectionConsumable(selection, markers) {\n      var consumable = new Consumable();\n      consumable.add(selection, 'selection');\n      var _iteratorNormalCompletion12 = true;\n      var _didIteratorError12 = false;\n      var _iteratorError12 = undefined;\n\n      try {\n        for (var _iterator12 = markers[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n          var marker = _step12.value;\n          consumable.add(selection, 'addMarker:' + marker.name);\n        }\n      } catch (err) {\n        _didIteratorError12 = true;\n        _iteratorError12 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n            _iterator12.return();\n          }\n        } finally {\n          if (_didIteratorError12) {\n            throw _iteratorError12;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion13 = true;\n      var _didIteratorError13 = false;\n      var _iteratorError13 = undefined;\n\n      try {\n        for (var _iterator13 = selection.getAttributeKeys()[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n          var key = _step13.value;\n          consumable.add(selection, 'attribute:' + key);\n        }\n      } catch (err) {\n        _didIteratorError13 = true;\n        _iteratorError13 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n            _iterator13.return();\n          }\n        } finally {\n          if (_didIteratorError13) {\n            throw _iteratorError13;\n          }\n        }\n      }\n\n      return consumable;\n    }\n    /**\n     * Tests passed `consumable` to check whether given event can be fired and if so, fires it.\n     *\n     * @private\n     * @fires insert\n     * @fires attribute\n     * @param {String} type Event type.\n     * @param {Object} data Event data.\n     */\n\n  }, {\n    key: \"_testAndFire\",\n    value: function _testAndFire(type, data) {\n      if (!this.conversionApi.consumable.test(data.item, type)) {\n        // Do not fire event if the item was consumed.\n        return;\n      }\n\n      var name = data.item.name || '$text';\n      this.fire(type + ':' + name, data, this.conversionApi);\n    }\n    /**\n     * Clears conversion API object.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_clearConversionApi\",\n    value: function _clearConversionApi() {\n      delete this.conversionApi.writer;\n      delete this.conversionApi.consumable;\n    }\n    /**\n     * Fired for inserted nodes.\n     *\n     * `insert` is a namespace for a class of events. Names of actually called events follow this pattern:\n     * `insert:name`. `name` is either `'$text'`, when {@link module:engine/model/text~Text a text node} has been inserted,\n     * or {@link module:engine/model/element~Element#name name} of inserted element.\n     *\n     * This way listeners can either listen to a general `insert` event or specific event (for example `insert:paragraph`).\n     *\n     * @event insert\n     * @param {Object} data Additional information about the change.\n     * @param {module:engine/model/item~Item} data.item Inserted item.\n     * @param {module:engine/model/range~Range} data.range Range spanning over inserted item.\n     * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n     * to be used by callback, passed in `DowncastDispatcher` constructor.\n     */\n\n    /**\n     * Fired for removed nodes.\n     *\n     * `remove` is a namespace for a class of events. Names of actually called events follow this pattern:\n     * `remove:name`. `name` is either `'$text'`, when {@link module:engine/model/text~Text a text node} has been removed,\n     * or the {@link module:engine/model/element~Element#name name} of removed element.\n     *\n     * This way listeners can either listen to a general `remove` event or specific event (for example `remove:paragraph`).\n     *\n     * @event remove\n     * @param {Object} data Additional information about the change.\n     * @param {module:engine/model/position~Position} data.position Position from which the node has been removed.\n     * @param {Number} data.length Offset size of the removed node.\n     * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n     * to be used by callback, passed in `DowncastDispatcher` constructor.\n     */\n\n    /**\n     * Fired in the following cases:\n     *\n     * * when an attribute has been added, changed, or removed from a node,\n     * * when a node with an attribute is inserted,\n     * * when collapsed model selection attribute is converted.\n     *\n     * `attribute` is a namespace for a class of events. Names of actually called events follow this pattern:\n     * `attribute:attributeKey:name`. `attributeKey` is the key of added/changed/removed attribute.\n     * `name` is either `'$text'` if change was on {@link module:engine/model/text~Text a text node},\n     * or the {@link module:engine/model/element~Element#name name} of element which attribute has changed.\n     *\n     * This way listeners can either listen to a general `attribute:bold` event or specific event (for example `attribute:src:image`).\n     *\n     * @event attribute\n     * @param {Object} data Additional information about the change.\n     * @param {module:engine/model/item~Item|module:engine/model/documentselection~DocumentSelection} data.item Changed item\n     * or converted selection.\n     * @param {module:engine/model/range~Range} data.range Range spanning over changed item or selection range.\n     * @param {String} data.attributeKey Attribute key.\n     * @param {*} data.attributeOldValue Attribute value before the change. This is `null` when selection attribute is converted.\n     * @param {*} data.attributeNewValue New attribute value.\n     * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n     * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n     * to be used by callback, passed in `DowncastDispatcher` constructor.\n     */\n\n    /**\n     * Fired for {@link module:engine/model/selection~Selection selection} changes.\n     *\n     * @event selection\n     * @param {module:engine/model/selection~Selection} selection Selection that is converted.\n     * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n     * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n     * to be used by callback, passed in `DowncastDispatcher` constructor.\n     */\n\n    /**\n     * Fired when a new marker is added to the model. Also fired when collapsed model selection that is inside marker is converted.\n     *\n     * `addMarker` is a namespace for a class of events. Names of actually called events follow this pattern:\n     * `addMarker:markerName`. By specifying certain marker names, you can make the events even more gradual. For example,\n     * if markers are named `foo:abc`, `foo:bar`, then it is possible to listen to `addMarker:foo` or `addMarker:foo:abc` and\n     * `addMarker:foo:bar` events.\n     *\n     * If the marker range is not collapsed:\n     *\n     * * the event is fired for each item in the marker range one by one,\n     * * consumables object includes each item of the marker range and the consumable value is same as event name.\n     *\n     * If the marker range is collapsed:\n     *\n     * * there is only one event,\n     * * consumables object includes marker range with event name.\n     *\n     * If selection inside a marker is converted:\n     *\n     * * there is only one event,\n     * * consumables object includes selection instance with event name.\n     *\n     * @event addMarker\n     * @param {Object} data Additional information about the change.\n     * @param {module:engine/model/item~Item|module:engine/model/selection~Selection} data.item Item inside the new marker or\n     * the selection that is being converted.\n     * @param {module:engine/model/range~Range} [data.range] Range spanning over converted item. Available only in marker conversion, if\n     * the marker range was not collapsed.\n     * @param {module:engine/model/range~Range} data.markerRange Marker range.\n     * @param {String} data.markerName Marker name.\n     * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n     * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n     * to be used by callback, passed in `DowncastDispatcher` constructor.\n     */\n\n    /**\n     * Fired when marker is removed from the model.\n     *\n     * `removeMarker` is a namespace for a class of events. Names of actually called events follow this pattern:\n     * `removeMarker:markerName`. By specifying certain marker names, you can make the events even more gradual. For example,\n     * if markers are named `foo:abc`, `foo:bar`, then it is possible to listen to `removeMarker:foo` or `removeMarker:foo:abc` and\n     * `removeMarker:foo:bar` events.\n     *\n     * @event removeMarker\n     * @param {Object} data Additional information about the change.\n     * @param {module:engine/model/range~Range} data.markerRange Marker range.\n     * @param {String} data.markerName Marker name.\n     * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n     * to be used by callback, passed in `DowncastDispatcher` constructor.\n     */\n\n  }]);\n\n  return DowncastDispatcher;\n}();\n\nexport { DowncastDispatcher as default };\nmix(DowncastDispatcher, EmitterMixin); // Helper function, checks whether change of `marker` at `modelPosition` should be converted. Marker changes are not\n// converted if they happen inside an element with custom conversion method.\n//\n// @param {module:engine/model/position~Position} modelPosition\n// @param {module:engine/model/markercollection~Marker} marker\n// @param {module:engine/conversion/mapper~Mapper} mapper\n// @returns {Boolean}\n\nfunction shouldMarkerChangeBeConverted(modelPosition, marker, mapper) {\n  var range = marker.getRange();\n  var ancestors = Array.from(modelPosition.getAncestors());\n  ancestors.shift(); // Remove root element. It cannot be passed to `model.Range#containsItem`.\n\n  ancestors.reverse();\n  var hasCustomHandling = ancestors.some(function (element) {\n    if (range.containsItem(element)) {\n      var viewElement = mapper.toViewElement(element);\n      return !!viewElement.getCustomProperty('addHighlight');\n    }\n  });\n  return !hasCustomHandling;\n}\n/**\n * Conversion interface that is registered for given {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}\n * and is passed as one of parameters when {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher dispatcher}\n * fires it's events.\n *\n * @interface module:engine/conversion/downcastdispatcher~DowncastConversionApi\n */\n\n/**\n * The {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} instance.\n *\n * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher} #dispatcher\n */\n\n/**\n * Stores information about what parts of processed model item are still waiting to be handled. After a piece of model item\n * was converted, appropriate consumable value should be {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed}.\n *\n * @member {module:engine/conversion/modelconsumable~ModelConsumable} #consumable\n */\n\n/**\n * The {@link module:engine/conversion/mapper~Mapper} instance.\n *\n * @member {module:engine/conversion/mapper~Mapper} #mapper\n */\n\n/**\n * The {@link module:engine/view/downcastwriter~DowncastWriter} instance used to manipulate data during conversion.\n *\n * @member {module:engine/view/downcastwriter~DowncastWriter} #writer\n */","import _regeneratorRuntime from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/selection\n */\nimport Position from './position';\nimport Element from './element';\nimport Node from './node';\nimport Range from './range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n/**\n * Selection is a set of {@link module:engine/model/range~Range ranges}. It has a direction specified by its\n * {@link module:engine/model/selection~Selection#anchor anchor} and {@link module:engine/model/selection~Selection#focus focus}\n * (it can be {@link module:engine/model/selection~Selection#isBackward forward or backward}).\n * Additionally, selection may have its own attributes (think – whether text typed in in this selection\n * should have those attributes – e.g. whether you type a bolded text).\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar Selection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new selection instance based on the given {@link module:engine/model/selection~Selectable selectable}\n   * or creates an empty selection if no arguments were passed.\n   *\n   *\t\t// Creates empty selection without ranges.\n   *\t\tconst selection = writer.createSelection();\n   *\n   *\t\t// Creates selection at the given range.\n   *\t\tconst range = writer.createRange( start, end );\n   *\t\tconst selection = writer.createSelection( range );\n   *\n   *\t\t// Creates selection at the given ranges\n   *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n   *\t\tconst selection = writer.createSelection( ranges );\n   *\n   *\t\t// Creates selection from the other selection.\n   *\t\t// Note: It doesn't copies selection attributes.\n   *\t\tconst otherSelection = writer.createSelection();\n   *\t\tconst selection = writer.createSelection( otherSelection );\n   *\n   *\t\t// Creates selection from the given document selection.\n   *\t\t// Note: It doesn't copies selection attributes.\n   *\t\tconst documentSelection = model.document.selection;\n   *\t\tconst selection = writer.createSelection( documentSelection );\n   *\n   *\t\t// Creates selection at the given position.\n   *\t\tconst position = writer.createPositionFromPath( root, path );\n   *\t\tconst selection = writer.createSelection( position );\n   *\n   *\t\t// Creates selection at the given offset in the given element.\n   *\t\tconst paragraph = writer.createElement( 'paragraph' );\n   *\t\tconst selection = writer.createSelection( paragraph, offset );\n   *\n   *\t\t// Creates a range inside an {@link module:engine/model/element~Element element} which starts before the\n   *\t\t// first child of that element and ends after the last child of that element.\n   *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n   *\n   *\t\t// Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends\n   *\t\t// just after the item.\n   *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n   *\n   * Selection's constructor allow passing additional options (`'backward'`) as the last argument.\n   *\n   *\t\t// Creates backward selection.\n   *\t\tconst selection = writer.createSelection( range, { backward: true } );\n   *\n   * @param {module:engine/model/selection~Selectable} selectable\n   * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n   * @param {Object} [options]\n   * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n   */\n  function Selection(selectable, placeOrOffset, options) {\n    _classCallCheck(this, Selection);\n\n    /**\n     * Specifies whether the last added range was added as a backward or forward range.\n     *\n     * @private\n     * @type {Boolean}\n     */\n    this._lastRangeBackward = false;\n    /**\n     * Stores selection ranges.\n     *\n     * @protected\n     * @type {Array.<module:engine/model/range~Range>}\n     */\n\n    this._ranges = [];\n    /**\n     * List of attributes set on current selection.\n     *\n     * @protected\n     * @type {Map.<String,*>}\n     */\n\n    this._attrs = new Map();\n\n    if (selectable) {\n      this.setTo(selectable, placeOrOffset, options);\n    }\n  }\n  /**\n   * Selection anchor. Anchor is the position from which the selection was started. If a user is making a selection\n   * by dragging the mouse, the anchor is where the user pressed the mouse button (the beggining of the selection).\n   *\n   * Anchor and {@link #focus} define the direction of the selection, which is important\n   * when expanding/shrinking selection. The focus moves, while the anchor should remain in the same place.\n   *\n   * Anchor is always set to the {@link module:engine/model/range~Range#start start} or\n   * {@link module:engine/model/range~Range#end end} position of the last of selection's ranges. Whether it is\n   * the `start` or `end` depends on the specified `options.backward`. See the {@link #setTo `setTo()`} method.\n   *\n   * May be set to `null` if there are no ranges in the selection.\n   *\n   * @see #focus\n   * @readonly\n   * @type {module:engine/model/position~Position|null}\n   */\n\n\n  _createClass(Selection, [{\n    key: \"isEqual\",\n\n    /**\n     * Checks whether this selection is equal to the given selection. Selections are equal if they have the same directions,\n     * the same number of ranges and all ranges from one selection equal to ranges from the another selection.\n     *\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} otherSelection\n     * Selection to compare with.\n     * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n     */\n    value: function isEqual(otherSelection) {\n      if (this.rangeCount != otherSelection.rangeCount) {\n        return false;\n      } else if (this.rangeCount === 0) {\n        return true;\n      }\n\n      if (!this.anchor.isEqual(otherSelection.anchor) || !this.focus.isEqual(otherSelection.focus)) {\n        return false;\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var thisRange = _step.value;\n          var found = false;\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = otherSelection._ranges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var otherRange = _step2.value;\n\n              if (thisRange.isEqual(otherRange)) {\n                found = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          if (!found) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Returns an iterable object that iterates over copies of selection ranges.\n     *\n     * @returns {Iterable.<module:engine/model/range~Range>}\n     */\n\n  }, {\n    key: \"getRanges\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getRanges() {\n      var _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, range;\n\n      return _regeneratorRuntime.wrap(function getRanges$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion3 = true;\n              _didIteratorError3 = false;\n              _iteratorError3 = undefined;\n              _context.prev = 3;\n              _iterator3 = this._ranges[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n                _context.next = 12;\n                break;\n              }\n\n              range = _step3.value;\n              _context.next = 9;\n              return new Range(range.start, range.end);\n\n            case 9:\n              _iteratorNormalCompletion3 = true;\n              _context.next = 5;\n              break;\n\n            case 12:\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError3 = true;\n              _iteratorError3 = _context.t0;\n\n            case 18:\n              _context.prev = 18;\n              _context.prev = 19;\n\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n\n            case 21:\n              _context.prev = 21;\n\n              if (!_didIteratorError3) {\n                _context.next = 24;\n                break;\n              }\n\n              throw _iteratorError3;\n\n            case 24:\n              return _context.finish(21);\n\n            case 25:\n              return _context.finish(18);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getRanges, this, [[3, 14, 18, 26], [19,, 21, 25]]);\n    })\n    /**\n     * Returns a copy of the first range in the selection.\n     * First range is the one which {@link module:engine/model/range~Range#start start} position\n     * {@link module:engine/model/position~Position#isBefore is before} start position of all other ranges\n     * (not to confuse with the first range added to the selection).\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/range~Range|null}\n     */\n\n  }, {\n    key: \"getFirstRange\",\n    value: function getFirstRange() {\n      var first = null;\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this._ranges[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var range = _step4.value;\n\n          if (!first || range.start.isBefore(first.start)) {\n            first = range;\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return first ? new Range(first.start, first.end) : null;\n    }\n    /**\n     * Returns a copy of the last range in the selection.\n     * Last range is the one which {@link module:engine/model/range~Range#end end} position\n     * {@link module:engine/model/position~Position#isAfter is after} end position of all other ranges (not to confuse with the range most\n     * recently added to the selection).\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/range~Range|null}\n     */\n\n  }, {\n    key: \"getLastRange\",\n    value: function getLastRange() {\n      var last = null;\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this._ranges[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var range = _step5.value;\n\n          if (!last || range.end.isAfter(last.end)) {\n            last = range;\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return last ? new Range(last.start, last.end) : null;\n    }\n    /**\n     * Returns the first position in the selection.\n     * First position is the position that {@link module:engine/model/position~Position#isBefore is before}\n     * any other position in the selection.\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"getFirstPosition\",\n    value: function getFirstPosition() {\n      var first = this.getFirstRange();\n      return first ? first.start.clone() : null;\n    }\n    /**\n     * Returns the last position in the selection.\n     * Last position is the position that {@link module:engine/model/position~Position#isAfter is after}\n     * any other position in the selection.\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"getLastPosition\",\n    value: function getLastPosition() {\n      var lastRange = this.getLastRange();\n      return lastRange ? lastRange.end.clone() : null;\n    }\n    /**\n     * Sets this selection's ranges and direction to the specified location based on the given\n     * {@link module:engine/model/selection~Selectable selectable}.\n     *\n     *\t\t// Removes all selection's ranges.\n     *\t\tselection.setTo( null );\n     *\n     *\t\t// Sets selection to the given range.\n     *\t\tconst range = writer.createRange( start, end );\n     *\t\tselection.setTo( range );\n     *\n     *\t\t// Sets selection to given ranges.\n     *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n     *\t\tselection.setTo( ranges );\n     *\n     *\t\t// Sets selection to other selection.\n     *\t\t// Note: It doesn't copies selection attributes.\n     *\t\tconst otherSelection = writer.createSelection();\n     *\t\tselection.setTo( otherSelection );\n     *\n     *\t\t// Sets selection to the given document selection.\n     *\t\t// Note: It doesn't copies selection attributes.\n     *\t\tconst documentSelection = new DocumentSelection( doc );\n     *\t\tselection.setTo( documentSelection );\n     *\n     *\t\t// Sets collapsed selection at the given position.\n     *\t\tconst position = writer.createPositionFromPath( root, path );\n     *\t\tselection.setTo( position );\n     *\n     *\t\t// Sets collapsed selection at the position of the given node and an offset.\n     *\t\tselection.setTo( paragraph, offset );\n     *\n     * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n    \t * that element and ends after the last child of that element.\n     *\n     *\t\tselection.setTo( paragraph, 'in' );\n     *\n     * Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends just after the item.\n     *\n     *\t\tselection.setTo( paragraph, 'on' );\n     *\n     * `Selection#setTo()`' method allow passing additional options (`backward`) as the last argument.\n     *\n     *\t\t// Sets backward selection.\n     *\t\tconst selection = writer.createSelection( range, { backward: true } );\n     *\n     * @param {module:engine/model/selection~Selectable} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     */\n\n  }, {\n    key: \"setTo\",\n    value: function setTo(selectable, placeOrOffset, options) {\n      if (selectable === null) {\n        this._setRanges([]);\n      } else if (selectable instanceof Selection) {\n        this._setRanges(selectable.getRanges(), selectable.isBackward);\n      } else if (selectable && typeof selectable.getRanges == 'function') {\n        // We assume that the selectable is a DocumentSelection.\n        // It can't be imported here, because it would lead to circular imports.\n        this._setRanges(selectable.getRanges(), selectable.isBackward);\n      } else if (selectable instanceof Range) {\n        this._setRanges([selectable], !!placeOrOffset && !!placeOrOffset.backward);\n      } else if (selectable instanceof Position) {\n        this._setRanges([new Range(selectable)]);\n      } else if (selectable instanceof Node) {\n        var backward = !!options && !!options.backward;\n        var range;\n\n        if (placeOrOffset == 'in') {\n          range = Range._createIn(selectable);\n        } else if (placeOrOffset == 'on') {\n          range = Range._createOn(selectable);\n        } else if (placeOrOffset !== undefined) {\n          range = new Range(Position._createAt(selectable, placeOrOffset));\n        } else {\n          /**\n           * selection.setTo requires the second parameter when the first parameter is a node.\n           *\n           * @error model-selection-setTo-required-second-parameter\n           */\n          throw new CKEditorError('model-selection-setTo-required-second-parameter: ' + 'selection.setTo requires the second parameter when the first parameter is a node.');\n        }\n\n        this._setRanges([range], backward);\n      } else if (isIterable(selectable)) {\n        // We assume that the selectable is an iterable of ranges.\n        this._setRanges(selectable, placeOrOffset && !!placeOrOffset.backward);\n      } else {\n        /**\n         * Cannot set the selection to the given place.\n         *\n         * Invalid parameters were specified when setting the selection. Common issues:\n         *\n         * * A {@link module:engine/model/textproxy~TextProxy} instance was passed instead of\n         * a real {@link module:engine/model/text~Text}.\n         * * View nodes were passed instead of model nodes.\n         * * `null`/`undefined` was passed.\n         *\n         * @error model-selection-setTo-not-selectable\n         */\n        throw new CKEditorError('model-selection-setTo-not-selectable: Cannot set the selection to the given place.');\n      }\n    }\n    /**\n     * Replaces all ranges that were added to the selection with given array of ranges. Last range of the array\n     * is treated like the last added range and is used to set {@link module:engine/model/selection~Selection#anchor} and\n     * {@link module:engine/model/selection~Selection#focus}. Accepts a flag describing in which direction the selection is made.\n     *\n     * @protected\n     * @fires change:range\n     * @param {Iterable.<module:engine/model/range~Range>} newRanges Ranges to set.\n     * @param {Boolean} [isLastBackward=false] Flag describing if last added range was selected forward - from start to end (`false`)\n     * or backward - from end to start (`true`).\n     */\n\n  }, {\n    key: \"_setRanges\",\n    value: function _setRanges(newRanges) {\n      var _this = this;\n\n      var isLastBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      newRanges = Array.from(newRanges); // Check whether there is any range in new ranges set that is different than all already added ranges.\n\n      var anyNewRange = newRanges.some(function (newRange) {\n        if (!(newRange instanceof Range)) {\n          /**\n           * Selection range set to an object that is not an instance of {@link module:engine/model/range~Range}.\n           *\n           * Only {@link module:engine/model/range~Range} instances can be used to set a selection.\n           * Common mistakes leading to this error are:\n           *\n           * * using DOM `Range` object,\n           * * incorrect CKEditor 5 installation with multiple `ckeditor5-engine` packages having different versions.\n           *\n           * @error model-selection-set-ranges-not-range\n           */\n          throw new CKEditorError('model-selection-set-ranges-not-range: ' + 'Selection range set to an object that is not an instance of model.Range.');\n        }\n\n        return _this._ranges.every(function (oldRange) {\n          return !oldRange.isEqual(newRange);\n        });\n      }); // Don't do anything if nothing changed.\n\n      if (newRanges.length === this._ranges.length && !anyNewRange) {\n        return;\n      }\n\n      this._removeAllRanges();\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = newRanges[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var range = _step6.value;\n\n          this._pushRange(range);\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      this._lastRangeBackward = !!isLastBackward;\n      this.fire('change:range', {\n        directChange: true\n      });\n    }\n    /**\n     * Moves {@link module:engine/model/selection~Selection#focus} to the specified location.\n     *\n     * The location can be specified in the same form as\n     * {@link module:engine/model/writer~Writer#createPositionAt writer.createPositionAt()} parameters.\n     *\n     * @fires change:range\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"setFocus\",\n    value: function setFocus(itemOrPosition, offset) {\n      if (this.anchor === null) {\n        /**\n         * Cannot set selection focus if there are no ranges in selection.\n         *\n         * @error model-selection-setFocus-no-ranges\n         */\n        throw new CKEditorError('model-selection-setFocus-no-ranges: Cannot set selection focus if there are no ranges in selection.');\n      }\n\n      var newFocus = Position._createAt(itemOrPosition, offset);\n\n      if (newFocus.compareWith(this.focus) == 'same') {\n        return;\n      }\n\n      var anchor = this.anchor;\n\n      if (this._ranges.length) {\n        this._popRange();\n      }\n\n      if (newFocus.compareWith(anchor) == 'before') {\n        this._pushRange(new Range(newFocus, anchor));\n\n        this._lastRangeBackward = true;\n      } else {\n        this._pushRange(new Range(anchor, newFocus));\n\n        this._lastRangeBackward = false;\n      }\n\n      this.fire('change:range', {\n        directChange: true\n      });\n    }\n    /**\n     * Gets an attribute value for given key or `undefined` if that attribute is not set on the selection.\n     *\n     * @param {String} key Key of attribute to look for.\n     * @returns {*} Attribute value or `undefined`.\n     */\n\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(key) {\n      return this._attrs.get(key);\n    }\n    /**\n     * Returns iterable that iterates over this selection's attributes.\n     *\n     * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n     * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"getAttributes\",\n    value: function getAttributes() {\n      return this._attrs.entries();\n    }\n    /**\n     * Returns iterable that iterates over this selection's attribute keys.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getAttributeKeys\",\n    value: function getAttributeKeys() {\n      return this._attrs.keys();\n    }\n    /**\n     * Checks if the selection has an attribute for given key.\n     *\n     * @param {String} key Key of attribute to check.\n     * @returns {Boolean} `true` if attribute with given key is set on selection, `false` otherwise.\n     */\n\n  }, {\n    key: \"hasAttribute\",\n    value: function hasAttribute(key) {\n      return this._attrs.has(key);\n    }\n    /**\n     * Removes an attribute with given key from the selection.\n     *\n     * If given attribute was set on the selection, fires the {@link #event:change:range} event with\n     * removed attribute key.\n     *\n     * @fires change:attribute\n     * @param {String} key Key of attribute to remove.\n     */\n\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(key) {\n      if (this.hasAttribute(key)) {\n        this._attrs.delete(key);\n\n        this.fire('change:attribute', {\n          attributeKeys: [key],\n          directChange: true\n        });\n      }\n    }\n    /**\n     * Sets attribute on the selection. If attribute with the same key already is set, it's value is overwritten.\n     *\n     * If the attribute value has changed, fires the {@link #event:change:range} event with\n     * the attribute key.\n     *\n     * @fires change:attribute\n     * @param {String} key Key of attribute to set.\n     * @param {*} value Attribute value.\n     */\n\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(key, value) {\n      if (this.getAttribute(key) !== value) {\n        this._attrs.set(key, value);\n\n        this.fire('change:attribute', {\n          attributeKeys: [key],\n          directChange: true\n        });\n      }\n    }\n    /**\n     * Returns the selected element. {@link module:engine/model/element~Element Element} is considered as selected if there is only\n     * one range in the selection, and that range contains exactly one element.\n     * Returns `null` if there is no selected element.\n     *\n     * @returns {module:engine/model/element~Element|null}\n     */\n\n  }, {\n    key: \"getSelectedElement\",\n    value: function getSelectedElement() {\n      if (this.rangeCount !== 1) {\n        return null;\n      }\n\n      var range = this.getFirstRange();\n      var nodeAfterStart = range.start.nodeAfter;\n      var nodeBeforeEnd = range.end.nodeBefore;\n      return nodeAfterStart instanceof Element && nodeAfterStart == nodeBeforeEnd ? nodeAfterStart : null;\n    }\n    /**\n     * Checks whether object is of given type following the convention set by\n     * {@link module:engine/model/node~Node#is `Node#is()`}.\n     *\n     *\t\tconst selection = new Selection( ... );\n     *\n     *\t\tselection.is( 'selection' ); // true\n     *\t\tselection.is( 'node' ); // false\n     *\t\tselection.is( 'element' ); // false\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"is\",\n    value: function is(type) {\n      return type == 'selection';\n    }\n    /**\n     * Gets elements of type \"block\" touched by the selection.\n     *\n     * This method's result can be used for example to apply block styling to all blocks covered by this selection.\n     *\n     * **Note:** `getSelectedBlocks()` always returns the deepest block.\n     *\n     * In this case the function will return exactly all 3 paragraphs:\n     *\n     *\t\t<paragraph>[a</paragraph>\n     *\t\t<quote>\n     *\t\t\t<paragraph>b</paragraph>\n     *\t\t</quote>\n     *\t\t<paragraph>c]d</paragraph>\n     *\n     * In this case the paragraph will also be returned, despite the collapsed selection:\n     *\n     *\t\t<paragraph>[]a</paragraph>\n     *\n     * **Special case**: If a selection ends at the beginning of a block, that block is not returned as from user perspective\n     * this block wasn't selected. See [#984](https://github.com/ckeditor/ckeditor5-engine/issues/984) for more details.\n     *\n     *\t\t<paragraph>[a</paragraph>\n     *\t\t<paragraph>b</paragraph>\n     *\t\t<paragraph>]c</paragraph> // this block will not be returned\n     *\n     * @returns {Iterable.<module:engine/model/element~Element>}\n     */\n\n  }, {\n    key: \"getSelectedBlocks\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getSelectedBlocks() {\n      var visited, _iteratorNormalCompletion7, _didIteratorError7, _iteratorError7, _iterator7, _step7, range, startBlock, _iteratorNormalCompletion8, _didIteratorError8, _iteratorError8, _iterator8, _step8, value, endBlock;\n\n      return _regeneratorRuntime.wrap(function getSelectedBlocks$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              visited = new WeakSet();\n              _iteratorNormalCompletion7 = true;\n              _didIteratorError7 = false;\n              _iteratorError7 = undefined;\n              _context2.prev = 4;\n              _iterator7 = this.getRanges()[Symbol.iterator]();\n\n            case 6:\n              if (_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done) {\n                _context2.next = 46;\n                break;\n              }\n\n              range = _step7.value;\n              startBlock = getParentBlock(range.start, visited);\n\n              if (!startBlock) {\n                _context2.next = 12;\n                break;\n              }\n\n              _context2.next = 12;\n              return startBlock;\n\n            case 12:\n              _iteratorNormalCompletion8 = true;\n              _didIteratorError8 = false;\n              _iteratorError8 = undefined;\n              _context2.prev = 15;\n              _iterator8 = range.getWalker()[Symbol.iterator]();\n\n            case 17:\n              if (_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done) {\n                _context2.next = 25;\n                break;\n              }\n\n              value = _step8.value;\n\n              if (!(value.type == 'elementEnd' && isUnvisitedBlockContainer(value.item, visited))) {\n                _context2.next = 22;\n                break;\n              }\n\n              _context2.next = 22;\n              return value.item;\n\n            case 22:\n              _iteratorNormalCompletion8 = true;\n              _context2.next = 17;\n              break;\n\n            case 25:\n              _context2.next = 31;\n              break;\n\n            case 27:\n              _context2.prev = 27;\n              _context2.t0 = _context2[\"catch\"](15);\n              _didIteratorError8 = true;\n              _iteratorError8 = _context2.t0;\n\n            case 31:\n              _context2.prev = 31;\n              _context2.prev = 32;\n\n              if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n                _iterator8.return();\n              }\n\n            case 34:\n              _context2.prev = 34;\n\n              if (!_didIteratorError8) {\n                _context2.next = 37;\n                break;\n              }\n\n              throw _iteratorError8;\n\n            case 37:\n              return _context2.finish(34);\n\n            case 38:\n              return _context2.finish(31);\n\n            case 39:\n              endBlock = getParentBlock(range.end, visited); // #984. Don't return the end block if the range ends right at its beginning.\n\n              if (!(endBlock && !range.end.isTouching(Position._createAt(endBlock, 0)))) {\n                _context2.next = 43;\n                break;\n              }\n\n              _context2.next = 43;\n              return endBlock;\n\n            case 43:\n              _iteratorNormalCompletion7 = true;\n              _context2.next = 6;\n              break;\n\n            case 46:\n              _context2.next = 52;\n              break;\n\n            case 48:\n              _context2.prev = 48;\n              _context2.t1 = _context2[\"catch\"](4);\n              _didIteratorError7 = true;\n              _iteratorError7 = _context2.t1;\n\n            case 52:\n              _context2.prev = 52;\n              _context2.prev = 53;\n\n              if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n                _iterator7.return();\n              }\n\n            case 55:\n              _context2.prev = 55;\n\n              if (!_didIteratorError7) {\n                _context2.next = 58;\n                break;\n              }\n\n              throw _iteratorError7;\n\n            case 58:\n              return _context2.finish(55);\n\n            case 59:\n              return _context2.finish(52);\n\n            case 60:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, getSelectedBlocks, this, [[4, 48, 52, 60], [15, 27, 31, 39], [32,, 34, 38], [53,, 55, 59]]);\n    })\n    /**\n     * Returns blocks that aren't nested in other selected blocks.\n     *\n     * In this case the method will return blocks A, B and E because C & D are children of block B:\n     *\n     *\t\t[<blockA></blockA>\n     *\t\t<blockB>\n     *\t\t\t<blockC></blockC>\n     *\t\t\t<blockD></blockD>\n     *\t\t</blockB>\n     *\t\t<blockE></blockE>]\n     *\n     * **Note:** To get all selected blocks use {@link #getSelectedBlocks `getSelectedBlocks()`}.\n     *\n     * @returns {Iterable.<module:engine/model/element~Element>}\n     */\n\n  }, {\n    key: \"getTopMostBlocks\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getTopMostBlocks() {\n      var selected, _i, _selected, block, parentBlock;\n\n      return _regeneratorRuntime.wrap(function getTopMostBlocks$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              selected = Array.from(this.getSelectedBlocks());\n              _i = 0, _selected = selected;\n\n            case 2:\n              if (!(_i < _selected.length)) {\n                _context3.next = 11;\n                break;\n              }\n\n              block = _selected[_i];\n              parentBlock = findAncestorBlock(block); // Filter out blocks that are nested in other selected blocks (like paragraphs in tables).\n\n              if (!(!parentBlock || !selected.includes(parentBlock))) {\n                _context3.next = 8;\n                break;\n              }\n\n              _context3.next = 8;\n              return block;\n\n            case 8:\n              _i++;\n              _context3.next = 2;\n              break;\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, getTopMostBlocks, this);\n    })\n    /**\n     * Checks whether the selection contains the entire content of the given element. This means that selection must start\n     * at a position {@link module:engine/model/position~Position#isTouching touching} the element's start and ends at position\n     * touching the element's end.\n     *\n     * By default, this method will check whether the entire content of the selection's current root is selected.\n     * Useful to check if e.g. the user has just pressed <kbd>Ctrl</kbd> + <kbd>A</kbd>.\n     *\n     * @param {module:engine/model/element~Element} [element=this.anchor.root]\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"containsEntireContent\",\n    value: function containsEntireContent() {\n      var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.anchor.root;\n\n      var limitStartPosition = Position._createAt(element, 0);\n\n      var limitEndPosition = Position._createAt(element, 'end');\n\n      return limitStartPosition.isTouching(this.getFirstPosition()) && limitEndPosition.isTouching(this.getLastPosition());\n    }\n    /**\n     * Adds given range to internal {@link #_ranges ranges array}. Throws an error\n     * if given range is intersecting with any range that is already stored in this selection.\n     *\n     * @protected\n     * @param {module:engine/model/range~Range} range Range to add.\n     */\n\n  }, {\n    key: \"_pushRange\",\n    value: function _pushRange(range) {\n      this._checkRange(range);\n\n      this._ranges.push(new Range(range.start, range.end));\n    }\n    /**\n     * Checks if given range intersects with ranges that are already in the selection. Throws an error if it does.\n     *\n     * @protected\n     * @param {module:engine/model/range~Range} range Range to check.\n     */\n\n  }, {\n    key: \"_checkRange\",\n    value: function _checkRange(range) {\n      for (var i = 0; i < this._ranges.length; i++) {\n        if (range.isIntersecting(this._ranges[i])) {\n          /**\n           * Trying to add a range that intersects with another range in the selection.\n           *\n           * @error model-selection-range-intersects\n           * @param {module:engine/model/range~Range} addedRange Range that was added to the selection.\n           * @param {module:engine/model/range~Range} intersectingRange Range in the selection that intersects with `addedRange`.\n           */\n          throw new CKEditorError('model-selection-range-intersects: Trying to add a range that intersects with another range in the selection.', {\n            addedRange: range,\n            intersectingRange: this._ranges[i]\n          });\n        }\n      }\n    }\n    /**\n     * Deletes ranges from internal range array. Uses {@link #_popRange _popRange} to\n     * ensure proper ranges removal.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_removeAllRanges\",\n    value: function _removeAllRanges() {\n      while (this._ranges.length > 0) {\n        this._popRange();\n      }\n    }\n    /**\n     * Removes most recently added range from the selection.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_popRange\",\n    value: function _popRange() {\n      this._ranges.pop();\n    }\n    /**\n     * Fired when selection range(s) changed.\n     *\n     * @event change:range\n     * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n     * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n     * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its position\n     * was directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n     * changed because the structure of the model has been changed (which means an indirect change).\n     * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n     * which mean that they are not updated once the document changes.\n     */\n\n    /**\n     * Fired when selection attribute changed.\n     *\n     * @event change:attribute\n     * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n     * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n     * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its attributes\n     * were directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n     * changed in the model and its attributes were refreshed (which means an indirect change).\n     * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n     * which mean that they are not updated once the document changes.\n     * @param {Array.<String>} attributeKeys Array containing keys of attributes that changed.\n     */\n\n  }, {\n    key: \"anchor\",\n    get: function get() {\n      if (this._ranges.length > 0) {\n        var range = this._ranges[this._ranges.length - 1];\n        return this._lastRangeBackward ? range.end : range.start;\n      }\n\n      return null;\n    }\n    /**\n     * Selection focus. Focus is the position where the selection ends. If a user is making a selection\n     * by dragging the mouse, the focus is where the mouse cursor is.\n     *\n     * May be set to `null` if there are no ranges in the selection.\n     *\n     * @see #anchor\n     * @readonly\n     * @type {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"focus\",\n    get: function get() {\n      if (this._ranges.length > 0) {\n        var range = this._ranges[this._ranges.length - 1];\n        return this._lastRangeBackward ? range.start : range.end;\n      }\n\n      return null;\n    }\n    /**\n     * Whether the selection is collapsed. Selection is collapsed when there is exactly one range in it\n     * and it is collapsed.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      var length = this._ranges.length;\n\n      if (length === 1) {\n        return this._ranges[0].isCollapsed;\n      } else {\n        return false;\n      }\n    }\n    /**\n     * Returns the number of ranges in the selection.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"rangeCount\",\n    get: function get() {\n      return this._ranges.length;\n    }\n    /**\n     * Specifies whether the selection's {@link #focus} precedes the selection's {@link #anchor}.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isBackward\",\n    get: function get() {\n      return !this.isCollapsed && this._lastRangeBackward;\n    }\n  }]);\n\n  return Selection;\n}();\n\nexport { Selection as default };\nmix(Selection, EmitterMixin); // Checks whether the given element extends $block in the schema and has a parent (is not a root).\n// Marks it as already visited.\n\nfunction isUnvisitedBlockContainer(element, visited) {\n  if (visited.has(element)) {\n    return false;\n  }\n\n  visited.add(element);\n  return element.document.model.schema.isBlock(element) && element.parent;\n} // Finds the lowest element in position's ancestors which is a block.\n// It will search until first ancestor that is a limit element.\n// Marks all ancestors as already visited to not include any of them later on.\n\n\nfunction getParentBlock(position, visited) {\n  var schema = position.parent.document.model.schema;\n  var ancestors = position.parent.getAncestors({\n    parentFirst: true,\n    includeSelf: true\n  });\n  var hasParentLimit = false;\n  var block = ancestors.find(function (element) {\n    // Stop searching after first parent node that is limit element.\n    if (hasParentLimit) {\n      return false;\n    }\n\n    hasParentLimit = schema.isLimit(element);\n    return !hasParentLimit && isUnvisitedBlockContainer(element, visited);\n  }); // Mark all ancestors of this position's parent, because find() might've stopped early and\n  // the found block may be a child of another block.\n\n  ancestors.forEach(function (element) {\n    return visited.add(element);\n  });\n  return block;\n} // Returns first ancestor block of a node.\n//\n// @param {module:engine/model/node~Node} node\n// @returns {module:engine/model/node~Node|undefined}\n\n\nfunction findAncestorBlock(node) {\n  var schema = node.document.model.schema;\n  var parent = node.parent;\n\n  while (parent) {\n    if (schema.isBlock(parent)) {\n      return parent;\n    }\n\n    parent = parent.parent;\n  }\n}\n/**\n * An entity that is used to set selection.\n *\n * See also {@link module:engine/model/selection~Selection#setTo}\n *\n * @typedef {\n *     module:engine/model/selection~Selection|\n *     module:engine/model/documentselection~DocumentSelection|\n *     module:engine/model/position~Position|\n *     module:engine/model/range~Range|\n *     module:engine/model/node~Node|\n *     Iterable.<module:engine/model/range~Range>|\n *     null\n * } module:engine/model/selection~Selectable\n */","import _slicedToArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/documentselection\n */\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport Selection from './selection';\nimport LiveRange from './liverange';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\nvar storePrefix = 'selection:';\n/**\n * `DocumentSelection` is a special selection which is used as the\n * {@link module:engine/model/document~Document#selection document's selection}.\n * There can be only one instance of `DocumentSelection` per document.\n *\n * Document selection can only be changed by using the {@link module:engine/model/writer~Writer} instance\n * inside the {@link module:engine/model/model~Model#change `change()`} block, as it provides a secure way to modify model.\n *\n * `DocumentSelection` is automatically updated upon changes in the {@link module:engine/model/document~Document document}\n * to always contain valid ranges. Its attributes are inherited from the text unless set explicitly.\n *\n * Differences between {@link module:engine/model/selection~Selection} and `DocumentSelection` are:\n * * there is always a range in `DocumentSelection` - even if no ranges were added there is a \"default range\"\n * present in the selection,\n * * ranges added to this selection updates automatically when the document changes,\n * * attributes of `DocumentSelection` are updated automatically according to selection ranges.\n *\n * Since `DocumentSelection` uses {@link module:engine/model/liverange~LiveRange live ranges}\n * and is updated when {@link module:engine/model/document~Document document}\n * changes, it cannot be set on {@link module:engine/model/node~Node nodes}\n * that are inside {@link module:engine/model/documentfragment~DocumentFragment document fragment}.\n * If you need to represent a selection in document fragment,\n * use {@link module:engine/model/selection~Selection Selection class} instead.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar DocumentSelection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an empty live selection for given {@link module:engine/model/document~Document}.\n   *\n   * @param {module:engine/model/document~Document} doc Document which owns this selection.\n   */\n  function DocumentSelection(doc) {\n    _classCallCheck(this, DocumentSelection);\n\n    /**\n     * Selection used internally by that class (`DocumentSelection` is a proxy to that selection).\n     *\n     * @protected\n     */\n    this._selection = new LiveSelection(doc);\n\n    this._selection.delegate('change:range').to(this);\n\n    this._selection.delegate('change:attribute').to(this);\n  }\n  /**\n   * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n   * collapsed.\n   *\n   * @readonly\n   * @type {Boolean}\n   */\n\n\n  _createClass(DocumentSelection, [{\n    key: \"getRanges\",\n\n    /**\n     * Returns an iterable that iterates over copies of selection ranges.\n     *\n     * @returns {Iterable.<module:engine/model/range~Range>}\n     */\n    value: function getRanges() {\n      return this._selection.getRanges();\n    }\n    /**\n     * Returns the first position in the selection.\n     * First position is the position that {@link module:engine/model/position~Position#isBefore is before}\n     * any other position in the selection.\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"getFirstPosition\",\n    value: function getFirstPosition() {\n      return this._selection.getFirstPosition();\n    }\n    /**\n     * Returns the last position in the selection.\n     * Last position is the position that {@link module:engine/model/position~Position#isAfter is after}\n     * any other position in the selection.\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"getLastPosition\",\n    value: function getLastPosition() {\n      return this._selection.getLastPosition();\n    }\n    /**\n     * Returns a copy of the first range in the selection.\n     * First range is the one which {@link module:engine/model/range~Range#start start} position\n     * {@link module:engine/model/position~Position#isBefore is before} start position of all other ranges\n     * (not to confuse with the first range added to the selection).\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/range~Range|null}\n     */\n\n  }, {\n    key: \"getFirstRange\",\n    value: function getFirstRange() {\n      return this._selection.getFirstRange();\n    }\n    /**\n     * Returns a copy of the last range in the selection.\n     * Last range is the one which {@link module:engine/model/range~Range#end end} position\n     * {@link module:engine/model/position~Position#isAfter is after} end position of all other ranges (not to confuse with the range most\n     * recently added to the selection).\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/range~Range|null}\n     */\n\n  }, {\n    key: \"getLastRange\",\n    value: function getLastRange() {\n      return this._selection.getLastRange();\n    }\n    /**\n     * Gets elements of type \"block\" touched by the selection.\n     *\n     * This method's result can be used for example to apply block styling to all blocks covered by this selection.\n     *\n     * **Note:** `getSelectedBlocks()` always returns the deepest block.\n     *\n     * In this case the function will return exactly all 3 paragraphs:\n     *\n     *\t\t<paragraph>[a</paragraph>\n     *\t\t<quote>\n     *\t\t\t<paragraph>b</paragraph>\n     *\t\t</quote>\n     *\t\t<paragraph>c]d</paragraph>\n     *\n     * In this case the paragraph will also be returned, despite the collapsed selection:\n     *\n     *\t\t<paragraph>[]a</paragraph>\n     *\n     * **Special case**: If a selection ends at the beginning of a block, that block is not returned as from user perspective\n     * this block wasn't selected. See [#984](https://github.com/ckeditor/ckeditor5-engine/issues/984) for more details.\n     *\n     *\t\t<paragraph>[a</paragraph>\n     *\t\t<paragraph>b</paragraph>\n     *\t\t<paragraph>]c</paragraph> // this block will not be returned\n     *\n     * @returns {Iterable.<module:engine/model/element~Element>}\n     */\n\n  }, {\n    key: \"getSelectedBlocks\",\n    value: function getSelectedBlocks() {\n      return this._selection.getSelectedBlocks();\n    }\n    /**\n     * Returns blocks that aren't nested in other selected blocks.\n     *\n     * In this case the method will return blocks A, B and E because C & D are children of block B:\n     *\n     *\t\t[<blockA></blockA>\n     *\t\t<blockB>\n     *\t\t\t<blockC></blockC>\n     *\t\t\t<blockD></blockD>\n     *\t\t</blockB>\n     *\t\t<blockE></blockE>]\n     *\n     * **Note:** To get all selected blocks use {@link #getSelectedBlocks `getSelectedBlocks()`}.\n     *\n     * @returns {Iterable.<module:engine/model/element~Element>}\n     */\n\n  }, {\n    key: \"getTopMostBlocks\",\n    value: function getTopMostBlocks() {\n      return this._selection.getTopMostBlocks();\n    }\n    /**\n     * Returns the selected element. {@link module:engine/model/element~Element Element} is considered as selected if there is only\n     * one range in the selection, and that range contains exactly one element.\n     * Returns `null` if there is no selected element.\n     *\n     * @returns {module:engine/model/element~Element|null}\n     */\n\n  }, {\n    key: \"getSelectedElement\",\n    value: function getSelectedElement() {\n      return this._selection.getSelectedElement();\n    }\n    /**\n     * Checks whether the selection contains the entire content of the given element. This means that selection must start\n     * at a position {@link module:engine/model/position~Position#isTouching touching} the element's start and ends at position\n     * touching the element's end.\n     *\n     * By default, this method will check whether the entire content of the selection's current root is selected.\n     * Useful to check if e.g. the user has just pressed <kbd>Ctrl</kbd> + <kbd>A</kbd>.\n     *\n     * @param {module:engine/model/element~Element} [element=this.anchor.root]\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"containsEntireContent\",\n    value: function containsEntireContent(element) {\n      return this._selection.containsEntireContent(element);\n    }\n    /**\n     * Unbinds all events previously bound by document selection.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._selection.destroy();\n    }\n    /**\n     * Returns iterable that iterates over this selection's attribute keys.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getAttributeKeys\",\n    value: function getAttributeKeys() {\n      return this._selection.getAttributeKeys();\n    }\n    /**\n     * Returns iterable that iterates over this selection's attributes.\n     *\n     * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n     * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"getAttributes\",\n    value: function getAttributes() {\n      return this._selection.getAttributes();\n    }\n    /**\n     * Gets an attribute value for given key or `undefined` if that attribute is not set on the selection.\n     *\n     * @param {String} key Key of attribute to look for.\n     * @returns {*} Attribute value or `undefined`.\n     */\n\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(key) {\n      return this._selection.getAttribute(key);\n    }\n    /**\n     * Checks if the selection has an attribute for given key.\n     *\n     * @param {String} key Key of attribute to check.\n     * @returns {Boolean} `true` if attribute with given key is set on selection, `false` otherwise.\n     */\n\n  }, {\n    key: \"hasAttribute\",\n    value: function hasAttribute(key) {\n      return this._selection.hasAttribute(key);\n    }\n    /**\n     * Checks whether object is of given type following the convention set by\n     * {@link module:engine/model/node~Node#is `Node#is()`}.\n     *\n     *\t\tconst selection = new DocumentSelection( ... );\n     *\n     *\t\tselection.is( 'selection' ); // true\n     *\t\tselection.is( 'documentSelection' ); // true\n     *\t\tselection.is( 'node' ); // false\n     *\t\tselection.is( 'element' ); // false\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"is\",\n    value: function is(type) {\n      return type == 'selection' || type == 'documentSelection';\n    }\n    /**\n     * Moves {@link module:engine/model/documentselection~DocumentSelection#focus} to the specified location.\n     * Should be used only within the {@link module:engine/model/writer~Writer#setSelectionFocus} method.\n     *\n     * The location can be specified in the same form as\n     * {@link module:engine/model/writer~Writer#createPositionAt writer.createPositionAt()} parameters.\n     *\n     * @see module:engine/model/writer~Writer#setSelectionFocus\n     * @protected\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"_setFocus\",\n    value: function _setFocus(itemOrPosition, offset) {\n      this._selection.setFocus(itemOrPosition, offset);\n    }\n    /**\n     * Sets this selection's ranges and direction to the specified location based on the given\n     * {@link module:engine/model/selection~Selectable selectable}.\n     * Should be used only within the {@link module:engine/model/writer~Writer#setSelection} method.\n     *\n     * @see module:engine/model/writer~Writer#setSelection\n     * @protected\n     * @param {module:engine/model/selection~Selectable} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     */\n\n  }, {\n    key: \"_setTo\",\n    value: function _setTo(selectable, placeOrOffset, options) {\n      this._selection.setTo(selectable, placeOrOffset, options);\n    }\n    /**\n     * Sets attribute on the selection. If attribute with the same key already is set, it's value is overwritten.\n     * Should be used only within the {@link module:engine/model/writer~Writer#setSelectionAttribute} method.\n     *\n     * @see module:engine/model/writer~Writer#setSelectionAttribute\n     * @protected\n     * @param {String} key Key of the attribute to set.\n     * @param {*} value Attribute value.\n     */\n\n  }, {\n    key: \"_setAttribute\",\n    value: function _setAttribute(key, value) {\n      this._selection.setAttribute(key, value);\n    }\n    /**\n     * Removes an attribute with given key from the selection.\n     * If the given attribute was set on the selection, fires the {@link module:engine/model/selection~Selection#event:change:range}\n     * event with removed attribute key.\n     * Should be used only within the {@link module:engine/model/writer~Writer#removeSelectionAttribute} method.\n     *\n     * @see module:engine/model/writer~Writer#removeSelectionAttribute\n     * @protected\n     * @param {String} key Key of the attribute to remove.\n     */\n\n  }, {\n    key: \"_removeAttribute\",\n    value: function _removeAttribute(key) {\n      this._selection.removeAttribute(key);\n    }\n    /**\n     * Returns an iterable that iterates through all selection attributes stored in current selection's parent.\n     *\n     * @protected\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"_getStoredAttributes\",\n    value: function _getStoredAttributes() {\n      return this._selection._getStoredAttributes();\n    }\n    /**\n     * Temporarily changes the gravity of the selection from the left to the right.\n     *\n     * The gravity defines from which direction the selection inherits its attributes. If it's the default left\n     * gravity, the selection (after being moved by the the user) inherits attributes from its left hand side.\n     * This method allows to temporarily override this behavior by forcing the gravity to the right.\n     *\n     * It returns an unique identifier which is required to restore the gravity. It guarantees the symmetry\n     * of the process.\n     *\n     * @see module:engine/model/writer~Writer#overrideSelectionGravity\n     * @protected\n     * @returns {String} The unique id which allows restoring the gravity.\n     */\n\n  }, {\n    key: \"_overrideGravity\",\n    value: function _overrideGravity() {\n      return this._selection.overrideGravity();\n    }\n    /**\n     * Restores the {@link ~DocumentSelection#_overrideGravity overridden gravity}.\n     *\n     * Restoring the gravity is only possible using the unique identifier returned by\n     * {@link ~DocumentSelection#_overrideGravity}. Note that the gravity remains overridden as long as won't be restored\n     * the same number of times it was overridden.\n     *\n     * @see module:engine/model/writer~Writer#restoreSelectionGravity\n     * @protected\n     * @param {String} uid The unique id returned by {@link #_overrideGravity}.\n     */\n\n  }, {\n    key: \"_restoreGravity\",\n    value: function _restoreGravity(uid) {\n      this._selection.restoreGravity(uid);\n    }\n    /**\n     * Generates and returns an attribute key for selection attributes store, basing on original attribute key.\n     *\n     * @protected\n     * @param {String} key Attribute key to convert.\n     * @returns {String} Converted attribute key, applicable for selection store.\n     */\n\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      return this._selection.isCollapsed;\n    }\n    /**\n     * Selection anchor. Anchor may be described as a position where the most recent part of the selection starts.\n     * Together with {@link #focus} they define the direction of selection, which is important\n     * when expanding/shrinking selection. Anchor is always {@link module:engine/model/range~Range#start start} or\n     * {@link module:engine/model/range~Range#end end} position of the most recently added range.\n     *\n     * Is set to `null` if there are no ranges in selection.\n     *\n     * @see #focus\n     * @readonly\n     * @type {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"anchor\",\n    get: function get() {\n      return this._selection.anchor;\n    }\n    /**\n     * Selection focus. Focus is a position where the selection ends.\n     *\n     * Is set to `null` if there are no ranges in selection.\n     *\n     * @see #anchor\n     * @readonly\n     * @type {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"focus\",\n    get: function get() {\n      return this._selection.focus;\n    }\n    /**\n     * Returns number of ranges in selection.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"rangeCount\",\n    get: function get() {\n      return this._selection.rangeCount;\n    }\n    /**\n     * Describes whether `Documentselection` has own range(s) set, or if it is defaulted to\n     * {@link module:engine/model/document~Document#_getDefaultRange document's default range}.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"hasOwnRange\",\n    get: function get() {\n      return this._selection.hasOwnRange;\n    }\n    /**\n     * Specifies whether the {@link #focus}\n     * precedes {@link #anchor}.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isBackward\",\n    get: function get() {\n      return this._selection.isBackward;\n    }\n    /**\n     * Describes whether the gravity is overridden (using {@link module:engine/model/writer~Writer#overrideSelectionGravity}) or not.\n     *\n     * Note that the gravity remains overridden as long as will not be restored the same number of times as it was overridden.\n     *\n     * @readonly\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isGravityOverridden\",\n    get: function get() {\n      return this._selection.isGravityOverridden;\n    }\n    /**\n     * A collection of selection markers.\n     * Marker is a selection marker when selection range is inside the marker range.\n     *\n     * @readonly\n     * @type {module:utils/collection~Collection.<module:engine/model/markercollection~Marker>}\n     */\n\n  }, {\n    key: \"markers\",\n    get: function get() {\n      return this._selection.markers;\n    }\n    /**\n     * Used for the compatibility with the {@link module:engine/model/selection~Selection#isEqual} method.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_ranges\",\n    get: function get() {\n      return this._selection._ranges;\n    }\n  }], [{\n    key: \"_getStoreAttributeKey\",\n    value: function _getStoreAttributeKey(key) {\n      return storePrefix + key;\n    }\n    /**\n     * Checks whether the given attribute key is an attribute stored on an element.\n     *\n     * @protected\n     * @param {String} key\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_isStoreAttributeKey\",\n    value: function _isStoreAttributeKey(key) {\n      return key.startsWith(storePrefix);\n    }\n  }]);\n\n  return DocumentSelection;\n}();\n\nexport { DocumentSelection as default };\nmix(DocumentSelection, EmitterMixin);\n/**\n * Fired when selection range(s) changed.\n *\n * @event change:range\n * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its position\n * was directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n * changed because the structure of the model has been changed (which means an indirect change).\n * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n * which mean that they are not updated once the document changes.\n */\n\n/**\n * Fired when selection attribute changed.\n *\n * @event change:attribute\n * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its attributes\n * were directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n * changed in the model and its attributes were refreshed (which means an indirect change).\n * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n * which mean that they are not updated once the document changes.\n * @param {Array.<String>} attributeKeys Array containing keys of attributes that changed.\n */\n// `LiveSelection` is used internally by {@link module:engine/model/documentselection~DocumentSelection} and shouldn't be used directly.\n//\n// LiveSelection` is automatically updated upon changes in the {@link module:engine/model/document~Document document}\n// to always contain valid ranges. Its attributes are inherited from the text unless set explicitly.\n//\n// Differences between {@link module:engine/model/selection~Selection} and `LiveSelection` are:\n// * there is always a range in `LiveSelection` - even if no ranges were added there is a \"default range\"\n// present in the selection,\n// * ranges added to this selection updates automatically when the document changes,\n// * attributes of `LiveSelection` are updated automatically according to selection ranges.\n//\n// @extends module:engine/model/selection~Selection\n//\n\nvar LiveSelection =\n/*#__PURE__*/\nfunction (_Selection) {\n  _inherits(LiveSelection, _Selection);\n\n  // Creates an empty live selection for given {@link module:engine/model/document~Document}.\n  // @param {module:engine/model/document~Document} doc Document which owns this selection.\n  function LiveSelection(doc) {\n    var _this;\n\n    _classCallCheck(this, LiveSelection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LiveSelection).call(this)); // List of selection markers.\n    // Marker is a selection marker when selection range is inside the marker range.\n    //\n    // @type {module:utils/collection~Collection}\n\n    _this.markers = new Collection({\n      idProperty: 'name'\n    }); // Document which owns this selection.\n    //\n    // @protected\n    // @member {module:engine/model/model~Model}\n\n    _this._model = doc.model; // Document which owns this selection.\n    //\n    // @protected\n    // @member {module:engine/model/document~Document}\n\n    _this._document = doc; // Keeps mapping of attribute name to priority with which the attribute got modified (added/changed/removed)\n    // last time. Possible values of priority are: `'low'` and `'normal'`.\n    //\n    // Priorities are used by internal `LiveSelection` mechanisms. All attributes set using `LiveSelection`\n    // attributes API are set with `'normal'` priority.\n    //\n    // @private\n    // @member {Map} module:engine/model/liveselection~LiveSelection#_attributePriority\n\n    _this._attributePriority = new Map(); // Contains data required to fix ranges which have been moved to the graveyard.\n    // @private\n    // @member {Array} module:engine/model/liveselection~LiveSelection#_fixGraveyardRangesData\n\n    _this._fixGraveyardRangesData = []; // Flag that informs whether the selection ranges have changed. It is changed on true when `LiveRange#change:range` event is fired.\n    // @private\n    // @member {Array} module:engine/model/liveselection~LiveSelection#_hasChangedRange\n\n    _this._hasChangedRange = false; // Each overriding gravity adds an UID to the set and each removal removes it.\n    // Gravity is overridden when there's at least one UID in the set.\n    // Gravity is restored when the set is empty.\n    // This is to prevent conflicts when gravity is overridden by more than one feature at the same time.\n    // @private\n    // @type {Set}\n\n    _this._overriddenGravityRegister = new Set(); // Ensure selection is correct and up to date after each range change.\n\n    _this.on('change:range', function () {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _this.getRanges()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var range = _step.value;\n\n          if (!_this._document._validateSelectionRange(range)) {\n            /**\n             * Range from {@link module:engine/model/documentselection~DocumentSelection document selection}\n             * starts or ends at incorrect position.\n             *\n             * @error document-selection-wrong-position\n             * @param {module:engine/model/range~Range} range\n             */\n            throw new CKEditorError('document-selection-wrong-position: Range from document selection starts or ends at incorrect position.', {\n              range: range\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      _this._updateMarkers();\n\n      _this._updateAttributes(false);\n    }); // Update markers data stored by the selection after each marker change.\n\n\n    _this.listenTo(_this._model.markers, 'update', function () {\n      return _this._updateMarkers();\n    }); // Ensure selection is correct and up to date after each operation.\n\n\n    _this.listenTo(_this._model, 'applyOperation', function (evt, args) {\n      var operation = args[0];\n\n      if (!operation.isDocumentOperation || operation.type == 'marker' || operation.type == 'rename' || operation.type == 'noop') {\n        return;\n      }\n\n      while (_this._fixGraveyardRangesData.length) {\n        var _this$_fixGraveyardRa = _this._fixGraveyardRangesData.shift(),\n            liveRange = _this$_fixGraveyardRa.liveRange,\n            sourcePosition = _this$_fixGraveyardRa.sourcePosition;\n\n        _this._fixGraveyardSelection(liveRange, sourcePosition);\n      }\n\n      if (_this._hasChangedRange) {\n        _this._hasChangedRange = false;\n\n        _this.fire('change:range', {\n          directChange: false\n        });\n      }\n\n      _this._updateMarkers();\n\n      _this._updateAttributes(false);\n    }, {\n      priority: 'lowest'\n    }); // Clear selection attributes from element if no longer empty.\n\n\n    _this.listenTo(_this._document, 'change', function (evt, batch) {\n      clearAttributesStoredInElement(_this._model, batch);\n    });\n\n    return _this;\n  }\n\n  _createClass(LiveSelection, [{\n    key: \"destroy\",\n    // Unbinds all events previously bound by live selection.\n    value: function destroy() {\n      for (var i = 0; i < this._ranges.length; i++) {\n        this._ranges[i].detach();\n      }\n\n      this.stopListening();\n    }\n  }, {\n    key: \"getRanges\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getRanges() {\n      return _regeneratorRuntime.wrap(function getRanges$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!this._ranges.length) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.delegateYield(_get(_getPrototypeOf(LiveSelection.prototype), \"getRanges\", this).call(this), \"t0\", 2);\n\n            case 2:\n              _context.next = 6;\n              break;\n\n            case 4:\n              _context.next = 6;\n              return this._document._getDefaultRange();\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getRanges, this);\n    })\n  }, {\n    key: \"getFirstRange\",\n    value: function getFirstRange() {\n      return _get(_getPrototypeOf(LiveSelection.prototype), \"getFirstRange\", this).call(this) || this._document._getDefaultRange();\n    }\n  }, {\n    key: \"getLastRange\",\n    value: function getLastRange() {\n      return _get(_getPrototypeOf(LiveSelection.prototype), \"getLastRange\", this).call(this) || this._document._getDefaultRange();\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(selectable, optionsOrPlaceOrOffset, options) {\n      _get(_getPrototypeOf(LiveSelection.prototype), \"setTo\", this).call(this, selectable, optionsOrPlaceOrOffset, options);\n\n      this._refreshAttributes();\n    }\n  }, {\n    key: \"setFocus\",\n    value: function setFocus(itemOrPosition, offset) {\n      _get(_getPrototypeOf(LiveSelection.prototype), \"setFocus\", this).call(this, itemOrPosition, offset);\n\n      this._refreshAttributes();\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(key, value) {\n      if (this._setAttribute(key, value)) {\n        // Fire event with exact data.\n        var attributeKeys = [key];\n        this.fire('change:attribute', {\n          attributeKeys: attributeKeys,\n          directChange: true\n        });\n      }\n    }\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(key) {\n      if (this._removeAttribute(key)) {\n        // Fire event with exact data.\n        var attributeKeys = [key];\n        this.fire('change:attribute', {\n          attributeKeys: attributeKeys,\n          directChange: true\n        });\n      }\n    }\n  }, {\n    key: \"overrideGravity\",\n    value: function overrideGravity() {\n      var overrideUid = uid(); // Remember that another overriding has been requested. It will need to be removed\n      // before the gravity is to be restored.\n\n      this._overriddenGravityRegister.add(overrideUid);\n\n      if (this._overriddenGravityRegister.size === 1) {\n        this._refreshAttributes();\n      }\n\n      return overrideUid;\n    }\n  }, {\n    key: \"restoreGravity\",\n    value: function restoreGravity(uid) {\n      if (!this._overriddenGravityRegister.has(uid)) {\n        /**\n         * Restoring gravity for an unknown UID is not possible. Make sure you are using a correct\n         * UID obtained from the {@link module:engine/model/writer~Writer#overrideSelectionGravity} to restore.\n         *\n         * @error document-selection-gravity-wrong-restore\n         * @param {String} uid The unique identifier returned by\n         * {@link module:engine/model/documentselection~DocumentSelection#_overrideGravity}.\n         */\n        throw new CKEditorError('document-selection-gravity-wrong-restore: Attempting to restore the selection gravity for an unknown UID.', {\n          uid: uid\n        });\n      }\n\n      this._overriddenGravityRegister.delete(uid); // Restore gravity only when all overriding have been restored.\n\n\n      if (!this.isGravityOverridden) {\n        this._refreshAttributes();\n      }\n    } // Removes all attributes from the selection and sets attributes according to the surrounding nodes.\n\n  }, {\n    key: \"_refreshAttributes\",\n    value: function _refreshAttributes() {\n      this._updateAttributes(true);\n    }\n  }, {\n    key: \"_popRange\",\n    value: function _popRange() {\n      this._ranges.pop().detach();\n    }\n  }, {\n    key: \"_pushRange\",\n    value: function _pushRange(range) {\n      var liveRange = this._prepareRange(range); // `undefined` is returned when given `range` is in graveyard root.\n\n\n      if (liveRange) {\n        this._ranges.push(liveRange);\n      }\n    } // Prepares given range to be added to selection. Checks if it is correct,\n    // converts it to {@link module:engine/model/liverange~LiveRange LiveRange}\n    // and sets listeners listening to the range's change event.\n    //\n    // @private\n    // @param {module:engine/model/range~Range} range\n\n  }, {\n    key: \"_prepareRange\",\n    value: function _prepareRange(range) {\n      var _this2 = this;\n\n      this._checkRange(range);\n\n      if (range.root == this._document.graveyard) {\n        /**\n         * Trying to add a Range that is in the graveyard root. Range rejected.\n         *\n         * @warning model-selection-range-in-graveyard\n         */\n        log.warn('model-selection-range-in-graveyard: Trying to add a Range that is in the graveyard root. Range rejected.');\n        return;\n      }\n\n      var liveRange = LiveRange.fromRange(range);\n      liveRange.on('change:range', function (evt, oldRange, data) {\n        _this2._hasChangedRange = true; // If `LiveRange` is in whole moved to the graveyard, save necessary data. It will be fixed on `Model#applyOperation` event.\n\n        if (liveRange.root == _this2._document.graveyard) {\n          _this2._fixGraveyardRangesData.push({\n            liveRange: liveRange,\n            sourcePosition: data.deletionPosition\n          });\n        }\n      });\n      return liveRange;\n    }\n  }, {\n    key: \"_updateMarkers\",\n    value: function _updateMarkers() {\n      var markers = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this._model.markers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var marker = _step2.value;\n          var markerRange = marker.getRange();\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = this.getRanges()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var selectionRange = _step3.value;\n\n              if (markerRange.containsRange(selectionRange, !selectionRange.isCollapsed)) {\n                markers.push(marker);\n              }\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      for (var _i = 0, _markers = markers; _i < _markers.length; _i++) {\n        var _marker = _markers[_i];\n\n        if (!this.markers.has(_marker)) {\n          this.markers.add(_marker);\n        }\n      }\n\n      for (var _i2 = 0, _Array$from = Array.from(this.markers); _i2 < _Array$from.length; _i2++) {\n        var _marker2 = _Array$from[_i2];\n\n        if (!markers.includes(_marker2)) {\n          this.markers.remove(_marker2);\n        }\n      }\n    } // Updates this selection attributes according to its ranges and the {@link module:engine/model/document~Document model document}.\n    //\n    // @protected\n    // @param {Boolean} clearAll\n    // @fires change:attribute\n\n  }, {\n    key: \"_updateAttributes\",\n    value: function _updateAttributes(clearAll) {\n      var newAttributes = toMap(this._getSurroundingAttributes());\n      var oldAttributes = toMap(this.getAttributes());\n\n      if (clearAll) {\n        // If `clearAll` remove all attributes and reset priorities.\n        this._attributePriority = new Map();\n        this._attrs = new Map();\n      } else {\n        // If not, remove only attributes added with `low` priority.\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = this._attributePriority[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var _step4$value = _slicedToArray(_step4.value, 2),\n                key = _step4$value[0],\n                priority = _step4$value[1];\n\n            if (priority == 'low') {\n              this._attrs.delete(key);\n\n              this._attributePriority.delete(key);\n            }\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n      }\n\n      this._setAttributesTo(newAttributes); // Let's evaluate which attributes really changed.\n\n\n      var changed = []; // First, loop through all attributes that are set on selection right now.\n      // Check which of them are different than old attributes.\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this.getAttributes()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n              newKey = _step5$value[0],\n              newValue = _step5$value[1];\n\n          if (!oldAttributes.has(newKey) || oldAttributes.get(newKey) !== newValue) {\n            changed.push(newKey);\n          }\n        } // Then, check which of old attributes got removed.\n\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = oldAttributes[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var _step6$value = _slicedToArray(_step6.value, 1),\n              oldKey = _step6$value[0];\n\n          if (!this.hasAttribute(oldKey)) {\n            changed.push(oldKey);\n          }\n        } // Fire event with exact data (fire only if anything changed).\n\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      if (changed.length > 0) {\n        this.fire('change:attribute', {\n          attributeKeys: changed,\n          directChange: false\n        });\n      }\n    } // Internal method for setting `LiveSelection` attribute. Supports attribute priorities (through `directChange`\n    // parameter).\n    //\n    // @private\n    // @param {String} key Attribute key.\n    // @param {*} value Attribute value.\n    // @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\n    // is caused by `Batch` API.\n    // @returns {Boolean} Whether value has changed.\n\n  }, {\n    key: \"_setAttribute\",\n    value: function _setAttribute(key, value) {\n      var directChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var priority = directChange ? 'normal' : 'low';\n\n      if (priority == 'low' && this._attributePriority.get(key) == 'normal') {\n        // Priority too low.\n        return false;\n      }\n\n      var oldValue = _get(_getPrototypeOf(LiveSelection.prototype), \"getAttribute\", this).call(this, key); // Don't do anything if value has not changed.\n\n\n      if (oldValue === value) {\n        return false;\n      }\n\n      this._attrs.set(key, value); // Update priorities map.\n\n\n      this._attributePriority.set(key, priority);\n\n      return true;\n    } // Internal method for removing `LiveSelection` attribute. Supports attribute priorities (through `directChange`\n    // parameter).\n    //\n    // NOTE: Even if attribute is not present in the selection but is provided to this method, it's priority will\n    // be changed according to `directChange` parameter.\n    //\n    // @private\n    // @param {String} key Attribute key.\n    // @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\n    // is caused by `Batch` API.\n    // @returns {Boolean} Whether attribute was removed. May not be true if such attributes didn't exist or the\n    // existing attribute had higher priority.\n\n  }, {\n    key: \"_removeAttribute\",\n    value: function _removeAttribute(key) {\n      var directChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var priority = directChange ? 'normal' : 'low';\n\n      if (priority == 'low' && this._attributePriority.get(key) == 'normal') {\n        // Priority too low.\n        return false;\n      } // Update priorities map.\n\n\n      this._attributePriority.set(key, priority); // Don't do anything if value has not changed.\n\n\n      if (!_get(_getPrototypeOf(LiveSelection.prototype), \"hasAttribute\", this).call(this, key)) {\n        return false;\n      }\n\n      this._attrs.delete(key);\n\n      return true;\n    } // Internal method for setting multiple `LiveSelection` attributes. Supports attribute priorities (through\n    // `directChange` parameter).\n    //\n    // @private\n    // @param {Map.<String,*>} attrs Iterable object containing attributes to be set.\n    // @returns {Set.<String>} Changed attribute keys.\n\n  }, {\n    key: \"_setAttributesTo\",\n    value: function _setAttributesTo(attrs) {\n      var changed = new Set();\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = this.getAttributes()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var _step7$value = _slicedToArray(_step7.value, 2),\n              oldKey = _step7$value[0],\n              oldValue = _step7$value[1];\n\n          // Do not remove attribute if attribute with same key and value is about to be set.\n          if (attrs.get(oldKey) === oldValue) {\n            continue;\n          } // All rest attributes will be removed so changed attributes won't change .\n\n\n          this._removeAttribute(oldKey, false);\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n            _iterator7.return();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = attrs[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var _step8$value = _slicedToArray(_step8.value, 2),\n              key = _step8$value[0],\n              value = _step8$value[1];\n\n          // Attribute may not be set because of attributes or because same key/value is already added.\n          var gotAdded = this._setAttribute(key, value, false);\n\n          if (gotAdded) {\n            changed.add(key);\n          }\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n\n      return changed;\n    } // Returns an iterable that iterates through all selection attributes stored in current selection's parent.\n    //\n    // @protected\n    // @returns {Iterable.<*>}\n\n  }, {\n    key: \"_getStoredAttributes\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _getStoredAttributes() {\n      var selectionParent, _iteratorNormalCompletion9, _didIteratorError9, _iteratorError9, _iterator9, _step9, key, realKey;\n\n      return _regeneratorRuntime.wrap(function _getStoredAttributes$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              selectionParent = this.getFirstPosition().parent;\n\n              if (!(this.isCollapsed && selectionParent.isEmpty)) {\n                _context2.next = 30;\n                break;\n              }\n\n              _iteratorNormalCompletion9 = true;\n              _didIteratorError9 = false;\n              _iteratorError9 = undefined;\n              _context2.prev = 5;\n              _iterator9 = selectionParent.getAttributeKeys()[Symbol.iterator]();\n\n            case 7:\n              if (_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done) {\n                _context2.next = 16;\n                break;\n              }\n\n              key = _step9.value;\n\n              if (!key.startsWith(storePrefix)) {\n                _context2.next = 13;\n                break;\n              }\n\n              realKey = key.substr(storePrefix.length);\n              _context2.next = 13;\n              return [realKey, selectionParent.getAttribute(key)];\n\n            case 13:\n              _iteratorNormalCompletion9 = true;\n              _context2.next = 7;\n              break;\n\n            case 16:\n              _context2.next = 22;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](5);\n              _didIteratorError9 = true;\n              _iteratorError9 = _context2.t0;\n\n            case 22:\n              _context2.prev = 22;\n              _context2.prev = 23;\n\n              if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n                _iterator9.return();\n              }\n\n            case 25:\n              _context2.prev = 25;\n\n              if (!_didIteratorError9) {\n                _context2.next = 28;\n                break;\n              }\n\n              throw _iteratorError9;\n\n            case 28:\n              return _context2.finish(25);\n\n            case 29:\n              return _context2.finish(22);\n\n            case 30:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _getStoredAttributes, this, [[5, 18, 22, 30], [23,, 25, 29]]);\n    }) // Checks model text nodes that are closest to the selection's first position and returns attributes of first\n    // found element. If there are no text nodes in selection's first position parent, it returns selection\n    // attributes stored in that parent.\n    //\n    // @private\n    // @returns {Iterable.<*>} Collection of attributes.\n\n  }, {\n    key: \"_getSurroundingAttributes\",\n    value: function _getSurroundingAttributes() {\n      var position = this.getFirstPosition();\n      var schema = this._model.schema;\n      var attrs = null;\n\n      if (!this.isCollapsed) {\n        // 1. If selection is a range...\n        var range = this.getFirstRange(); // ...look for a first character node in that range and take attributes from it.\n\n        var _iteratorNormalCompletion10 = true;\n        var _didIteratorError10 = false;\n        var _iteratorError10 = undefined;\n\n        try {\n          for (var _iterator10 = range[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n            var value = _step10.value;\n\n            // If the item is an object, we don't want to get attributes from its children.\n            if (value.item.is('element') && schema.isObject(value.item)) {\n              break;\n            }\n\n            if (value.type == 'text') {\n              attrs = value.item.getAttributes();\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError10 = true;\n          _iteratorError10 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n              _iterator10.return();\n            }\n          } finally {\n            if (_didIteratorError10) {\n              throw _iteratorError10;\n            }\n          }\n        }\n      } else {\n        // 2. If the selection is a caret or the range does not contain a character node...\n        var nodeBefore = position.textNode ? position.textNode : position.nodeBefore;\n        var nodeAfter = position.textNode ? position.textNode : position.nodeAfter; // When gravity is overridden then don't take node before into consideration.\n\n        if (!this.isGravityOverridden) {\n          // ...look at the node before caret and take attributes from it if it is a character node.\n          attrs = getAttrsIfCharacter(nodeBefore);\n        } // 3. If not, look at the node after caret...\n\n\n        if (!attrs) {\n          attrs = getAttrsIfCharacter(nodeAfter);\n        } // 4. If not, try to find the first character on the left, that is in the same node.\n        // When gravity is overridden then don't take node before into consideration.\n\n\n        if (!this.isGravityOverridden && !attrs) {\n          var node = nodeBefore;\n\n          while (node && !attrs) {\n            node = node.previousSibling;\n            attrs = getAttrsIfCharacter(node);\n          }\n        } // 5. If not found, try to find the first character on the right, that is in the same node.\n\n\n        if (!attrs) {\n          var _node = nodeAfter;\n\n          while (_node && !attrs) {\n            _node = _node.nextSibling;\n            attrs = getAttrsIfCharacter(_node);\n          }\n        } // 6. If not found, selection should retrieve attributes from parent.\n\n\n        if (!attrs) {\n          attrs = this._getStoredAttributes();\n        }\n      }\n\n      return attrs;\n    } // Fixes a selection range after it ends up in graveyard root.\n    //\n    // @private\n    // @param {module:engine/model/liverange~LiveRange} liveRange The range from selection, that ended up in the graveyard root.\n    // @param {module:engine/model/position~Position} removedRangeStart Start position of a range which was removed.\n\n  }, {\n    key: \"_fixGraveyardSelection\",\n    value: function _fixGraveyardSelection(liveRange, removedRangeStart) {\n      // The start of the removed range is the closest position to the `liveRange` - the original selection range.\n      // This is a good candidate for a fixed selection range.\n      var positionCandidate = removedRangeStart.clone(); // Find a range that is a correct selection range and is closest to the start of removed range.\n\n      var selectionRange = this._model.schema.getNearestSelectionRange(positionCandidate); // Remove the old selection range before preparing and adding new selection range. This order is important,\n      // because new range, in some cases, may intersect with old range (it depends on `getNearestSelectionRange()` result).\n\n\n      var index = this._ranges.indexOf(liveRange);\n\n      this._ranges.splice(index, 1);\n\n      liveRange.detach(); // If nearest valid selection range has been found - add it in the place of old range.\n\n      if (selectionRange) {\n        // Check the range, convert it to live range, bind events, etc.\n        var newRange = this._prepareRange(selectionRange); // Add new range in the place of old range.\n\n\n        this._ranges.splice(index, 0, newRange);\n      } // If nearest valid selection range cannot be found - just removing the old range is fine.\n\n    }\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      var length = this._ranges.length;\n      return length === 0 ? this._document._getDefaultRange().isCollapsed : _get(_getPrototypeOf(LiveSelection.prototype), \"isCollapsed\", this);\n    }\n  }, {\n    key: \"anchor\",\n    get: function get() {\n      return _get(_getPrototypeOf(LiveSelection.prototype), \"anchor\", this) || this._document._getDefaultRange().start;\n    }\n  }, {\n    key: \"focus\",\n    get: function get() {\n      return _get(_getPrototypeOf(LiveSelection.prototype), \"focus\", this) || this._document._getDefaultRange().end;\n    }\n  }, {\n    key: \"rangeCount\",\n    get: function get() {\n      return this._ranges.length ? this._ranges.length : 1;\n    } // Describes whether `LiveSelection` has own range(s) set, or if it is defaulted to\n    // {@link module:engine/model/document~Document#_getDefaultRange document's default range}.\n    //\n    // @readonly\n    // @type {Boolean}\n\n  }, {\n    key: \"hasOwnRange\",\n    get: function get() {\n      return this._ranges.length > 0;\n    } // When set to `true` then selection attributes on node before the caret won't be taken\n    // into consideration while updating selection attributes.\n    //\n    // @protected\n    // @type {Boolean}\n\n  }, {\n    key: \"isGravityOverridden\",\n    get: function get() {\n      return !!this._overriddenGravityRegister.size;\n    }\n  }]);\n\n  return LiveSelection;\n}(Selection); // Helper function for {@link module:engine/model/liveselection~LiveSelection#_updateAttributes}.\n//\n// It takes model item, checks whether it is a text node (or text proxy) and, if so, returns it's attributes. If not, returns `null`.\n//\n// @param {module:engine/model/item~Item|null}  node\n// @returns {Boolean}\n\n\nfunction getAttrsIfCharacter(node) {\n  if (node instanceof TextProxy || node instanceof Text) {\n    return node.getAttributes();\n  }\n\n  return null;\n} // Removes selection attributes from element which is not empty anymore.\n//\n// @private\n// @param {module:engine/model/model~Model} model\n// @param {module:engine/model/batch~Batch} batch\n\n\nfunction clearAttributesStoredInElement(model, batch) {\n  var differ = model.document.differ;\n  var _iteratorNormalCompletion11 = true;\n  var _didIteratorError11 = false;\n  var _iteratorError11 = undefined;\n\n  try {\n    var _loop = function _loop() {\n      var entry = _step11.value;\n\n      if (entry.type != 'insert') {\n        return \"continue\";\n      }\n\n      var changeParent = entry.position.parent;\n      var isNoLongerEmpty = entry.length === changeParent.maxOffset;\n\n      if (isNoLongerEmpty) {\n        model.enqueueChange(batch, function (writer) {\n          var storedAttributes = Array.from(changeParent.getAttributeKeys()).filter(function (key) {\n            return key.startsWith(storePrefix);\n          });\n          var _iteratorNormalCompletion12 = true;\n          var _didIteratorError12 = false;\n          var _iteratorError12 = undefined;\n\n          try {\n            for (var _iterator12 = storedAttributes[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n              var key = _step12.value;\n              writer.removeAttribute(key, changeParent);\n            }\n          } catch (err) {\n            _didIteratorError12 = true;\n            _iteratorError12 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n                _iterator12.return();\n              }\n            } finally {\n              if (_didIteratorError12) {\n                throw _iteratorError12;\n              }\n            }\n          }\n        });\n      }\n    };\n\n    for (var _iterator11 = differ.getChanges()[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n      var _ret = _loop();\n\n      if (_ret === \"continue\") continue;\n    }\n  } catch (err) {\n    _didIteratorError11 = true;\n    _iteratorError11 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n        _iterator11.return();\n      }\n    } finally {\n      if (_didIteratorError11) {\n        throw _iteratorError11;\n      }\n    }\n  }\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/conversionhelpers\n */\n\n/**\n * Base class for conversion helpers.\n */\nvar ConversionHelpers =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a conversion helpers instance.\n   *\n   * @param {Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n   * module:engine/conversion/upcastdispatcher~UpcastDispatcher>} dispatchers\n   */\n  function ConversionHelpers(dispatchers) {\n    _classCallCheck(this, ConversionHelpers);\n\n    this._dispatchers = dispatchers;\n  }\n  /**\n   * Registers a conversion helper.\n   *\n   * **Note**: See full usage example in the `{@link module:engine/conversion/conversion~Conversion#for conversion.for()}`\n   * method description.\n   *\n   * @param {Function} conversionHelper The function to be called on event.\n   * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers|module:engine/conversion/upcasthelpers~UpcastHelpers}\n   */\n\n\n  _createClass(ConversionHelpers, [{\n    key: \"add\",\n    value: function add(conversionHelper) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._dispatchers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var dispatcher = _step.value;\n          conversionHelper(dispatcher);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return this;\n    }\n  }]);\n\n  return ConversionHelpers;\n}();\n\nexport { ConversionHelpers as default };","import baseClone from './_baseClone.js';\n/** Used to compose bitmasks for cloning. */\n\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\n\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\nimport ModelRange from '../model/range';\nimport ModelSelection from '../model/selection';\nimport ModelElement from '../model/element';\nimport ViewAttributeElement from '../view/attributeelement';\nimport DocumentSelection from '../model/documentselection';\nimport ConversionHelpers from './conversionhelpers';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport { cloneDeep } from 'lodash-es';\n/**\n * Contains downcast (model-to-view) converters for {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}.\n *\n * @module engine/conversion/downcasthelpers\n */\n\n/**\n * Downcast conversion helper functions.\n *\n * @extends module:engine/conversion/conversionhelpers~ConversionHelpers\n */\n\nvar DowncastHelpers =\n/*#__PURE__*/\nfunction (_ConversionHelpers) {\n  _inherits(DowncastHelpers, _ConversionHelpers);\n\n  function DowncastHelpers() {\n    _classCallCheck(this, DowncastHelpers);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DowncastHelpers).apply(this, arguments));\n  }\n\n  _createClass(DowncastHelpers, [{\n    key: \"elementToElement\",\n\n    /**\n     * Model element to view element conversion helper.\n     *\n     * This conversion results in creating a view element. For example, model `<paragraph>Foo</paragraph>` becomes `<p>Foo</p>` in the view.\n     *\n     *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n     *\t\t\tmodel: 'paragraph',\n     *\t\t\tview: 'p'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n     *\t\t\tmodel: 'paragraph',\n     *\t\t\tview: 'div',\n     *\t\t\tconverterPriority: 'high'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n     *\t\t\tmodel: 'fancyParagraph',\n     *\t\t\tview: {\n     *\t\t\t\tname: 'p',\n     *\t\t\t\tclasses: 'fancy'\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n     *\t\t\tmodel: 'heading',\n     *\t\t\tview: ( modelElement, viewWriter ) => {\n     *\t\t\t\treturn viewWriter.createContainerElement( 'h' + modelElement.getAttribute( 'level' ) )\n     *\t\t\t}\n     *\t\t} );\n     *\n     * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n     * to the conversion process.\n     *\n     * @method #elementToElement\n     * @param {Object} config Conversion configuration.\n     * @param {String} config.model The name of the model element to convert.\n     * @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n     * that takes the model element and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\n     * as parameters and returns a view container element.\n     * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n     */\n    value: function elementToElement(config) {\n      return this.add(downcastElementToElement(config));\n    }\n    /**\n     * Model attribute to view element conversion helper.\n     *\n     * This conversion results in wrapping view nodes with a view attribute element. For example, a model text node with\n     * `\"Foo\"` as data and the `bold` attribute becomes `<strong>Foo</strong>` in the view.\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n     *\t\t\tmodel: 'bold',\n     *\t\t\tview: 'strong'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n     *\t\t\tmodel: 'bold',\n     *\t\t\tview: 'b',\n     *\t\t\tconverterPriority: 'high'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n     *\t\t\tmodel: 'invert',\n     *\t\t\tview: {\n     *\t\t\t\tname: 'span',\n     *\t\t\t\tclasses: [ 'font-light', 'bg-dark' ]\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'fontSize',\n     *\t\t\t\tvalues: [ 'big', 'small' ]\n     *\t\t\t},\n     *\t\t\tview: {\n     *\t\t\t\tbig: {\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'font-size': '1.2em'\n     *\t\t\t\t\t}\n     *\t\t\t\t},\n     *\t\t\t\tsmall: {\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'font-size': '0.8em'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n     *\t\t\tmodel: 'bold',\n     *\t\t\tview: ( modelAttributeValue, viewWriter ) => {\n     *\t\t\t\treturn viewWriter.createAttributeElement( 'span', {\n     *\t\t\t\t\tstyle: 'font-weight:' + modelAttributeValue\n     *\t\t\t\t} );\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'color',\n     *\t\t\t\tname: '$text'\n     *\t\t\t},\n     *\t\t\tview: ( modelAttributeValue, viewWriter ) => {\n     *\t\t\t\treturn viewWriter.createAttributeElement( 'span', {\n     *\t\t\t\t\tstyle: 'color:' + modelAttributeValue\n     *\t\t\t\t} );\n     *\t\t\t}\n     *\t\t} );\n     *\n     * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n     * to the conversion process.\n     *\n     * @method #attributeToElement\n     * @param {Object} config Conversion configuration.\n     * @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values }` object. `values` is an array\n     * of `String`s with possible values if the model attribute is an enumerable.\n     * @param {module:engine/view/elementdefinition~ElementDefinition|Function|Object} config.view A view element definition or a function\n     * that takes the model attribute value and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\n     * as parameters and returns a view attribute element. If `config.model.values` is\n     * given, `config.view` should be an object assigning values from `config.model.values` to view element definitions or functions.\n     * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n     * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n     */\n\n  }, {\n    key: \"attributeToElement\",\n    value: function attributeToElement(config) {\n      return this.add(downcastAttributeToElement(config));\n    }\n    /**\n     * Model attribute to view attribute conversion helper.\n     *\n     * This conversion results in adding an attribute to a view node, basing on an attribute from a model node. For example,\n     * `<image src='foo.jpg'></image>` is converted to `<img src='foo.jpg'></img>`.\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n     *\t\t\tmodel: 'source',\n     *\t\t\tview: 'src'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n     *\t\t\tmodel: 'source',\n     *\t\t\tview: 'href',\n     *\t\t\tconverterPriority: 'high'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n     *\t\t\tmodel: {\n     *\t\t\t\tname: 'image',\n     *\t\t\t\tkey: 'source'\n     *\t\t\t},\n     *\t\t\tview: 'src'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n     *\t\t\tmodel: {\n     *\t\t\t\tname: 'styled',\n     *\t\t\t\tvalues: [ 'dark', 'light' ]\n     *\t\t\t},\n     *\t\t\tview: {\n     *\t\t\t\tdark: {\n     *\t\t\t\t\tkey: 'class',\n     *\t\t\t\t\tvalue: [ 'styled', 'styled-dark' ]\n     *\t\t\t\t},\n     *\t\t\t\tlight: {\n     *\t\t\t\t\tkey: 'class',\n     *\t\t\t\t\tvalue: [ 'styled', 'styled-light' ]\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n     *\t\t\tmodel: 'styled',\n     *\t\t\tview: modelAttributeValue => ( { key: 'class', value: 'styled-' + modelAttributeValue } )\n     *\t\t} );\n     *\n     * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n     * to the conversion process.\n     *\n     * @method #attributeToAttribute\n     * @param {Object} config Conversion configuration.\n     * @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values, [ name ] }` object describing\n     * the attribute key, possible values and, optionally, an element name to convert from.\n     * @param {String|Object|Function} config.view A view attribute key, or a `{ key, value }` object or a function that takes\n     * the model attribute value and returns a `{ key, value }` object. If `key` is `'class'`, `value` can be a `String` or an\n     * array of `String`s. If `key` is `'style'`, `value` is an object with key-value pairs. In other cases, `value` is a `String`.\n     * If `config.model.values` is set, `config.view` should be an object assigning values from `config.model.values` to\n     * `{ key, value }` objects or a functions.\n     * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n     * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n     */\n\n  }, {\n    key: \"attributeToAttribute\",\n    value: function attributeToAttribute(config) {\n      return this.add(downcastAttributeToAttribute(config));\n    }\n    /**\n     * Model marker to view element conversion helper.\n     *\n     * This conversion results in creating a view element on the boundaries of the converted marker. If the converted marker\n     * is collapsed, only one element is created. For example, model marker set like this: `<paragraph>F[oo b]ar</paragraph>`\n     * becomes `<p>F<span data-marker=\"search\"></span>oo b<span data-marker=\"search\"></span>ar</p>` in the view.\n     *\n     *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\n     *\t\t\tmodel: 'search',\n     *\t\t\tview: 'marker-search'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\n     *\t\t\tmodel: 'search',\n     *\t\t\tview: 'search-result',\n     *\t\t\tconverterPriority: 'high'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\n     *\t\t\tmodel: 'search',\n     *\t\t\tview: {\n     *\t\t\t\tname: 'span',\n     *\t\t\t\tattributes: {\n     *\t\t\t\t\t'data-marker': 'search'\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\n     *\t\t\tmodel: 'search',\n     *\t\t\tview: ( markerData, viewWriter ) => {\n     *\t\t\t\treturn viewWriter.createUIElement( 'span', {\n     *\t\t\t\t\t'data-marker': 'search',\n     *\t\t\t\t\t'data-start': markerData.isOpening\n     *\t\t\t\t} );\n     *\t\t\t}\n     *\t\t} );\n     *\n     * If a function is passed as the `config.view` parameter, it will be used to generate both boundary elements. The function\n     * receives the `data` object as a parameter and should return an instance of the\n     * {@link module:engine/view/uielement~UIElement view UI element}. The `data` object and\n     * {@link module:engine/conversion/downcastdispatcher~DowncastConversionApi `conversionApi`} are passed from\n     * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}. Additionally,\n     * the `data.isOpening` parameter is passed, which is set to `true` for the marker start boundary element, and `false` to\n     * the marker end boundary element.\n     *\n     * This kind of conversion is useful for saving data into the database, so it should be used in the data conversion pipeline.\n     *\n     * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n     * to the conversion process.\n     *\n     * @method #markerToElement\n     * @param {Object} config Conversion configuration.\n     * @param {String} config.model The name of the model marker (or model marker group) to convert.\n     * @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n     * that takes the model marker data as a parameter and returns a view UI element.\n     * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n     * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n     */\n\n  }, {\n    key: \"markerToElement\",\n    value: function markerToElement(config) {\n      return this.add(downcastMarkerToElement(config));\n    }\n    /**\n     * Model marker to highlight conversion helper.\n     *\n     * This conversion results in creating a highlight on view nodes. For this kind of conversion,\n     * {@link module:engine/conversion/downcasthelpers~HighlightDescriptor} should be provided.\n     *\n     * For text nodes, a `<span>` {@link module:engine/view/attributeelement~AttributeElement} is created and it wraps all text nodes\n     * in the converted marker range. For example, a model marker set like this: `<paragraph>F[oo b]ar</paragraph>` becomes\n     * `<p>F<span class=\"comment\">oo b</span>ar</p>` in the view.\n     *\n     * {@link module:engine/view/containerelement~ContainerElement} may provide a custom way of handling highlight. Most often,\n     * the element itself is given classes and attributes described in the highlight descriptor (instead of being wrapped in `<span>`).\n     * For example, a model marker set like this: `[<image src=\"foo.jpg\"></image>]` becomes `<img src=\"foo.jpg\" class=\"comment\"></img>`\n     * in the view.\n     *\n     * For container elements, the conversion is two-step. While the converter processes the highlight descriptor and passes it\n     * to a container element, it is the container element instance itself that applies values from the highlight descriptor.\n     * So, in a sense, the converter takes care of stating what should be applied on what, while the element decides how to apply that.\n     *\n     *\t\teditor.conversion.for( 'downcast' ).markerToHighlight( { model: 'comment', view: { classes: 'comment' } } );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).markerToHighlight( {\n     *\t\t\tmodel: 'comment',\n     *\t\t\tview: { classes: 'new-comment' },\n     *\t\t\tconverterPriority: 'high'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).markerToHighlight( {\n     *\t\t\tmodel: 'comment',\n     *\t\t\tview: data => {\n     *\t\t\t\t// Assuming that the marker name is in a form of comment:commentType.\n     *\t\t\t\tconst commentType = data.markerName.split( ':' )[ 1 ];\n     *\n     *\t\t\t\treturn {\n     *\t\t\t\t\tclasses: [ 'comment', 'comment-' + commentType ]\n     *\t\t\t\t};\n     *\t\t\t}\n     *\t\t} );\n     *\n     * If a function is passed as the `config.view` parameter, it will be used to generate the highlight descriptor. The function\n     * receives the `data` object as a parameter and should return a\n     * {@link module:engine/conversion/downcasthelpers~HighlightDescriptor highlight descriptor}.\n     * The `data` object properties are passed from {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}.\n     *\n     * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n     * to the conversion process.\n     *\n     * @method #markerToHighlight\n     * @param {Object} config Conversion configuration.\n     * @param {String} config.model The name of the model marker (or model marker group) to convert.\n     * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} config.view A highlight descriptor\n     * that will be used for highlighting or a function that takes the model marker data as a parameter and returns a highlight descriptor.\n     * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n     * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n     */\n\n  }, {\n    key: \"markerToHighlight\",\n    value: function markerToHighlight(config) {\n      return this.add(downcastMarkerToHighlight(config));\n    }\n  }]);\n\n  return DowncastHelpers;\n}(ConversionHelpers);\n/**\n * Function factory that creates a default downcast converter for text insertion changes.\n *\n * The converter automatically consumes the corresponding value from the consumables list and stops the event (see\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'insert:$text', insertText() );\n *\n * @returns {Function} Insert text event converter.\n */\n\n\nexport { DowncastHelpers as default };\nexport function insertText() {\n  return function (evt, data, conversionApi) {\n    if (!conversionApi.consumable.consume(data.item, 'insert')) {\n      return;\n    }\n\n    var viewWriter = conversionApi.writer;\n    var viewPosition = conversionApi.mapper.toViewPosition(data.range.start);\n    var viewText = viewWriter.createText(data.item.data);\n    viewWriter.insert(viewPosition, viewText);\n  };\n}\n/**\n * Function factory that creates a default downcast converter for node remove changes.\n *\n *\t\tmodelDispatcher.on( 'remove', remove() );\n *\n * @returns {Function} Remove event converter.\n */\n\nexport function remove() {\n  return function (evt, data, conversionApi) {\n    // Find view range start position by mapping model position at which the remove happened.\n    var viewStart = conversionApi.mapper.toViewPosition(data.position);\n    var modelEnd = data.position.getShiftedBy(data.length);\n    var viewEnd = conversionApi.mapper.toViewPosition(modelEnd, {\n      isPhantom: true\n    });\n    var viewRange = conversionApi.writer.createRange(viewStart, viewEnd); // Trim the range to remove in case some UI elements are on the view range boundaries.\n\n    var removed = conversionApi.writer.remove(viewRange.getTrimmed()); // After the range is removed, unbind all view elements from the model.\n    // Range inside view document fragment is used to unbind deeply.\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = conversionApi.writer.createRangeIn(removed).getItems()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var child = _step.value;\n        conversionApi.mapper.unbindViewElement(child);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  };\n}\n/**\n * Creates a `<span>` {@link module:engine/view/attributeelement~AttributeElement view attribute element} from the information\n * provided by the {@link module:engine/conversion/downcasthelpers~HighlightDescriptor highlight descriptor} object. If a priority\n * is not provided in the descriptor, the default priority will be used.\n *\n * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} descriptor\n * @returns {module:engine/view/attributeelement~AttributeElement}\n */\n\nexport function createViewElementFromHighlightDescriptor(descriptor) {\n  var viewElement = new ViewAttributeElement('span', descriptor.attributes);\n\n  if (descriptor.classes) {\n    viewElement._addClass(descriptor.classes);\n  }\n\n  if (descriptor.priority) {\n    viewElement._priority = descriptor.priority;\n  }\n\n  viewElement._id = descriptor.id;\n  return viewElement;\n}\n/**\n * Function factory that creates a converter which converts a non-collapsed {@link module:engine/model/selection~Selection model selection}\n * to a {@link module:engine/view/documentselection~DocumentSelection view selection}. The converter consumes appropriate\n * value from the `consumable` object and maps model positions from the selection to view positions.\n *\n *\t\tmodelDispatcher.on( 'selection', convertRangeSelection() );\n *\n * @returns {Function} Selection converter.\n */\n\nexport function convertRangeSelection() {\n  return function (evt, data, conversionApi) {\n    var selection = data.selection;\n\n    if (selection.isCollapsed) {\n      return;\n    }\n\n    if (!conversionApi.consumable.consume(selection, 'selection')) {\n      return;\n    }\n\n    var viewRanges = [];\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = selection.getRanges()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var range = _step2.value;\n        var viewRange = conversionApi.mapper.toViewRange(range);\n        viewRanges.push(viewRange);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    conversionApi.writer.setSelection(viewRanges, {\n      backward: selection.isBackward\n    });\n  };\n}\n/**\n * Function factory that creates a converter which converts a collapsed {@link module:engine/model/selection~Selection model selection} to\n * a {@link module:engine/view/documentselection~DocumentSelection view selection}. The converter consumes appropriate\n * value from the `consumable` object, maps the model selection position to the view position and breaks\n * {@link module:engine/view/attributeelement~AttributeElement attribute elements} at the selection position.\n *\n *\t\tmodelDispatcher.on( 'selection', convertCollapsedSelection() );\n *\n * An example of the view state before and after converting the collapsed selection:\n *\n *\t\t   <p><strong>f^oo<strong>bar</p>\n *\t\t-> <p><strong>f</strong>^<strong>oo</strong>bar</p>\n *\n * By breaking attribute elements like `<strong>`, the selection is in a correct element. Then, when the selection attribute is\n * converted, broken attributes might be merged again, or the position where the selection is may be wrapped\n * with different, appropriate attribute elements.\n *\n * See also {@link module:engine/conversion/downcasthelpers~clearAttributes} which does a clean-up\n * by merging attributes.\n *\n * @returns {Function} Selection converter.\n */\n\nexport function convertCollapsedSelection() {\n  return function (evt, data, conversionApi) {\n    var selection = data.selection;\n\n    if (!selection.isCollapsed) {\n      return;\n    }\n\n    if (!conversionApi.consumable.consume(selection, 'selection')) {\n      return;\n    }\n\n    var viewWriter = conversionApi.writer;\n    var modelPosition = selection.getFirstPosition();\n    var viewPosition = conversionApi.mapper.toViewPosition(modelPosition);\n    var brokenPosition = viewWriter.breakAttributes(viewPosition);\n    viewWriter.setSelection(brokenPosition);\n  };\n}\n/**\n * Function factory that creates a converter which clears artifacts after the previous\n * {@link module:engine/model/selection~Selection model selection} conversion. It removes all empty\n * {@link module:engine/view/attributeelement~AttributeElement view attribute elements} and merges sibling attributes at all start and end\n * positions of all ranges.\n *\n *\t\t   <p><strong>^</strong></p>\n *\t\t-> <p>^</p>\n *\n *\t\t   <p><strong>foo</strong>^<strong>bar</strong>bar</p>\n *\t\t-> <p><strong>foo^bar<strong>bar</p>\n *\n *\t\t   <p><strong>foo</strong><em>^</em><strong>bar</strong>bar</p>\n *\t\t-> <p><strong>foo^bar<strong>bar</p>\n *\n * This listener should be assigned before any converter for the new selection:\n *\n *\t\tmodelDispatcher.on( 'selection', clearAttributes() );\n *\n * See {@link module:engine/conversion/downcasthelpers~convertCollapsedSelection}\n * which does the opposite by breaking attributes in the selection position.\n *\n * @returns {Function} Selection converter.\n */\n\nexport function clearAttributes() {\n  return function (evt, data, conversionApi) {\n    var viewWriter = conversionApi.writer;\n    var viewSelection = viewWriter.document.selection;\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = viewSelection.getRanges()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var range = _step3.value;\n\n        // Not collapsed selection should not have artifacts.\n        if (range.isCollapsed) {\n          // Position might be in the node removed by the view writer.\n          if (range.end.parent.document) {\n            conversionApi.writer.mergeAttributes(range.start);\n          }\n        }\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n          _iterator3.return();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n\n    viewWriter.setSelection(null);\n  };\n}\n/**\n * Function factory that creates a converter which converts set/change/remove attribute changes from the model to the view.\n * It can also be used to convert selection attributes. In that case, an empty attribute element will be created and the\n * selection will be put inside it.\n *\n * Attributes from the model are converted to a view element that will be wrapping these view nodes that are bound to\n * model elements having the given attribute. This is useful for attributes like `bold` that may be set on text nodes in the model\n * but are represented as an element in the view:\n *\n *\t\t[paragraph]              MODEL ====> VIEW        <p>\n *\t\t\t|- a {bold: true}                             |- <b>\n *\t\t\t|- b {bold: true}                             |   |- ab\n *\t\t\t|- c                                          |- c\n *\n * Passed `Function` will be provided with the attribute value and then all the parameters of the\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute `attribute` event}.\n * It is expected that the function returns an {@link module:engine/view/element~Element}.\n * The result of the function will be the wrapping element.\n * When the provided `Function` does not return any element, no conversion will take place.\n *\n * The converter automatically consumes the corresponding value from the consumables list and stops the event (see\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'attribute:bold', wrap( ( modelAttributeValue, viewWriter ) => {\n *\t\t\treturn viewWriter.createAttributeElement( 'strong' );\n *\t\t} );\n *\n * @protected\n * @param {Function} elementCreator Function returning a view element that will be used for wrapping.\n * @returns {Function} Set/change attribute converter.\n */\n\nexport function wrap(elementCreator) {\n  return function (evt, data, conversionApi) {\n    // Recreate current wrapping node. It will be used to unwrap view range if the attribute value has changed\n    // or the attribute was removed.\n    var oldViewElement = elementCreator(data.attributeOldValue, conversionApi.writer); // Create node to wrap with.\n\n    var newViewElement = elementCreator(data.attributeNewValue, conversionApi.writer);\n\n    if (!oldViewElement && !newViewElement) {\n      return;\n    }\n\n    if (!conversionApi.consumable.consume(data.item, evt.name)) {\n      return;\n    }\n\n    var viewWriter = conversionApi.writer;\n    var viewSelection = viewWriter.document.selection;\n\n    if (data.item instanceof ModelSelection || data.item instanceof DocumentSelection) {\n      // Selection attribute conversion.\n      viewWriter.wrap(viewSelection.getFirstRange(), newViewElement);\n    } else {\n      // Node attribute conversion.\n      var viewRange = conversionApi.mapper.toViewRange(data.range); // First, unwrap the range from current wrapper.\n\n      if (data.attributeOldValue !== null && oldViewElement) {\n        viewRange = viewWriter.unwrap(viewRange, oldViewElement);\n      }\n\n      if (data.attributeNewValue !== null && newViewElement) {\n        viewWriter.wrap(viewRange, newViewElement);\n      }\n    }\n  };\n}\n/**\n * Function factory that creates a converter which converts node insertion changes from the model to the view.\n * The function passed will be provided with all the parameters of the dispatcher's\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert `insert` event}.\n * It is expected that the function returns an {@link module:engine/view/element~Element}.\n * The result of the function will be inserted into the view.\n *\n * The converter automatically consumes the corresponding value from the consumables list, stops the event (see\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}) and binds the model and view elements.\n *\n *\t\tdowncastDispatcher.on(\n *\t\t\t'insert:myElem',\n *\t\t\tinsertElement( ( modelItem, viewWriter ) => {\n *\t\t\t\tconst text = viewWriter.createText( 'myText' );\n *\t\t\t\tconst myElem = viewWriter.createElement( 'myElem', { myAttr: 'my-' + modelItem.getAttribute( 'myAttr' ) }, text );\n *\n *\t\t\t\t// Do something fancy with `myElem` using `modelItem` or other parameters.\n *\n *\t\t\t\treturn myElem;\n *\t\t\t}\n *\t\t) );\n *\n * @protected\n * @param {Function} elementCreator Function returning a view element, which will be inserted.\n * @returns {Function} Insert element event converter.\n */\n\nexport function insertElement(elementCreator) {\n  return function (evt, data, conversionApi) {\n    var viewElement = elementCreator(data.item, conversionApi.writer);\n\n    if (!viewElement) {\n      return;\n    }\n\n    if (!conversionApi.consumable.consume(data.item, 'insert')) {\n      return;\n    }\n\n    var viewPosition = conversionApi.mapper.toViewPosition(data.range.start);\n    conversionApi.mapper.bindElements(data.item, viewElement);\n    conversionApi.writer.insert(viewPosition, viewElement);\n  };\n}\n/**\n * Function factory that creates a converter which converts marker adding change to the\n * {@link module:engine/view/uielement~UIElement view UI element}.\n *\n * The view UI element that will be added to the view depends on the passed parameter. See {@link ~insertElement}.\n * In case of a non-collapsed range, the UI element will not wrap nodes but separate elements will be placed at the beginning\n * and at the end of the range.\n *\n * This converter binds created UI elements with the marker name using {@link module:engine/conversion/mapper~Mapper#bindElementToMarker}.\n *\n * @protected\n * @param {module:engine/view/uielement~UIElement|Function} elementCreator A view UI element or a function returning the view element\n * that will be inserted.\n * @returns {Function} Insert element event converter.\n */\n\nexport function insertUIElement(elementCreator) {\n  return function (evt, data, conversionApi) {\n    // Create two view elements. One will be inserted at the beginning of marker, one at the end.\n    // If marker is collapsed, only \"opening\" element will be inserted.\n    data.isOpening = true;\n    var viewStartElement = elementCreator(data, conversionApi.writer);\n    data.isOpening = false;\n    var viewEndElement = elementCreator(data, conversionApi.writer);\n\n    if (!viewStartElement || !viewEndElement) {\n      return;\n    }\n\n    var markerRange = data.markerRange; // Marker that is collapsed has consumable build differently that non-collapsed one.\n    // For more information see `addMarker` event description.\n    // If marker's range is collapsed - check if it can be consumed.\n\n    if (markerRange.isCollapsed && !conversionApi.consumable.consume(markerRange, evt.name)) {\n      return;\n    } // If marker's range is not collapsed - consume all items inside.\n\n\n    var _iteratorNormalCompletion4 = true;\n    var _didIteratorError4 = false;\n    var _iteratorError4 = undefined;\n\n    try {\n      for (var _iterator4 = markerRange[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n        var value = _step4.value;\n\n        if (!conversionApi.consumable.consume(value.item, evt.name)) {\n          return;\n        }\n      }\n    } catch (err) {\n      _didIteratorError4 = true;\n      _iteratorError4 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n          _iterator4.return();\n        }\n      } finally {\n        if (_didIteratorError4) {\n          throw _iteratorError4;\n        }\n      }\n    }\n\n    var mapper = conversionApi.mapper;\n    var viewWriter = conversionApi.writer; // Add \"opening\" element.\n\n    viewWriter.insert(mapper.toViewPosition(markerRange.start), viewStartElement);\n    conversionApi.mapper.bindElementToMarker(viewStartElement, data.markerName); // Add \"closing\" element only if range is not collapsed.\n\n    if (!markerRange.isCollapsed) {\n      viewWriter.insert(mapper.toViewPosition(markerRange.end), viewEndElement);\n      conversionApi.mapper.bindElementToMarker(viewEndElement, data.markerName);\n    }\n\n    evt.stop();\n  };\n} // Function factory that returns a default downcast converter for removing a {@link module:engine/view/uielement~UIElement UI element}\n// basing on marker remove change.\n//\n// This converter unbinds elements from the marker name.\n//\n// @returns {Function} Removed UI element converter.\n\nfunction removeUIElement() {\n  return function (evt, data, conversionApi) {\n    var elements = conversionApi.mapper.markerNameToElements(data.markerName);\n\n    if (!elements) {\n      return;\n    }\n\n    conversionApi.mapper.unbindElementsFromMarkerName(data.markerName);\n    var _iteratorNormalCompletion5 = true;\n    var _didIteratorError5 = false;\n    var _iteratorError5 = undefined;\n\n    try {\n      for (var _iterator5 = elements[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n        var element = _step5.value;\n        conversionApi.writer.clear(conversionApi.writer.createRangeOn(element), element);\n      }\n    } catch (err) {\n      _didIteratorError5 = true;\n      _iteratorError5 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n          _iterator5.return();\n        }\n      } finally {\n        if (_didIteratorError5) {\n          throw _iteratorError5;\n        }\n      }\n    }\n\n    conversionApi.writer.clearClonedElementsGroup(data.markerName);\n    evt.stop();\n  };\n} // Function factory that creates a converter which converts set/change/remove attribute changes from the model to the view.\n//\n// Attributes from the model are converted to the view element attributes in the view. You may provide a custom function to generate\n// a key-value attribute pair to add/change/remove. If not provided, model attributes will be converted to view element\n// attributes on a one-to-one basis.\n//\n// *Note:** The provided attribute creator should always return the same `key` for a given attribute from the model.\n//\n// The converter automatically consumes the corresponding value from the consumables list and stops the event (see\n// {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\n//\n//\t\tmodelDispatcher.on( 'attribute:customAttr:myElem', changeAttribute( ( value, data ) => {\n//\t\t\t// Change attribute key from `customAttr` to `class` in the view.\n//\t\t\tconst key = 'class';\n//\t\t\tlet value = data.attributeNewValue;\n//\n//\t\t\t// Force attribute value to 'empty' if the model element is empty.\n//\t\t\tif ( data.item.childCount === 0 ) {\n//\t\t\t\tvalue = 'empty';\n//\t\t\t}\n//\n//\t\t\t// Return the key-value pair.\n//\t\t\treturn { key, value };\n//\t\t} ) );\n//\n// @param {Function} [attributeCreator] Function returning an object with two properties: `key` and `value`, which\n// represent the attribute key and attribute value to be set on a {@link module:engine/view/element~Element view element}.\n// The function is passed the model attribute value as the first parameter and additional data about the change as the second parameter.\n// @returns {Function} Set/change attribute converter.\n\n\nfunction changeAttribute(attributeCreator) {\n  return function (evt, data, conversionApi) {\n    var oldAttribute = attributeCreator(data.attributeOldValue, data);\n    var newAttribute = attributeCreator(data.attributeNewValue, data);\n\n    if (!oldAttribute && !newAttribute) {\n      return;\n    }\n\n    if (!conversionApi.consumable.consume(data.item, evt.name)) {\n      return;\n    }\n\n    var viewElement = conversionApi.mapper.toViewElement(data.item);\n    var viewWriter = conversionApi.writer; // If model item cannot be mapped to a view element, it means item is not an `Element` instance but a `TextProxy` node.\n    // Only elements can have attributes in a view so do not proceed for anything else (#1587).\n\n    if (!viewElement) {\n      /**\n       * This error occurs when a {@link module:engine/model/textproxy~TextProxy text node's} attribute is to be downcasted\n       * by {@link module:engine/conversion/conversion~Conversion#attributeToAttribute `Attribute to Attribute converter`}.\n       * In most cases it is caused by converters misconfiguration when only \"generic\" converter is defined:\n       *\n       *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n       *\t\t\tmodel: 'attribute-name',\n       *\t\t\tview: 'attribute-name'\n       *\t\t} ) );\n       *\n       * and given attribute is used on text node, for example:\n       *\n       *\t\tmodel.change( writer => {\n       *\t\t\twriter.insertText( 'Foo', { 'attribute-name': 'bar' }, parent, 0 );\n       *\t\t} );\n       *\n       * In such cases, to convert the same attribute for both {@link module:engine/model/element~Element}\n       * and {@link module:engine/model/textproxy~TextProxy `Text`} nodes, text specific\n       * {@link module:engine/conversion/conversion~Conversion#attributeToElement `Attribute to Element converter`}\n       * with higher {@link module:utils/priorities~PriorityString priority} must also be defined:\n       *\n       *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n       *\t\t\tmodel: {\n       *\t\t\t\tkey: 'attribute-name',\n       *\t\t\t\tname: '$text'\n       *\t\t\t},\n       *\t\t\tview: ( value, writer ) => {\n       *\t\t\t\treturn writer.createAttributeElement( 'span', { 'attribute-name': value } );\n       *\t\t\t},\n       *\t\t\tconverterPriority: 'high'\n       *\t\t} ) );\n       *\n       * @error conversion-attribute-to-attribute-on-text\n       */\n      log.warn('conversion-attribute-to-attribute-on-text: ' + 'Trying to convert text node\\'s attribute with attribute-to-attribute converter.');\n      return;\n    } // First remove the old attribute if there was one.\n\n\n    if (data.attributeOldValue !== null && oldAttribute) {\n      if (oldAttribute.key == 'class') {\n        var classes = Array.isArray(oldAttribute.value) ? oldAttribute.value : [oldAttribute.value];\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n          for (var _iterator6 = classes[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n            var className = _step6.value;\n            viewWriter.removeClass(className, viewElement);\n          }\n        } catch (err) {\n          _didIteratorError6 = true;\n          _iteratorError6 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n              _iterator6.return();\n            }\n          } finally {\n            if (_didIteratorError6) {\n              throw _iteratorError6;\n            }\n          }\n        }\n      } else if (oldAttribute.key == 'style') {\n        var keys = Object.keys(oldAttribute.value);\n\n        for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n          var key = _keys[_i];\n          viewWriter.removeStyle(key, viewElement);\n        }\n      } else {\n        viewWriter.removeAttribute(oldAttribute.key, viewElement);\n      }\n    } // Then set the new attribute.\n\n\n    if (data.attributeNewValue !== null && newAttribute) {\n      if (newAttribute.key == 'class') {\n        var _classes = Array.isArray(newAttribute.value) ? newAttribute.value : [newAttribute.value];\n\n        var _iteratorNormalCompletion7 = true;\n        var _didIteratorError7 = false;\n        var _iteratorError7 = undefined;\n\n        try {\n          for (var _iterator7 = _classes[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n            var _className = _step7.value;\n            viewWriter.addClass(_className, viewElement);\n          }\n        } catch (err) {\n          _didIteratorError7 = true;\n          _iteratorError7 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n              _iterator7.return();\n            }\n          } finally {\n            if (_didIteratorError7) {\n              throw _iteratorError7;\n            }\n          }\n        }\n      } else if (newAttribute.key == 'style') {\n        var _keys2 = Object.keys(newAttribute.value);\n\n        for (var _i2 = 0, _keys3 = _keys2; _i2 < _keys3.length; _i2++) {\n          var _key = _keys3[_i2];\n          viewWriter.setStyle(_key, newAttribute.value[_key], viewElement);\n        }\n      } else {\n        viewWriter.setAttribute(newAttribute.key, newAttribute.value, viewElement);\n      }\n    }\n  };\n} // Function factory that creates a converter which converts the text inside marker's range. The converter wraps the text with\n// {@link module:engine/view/attributeelement~AttributeElement} created from the provided descriptor.\n// See {link module:engine/conversion/downcasthelpers~createViewElementFromHighlightDescriptor}.\n//\n// It can also be used to convert the selection that is inside a marker. In that case, an empty attribute element will be\n// created and the selection will be put inside it.\n//\n// If the highlight descriptor does not provide the `priority` property, `10` will be used.\n//\n// If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\n//\n// This converter binds the created {@link module:engine/view/attributeelement~AttributeElement attribute elemens} with the marker name\n// using the {@link module:engine/conversion/mapper~Mapper#bindElementToMarker} method.\n//\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} highlightDescriptor\n// @returns {Function}\n\n\nfunction highlightText(highlightDescriptor) {\n  return function (evt, data, conversionApi) {\n    if (!data.item) {\n      return;\n    }\n\n    if (!(data.item instanceof ModelSelection || data.item instanceof DocumentSelection) && !data.item.is('textProxy')) {\n      return;\n    }\n\n    var descriptor = prepareDescriptor(highlightDescriptor, data, conversionApi);\n\n    if (!descriptor) {\n      return;\n    }\n\n    if (!conversionApi.consumable.consume(data.item, evt.name)) {\n      return;\n    }\n\n    var viewElement = createViewElementFromHighlightDescriptor(descriptor);\n    var viewWriter = conversionApi.writer;\n    var viewSelection = viewWriter.document.selection;\n\n    if (data.item instanceof ModelSelection || data.item instanceof DocumentSelection) {\n      viewWriter.wrap(viewSelection.getFirstRange(), viewElement, viewSelection);\n    } else {\n      var viewRange = conversionApi.mapper.toViewRange(data.range);\n      var rangeAfterWrap = viewWriter.wrap(viewRange, viewElement);\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = rangeAfterWrap.getItems()[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var element = _step8.value;\n\n          if (element.is('attributeElement') && element.isSimilar(viewElement)) {\n            conversionApi.mapper.bindElementToMarker(element, data.markerName); // One attribute element is enough, because all of them are bound together by the view writer.\n            // Mapper uses this binding to get all the elements no matter how many of them are registered in the mapper.\n\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n    }\n  };\n} // Converter function factory. It creates a function which applies the marker's highlight to an element inside the marker's range.\n//\n// The converter checks if an element has the `addHighlight` function stored as a\n// {@link module:engine/view/element~Element#_setCustomProperty custom property} and, if so, uses it to apply the highlight.\n// In such case the converter will consume all element's children, assuming that they were handled by the element itself.\n//\n// When the `addHighlight` custom property is not present, the element is not converted in any special way.\n// This means that converters will proceed to convert the element's child nodes.\n//\n// If the highlight descriptor does not provide the `priority` property, `10` will be used.\n//\n// If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\n//\n// This converter binds altered {@link module:engine/view/containerelement~ContainerElement container elements} with the marker name using\n// the {@link module:engine/conversion/mapper~Mapper#bindElementToMarker} method.\n//\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} highlightDescriptor\n// @returns {Function}\n\n\nfunction highlightElement(highlightDescriptor) {\n  return function (evt, data, conversionApi) {\n    if (!data.item) {\n      return;\n    }\n\n    if (!(data.item instanceof ModelElement)) {\n      return;\n    }\n\n    var descriptor = prepareDescriptor(highlightDescriptor, data, conversionApi);\n\n    if (!descriptor) {\n      return;\n    }\n\n    if (!conversionApi.consumable.test(data.item, evt.name)) {\n      return;\n    }\n\n    var viewElement = conversionApi.mapper.toViewElement(data.item);\n\n    if (viewElement && viewElement.getCustomProperty('addHighlight')) {\n      // Consume element itself.\n      conversionApi.consumable.consume(data.item, evt.name); // Consume all children nodes.\n\n      var _iteratorNormalCompletion9 = true;\n      var _didIteratorError9 = false;\n      var _iteratorError9 = undefined;\n\n      try {\n        for (var _iterator9 = ModelRange._createIn(data.item)[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n          var value = _step9.value;\n          conversionApi.consumable.consume(value.item, evt.name);\n        }\n      } catch (err) {\n        _didIteratorError9 = true;\n        _iteratorError9 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n            _iterator9.return();\n          }\n        } finally {\n          if (_didIteratorError9) {\n            throw _iteratorError9;\n          }\n        }\n      }\n\n      viewElement.getCustomProperty('addHighlight')(viewElement, descriptor, conversionApi.writer);\n      conversionApi.mapper.bindElementToMarker(viewElement, data.markerName);\n    }\n  };\n} // Function factory that creates a converter which converts the removing model marker to the view.\n//\n// Both text nodes and elements are handled by this converter but they are handled a bit differently.\n//\n// Text nodes are unwrapped using the {@link module:engine/view/attributeelement~AttributeElement attribute element} created from the\n// provided highlight descriptor. See {link module:engine/conversion/downcasthelpers~HighlightDescriptor}.\n//\n// For elements, the converter checks if an element has the `removeHighlight` function stored as a\n// {@link module:engine/view/element~Element#_setCustomProperty custom property}. If so, it uses it to remove the highlight.\n// In such case, the children of that element will not be converted.\n//\n// When `removeHighlight` is not present, the element is not converted in any special way.\n// The converter will proceed to convert the element's child nodes instead.\n//\n// If the highlight descriptor does not provide the `priority` property, `10` will be used.\n//\n// If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\n//\n// This converter unbinds elements from the marker name.\n//\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} highlightDescriptor\n// @returns {Function}\n\n\nfunction removeHighlight(highlightDescriptor) {\n  return function (evt, data, conversionApi) {\n    // This conversion makes sense only for non-collapsed range.\n    if (data.markerRange.isCollapsed) {\n      return;\n    }\n\n    var descriptor = prepareDescriptor(highlightDescriptor, data, conversionApi);\n\n    if (!descriptor) {\n      return;\n    } // View element that will be used to unwrap `AttributeElement`s.\n\n\n    var viewHighlightElement = createViewElementFromHighlightDescriptor(descriptor); // Get all elements bound with given marker name.\n\n    var elements = conversionApi.mapper.markerNameToElements(data.markerName);\n\n    if (!elements) {\n      return;\n    }\n\n    conversionApi.mapper.unbindElementsFromMarkerName(data.markerName);\n    var _iteratorNormalCompletion10 = true;\n    var _didIteratorError10 = false;\n    var _iteratorError10 = undefined;\n\n    try {\n      for (var _iterator10 = elements[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n        var element = _step10.value;\n\n        if (element.is('attributeElement')) {\n          conversionApi.writer.unwrap(conversionApi.writer.createRangeOn(element), viewHighlightElement);\n        } else {\n          // if element.is( 'containerElement' ).\n          element.getCustomProperty('removeHighlight')(element, descriptor.id, conversionApi.writer);\n        }\n      }\n    } catch (err) {\n      _didIteratorError10 = true;\n      _iteratorError10 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n          _iterator10.return();\n        }\n      } finally {\n        if (_didIteratorError10) {\n          throw _iteratorError10;\n        }\n      }\n    }\n\n    conversionApi.writer.clearClonedElementsGroup(data.markerName);\n    evt.stop();\n  };\n} // Model element to view element conversion helper.\n//\n// See {@link ~DowncastHelpers#elementToElement `.elementToElement()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String} config.model The name of the model element to convert.\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n// that takes the model element and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\n// as parameters and returns a view container element.\n// @returns {Function} Conversion helper.\n\n\nfunction downcastElementToElement(config) {\n  config = cloneDeep(config);\n  config.view = normalizeToElementConfig(config.view, 'container');\n  return function (dispatcher) {\n    dispatcher.on('insert:' + config.model, insertElement(config.view), {\n      priority: config.converterPriority || 'normal'\n    });\n  };\n} // Model attribute to view element conversion helper.\n//\n// See {@link ~DowncastHelpers#attributeToElement `.attributeToElement()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values }` object. `values` is an array\n// of `String`s with possible values if the model attribute is an enumerable.\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function|Object} config.view A view element definition or a function\n// that takes the model attribute value and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\n// as parameters and returns a view attribute element. If `config.model.values` is\n// given, `config.view` should be an object assigning values from `config.model.values` to view element definitions or functions.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\n\n\nfunction downcastAttributeToElement(config) {\n  config = cloneDeep(config);\n  var modelKey = config.model.key ? config.model.key : config.model;\n  var eventName = 'attribute:' + modelKey;\n\n  if (config.model.name) {\n    eventName += ':' + config.model.name;\n  }\n\n  if (config.model.values) {\n    var _iteratorNormalCompletion11 = true;\n    var _didIteratorError11 = false;\n    var _iteratorError11 = undefined;\n\n    try {\n      for (var _iterator11 = config.model.values[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n        var modelValue = _step11.value;\n        config.view[modelValue] = normalizeToElementConfig(config.view[modelValue], 'attribute');\n      }\n    } catch (err) {\n      _didIteratorError11 = true;\n      _iteratorError11 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n          _iterator11.return();\n        }\n      } finally {\n        if (_didIteratorError11) {\n          throw _iteratorError11;\n        }\n      }\n    }\n  } else {\n    config.view = normalizeToElementConfig(config.view, 'attribute');\n  }\n\n  var elementCreator = getFromAttributeCreator(config);\n  return function (dispatcher) {\n    dispatcher.on(eventName, wrap(elementCreator), {\n      priority: config.converterPriority || 'normal'\n    });\n  };\n} // Model attribute to view attribute conversion helper.\n//\n// See {@link ~DowncastHelpers#attributeToAttribute `.attributeToAttribute()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values, [ name ] }` object describing\n// the attribute key, possible values and, optionally, an element name to convert from.\n// @param {String|Object|Function} config.view A view attribute key, or a `{ key, value }` object or a function that takes\n// the model attribute value and returns a `{ key, value }` object. If `key` is `'class'`, `value` can be a `String` or an\n// array of `String`s. If `key` is `'style'`, `value` is an object with key-value pairs. In other cases, `value` is a `String`.\n// If `config.model.values` is set, `config.view` should be an object assigning values from `config.model.values` to\n// `{ key, value }` objects or a functions.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\n\n\nfunction downcastAttributeToAttribute(config) {\n  config = cloneDeep(config);\n  var modelKey = config.model.key ? config.model.key : config.model;\n  var eventName = 'attribute:' + modelKey;\n\n  if (config.model.name) {\n    eventName += ':' + config.model.name;\n  }\n\n  if (config.model.values) {\n    var _iteratorNormalCompletion12 = true;\n    var _didIteratorError12 = false;\n    var _iteratorError12 = undefined;\n\n    try {\n      for (var _iterator12 = config.model.values[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n        var modelValue = _step12.value;\n        config.view[modelValue] = normalizeToAttributeConfig(config.view[modelValue]);\n      }\n    } catch (err) {\n      _didIteratorError12 = true;\n      _iteratorError12 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n          _iterator12.return();\n        }\n      } finally {\n        if (_didIteratorError12) {\n          throw _iteratorError12;\n        }\n      }\n    }\n  } else {\n    config.view = normalizeToAttributeConfig(config.view);\n  }\n\n  var elementCreator = getFromAttributeCreator(config);\n  return function (dispatcher) {\n    dispatcher.on(eventName, changeAttribute(elementCreator), {\n      priority: config.converterPriority || 'normal'\n    });\n  };\n} // Model marker to view element conversion helper.\n//\n// See {@link ~DowncastHelpers#markerToElement `.markerToElement()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String} config.model The name of the model marker (or model marker group) to convert.\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n// that takes the model marker data as a parameter and returns a view UI element.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\n\n\nfunction downcastMarkerToElement(config) {\n  config = cloneDeep(config);\n  config.view = normalizeToElementConfig(config.view, 'ui');\n  return function (dispatcher) {\n    dispatcher.on('addMarker:' + config.model, insertUIElement(config.view), {\n      priority: config.converterPriority || 'normal'\n    });\n    dispatcher.on('removeMarker:' + config.model, removeUIElement(config.view), {\n      priority: config.converterPriority || 'normal'\n    });\n  };\n} // Model marker to highlight conversion helper.\n//\n// See {@link ~DowncastHelpers#markerToElement `.markerToElement()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String} config.model The name of the model marker (or model marker group) to convert.\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} config.view A highlight descriptor\n// that will be used for highlighting or a function that takes the model marker data as a parameter and returns a highlight descriptor.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\n\n\nfunction downcastMarkerToHighlight(config) {\n  return function (dispatcher) {\n    dispatcher.on('addMarker:' + config.model, highlightText(config.view), {\n      priority: config.converterPriority || 'normal'\n    });\n    dispatcher.on('addMarker:' + config.model, highlightElement(config.view), {\n      priority: config.converterPriority || 'normal'\n    });\n    dispatcher.on('removeMarker:' + config.model, removeHighlight(config.view), {\n      priority: config.converterPriority || 'normal'\n    });\n  };\n} // Takes `config.view`, and if it is an {@link module:engine/view/elementdefinition~ElementDefinition}, converts it\n// to a function (because lower level converters accept only element creator functions).\n//\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function} view View configuration.\n// @param {'container'|'attribute'|'ui'} viewElementType View element type to create.\n// @returns {Function} Element creator function to use in lower level converters.\n\n\nfunction normalizeToElementConfig(view, viewElementType) {\n  if (typeof view == 'function') {\n    // If `view` is already a function, don't do anything.\n    return view;\n  }\n\n  return function (modelData, viewWriter) {\n    return createViewElementFromDefinition(view, viewWriter, viewElementType);\n  };\n} // Creates a view element instance from the provided {@link module:engine/view/elementdefinition~ElementDefinition} and class.\n//\n// @param {module:engine/view/elementdefinition~ElementDefinition} viewElementDefinition\n// @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter\n// @param {'container'|'attribute'|'ui'} viewElementType\n// @returns {module:engine/view/element~Element}\n\n\nfunction createViewElementFromDefinition(viewElementDefinition, viewWriter, viewElementType) {\n  if (typeof viewElementDefinition == 'string') {\n    // If `viewElementDefinition` is given as a `String`, normalize it to an object with `name` property.\n    viewElementDefinition = {\n      name: viewElementDefinition\n    };\n  }\n\n  var element;\n  var attributes = Object.assign({}, viewElementDefinition.attributes);\n\n  if (viewElementType == 'container') {\n    element = viewWriter.createContainerElement(viewElementDefinition.name, attributes);\n  } else if (viewElementType == 'attribute') {\n    var options = {\n      priority: viewElementDefinition.priority || ViewAttributeElement.DEFAULT_PRIORITY\n    };\n    element = viewWriter.createAttributeElement(viewElementDefinition.name, attributes, options);\n  } else {\n    // 'ui'.\n    element = viewWriter.createUIElement(viewElementDefinition.name, attributes);\n  }\n\n  if (viewElementDefinition.styles) {\n    var keys = Object.keys(viewElementDefinition.styles);\n\n    for (var _i3 = 0, _keys4 = keys; _i3 < _keys4.length; _i3++) {\n      var key = _keys4[_i3];\n      viewWriter.setStyle(key, viewElementDefinition.styles[key], element);\n    }\n  }\n\n  if (viewElementDefinition.classes) {\n    var classes = viewElementDefinition.classes;\n\n    if (typeof classes == 'string') {\n      viewWriter.addClass(classes, element);\n    } else {\n      var _iteratorNormalCompletion13 = true;\n      var _didIteratorError13 = false;\n      var _iteratorError13 = undefined;\n\n      try {\n        for (var _iterator13 = classes[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n          var className = _step13.value;\n          viewWriter.addClass(className, element);\n        }\n      } catch (err) {\n        _didIteratorError13 = true;\n        _iteratorError13 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n            _iterator13.return();\n          }\n        } finally {\n          if (_didIteratorError13) {\n            throw _iteratorError13;\n          }\n        }\n      }\n    }\n  }\n\n  return element;\n}\n\nfunction getFromAttributeCreator(config) {\n  if (config.model.values) {\n    return function (modelAttributeValue, viewWriter) {\n      var view = config.view[modelAttributeValue];\n\n      if (view) {\n        return view(modelAttributeValue, viewWriter);\n      }\n\n      return null;\n    };\n  } else {\n    return config.view;\n  }\n} // Takes the configuration, adds default parameters if they do not exist and normalizes other parameters to be used in downcast converters\n// for generating a view attribute.\n//\n// @param {Object} view View configuration.\n\n\nfunction normalizeToAttributeConfig(view) {\n  if (typeof view == 'string') {\n    return function (modelAttributeValue) {\n      return {\n        key: view,\n        value: modelAttributeValue\n      };\n    };\n  } else if (typeof view == 'object') {\n    // { key, value, ... }\n    if (view.value) {\n      return function () {\n        return view;\n      };\n    } // { key, ... }\n    else {\n        return function (modelAttributeValue) {\n          return {\n            key: view.key,\n            value: modelAttributeValue\n          };\n        };\n      }\n  } else {\n    // function.\n    return view;\n  }\n} // Helper function for `highlight`. Prepares the actual descriptor object using value passed to the converter.\n\n\nfunction prepareDescriptor(highlightDescriptor, data, conversionApi) {\n  // If passed descriptor is a creator function, call it. If not, just use passed value.\n  var descriptor = typeof highlightDescriptor == 'function' ? highlightDescriptor(data, conversionApi) : highlightDescriptor;\n\n  if (!descriptor) {\n    return null;\n  } // Apply default descriptor priority.\n\n\n  if (!descriptor.priority) {\n    descriptor.priority = 10;\n  } // Default descriptor id is marker name.\n\n\n  if (!descriptor.id) {\n    descriptor.id = data.markerName;\n  }\n\n  return descriptor;\n}\n/**\n * An object describing how the marker highlight should be represented in the view.\n *\n * Each text node contained in a highlighted range will be wrapped in a `<span>`\n * {@link module:engine/view/attributeelement~AttributeElement view attribute element} with CSS class(es), attributes and a priority\n * described by this object.\n *\n * Additionally, each {@link module:engine/view/containerelement~ContainerElement container element} can handle displaying the highlight\n * separately by providing the `addHighlight` and `removeHighlight` custom properties. In this case:\n *\n *  * The `HighlightDescriptor` object is passed to the `addHighlight` function upon conversion and should be used to apply the highlight to\n *  the element.\n *  * The descriptor `id` is passed to the `removeHighlight` function upon conversion and should be used to remove the highlight with the\n *  given ID from the element.\n *\n * @typedef {Object} module:engine/conversion/downcasthelpers~HighlightDescriptor\n *\n * @property {String|Array.<String>} classes A CSS class or an array of classes to set. If the descriptor is used to\n * create an {@link module:engine/view/attributeelement~AttributeElement attribute element} over text nodes, these classes will be set\n * on that attribute element. If the descriptor is applied to an element, usually these classes will be set on that element, however,\n * this depends on how the element converts the descriptor.\n *\n * @property {String} [id] Descriptor identifier. If not provided, it defaults to the converted marker's name.\n *\n * @property {Number} [priority] Descriptor priority. If not provided, it defaults to `10`. If the descriptor is used to create\n * an {@link module:engine/view/attributeelement~AttributeElement attribute element}, it will be that element's\n * {@link module:engine/view/attributeelement~AttributeElement#priority priority}. If the descriptor is applied to an element,\n * the priority will be used to determine which descriptor is more important.\n *\n * @property {Object} [attributes] Attributes to set. If the descriptor is used to create\n * an {@link module:engine/view/attributeelement~AttributeElement attribute element} over text nodes, these attributes will be set on that\n * attribute element. If the descriptor is applied to an element, usually these attributes will be set on that element, however,\n * this depends on how the element converts the descriptor.\n */","import _defineProperty from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\nimport Matcher from '../view/matcher';\nimport ModelRange from '../model/range';\nimport ConversionHelpers from './conversionhelpers';\nimport { cloneDeep } from 'lodash-es';\nimport ModelSelection from '../model/selection';\n/**\n * Contains {@link module:engine/view/view view} to {@link module:engine/model/model model} converters for\n * {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher}.\n *\n * @module engine/conversion/upcasthelpers\n */\n\n/**\n * Upcast conversion helper functions.\n *\n * @extends module:engine/conversion/conversionhelpers~ConversionHelpers\n */\n\nvar UpcastHelpers =\n/*#__PURE__*/\nfunction (_ConversionHelpers) {\n  _inherits(UpcastHelpers, _ConversionHelpers);\n\n  function UpcastHelpers() {\n    _classCallCheck(this, UpcastHelpers);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UpcastHelpers).apply(this, arguments));\n  }\n\n  _createClass(UpcastHelpers, [{\n    key: \"elementToElement\",\n\n    /**\n     * View element to model element conversion helper.\n     *\n     * This conversion results in creating a model element. For example,\n     * view `<p>Foo</p>` becomes `<paragraph>Foo</paragraph>` in the model.\n     *\n     * Keep in mind that the element will be inserted only if it is allowed\n     * by {@link module:engine/model/schema~Schema schema} configuration.\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n     *\t\t\tview: 'p',\n     *\t\t\tmodel: 'paragraph'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n     *\t\t\tview: 'p',\n     *\t\t\tmodel: 'paragraph',\n     *\t\t\tconverterPriority: 'high'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n     *\t\t\tview: {\n     *\t\t\t\tname: 'p',\n     *\t\t\t\tclasses: 'fancy'\n     *\t\t\t},\n     *\t\t\tmodel: 'fancyParagraph'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n     * \t\t\tview: {\n     *\t\t\t\tname: 'p',\n     *\t\t\t\tclasses: 'heading'\n     * \t\t\t},\n     * \t\t\tmodel: ( viewElement, modelWriter ) => {\n     * \t\t\t\treturn modelWriter.createElement( 'heading', { level: viewElement.getAttribute( 'data-level' ) } );\n     * \t\t\t}\n     * \t\t} );\n     *\n     * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n     * to the conversion process.\n     *\n     * @method #elementToElement\n     * @param {Object} config Conversion configuration.\n     * @param {module:engine/view/matcher~MatcherPattern} [config.view] Pattern matching all view elements which should be converted. If not\n     * set, the converter will fire for every view element.\n     * @param {String|module:engine/model/element~Element|Function} config.model Name of the model element, a model element\n     * instance or a function that takes a view element and returns a model element. The model element will be inserted in the model.\n     * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n     * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n     */\n    value: function elementToElement(config) {\n      return this.add(upcastElementToElement(config));\n    }\n    /**\n     * View element to model attribute conversion helper.\n     *\n     * This conversion results in setting an attribute on a model node. For example, view `<strong>Foo</strong>` becomes\n     * `Foo` {@link module:engine/model/text~Text model text node} with `bold` attribute set to `true`.\n     *\n     * This helper is meant to set a model attribute on all the elements that are inside the converted element:\n     *\n     *\t\t<strong>Foo</strong>   -->   <strong><p>Foo</p></strong>   -->   <paragraph><$text bold=\"true\">Foo</$text></paragraph>\n     *\n     * Above is a sample of HTML code, that goes through autoparagraphing (first step) and then is converted (second step).\n     * Even though `<strong>` is over `<p>` element, `bold=\"true\"` was added to the text. See\n     * {@link module:engine/conversion/upcasthelpers~UpcastHelpers#attributeToAttribute} for comparison.\n     *\n     * Keep in mind that the attribute will be set only if it is allowed by {@link module:engine/model/schema~Schema schema} configuration.\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n     *\t\t\tview: 'strong',\n     *\t\t\tmodel: 'bold'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n     *\t\t\tview: 'strong',\n     *\t\t\tmodel: 'bold',\n     *\t\t\tconverterPriority: 'high'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n     *\t\t\tview: {\n     *\t\t\t\tname: 'span',\n     *\t\t\t\tclasses: 'bold'\n     *\t\t\t},\n     *\t\t\tmodel: 'bold'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n     *\t\t\tview: {\n     *\t\t\t\tname: 'span',\n     *\t\t\t\tclasses: [ 'styled', 'styled-dark' ]\n     *\t\t\t},\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'styled',\n     *\t\t\t\tvalue: 'dark'\n     *\t\t\t}\n     *\t\t} );\n     *\n     * \t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n     *\t\t\tview: {\n     *\t\t\t\tname: 'span',\n     *\t\t\t\tstyles: {\n     *\t\t\t\t\t'font-size': /[\\s\\S]+/\n     *\t\t\t\t}\n     *\t\t\t},\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'fontSize',\n     *\t\t\t\tvalue: viewElement => {\n     *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n     *\t\t\t\t\tconst value = fontSize.substr( 0, fontSize.length - 2 );\n     *\n     *\t\t\t\t\tif ( value <= 10 ) {\n     *\t\t\t\t\t\treturn 'small';\n     *\t\t\t\t\t} else if ( value > 12 ) {\n     *\t\t\t\t\t\treturn 'big';\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\treturn null;\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n     * to the conversion process.\n     *\n     * @method #elementToAttribute\n     * @param {Object} config Conversion configuration.\n     * @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n     * @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n     * the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n     * If `String` is given, the model attribute value will be set to `true`.\n     * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n     * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n     */\n\n  }, {\n    key: \"elementToAttribute\",\n    value: function elementToAttribute(config) {\n      return this.add(upcastElementToAttribute(config));\n    }\n    /**\n     * View attribute to model attribute conversion helper.\n     *\n     * This conversion results in setting an attribute on a model node. For example, view `<img src=\"foo.jpg\"></img>` becomes\n     * `<image source=\"foo.jpg\"></image>` in the model.\n     *\n     * This helper is meant to convert view attributes from view elements which got converted to the model, so the view attribute\n     * is set only on the corresponding model node:\n     *\n     *\t\t<div class=\"dark\"><div>foo</div></div>    -->    <div dark=\"true\"><div>foo</div></div>\n     *\n     * Above, `class=\"dark\"` attribute is added only to the `<div>` elements that has it. This is in contrary to\n     * {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToAttribute} which sets attributes for\n     * all the children in the model:\n     *\n     *\t\t<strong>Foo</strong>   -->   <strong><p>Foo</p></strong>   -->   <paragraph><$text bold=\"true\">Foo</$text></paragraph>\n     *\n     * Above is a sample of HTML code, that goes through autoparagraphing (first step) and then is converted (second step).\n     * Even though `<strong>` is over `<p>` element, `bold=\"true\"` was added to the text.\n     *\n     * Keep in mind that the attribute will be set only if it is allowed by {@link module:engine/model/schema~Schema schema} configuration.\n     *\n     *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n     *\t\t\tview: 'src',\n     *\t\t\tmodel: 'source'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n     *\t\t\tview: { key: 'src' },\n     *\t\t\tmodel: 'source'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n     *\t\t\tview: { key: 'src' },\n     *\t\t\tmodel: 'source',\n     *\t\t\tconverterPriority: 'normal'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n     *\t\t\tview: {\n     *\t\t\t\tkey: 'data-style',\n     *\t\t\t\tvalue: /[\\s\\S]+/\n     *\t\t\t},\n     *\t\t\tmodel: 'styled'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n     *\t\t\tview: {\n     *\t\t\t\tname: 'img',\n     *\t\t\t\tkey: 'class',\n     *\t\t\t\tvalue: 'styled-dark'\n     *\t\t\t},\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'styled',\n     *\t\t\t\tvalue: 'dark'\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n     *\t\t\tview: {\n     *\t\t\t\tkey: 'class',\n     *\t\t\t\tvalue: /styled-[\\S]+/\n     *\t\t\t},\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'styled'\n     *\t\t\t\tvalue: viewElement => {\n     *\t\t\t\t\tconst regexp = /styled-([\\S]+)/;\n     *\t\t\t\t\tconst match = viewElement.getAttribute( 'class' ).match( regexp );\n     *\n     *\t\t\t\t\treturn match[ 1 ];\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n     * to the conversion process.\n     *\n     * @method #attributeToAttribute\n     * @param {Object} config Conversion configuration.\n     * @param {String|Object} config.view Specifies which view attribute will be converted. If a `String` is passed,\n     * attributes with given key will be converted. If an `Object` is passed, it must have a required `key` property,\n     * specifying view attribute key, and may have an optional `value` property, specifying view attribute value and optional `name`\n     * property specifying a view element name from/on which the attribute should be converted. `value` can be given as a `String`,\n     * a `RegExp` or a function callback, that takes view attribute value as the only parameter and returns `Boolean`.\n     * @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n     * the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n     * If `String` is given, the model attribute value will be same as view attribute value.\n     * @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\n     * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n     */\n\n  }, {\n    key: \"attributeToAttribute\",\n    value: function attributeToAttribute(config) {\n      return this.add(upcastAttributeToAttribute(config));\n    }\n    /**\n     * View element to model marker conversion helper.\n     *\n     * This conversion results in creating a model marker. For example, if the marker was stored in a view as an element:\n     * `<p>Fo<span data-marker=\"comment\" data-comment-id=\"7\"></span>o</p><p>B<span data-marker=\"comment\" data-comment-id=\"7\"></span>ar</p>`,\n     * after the conversion is done, the marker will be available in\n     * {@link module:engine/model/model~Model#markers model document markers}.\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n     *\t\t\tview: 'marker-search',\n     *\t\t\tmodel: 'search'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n     *\t\t\tview: 'marker-search',\n     *\t\t\tmodel: 'search',\n     *\t\t\tconverterPriority: 'high'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n     *\t\t\tview: 'marker-search',\n     *\t\t\tmodel: viewElement => 'comment:' + viewElement.getAttribute( 'data-comment-id' )\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n     *\t\t\tview: {\n     *\t\t\t\tname: 'span',\n     *\t\t\t\tattributes: {\n     *\t\t\t\t\t'data-marker': 'search'\n     *\t\t\t\t}\n     *\t\t\t},\n     *\t\t\tmodel: 'search'\n     *\t\t} );\n     *\n     * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n     * to the conversion process.\n     *\n     * @method #elementToMarker\n     * @param {Object} config Conversion configuration.\n     * @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n     * @param {String|Function} config.model Name of the model marker, or a function that takes a view element and returns\n     * a model marker name.\n     * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n     * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n     */\n\n  }, {\n    key: \"elementToMarker\",\n    value: function elementToMarker(config) {\n      return this.add(upcastElementToMarker(config));\n    }\n  }]);\n\n  return UpcastHelpers;\n}(ConversionHelpers);\n/**\n * Function factory, creates a converter that converts {@link module:engine/view/documentfragment~DocumentFragment view document fragment}\n * or all children of {@link module:engine/view/element~Element} into\n * {@link module:engine/model/documentfragment~DocumentFragment model document fragment}.\n * This is the \"entry-point\" converter for upcast (view to model conversion). This converter starts the conversion of all children\n * of passed view document fragment. Those children {@link module:engine/view/node~Node view nodes} are then handled by other converters.\n *\n * This also a \"default\", last resort converter for all view elements that has not been converted by other converters.\n * When a view element is being converted to the model but it does not have converter specified, that view element\n * will be converted to {@link module:engine/model/documentfragment~DocumentFragment model document fragment} and returned.\n *\n * @returns {Function} Universal converter for view {@link module:engine/view/documentfragment~DocumentFragment fragments} and\n * {@link module:engine/view/element~Element elements} that returns\n * {@link module:engine/model/documentfragment~DocumentFragment model fragment} with children of converted view item.\n */\n\n\nexport { UpcastHelpers as default };\nexport function convertToModelFragment() {\n  return function (evt, data, conversionApi) {\n    // Second argument in `consumable.consume` is discarded for ViewDocumentFragment but is needed for ViewElement.\n    if (!data.modelRange && conversionApi.consumable.consume(data.viewItem, {\n      name: true\n    })) {\n      var _conversionApi$conver = conversionApi.convertChildren(data.viewItem, data.modelCursor),\n          modelRange = _conversionApi$conver.modelRange,\n          modelCursor = _conversionApi$conver.modelCursor;\n\n      data.modelRange = modelRange;\n      data.modelCursor = modelCursor;\n    }\n  };\n}\n/**\n * Function factory, creates a converter that converts {@link module:engine/view/text~Text} to {@link module:engine/model/text~Text}.\n *\n * @returns {Function} {@link module:engine/view/text~Text View text} converter.\n */\n\nexport function convertText() {\n  return function (evt, data, conversionApi) {\n    if (conversionApi.schema.checkChild(data.modelCursor, '$text')) {\n      if (conversionApi.consumable.consume(data.viewItem)) {\n        var text = conversionApi.writer.createText(data.viewItem.data);\n        conversionApi.writer.insert(text, data.modelCursor);\n        data.modelRange = ModelRange._createFromPositionAndShift(data.modelCursor, text.offsetSize);\n        data.modelCursor = data.modelRange.end;\n      }\n    }\n  };\n}\n/**\n * Function factory, creates a callback function which converts a {@link module:engine/view/selection~Selection\n * view selection} taken from the {@link module:engine/view/document~Document#event:selectionChange} event\n * and sets in on the {@link module:engine/model/document~Document#selection model}.\n *\n * **Note**: because there is no view selection change dispatcher nor any other advanced view selection to model\n * conversion mechanism, the callback should be set directly on view document.\n *\n *\t\tview.document.on( 'selectionChange', convertSelectionChange( modelDocument, mapper ) );\n *\n * @param {module:engine/model/model~Model} model Data model.\n * @param {module:engine/conversion/mapper~Mapper} mapper Conversion mapper.\n * @returns {Function} {@link module:engine/view/document~Document#event:selectionChange} callback function.\n */\n\nexport function convertSelectionChange(model, mapper) {\n  return function (evt, data) {\n    var viewSelection = data.newSelection;\n    var modelSelection = new ModelSelection();\n    var ranges = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = viewSelection.getRanges()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var viewRange = _step.value;\n        ranges.push(mapper.toModelRange(viewRange));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    modelSelection.setTo(ranges, {\n      backward: viewSelection.isBackward\n    });\n\n    if (!modelSelection.isEqual(model.document.selection)) {\n      model.change(function (writer) {\n        writer.setSelection(modelSelection);\n      });\n    }\n  };\n} // View element to model element conversion helper.\n//\n// See {@link ~UpcastHelpers#elementToElement `.elementToElement()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {module:engine/view/matcher~MatcherPattern} [config.view] Pattern matching all view elements which should be converted. If not\n// set, the converter will fire for every view element.\n// @param {String|module:engine/model/element~Element|Function} config.model Name of the model element, a model element\n// instance or a function that takes a view element and returns a model element. The model element will be inserted in the model.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\n\nfunction upcastElementToElement(config) {\n  config = cloneDeep(config);\n  var converter = prepareToElementConverter(config);\n  var elementName = getViewElementNameFromConfig(config);\n  var eventName = elementName ? 'element:' + elementName : 'element';\n  return function (dispatcher) {\n    dispatcher.on(eventName, converter, {\n      priority: config.converterPriority || 'normal'\n    });\n  };\n} // View element to model attribute conversion helper.\n//\n// See {@link ~UpcastHelpers#elementToAttribute `.elementToAttribute()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n// @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n// the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n// If `String` is given, the model attribute value will be set to `true`.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\n\n\nfunction upcastElementToAttribute(config) {\n  config = cloneDeep(config);\n  normalizeModelAttributeConfig(config);\n  var converter = prepareToAttributeConverter(config, false);\n  var elementName = getViewElementNameFromConfig(config);\n  var eventName = elementName ? 'element:' + elementName : 'element';\n  return function (dispatcher) {\n    dispatcher.on(eventName, converter, {\n      priority: config.converterPriority || 'low'\n    });\n  };\n} // View attribute to model attribute conversion helper.\n//\n// See {@link ~UpcastHelpers#attributeToAttribute `.attributeToAttribute()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String|Object} config.view Specifies which view attribute will be converted. If a `String` is passed,\n// attributes with given key will be converted. If an `Object` is passed, it must have a required `key` property,\n// specifying view attribute key, and may have an optional `value` property, specifying view attribute value and optional `name`\n// property specifying a view element name from/on which the attribute should be converted. `value` can be given as a `String`,\n// a `RegExp` or a function callback, that takes view attribute value as the only parameter and returns `Boolean`.\n// @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n// the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n// If `String` is given, the model attribute value will be same as view attribute value.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\n// @returns {Function} Conversion helper.\n\n\nfunction upcastAttributeToAttribute(config) {\n  config = cloneDeep(config);\n  var viewKey = null;\n\n  if (typeof config.view == 'string' || config.view.key) {\n    viewKey = normalizeViewAttributeKeyValueConfig(config);\n  }\n\n  normalizeModelAttributeConfig(config, viewKey);\n  var converter = prepareToAttributeConverter(config, true);\n  return function (dispatcher) {\n    dispatcher.on('element', converter, {\n      priority: config.converterPriority || 'low'\n    });\n  };\n} // View element to model marker conversion helper.\n//\n// See {@link ~UpcastHelpers#elementToMarker `.elementToMarker()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n// @param {String|Function} config.model Name of the model marker, or a function that takes a view element and returns\n// a model marker name.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\n\n\nfunction upcastElementToMarker(config) {\n  config = cloneDeep(config);\n  normalizeToMarkerConfig(config);\n  return upcastElementToElement(config);\n} // Helper function for from-view-element conversion. Checks if `config.view` directly specifies converted view element's name\n// and if so, returns it.\n//\n// @param {Object} config Conversion config.\n// @returns {String|null} View element name or `null` if name is not directly set.\n\n\nfunction getViewElementNameFromConfig(config) {\n  if (typeof config.view == 'string') {\n    return config.view;\n  }\n\n  if (typeof config.view == 'object' && typeof config.view.name == 'string') {\n    return config.view.name;\n  }\n\n  return null;\n} // Helper for to-model-element conversion. Takes a config object and returns a proper converter function.\n//\n// @param {Object} config Conversion configuration.\n// @returns {Function} View to model converter.\n\n\nfunction prepareToElementConverter(config) {\n  var matcher = config.view ? new Matcher(config.view) : null;\n  return function (evt, data, conversionApi) {\n    var match = {}; // If `config.view` has not been passed do not try matching. In this case, the converter should fire for all elements.\n\n    if (matcher) {\n      // This will be usually just one pattern but we support matchers with many patterns too.\n      var matcherResult = matcher.match(data.viewItem); // If there is no match, this callback should not do anything.\n\n      if (!matcherResult) {\n        return;\n      }\n\n      match = matcherResult.match;\n    } // Force consuming element's name.\n\n\n    match.name = true; // Create model element basing on config.\n\n    var modelElement = getModelElement(config.model, data.viewItem, conversionApi.writer); // Do not convert if element building function returned falsy value.\n\n    if (!modelElement) {\n      return;\n    } // When element was already consumed then skip it.\n\n\n    if (!conversionApi.consumable.test(data.viewItem, match)) {\n      return;\n    } // Find allowed parent for element that we are going to insert.\n    // If current parent does not allow to insert element but one of the ancestors does\n    // then split nodes to allowed parent.\n\n\n    var splitResult = conversionApi.splitToAllowedParent(modelElement, data.modelCursor); // When there is no split result it means that we can't insert element to model tree, so let's skip it.\n\n    if (!splitResult) {\n      return;\n    } // Insert element on allowed position.\n\n\n    conversionApi.writer.insert(modelElement, splitResult.position); // Convert children and insert to element.\n\n    conversionApi.convertChildren(data.viewItem, conversionApi.writer.createPositionAt(modelElement, 0)); // Consume appropriate value from consumable values list.\n\n    conversionApi.consumable.consume(data.viewItem, match);\n    var parts = conversionApi.getSplitParts(modelElement); // Set conversion result range.\n\n    data.modelRange = new ModelRange(conversionApi.writer.createPositionBefore(modelElement), conversionApi.writer.createPositionAfter(parts[parts.length - 1])); // Now we need to check where the `modelCursor` should be.\n\n    if (splitResult.cursorParent) {\n      // If we split parent to insert our element then we want to continue conversion in the new part of the split parent.\n      //\n      // before: <allowed><notAllowed>foo[]</notAllowed></allowed>\n      // after:  <allowed><notAllowed>foo</notAllowed><converted></converted><notAllowed>[]</notAllowed></allowed>\n      data.modelCursor = conversionApi.writer.createPositionAt(splitResult.cursorParent, 0);\n    } else {\n      // Otherwise just continue after inserted element.\n      data.modelCursor = data.modelRange.end;\n    }\n  };\n} // Helper function for upcasting-to-element converter. Takes the model configuration, the converted view element\n// and a writer instance and returns a model element instance to be inserted in the model.\n//\n// @param {String|Function|module:engine/model/element~Element} model Model conversion configuration.\n// @param {module:engine/view/node~Node} input The converted view node.\n// @param {module:engine/model/writer~Writer} writer A writer instance to use to create the model element.\n\n\nfunction getModelElement(model, input, writer) {\n  if (model instanceof Function) {\n    return model(input, writer);\n  } else {\n    return writer.createElement(model);\n  }\n} // Helper function view-attribute-to-model-attribute helper. Normalizes `config.view` which was set as `String` or\n// as an `Object` with `key`, `value` and `name` properties. Normalized `config.view` has is compatible with\n// {@link module:engine/view/matcher~MatcherPattern}.\n//\n// @param {Object} config Conversion config.\n// @returns {String} Key of the converted view attribute.\n\n\nfunction normalizeViewAttributeKeyValueConfig(config) {\n  if (typeof config.view == 'string') {\n    config.view = {\n      key: config.view\n    };\n  }\n\n  var key = config.view.key;\n  var normalized;\n\n  if (key == 'class' || key == 'style') {\n    var keyName = key == 'class' ? 'classes' : 'styles';\n    normalized = _defineProperty({}, keyName, config.view.value);\n  } else {\n    var value = typeof config.view.value == 'undefined' ? /[\\s\\S]*/ : config.view.value;\n    normalized = {\n      attributes: _defineProperty({}, key, value)\n    };\n  }\n\n  if (config.view.name) {\n    normalized.name = config.view.name;\n  }\n\n  config.view = normalized;\n  return key;\n} // Helper function that normalizes `config.model` in from-model-attribute conversion. `config.model` can be set\n// as a `String`, an `Object` with only `key` property or an `Object` with `key` and `value` properties. Normalized\n// `config.model` is an `Object` with `key` and `value` properties.\n//\n// @param {Object} config Conversion config.\n// @param {String} viewAttributeKeyToCopy Key of the converted view attribute. If it is set, model attribute value\n// will be equal to view attribute value.\n\n\nfunction normalizeModelAttributeConfig(config) {\n  var viewAttributeKeyToCopy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var defaultModelValue = viewAttributeKeyToCopy === null ? true : function (viewElement) {\n    return viewElement.getAttribute(viewAttributeKeyToCopy);\n  };\n  var key = typeof config.model != 'object' ? config.model : config.model.key;\n  var value = typeof config.model != 'object' || typeof config.model.value == 'undefined' ? defaultModelValue : config.model.value;\n  config.model = {\n    key: key,\n    value: value\n  };\n} // Helper for to-model-attribute conversion. Takes the model attribute name and conversion configuration and returns\n// a proper converter function.\n//\n// @param {String} modelAttributeKey The key of the model attribute to set on a model node.\n// @param {Object|Array.<Object>} config Conversion configuration. It is possible to provide multiple configurations in an array.\n// @param {Boolean} shallow If set to `true` the attribute will be set only on top-level nodes. Otherwise, it will be set\n// on all elements in the range.\n\n\nfunction prepareToAttributeConverter(config, shallow) {\n  var matcher = new Matcher(config.view);\n  return function (evt, data, conversionApi) {\n    var match = matcher.match(data.viewItem); // If there is no match, this callback should not do anything.\n\n    if (!match) {\n      return;\n    }\n\n    var modelKey = config.model.key;\n    var modelValue = typeof config.model.value == 'function' ? config.model.value(data.viewItem) : config.model.value; // Do not convert if attribute building function returned falsy value.\n\n    if (modelValue === null) {\n      return;\n    }\n\n    if (onlyViewNameIsDefined(config)) {\n      match.match.name = true;\n    } else {\n      // Do not test or consume `name` consumable.\n      delete match.match.name;\n    } // Try to consume appropriate values from consumable values list.\n\n\n    if (!conversionApi.consumable.test(data.viewItem, match.match)) {\n      return;\n    } // Since we are converting to attribute we need an range on which we will set the attribute.\n    // If the range is not created yet, we will create it.\n\n\n    if (!data.modelRange) {\n      // Convert children and set conversion result as a current data.\n      data = Object.assign(data, conversionApi.convertChildren(data.viewItem, data.modelCursor));\n    } // Set attribute on current `output`. `Schema` is checked inside this helper function.\n\n\n    var attributeWasSet = setAttributeOn(data.modelRange, {\n      key: modelKey,\n      value: modelValue\n    }, shallow, conversionApi);\n\n    if (attributeWasSet) {\n      conversionApi.consumable.consume(data.viewItem, match.match);\n    }\n  };\n} // Helper function that checks if element name should be consumed in attribute converters.\n//\n// @param {Object} config Conversion config.\n// @returns {Boolean}\n\n\nfunction onlyViewNameIsDefined(config) {\n  if (typeof config.view == 'object' && !getViewElementNameFromConfig(config)) {\n    return false;\n  }\n\n  return !config.view.classes && !config.view.attributes && !config.view.styles;\n} // Helper function for to-model-attribute converter. Sets model attribute on given range. Checks {@link module:engine/model/schema~Schema}\n// to ensure proper model structure.\n//\n// @param {module:engine/model/range~Range} modelRange Model range on which attribute should be set.\n// @param {Object} modelAttribute Model attribute to set.\n// @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion API.\n// @param {Boolean} shallow If set to `true` the attribute will be set only on top-level nodes. Otherwise, it will be set\n// on all elements in the range.\n// @returns {Boolean} `true` if attribute was set on at least one node from given `modelRange`.\n\n\nfunction setAttributeOn(modelRange, modelAttribute, shallow, conversionApi) {\n  var result = false; // Set attribute on each item in range according to Schema.\n\n  for (var _i = 0, _Array$from = Array.from(modelRange.getItems({\n    shallow: shallow\n  })); _i < _Array$from.length; _i++) {\n    var node = _Array$from[_i];\n\n    if (conversionApi.schema.checkAttribute(node, modelAttribute.key)) {\n      conversionApi.writer.setAttribute(modelAttribute.key, modelAttribute.value, node);\n      result = true;\n    }\n  }\n\n  return result;\n} // Helper function for upcasting-to-marker conversion. Takes the config in a format requested by `upcastElementToMarker()`\n// function and converts it to a format that is supported by `_upcastElementToElement()` function.\n//\n// @param {Object} config Conversion configuration.\n\n\nfunction normalizeToMarkerConfig(config) {\n  var oldModel = config.model;\n\n  config.model = function (viewElement, modelWriter) {\n    var markerName = typeof oldModel == 'string' ? oldModel : oldModel(viewElement);\n    return modelWriter.createElement('$marker', {\n      'data-name': markerName\n    });\n  };\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/controller/editingcontroller\n */\nimport RootEditableElement from '../view/rooteditableelement';\nimport View from '../view/view';\nimport Mapper from '../conversion/mapper';\nimport DowncastDispatcher from '../conversion/downcastdispatcher';\nimport { clearAttributes, convertCollapsedSelection, convertRangeSelection, insertText, remove } from '../conversion/downcasthelpers';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { convertSelectionChange } from '../conversion/upcasthelpers';\n/**\n * Controller for the editing pipeline. The editing pipeline controls {@link ~EditingController#model model} rendering,\n * including selection handling. It also creates the {@link ~EditingController#view view} which builds a\n * browser-independent virtualization over the DOM elements. The editing controller also attaches default converters.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar EditingController =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an editing controller instance.\n   *\n   * @param {module:engine/model/model~Model} model Editing model.\n   */\n  function EditingController(model) {\n    var _this = this;\n\n    _classCallCheck(this, EditingController);\n\n    /**\n     * Editor model.\n     *\n     * @readonly\n     * @member {module:engine/model/model~Model}\n     */\n    this.model = model;\n    /**\n     * Editing view controller.\n     *\n     * @readonly\n     * @member {module:engine/view/view~View}\n     */\n\n    this.view = new View();\n    /**\n     * Mapper which describes the model-view binding.\n     *\n     * @readonly\n     * @member {module:engine/conversion/mapper~Mapper}\n     */\n\n    this.mapper = new Mapper();\n    /**\n     * Downcast dispatcher that converts changes from the model to {@link #view the editing view}.\n     *\n     * @readonly\n     * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher} #downcastDispatcher\n     */\n\n    this.downcastDispatcher = new DowncastDispatcher({\n      mapper: this.mapper\n    });\n    var doc = this.model.document;\n    var selection = doc.selection;\n    var markers = this.model.markers; // When plugins listen on model changes (on selection change, post fixers, etc) and change the view as a result of\n    // model's change, they might trigger view rendering before the conversion is completed (e.g. before the selection\n    // is converted). We disable rendering for the length of the outermost model change() block to prevent that.\n    //\n    // See  https://github.com/ckeditor/ckeditor5-engine/issues/1528\n\n    this.listenTo(this.model, '_beforeChanges', function () {\n      _this.view._disableRendering(true);\n    }, {\n      priority: 'highest'\n    });\n    this.listenTo(this.model, '_afterChanges', function () {\n      _this.view._disableRendering(false);\n    }, {\n      priority: 'lowest'\n    }); // Whenever model document is changed, convert those changes to the view (using model.Document#differ).\n    // Do it on 'low' priority, so changes are converted after other listeners did their job.\n    // Also convert model selection.\n\n    this.listenTo(doc, 'change', function () {\n      _this.view.change(function (writer) {\n        _this.downcastDispatcher.convertChanges(doc.differ, writer);\n\n        _this.downcastDispatcher.convertSelection(selection, markers, writer);\n      });\n    }, {\n      priority: 'low'\n    }); // Convert selection from the view to the model when it changes in the view.\n\n    this.listenTo(this.view.document, 'selectionChange', convertSelectionChange(this.model, this.mapper)); // Attach default model converters.\n\n    this.downcastDispatcher.on('insert:$text', insertText(), {\n      priority: 'lowest'\n    });\n    this.downcastDispatcher.on('remove', remove(), {\n      priority: 'low'\n    }); // Attach default model selection converters.\n\n    this.downcastDispatcher.on('selection', clearAttributes(), {\n      priority: 'low'\n    });\n    this.downcastDispatcher.on('selection', convertRangeSelection(), {\n      priority: 'low'\n    });\n    this.downcastDispatcher.on('selection', convertCollapsedSelection(), {\n      priority: 'low'\n    }); // Binds {@link module:engine/view/document~Document#roots view roots collection} to\n    // {@link module:engine/model/document~Document#roots model roots collection} so creating\n    // model root automatically creates corresponding view root.\n\n    this.view.document.roots.bindTo(this.model.document.roots).using(function (root) {\n      // $graveyard is a special root that has no reflection in the view.\n      if (root.rootName == '$graveyard') {\n        return null;\n      }\n\n      var viewRoot = new RootEditableElement(root.name);\n      viewRoot.rootName = root.rootName;\n      viewRoot._document = _this.view.document;\n\n      _this.mapper.bindElements(root, viewRoot);\n\n      return viewRoot;\n    });\n  }\n  /**\n   * Removes all event listeners attached to the `EditingController`. Destroys all objects created\n   * by `EditingController` that need to be destroyed.\n   */\n\n\n  _createClass(EditingController, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.view.destroy();\n      this.stopListening();\n    }\n  }]);\n\n  return EditingController;\n}();\n\nexport { EditingController as default };\nmix(EditingController, ObservableMixin);","import _slicedToArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/plugincollection\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * Manages a list of CKEditor plugins, including loading, resolving dependencies and initialization.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar PluginCollection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the PluginCollection class.\n   * Allows loading and initializing plugins and their dependencies.\n   *\n   * @param {module:core/editor/editor~Editor} editor\n   * @param {Array.<Function>} [availablePlugins] Plugins (constructors) which the collection will be able to use\n   * when {@link module:core/plugincollection~PluginCollection#init} is used with plugin names (strings, instead of constructors).\n   * Usually, the editor will pass its built-in plugins to the collection so they can later be\n   * used in `config.plugins` or `config.removePlugins` by names.\n   */\n  function PluginCollection(editor) {\n    var availablePlugins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    _classCallCheck(this, PluginCollection);\n\n    /**\n     * @protected\n     * @member {module:core/editor/editor~Editor} module:core/plugin~PluginCollection#_editor\n     */\n    this._editor = editor;\n    /**\n     * Map of plugin constructors which can be retrieved by their names.\n     *\n     * @protected\n     * @member {Map.<String|Function,Function>} module:core/plugin~PluginCollection#_availablePlugins\n     */\n\n    this._availablePlugins = new Map();\n    /**\n     * @protected\n     * @member {Map} module:core/plugin~PluginCollection#_plugins\n     */\n\n    this._plugins = new Map();\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = availablePlugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var PluginConstructor = _step.value;\n\n        this._availablePlugins.set(PluginConstructor, PluginConstructor);\n\n        if (PluginConstructor.pluginName) {\n          this._availablePlugins.set(PluginConstructor.pluginName, PluginConstructor);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n  /**\n   * Iterable interface.\n   *\n   * Returns `[ PluginConstructor, pluginInstance ]` pairs.\n   *\n   * @returns {Iterable.<Array>}\n   */\n\n\n  _createClass(PluginCollection, [{\n    key: Symbol.iterator,\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function value() {\n      var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, entry;\n\n      return _regeneratorRuntime.wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _iteratorError2 = undefined;\n              _context.prev = 3;\n              _iterator2 = this._plugins[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                _context.next = 13;\n                break;\n              }\n\n              entry = _step2.value;\n\n              if (!(typeof entry[0] == 'function')) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 10;\n              return entry;\n\n            case 10:\n              _iteratorNormalCompletion2 = true;\n              _context.next = 5;\n              break;\n\n            case 13:\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context.t0;\n\n            case 19:\n              _context.prev = 19;\n              _context.prev = 20;\n\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n\n            case 22:\n              _context.prev = 22;\n\n              if (!_didIteratorError2) {\n                _context.next = 25;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 25:\n              return _context.finish(22);\n\n            case 26:\n              return _context.finish(19);\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this, [[3, 15, 19, 27], [20,, 22, 26]]);\n    })\n    /**\n     * Gets the plugin instance by its constructor or name.\n     *\n     *\t\t// Check if 'Clipboard' plugin was loaded.\n     *\t\tif ( editor.plugins.has( 'Clipboard' ) ) {\n     *\t\t\t// Get clipboard plugin instance\n     *\t\t\tconst clipboard = editor.plugins.get( 'Clipboard' );\n     *\n     *\t\t\tthis.listenTo( clipboard, 'inputTransformation', ( evt, data ) => {\n     *\t\t\t\t// Do something on clipboard input.\n     *\t\t\t} );\n     *\t\t}\n     *\n     * **Note**: This method will throw error if plugin is not loaded. Use `{@link #has editor.plugins.has()}`\n     * to check if plugin is available.\n     *\n     * @param {Function|String} key The plugin constructor or {@link module:core/plugin~PluginInterface.pluginName name}.\n     * @returns {module:core/plugin~PluginInterface}\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      var plugin = this._plugins.get(key);\n\n      if (!plugin) {\n        /**\n         * The plugin is not loaded and could not be obtained.\n         *\n         * Plugin classes (constructors) need to be provided to the editor and must be loaded before they can be obtained from\n         * the plugin collection.\n         * This is usually done in CKEditor 5 builds by setting the {@link module:core/editor/editor~Editor.builtinPlugins}\n         * property.\n         *\n         * **Note**: You can use `{@link module:core/plugincollection~PluginCollection#has editor.plugins.has()}`\n         * to check if plugin was loaded.\n         *\n         * @error plugincollection-plugin-not-loaded\n         * @param {String} plugin The name of the plugin which is not loaded.\n         */\n        var errorMsg = 'plugincollection-plugin-not-loaded: The requested plugin is not loaded.';\n        var pluginName = key;\n\n        if (typeof key == 'function') {\n          pluginName = key.pluginName || key.name;\n        }\n\n        throw new CKEditorError(errorMsg, {\n          plugin: pluginName\n        });\n      }\n\n      return plugin;\n    }\n    /**\n     * Checks if plugin is loaded.\n     *\n     *\t\t// Check if 'Clipboard' plugin was loaded.\n     *\t\tif ( editor.plugins.has( 'Clipboard' ) ) {\n     *\t\t\t// Now use clipboard plugin instance:\n     *\t\t\tconst clipboard = editor.plugins.get( 'Clipboard' );\n     *\n     *\t\t\t// ...\n     *\t\t}\n     *\n     * @param {Function|String} key The plugin constructor or {@link module:core/plugin~PluginInterface.pluginName name}.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this._plugins.has(key);\n    }\n    /**\n     * Initializes a set of plugins and adds them to the collection.\n     *\n     * @param {Array.<Function|String>} plugins An array of {@link module:core/plugin~PluginInterface plugin constructors}\n     * or {@link module:core/plugin~PluginInterface.pluginName plugin names}. The second option (names) works only if\n     * `availablePlugins` were passed to the {@link #constructor}.\n     * @param {Array.<String|Function>} [removePlugins] Names of plugins or plugin constructors\n     * that should not be loaded (despite being specified in the `plugins` array).\n     * @returns {Promise.<module:core/plugin~LoadedPlugins>} A promise which gets resolved once all plugins are loaded\n     * and available in the collection.\n     */\n\n  }, {\n    key: \"init\",\n    value: function init(plugins) {\n      var removePlugins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var that = this;\n      var editor = this._editor;\n      var loading = new Set();\n      var loaded = [];\n      var pluginConstructors = mapToAvailableConstructors(plugins);\n      var removePluginConstructors = mapToAvailableConstructors(removePlugins);\n      var missingPlugins = getMissingPluginNames(plugins);\n\n      if (missingPlugins) {\n        /**\n         * Some plugins are not available and could not be loaded.\n         *\n         * Plugin classes (constructors) need to be provided to the editor before they can be loaded by name.\n         * This is usually done in CKEditor 5 builds by setting the {@link module:core/editor/editor~Editor.builtinPlugins}\n         * property.\n         *\n         * **If you see this warning when using one of the {@glink builds/index CKEditor 5 Builds}**, it means\n         * that you try to enable a plugin which was not included in that build. This may be due to a typo\n         * in the plugin name or simply because that plugin is not a part of this build. In the latter scenario,\n         * read more about {@glink builds/guides/development/custom-builds custom builds}.\n         *\n         * **If you see this warning when using one of the editor creators directly** (not a build), then it means\n         * that you tried loading plugins by name. However, unlike CKEditor 4, CKEditor 5 does not implement a \"plugin loader\".\n         * This means that CKEditor 5 does not know where to load the plugin modules from. Therefore, you need to\n         * provide each plugin through reference (as a constructor function). Check out the examples in\n         * {@glink builds/guides/integration/advanced-setup#scenario-2-building-from-source \"Building from source\"}.\n         *\n         * @error plugincollection-plugin-not-found\n         * @param {Array.<String>} plugins The name of the plugins which could not be loaded.\n         */\n        var errorMsg = 'plugincollection-plugin-not-found: Some plugins are not available and could not be loaded.'; // Log the error so it's more visible on the console. Hopefully, for better DX.\n\n        log.error(errorMsg, {\n          plugins: missingPlugins\n        });\n        return Promise.reject(new CKEditorError(errorMsg, {\n          plugins: missingPlugins\n        }));\n      }\n\n      return Promise.all(pluginConstructors.map(loadPlugin)).then(function () {\n        return initPlugins(loaded, 'init');\n      }).then(function () {\n        return initPlugins(loaded, 'afterInit');\n      }).then(function () {\n        return loaded;\n      });\n\n      function loadPlugin(PluginConstructor) {\n        if (removePluginConstructors.includes(PluginConstructor)) {\n          return;\n        } // The plugin is already loaded or being loaded - do nothing.\n\n\n        if (that._plugins.has(PluginConstructor) || loading.has(PluginConstructor)) {\n          return;\n        }\n\n        return instantiatePlugin(PluginConstructor).catch(function (err) {\n          /**\n           * It was not possible to load the plugin.\n           *\n           * This is a generic error logged to the console when a JavaSript error is thrown during the initialization\n           * of one of the plugins.\n           *\n           * If you correctly handled the promise returned by the editor's `create()` method (like shown below)\n           * you will find the original error logged to the console, too:\n           *\n           *\t\tClassicEditor.create( document.getElementById( 'editor' ) )\n           *\t\t\t.then( editor => {\n           *\t\t\t\t// ...\n           * \t\t\t} )\n           *\t\t\t.catch( error => {\n           *\t\t\t\tconsole.error( error );\n           *\t\t\t} );\n           *\n           * @error plugincollection-load\n           * @param {String} plugin The name of the plugin that could not be loaded.\n           */\n          log.error('plugincollection-load: It was not possible to load the plugin.', {\n            plugin: PluginConstructor\n          });\n          throw err;\n        });\n      }\n\n      function initPlugins(loadedPlugins, method) {\n        return loadedPlugins.reduce(function (promise, plugin) {\n          if (!plugin[method]) {\n            return promise;\n          }\n\n          return promise.then(plugin[method].bind(plugin));\n        }, Promise.resolve());\n      }\n\n      function instantiatePlugin(PluginConstructor) {\n        return new Promise(function (resolve) {\n          loading.add(PluginConstructor);\n\n          if (PluginConstructor.requires) {\n            PluginConstructor.requires.forEach(function (RequiredPluginConstructorOrName) {\n              var RequiredPluginConstructor = getPluginConstructor(RequiredPluginConstructorOrName);\n\n              if (removePlugins.includes(RequiredPluginConstructor)) {\n                /**\n                 * Cannot load a plugin because one of its dependencies is listed in the `removePlugins` option.\n                 *\n                 * @error plugincollection-required\n                 * @param {Function} plugin The required plugin.\n                 * @param {Function} requiredBy The parent plugin.\n                 */\n                throw new CKEditorError('plugincollection-required: Cannot load a plugin because one of its dependencies is listed in' + 'the `removePlugins` option.', {\n                  plugin: RequiredPluginConstructor,\n                  requiredBy: PluginConstructor\n                });\n              }\n\n              loadPlugin(RequiredPluginConstructor);\n            });\n          }\n\n          var plugin = new PluginConstructor(editor);\n\n          that._add(PluginConstructor, plugin);\n\n          loaded.push(plugin);\n          resolve();\n        });\n      }\n\n      function getPluginConstructor(PluginConstructorOrName) {\n        if (typeof PluginConstructorOrName == 'function') {\n          return PluginConstructorOrName;\n        }\n\n        return that._availablePlugins.get(PluginConstructorOrName);\n      }\n\n      function getMissingPluginNames(plugins) {\n        var missingPlugins = [];\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = plugins[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var pluginNameOrConstructor = _step3.value;\n\n            if (!getPluginConstructor(pluginNameOrConstructor)) {\n              missingPlugins.push(pluginNameOrConstructor);\n            }\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        return missingPlugins.length ? missingPlugins : null;\n      }\n\n      function mapToAvailableConstructors(plugins) {\n        return plugins.map(function (pluginNameOrConstructor) {\n          return getPluginConstructor(pluginNameOrConstructor);\n        }).filter(function (PluginConstructor) {\n          return !!PluginConstructor;\n        });\n      }\n    }\n    /**\n     * Destroys all loaded plugins.\n     *\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var promises = Array.from(this).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            pluginInstance = _ref2[1];\n\n        return pluginInstance;\n      }).filter(function (pluginInstance) {\n        return typeof pluginInstance.destroy == 'function';\n      }).map(function (pluginInstance) {\n        return pluginInstance.destroy();\n      });\n      return Promise.all(promises);\n    }\n    /**\n     * Adds the plugin to the collection. Exposed mainly for testing purposes.\n     *\n     * @protected\n     * @param {Function} PluginConstructor The plugin constructor.\n     * @param {module:core/plugin~PluginInterface} plugin The instance of the plugin.\n     */\n\n  }, {\n    key: \"_add\",\n    value: function _add(PluginConstructor, plugin) {\n      this._plugins.set(PluginConstructor, plugin);\n\n      var pluginName = PluginConstructor.pluginName;\n\n      if (!pluginName) {\n        return;\n      }\n\n      if (this._plugins.has(pluginName)) {\n        /**\n         * Two plugins with the same {@link module:core/plugin~PluginInterface.pluginName} were loaded.\n         * This will lead to runtime conflicts between these plugins.\n         *\n         * In practice, this warning usually means that new plugins were added to an existing CKEditor 5 build.\n         * Plugins should always be added to a source version of the editor (`@ckeditor/ckeditor5-editor-*`),\n         * not to an editor imported from one of the `@ckeditor/ckeditor5-build-*` packages.\n         *\n         * Check your import paths and the list of plugins passed to\n         * {@link module:core/editor/editor~Editor.create `Editor.create()`}\n         * or specified in {@link module:core/editor/editor~Editor.builtinPlugins `Editor.builtinPlugins`}.\n         *\n         * The second option is that your `node_modules/` directory contains duplicated versions of the same\n         * CKEditor 5 packages. Normally, on clean installations, npm deduplicates packages in `node_modules/`, so\n         * it may be enough to call `rm -rf node_modules && npm i`. However, if you installed conflicting versions\n         * of packages, their dependencies may need to be installed in more than one version which may lead to this\n         * warning.\n         *\n         * Technically speaking, this error occurs because after adding a plugin to an existing editor build\n         * dependencies of this plugin are being duplicated.\n         * They are already built into that editor build and now get added for the second time as dependencies\n         * of the plugin you are installing.\n         *\n         * Read more about {@glink builds/guides/integration/installing-plugins installing plugins}.\n         *\n         * @error plugincollection-plugin-name-conflict\n         * @param {String} pluginName The duplicated plugin name.\n         * @param {Function} plugin1 The first plugin constructor.\n         * @param {Function} plugin2 The second plugin constructor.\n         */\n        log.warn('plugincollection-plugin-name-conflict: Two plugins with the same name were loaded.', {\n          pluginName: pluginName,\n          plugin1: this._plugins.get(pluginName).constructor,\n          plugin2: PluginConstructor\n        });\n      } else {\n        this._plugins.set(pluginName, plugin);\n      }\n    }\n  }]);\n\n  return PluginCollection;\n}();\n\nexport { PluginCollection as default };\nmix(PluginCollection, EmitterMixin);","import _regeneratorRuntime from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/commandcollection\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Collection of commands. Its instance is available in {@link module:core/editor/editor~Editor#commands `editor.commands`}.\n */\n\nvar CommandCollection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates collection instance.\n   */\n  function CommandCollection() {\n    _classCallCheck(this, CommandCollection);\n\n    /**\n     * Command map.\n     *\n     * @private\n     * @member {Map}\n     */\n    this._commands = new Map();\n  }\n  /**\n   * Registers a new command.\n   *\n   * @param {String} commandName The name of the command.\n   * @param {module:core/command~Command} command\n   */\n\n\n  _createClass(CommandCollection, [{\n    key: \"add\",\n    value: function add(commandName, command) {\n      this._commands.set(commandName, command);\n    }\n    /**\n     * Retrieves a command from the collection.\n     *\n     * @param {String} commandName The name of the command.\n     * @returns {module:core/command~Command}\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(commandName) {\n      return this._commands.get(commandName);\n    }\n    /**\n     * Executes a command.\n     *\n     * @param {String} commandName The name of the command.\n     * @param {*} [...commandParams] Command parameters.\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute(commandName) {\n      var command = this.get(commandName);\n\n      if (!command) {\n        /**\n         * Command does not exist.\n         *\n         * @error commandcollection-command-not-found\n         * @param {String} commandName Name of the command.\n         */\n        throw new CKEditorError('commandcollection-command-not-found: Command does not exist.', {\n          commandName: commandName\n        });\n      }\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      command.execute.apply(command, args);\n    }\n    /**\n     * Returns iterator of command names.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"names\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function names() {\n      return _regeneratorRuntime.wrap(function names$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.delegateYield(this._commands.keys(), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, names, this);\n    })\n    /**\n     * Returns iterator of command instances.\n     *\n     * @returns {Iterable.<module:core/command~Command>}\n     */\n\n  }, {\n    key: \"commands\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function commands() {\n      return _regeneratorRuntime.wrap(function commands$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.delegateYield(this._commands.values(), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, commands, this);\n    })\n    /**\n     * Iterable interface.\n     *\n     * Returns `[ commandName, commandInstance ]` pairs.\n     *\n     * @returns {Iterable.<Array>}\n     */\n\n  }, {\n    key: Symbol.iterator,\n    value: function value() {\n      return this._commands[Symbol.iterator]();\n    }\n    /**\n     * Destroys all collection commands.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.commands()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var command = _step.value;\n          command.destroy();\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }]);\n\n  return CommandCollection;\n}();\n\nexport { CommandCollection as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals window */\n\n/**\n * @module utils/translation-service\n */\n\n/* istanbul ignore else */\nif (!window.CKEDITOR_TRANSLATIONS) {\n  window.CKEDITOR_TRANSLATIONS = {};\n}\n/**\n * Adds translations to existing ones.\n * These translations will later be available for the {@link module:utils/translation-service~translate `translate()`} function.\n *\n *\t\tadd( 'pl', {\n *\t\t\t'OK': 'OK',\n *\t\t\t'Cancel [context: reject]': 'Anuluj'\n *\t\t} );\n *\n * If you cannot import this function from this module (e.g. because you use a CKEditor 5 build), then you can\n * still add translations by extending the global `window.CKEDITOR_TRANSLATIONS` object by using a function like\n * the one below:\n *\n *\t\tfunction addTranslations( language, translations ) {\n *\t\t\tif ( !window.CKEDITOR_TRANSLATIONS ) {\n *\t\t\t\twindow.CKEDITOR_TRANSLATIONS = {};\n *\t\t\t}\n *\n *\t\t\tconst dictionary = window.CKEDITOR_TRANSLATIONS[ language ] || ( window.CKEDITOR_TRANSLATIONS[ language ] = {} );\n *\n *\t\t\t// Extend the dictionary for the given language.\n *\t\t\tObject.assign( dictionary, translations );\n *\t\t}\n *\n * @param {String} language Target language.\n * @param {Object.<String, String>} translations Translations which will be added to the dictionary.\n */\n\n\nexport function add(language, translations) {\n  var dictionary = window.CKEDITOR_TRANSLATIONS[language] || (window.CKEDITOR_TRANSLATIONS[language] = {});\n  Object.assign(dictionary, translations);\n}\n/**\n * Translates string if the translation of the string was previously added to the dictionary.\n * See {@link module:utils/translation-service Translation Service}.\n * This happens in a multi-language mode were translation modules are created by the bundler.\n *\n * When no translation is defined in the dictionary or the dictionary doesn't exist this function returns\n * the original string without the `'[context: ]'` (happens in development and single-language modes).\n *\n * In a single-language mode (when values passed to `t()` were replaced with target language strings) the dictionary\n * is left empty, so this function will return the original strings always.\n *\n *\t\ttranslate( 'pl', 'Cancel [context: reject]' );\n *\n * @param {String} language Target language.\n * @param {String} translationKey String that will be translated.\n * @returns {String} Translated sentence.\n */\n\nexport function translate(language, translationKey) {\n  var numberOfLanguages = getNumberOfLanguages();\n\n  if (numberOfLanguages === 1) {\n    // Override the language to the only supported one.\n    // This can't be done in the `Locale` class, because the translations comes after the `Locale` class initialization.\n    language = Object.keys(window.CKEDITOR_TRANSLATIONS)[0];\n  }\n\n  if (numberOfLanguages === 0 || !hasTranslation(language, translationKey)) {\n    return translationKey.replace(/ \\[context: [^\\]]+\\]$/, '');\n  }\n\n  var dictionary = window.CKEDITOR_TRANSLATIONS[language]; // In case of missing translations we still need to cut off the `[context: ]` parts.\n\n  return dictionary[translationKey].replace(/ \\[context: [^\\]]+\\]$/, '');\n}\n/**\n * Clears dictionaries for test purposes.\n *\n * @protected\n */\n\nexport function _clear() {\n  window.CKEDITOR_TRANSLATIONS = {};\n} // Checks whether the dictionary exists and translation in that dictionary exists.\n\nfunction hasTranslation(language, translationKey) {\n  return language in window.CKEDITOR_TRANSLATIONS && translationKey in window.CKEDITOR_TRANSLATIONS[language];\n}\n\nfunction getNumberOfLanguages() {\n  return Object.keys(window.CKEDITOR_TRANSLATIONS).length;\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/locale\n */\nimport { translate } from './translation-service';\n/**\n * Represents the localization services.\n */\n\nvar Locale =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new instance of the Locale class.\n   *\n   * @param {String} [language='en'] The language code in [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n   */\n  function Locale(language) {\n    var _this = this;\n\n    _classCallCheck(this, Locale);\n\n    /**\n     * The language code in [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n     *\n     * @readonly\n     * @member {String}\n     */\n    this.language = language || 'en';\n    /**\n     * Translates the given string to the {@link #language}. This method is also available in {@link module:core/editor/editor~Editor#t}\n     * and {@link module:ui/view~View#t}.\n     *\n     * The strings may contain placeholders (`%<index>`) for values which are passed as the second argument.\n     * `<index>` is the index in the `values` array.\n     *\n     *\t\teditor.t( 'Created file \"%0\" in %1ms.', [ fileName, timeTaken ] );\n     *\n     * This method's context is statically bound to Locale instance,\n     * so it can be called as a function:\n     *\n     *\t\tconst t = this.t;\n     *\t\tt( 'Label' );\n     *\n     * @method #t\n     * @param {String} str The string to translate.\n     * @param {String[]} [values] Values that should be used to interpolate the string.\n     */\n\n    this.t = function () {\n      return _this._t.apply(_this, arguments);\n    };\n  }\n  /**\n   * Base for the {@link #t} method.\n   *\n   * @private\n   */\n\n\n  _createClass(Locale, [{\n    key: \"_t\",\n    value: function _t(str, values) {\n      var translatedString = translate(this.language, str);\n\n      if (values) {\n        translatedString = translatedString.replace(/%(\\d+)/g, function (match, index) {\n          return index < values.length ? values[index] : match;\n        });\n      }\n\n      return translatedString;\n    }\n  }]);\n\n  return Locale;\n}();\n\nexport { Locale as default };","import _toConsumableArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/viewconsumable\n */\nimport { isArray } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Class used for handling consumption of view {@link module:engine/view/element~Element elements},\n * {@link module:engine/view/text~Text text nodes} and {@link module:engine/view/documentfragment~DocumentFragment document fragments}.\n * Element's name and its parts (attributes, classes and styles) can be consumed separately. Consuming an element's name\n * does not consume its attributes, classes and styles.\n * To add items for consumption use {@link module:engine/conversion/viewconsumable~ViewConsumable#add add method}.\n * To test items use {@link module:engine/conversion/viewconsumable~ViewConsumable#test test method}.\n * To consume items use {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consume method}.\n * To revert already consumed items use {@link module:engine/conversion/viewconsumable~ViewConsumable#revert revert method}.\n *\n *\t\tviewConsumable.add( element, { name: true } ); // Adds element's name as ready to be consumed.\n *\t\tviewConsumable.add( textNode ); // Adds text node for consumption.\n *\t\tviewConsumable.add( docFragment ); // Adds document fragment for consumption.\n *\t\tviewConsumable.test( element, { name: true }  ); // Tests if element's name can be consumed.\n *\t\tviewConsumable.test( textNode ); // Tests if text node can be consumed.\n *\t\tviewConsumable.test( docFragment ); // Tests if document fragment can be consumed.\n *\t\tviewConsumable.consume( element, { name: true }  ); // Consume element's name.\n *\t\tviewConsumable.consume( textNode ); // Consume text node.\n *\t\tviewConsumable.consume( docFragment ); // Consume document fragment.\n *\t\tviewConsumable.revert( element, { name: true }  ); // Revert already consumed element's name.\n *\t\tviewConsumable.revert( textNode ); // Revert already consumed text node.\n *\t\tviewConsumable.revert( docFragment ); // Revert already consumed document fragment.\n */\n\nvar ViewConsumable =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates new ViewConsumable.\n   */\n  function ViewConsumable() {\n    _classCallCheck(this, ViewConsumable);\n\n    /**\n     * Map of consumable elements. If {@link module:engine/view/element~Element element} is used as a key,\n     * {@link module:engine/conversion/viewconsumable~ViewElementConsumables ViewElementConsumables} instance is stored as value.\n     * For {@link module:engine/view/text~Text text nodes} and\n     * {@link module:engine/view/documentfragment~DocumentFragment document fragments} boolean value is stored as value.\n     *\n     * @protected\n     * @member {Map.<module:engine/conversion/viewconsumable~ViewElementConsumables|Boolean>}\n    */\n    this._consumables = new Map();\n  }\n  /**\n   * Adds {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n   * {@link module:engine/view/documentfragment~DocumentFragment document fragment} as ready to be consumed.\n   *\n   *\t\tviewConsumable.add( p, { name: true } ); // Adds element's name to consume.\n   *\t\tviewConsumable.add( p, { attributes: 'name' } ); // Adds element's attribute.\n   *\t\tviewConsumable.add( p, { classes: 'foobar' } ); // Adds element's class.\n   *\t\tviewConsumable.add( p, { styles: 'color' } ); // Adds element's style\n   *\t\tviewConsumable.add( p, { attributes: 'name', styles: 'color' } ); // Adds attribute and style.\n   *\t\tviewConsumable.add( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be provided.\n   *\t\tviewConsumable.add( textNode ); // Adds text node to consume.\n   *\t\tviewConsumable.add( docFragment ); // Adds document fragment to consume.\n   *\n   * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n   * attribute is provided - it should be handled separately by providing actual style/class.\n   *\n   *\t\tviewConsumable.add( p, { attributes: 'style' } ); // This call will throw an exception.\n   *\t\tviewConsumable.add( p, { styles: 'color' } ); // This is properly handled style.\n   *\n   * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n   * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n   * @param {Boolean} consumables.name If set to true element's name will be included.\n   * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n   * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n   * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n   */\n\n\n  _createClass(ViewConsumable, [{\n    key: \"add\",\n    value: function add(element, consumables) {\n      var elementConsumables; // For text nodes and document fragments just mark them as consumable.\n\n      if (element.is('text') || element.is('documentFragment')) {\n        this._consumables.set(element, true);\n\n        return;\n      } // For elements create new ViewElementConsumables or update already existing one.\n\n\n      if (!this._consumables.has(element)) {\n        elementConsumables = new ViewElementConsumables();\n\n        this._consumables.set(element, elementConsumables);\n      } else {\n        elementConsumables = this._consumables.get(element);\n      }\n\n      elementConsumables.add(consumables);\n    }\n    /**\n     * Tests if {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n     * {@link module:engine/view/documentfragment~DocumentFragment document fragment} can be consumed.\n     * It returns `true` when all items included in method's call can be consumed. Returns `false` when\n     * first already consumed item is found and `null` when first non-consumable item is found.\n     *\n     *\t\tviewConsumable.test( p, { name: true } ); // Tests element's name.\n     *\t\tviewConsumable.test( p, { attributes: 'name' } ); // Tests attribute.\n     *\t\tviewConsumable.test( p, { classes: 'foobar' } ); // Tests class.\n     *\t\tviewConsumable.test( p, { styles: 'color' } ); // Tests style.\n     *\t\tviewConsumable.test( p, { attributes: 'name', styles: 'color' } ); // Tests attribute and style.\n     *\t\tviewConsumable.test( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be tested.\n     *\t\tviewConsumable.test( textNode ); // Tests text node.\n     *\t\tviewConsumable.test( docFragment ); // Tests document fragment.\n     *\n     * Testing classes and styles as attribute will test if all added classes/styles can be consumed.\n     *\n     *\t\tviewConsumable.test( p, { attributes: 'class' } ); // Tests if all added classes can be consumed.\n     *\t\tviewConsumable.test( p, { attributes: 'style' } ); // Tests if all added styles can be consumed.\n     *\n     * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n     * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n     * @param {Boolean} consumables.name If set to true element's name will be included.\n     * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n     * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n     * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n     * @returns {Boolean|null} Returns `true` when all items included in method's call can be consumed. Returns `false`\n     * when first already consumed item is found and `null` when first non-consumable item is found.\n     */\n\n  }, {\n    key: \"test\",\n    value: function test(element, consumables) {\n      var elementConsumables = this._consumables.get(element);\n\n      if (elementConsumables === undefined) {\n        return null;\n      } // For text nodes and document fragments return stored boolean value.\n\n\n      if (element.is('text') || element.is('documentFragment')) {\n        return elementConsumables;\n      } // For elements test consumables object.\n\n\n      return elementConsumables.test(consumables);\n    }\n    /**\n     * Consumes {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n     * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n     * It returns `true` when all items included in method's call can be consumed, otherwise returns `false`.\n     *\n     *\t\tviewConsumable.consume( p, { name: true } ); // Consumes element's name.\n     *\t\tviewConsumable.consume( p, { attributes: 'name' } ); // Consumes element's attribute.\n     *\t\tviewConsumable.consume( p, { classes: 'foobar' } ); // Consumes element's class.\n     *\t\tviewConsumable.consume( p, { styles: 'color' } ); // Consumes element's style.\n     *\t\tviewConsumable.consume( p, { attributes: 'name', styles: 'color' } ); // Consumes attribute and style.\n     *\t\tviewConsumable.consume( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be consumed.\n     *\t\tviewConsumable.consume( textNode ); // Consumes text node.\n     *\t\tviewConsumable.consume( docFragment ); // Consumes document fragment.\n     *\n     * Consuming classes and styles as attribute will test if all added classes/styles can be consumed.\n     *\n     *\t\tviewConsumable.consume( p, { attributes: 'class' } ); // Consume only if all added classes can be consumed.\n     *\t\tviewConsumable.consume( p, { attributes: 'style' } ); // Consume only if all added styles can be consumed.\n     *\n     * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n     * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n     * @param {Boolean} consumables.name If set to true element's name will be included.\n     * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n     * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n     * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n     * @returns {Boolean} Returns `true` when all items included in method's call can be consumed,\n     * otherwise returns `false`.\n     */\n\n  }, {\n    key: \"consume\",\n    value: function consume(element, consumables) {\n      if (this.test(element, consumables)) {\n        if (element.is('text') || element.is('documentFragment')) {\n          // For text nodes and document fragments set value to false.\n          this._consumables.set(element, false);\n        } else {\n          // For elements - consume consumables object.\n          this._consumables.get(element).consume(consumables);\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Reverts {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n     * {@link module:engine/view/documentfragment~DocumentFragment document fragment} so they can be consumed once again.\n     * Method does not revert items that were never previously added for consumption, even if they are included in\n     * method's call.\n     *\n     *\t\tviewConsumable.revert( p, { name: true } ); // Reverts element's name.\n     *\t\tviewConsumable.revert( p, { attributes: 'name' } ); // Reverts element's attribute.\n     *\t\tviewConsumable.revert( p, { classes: 'foobar' } ); // Reverts element's class.\n     *\t\tviewConsumable.revert( p, { styles: 'color' } ); // Reverts element's style.\n     *\t\tviewConsumable.revert( p, { attributes: 'name', styles: 'color' } ); // Reverts attribute and style.\n     *\t\tviewConsumable.revert( p, { classes: [ 'baz', 'bar' ] } ); // Multiple names can be reverted.\n     *\t\tviewConsumable.revert( textNode ); // Reverts text node.\n     *\t\tviewConsumable.revert( docFragment ); // Reverts document fragment.\n     *\n     * Reverting classes and styles as attribute will revert all classes/styles that were previously added for\n     * consumption.\n     *\n     *\t\tviewConsumable.revert( p, { attributes: 'class' } ); // Reverts all classes added for consumption.\n     *\t\tviewConsumable.revert( p, { attributes: 'style' } ); // Reverts all styles added for consumption.\n     *\n     * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n     * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n     * @param {Boolean} consumables.name If set to true element's name will be included.\n     * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n     * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n     * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n     */\n\n  }, {\n    key: \"revert\",\n    value: function revert(element, consumables) {\n      var elementConsumables = this._consumables.get(element);\n\n      if (elementConsumables !== undefined) {\n        if (element.is('text') || element.is('documentFragment')) {\n          // For text nodes and document fragments - set consumable to true.\n          this._consumables.set(element, true);\n        } else {\n          // For elements - revert items from consumables object.\n          elementConsumables.revert(consumables);\n        }\n      }\n    }\n    /**\n     * Creates consumable object from {@link module:engine/view/element~Element view element}. Consumable object will include\n     * element's name and all its attributes, classes and styles.\n     *\n     * @static\n     * @param {module:engine/view/element~Element} element\n     * @returns {Object} consumables\n     */\n\n  }], [{\n    key: \"consumablesFromElement\",\n    value: function consumablesFromElement(element) {\n      var consumables = {\n        name: true,\n        attributes: [],\n        classes: [],\n        styles: []\n      };\n      var attributes = element.getAttributeKeys();\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = attributes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var attribute = _step.value;\n\n          // Skip classes and styles - will be added separately.\n          if (attribute == 'style' || attribute == 'class') {\n            continue;\n          }\n\n          consumables.attributes.push(attribute);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var classes = element.getClassNames();\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = classes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var className = _step2.value;\n          consumables.classes.push(className);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var styles = element.getStyleNames();\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = styles[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var style = _step3.value;\n          consumables.styles.push(style);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return consumables;\n    }\n    /**\n     * Creates {@link module:engine/conversion/viewconsumable~ViewConsumable ViewConsumable} instance from\n     * {@link module:engine/view/node~Node node} or {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n     * Instance will contain all elements, child nodes, attributes, styles and classes added for consumption.\n     *\n     * @static\n     * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} from View node or document fragment\n     * from which `ViewConsumable` will be created.\n     * @param {module:engine/conversion/viewconsumable~ViewConsumable} [instance] If provided, given `ViewConsumable` instance will be used\n     * to add all consumables. It will be returned instead of a new instance.\n     */\n\n  }, {\n    key: \"createFrom\",\n    value: function createFrom(from, instance) {\n      if (!instance) {\n        instance = new ViewConsumable();\n      }\n\n      if (from.is('text')) {\n        instance.add(from);\n        return instance;\n      } // Add `from` itself, if it is an element.\n\n\n      if (from.is('element')) {\n        instance.add(from, ViewConsumable.consumablesFromElement(from));\n      }\n\n      if (from.is('documentFragment')) {\n        instance.add(from);\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = from.getChildren()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var child = _step4.value;\n          instance = ViewConsumable.createFrom(child, instance);\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return instance;\n    }\n  }]);\n\n  return ViewConsumable;\n}();\n/**\n * This is a private helper-class for {@link module:engine/conversion/viewconsumable~ViewConsumable}.\n * It represents and manipulates consumable parts of a single {@link module:engine/view/element~Element}.\n *\n * @private\n */\n\n\nexport { ViewConsumable as default };\n\nvar ViewElementConsumables =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates ViewElementConsumables instance.\n   */\n  function ViewElementConsumables() {\n    _classCallCheck(this, ViewElementConsumables);\n\n    /**\n     * Flag indicating if name of the element can be consumed.\n     *\n     * @private\n     * @member {Boolean}\n     */\n    this._canConsumeName = null;\n    /**\n     * Contains maps of element's consumables: attributes, classes and styles.\n     *\n     * @private\n     * @member {Object}\n     */\n\n    this._consumables = {\n      attributes: new Map(),\n      styles: new Map(),\n      classes: new Map()\n    };\n  }\n  /**\n   * Adds consumable parts of the {@link module:engine/view/element~Element view element}.\n   * Element's name itself can be marked to be consumed (when element's name is consumed its attributes, classes and\n   * styles still could be consumed):\n   *\n   *\t\tconsumables.add( { name: true } );\n   *\n   * Attributes classes and styles:\n   *\n   *\t\tconsumables.add( { attributes: 'title', classes: 'foo', styles: 'color' } );\n   *\t\tconsumables.add( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n   *\n   * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n   * attribute is provided - it should be handled separately by providing `style` and `class` in consumables object.\n   *\n   * @param {Object} consumables Object describing which parts of the element can be consumed.\n   * @param {Boolean} consumables.name If set to `true` element's name will be added as consumable.\n   * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to add as consumable.\n   * @param {String|Array.<String>} consumables.classes Class name or array of class names to add as consumable.\n   * @param {String|Array.<String>} consumables.styles Style name or array of style names to add as consumable.\n   */\n\n\n  _createClass(ViewElementConsumables, [{\n    key: \"add\",\n    value: function add(consumables) {\n      if (consumables.name) {\n        this._canConsumeName = true;\n      }\n\n      for (var type in this._consumables) {\n        if (type in consumables) {\n          this._add(type, consumables[type]);\n        }\n      }\n    }\n    /**\n     * Tests if parts of the {@link module:engine/view/node~Node view node} can be consumed.\n     *\n     * Element's name can be tested:\n     *\n     *\t\tconsumables.test( { name: true } );\n     *\n     * Attributes classes and styles:\n     *\n     *\t\tconsumables.test( { attributes: 'title', classes: 'foo', styles: 'color' } );\n     *\t\tconsumables.test( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n     *\n     * @param {Object} consumables Object describing which parts of the element should be tested.\n     * @param {Boolean} consumables.name If set to `true` element's name will be tested.\n     * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to test.\n     * @param {String|Array.<String>} consumables.classes Class name or array of class names to test.\n     * @param {String|Array.<String>} consumables.styles Style name or array of style names to test.\n     * @returns {Boolean|null} `true` when all tested items can be consumed, `null` when even one of the items\n     * was never marked for consumption and `false` when even one of the items was already consumed.\n     */\n\n  }, {\n    key: \"test\",\n    value: function test(consumables) {\n      // Check if name can be consumed.\n      if (consumables.name && !this._canConsumeName) {\n        return this._canConsumeName;\n      }\n\n      for (var type in this._consumables) {\n        if (type in consumables) {\n          var value = this._test(type, consumables[type]);\n\n          if (value !== true) {\n            return value;\n          }\n        }\n      } // Return true only if all can be consumed.\n\n\n      return true;\n    }\n    /**\n     * Consumes parts of {@link module:engine/view/element~Element view element}. This function does not check if consumable item\n     * is already consumed - it consumes all consumable items provided.\n     * Element's name can be consumed:\n     *\n     *\t\tconsumables.consume( { name: true } );\n     *\n     * Attributes classes and styles:\n     *\n     *\t\tconsumables.consume( { attributes: 'title', classes: 'foo', styles: 'color' } );\n     *\t\tconsumables.consume( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n     *\n     * @param {Object} consumables Object describing which parts of the element should be consumed.\n     * @param {Boolean} consumables.name If set to `true` element's name will be consumed.\n     * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to consume.\n     * @param {String|Array.<String>} consumables.classes Class name or array of class names to consume.\n     * @param {String|Array.<String>} consumables.styles Style name or array of style names to consume.\n     */\n\n  }, {\n    key: \"consume\",\n    value: function consume(consumables) {\n      if (consumables.name) {\n        this._canConsumeName = false;\n      }\n\n      for (var type in this._consumables) {\n        if (type in consumables) {\n          this._consume(type, consumables[type]);\n        }\n      }\n    }\n    /**\n     * Revert already consumed parts of {@link module:engine/view/element~Element view Element}, so they can be consumed once again.\n     * Element's name can be reverted:\n     *\n     *\t\tconsumables.revert( { name: true } );\n     *\n     * Attributes classes and styles:\n     *\n     *\t\tconsumables.revert( { attributes: 'title', classes: 'foo', styles: 'color' } );\n     *\t\tconsumables.revert( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n     *\n     * @param {Object} consumables Object describing which parts of the element should be reverted.\n     * @param {Boolean} consumables.name If set to `true` element's name will be reverted.\n     * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to revert.\n     * @param {String|Array.<String>} consumables.classes Class name or array of class names to revert.\n     * @param {String|Array.<String>} consumables.styles Style name or array of style names to revert.\n     */\n\n  }, {\n    key: \"revert\",\n    value: function revert(consumables) {\n      if (consumables.name) {\n        this._canConsumeName = true;\n      }\n\n      for (var type in this._consumables) {\n        if (type in consumables) {\n          this._revert(type, consumables[type]);\n        }\n      }\n    }\n    /**\n     * Helper method that adds consumables of a given type: attribute, class or style.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n     * type is provided - it should be handled separately by providing actual style/class type.\n     *\n     * @private\n     * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\n     * @param {String|Array.<String>} item Consumable item or array of items.\n     */\n\n  }, {\n    key: \"_add\",\n    value: function _add(type, item) {\n      var items = isArray(item) ? item : [item];\n      var consumables = this._consumables[type];\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = items[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var name = _step5.value;\n\n          if (type === 'attributes' && (name === 'class' || name === 'style')) {\n            /**\n             * Class and style attributes should be handled separately in\n             * {@link module:engine/conversion/viewconsumable~ViewConsumable#add `ViewConsumable#add()`}.\n             *\n             * What you have done is trying to use:\n             *\n             *\t\tconsumables.add( { attributes: [ 'class', 'style' ] } );\n             *\n             * While each class and style should be registered separately:\n             *\n             *\t\tconsumables.add( { classes: 'some-class', styles: 'font-weight' } );\n             *\n             * @error viewconsumable-invalid-attribute\n             */\n            throw new CKEditorError('viewconsumable-invalid-attribute: Classes and styles should be handled separately.');\n          }\n\n          consumables.set(name, true);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n    }\n    /**\n     * Helper method that tests consumables of a given type: attribute, class or style.\n     *\n     * @private\n     * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\n     * @param {String|Array.<String>} item Consumable item or array of items.\n     * @returns {Boolean|null} Returns `true` if all items can be consumed, `null` when one of the items cannot be\n     * consumed and `false` when one of the items is already consumed.\n     */\n\n  }, {\n    key: \"_test\",\n    value: function _test(type, item) {\n      var items = isArray(item) ? item : [item];\n      var consumables = this._consumables[type];\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = items[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var name = _step6.value;\n\n          if (type === 'attributes' && (name === 'class' || name === 'style')) {\n            var consumableName = name == 'class' ? 'classes' : 'styles'; // Check all classes/styles if class/style attribute is tested.\n\n            var value = this._test(consumableName, _toConsumableArray(this._consumables[consumableName].keys()));\n\n            if (value !== true) {\n              return value;\n            }\n          } else {\n            var _value = consumables.get(name); // Return null if attribute is not found.\n\n\n            if (_value === undefined) {\n              return null;\n            }\n\n            if (!_value) {\n              return false;\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Helper method that consumes items of a given type: attribute, class or style.\n     *\n     * @private\n     * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\n     * @param {String|Array.<String>} item Consumable item or array of items.\n     */\n\n  }, {\n    key: \"_consume\",\n    value: function _consume(type, item) {\n      var items = isArray(item) ? item : [item];\n      var consumables = this._consumables[type];\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = items[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var name = _step7.value;\n\n          if (type === 'attributes' && (name === 'class' || name === 'style')) {\n            var consumableName = name == 'class' ? 'classes' : 'styles'; // If class or style is provided for consumption - consume them all.\n\n            this._consume(consumableName, _toConsumableArray(this._consumables[consumableName].keys()));\n          } else {\n            consumables.set(name, false);\n          }\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n            _iterator7.return();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n    }\n    /**\n     * Helper method that reverts items of a given type: attribute, class or style.\n     *\n     * @private\n     * @param {String} type Type of the consumable item: `attributes`, `classes` or , `styles`.\n     * @param {String|Array.<String>} item Consumable item or array of items.\n     */\n\n  }, {\n    key: \"_revert\",\n    value: function _revert(type, item) {\n      var items = isArray(item) ? item : [item];\n      var consumables = this._consumables[type];\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = items[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var name = _step8.value;\n\n          if (type === 'attributes' && (name === 'class' || name === 'style')) {\n            var consumableName = name == 'class' ? 'classes' : 'styles'; // If class or style is provided for reverting - revert them all.\n\n            this._revert(consumableName, _toConsumableArray(this._consumables[consumableName].keys()));\n          } else {\n            var value = consumables.get(name);\n\n            if (value === false) {\n              consumables.set(name, true);\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n    }\n  }]);\n\n  return ViewElementConsumables;\n}();","import _regeneratorRuntime from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(combineWalkers),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(convertToMinimalFlatRanges);\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/schema\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport Range from './range';\nimport Position from './position';\nimport Element from './element';\nimport Text from './text';\nimport TreeWalker from './treewalker';\n/**\n * The model's schema. It defines allowed and disallowed structures of nodes as well as nodes' attributes.\n * The schema is usually defined by features and based on them the editing framework and features\n * make decisions how to change and process the model.\n *\n * The instance of schema is available in {@link module:engine/model/model~Model#schema `editor.model.schema`}.\n *\n * Read more about the schema in:\n *\n * * {@glink framework/guides/architecture/editing-engine#schema \"Schema\"} section of the\n * {@glink framework/guides/architecture/editing-engine Introduction to the \"Editing engine architecture\"}.\n * * {@glink framework/guides/deep-dive/schema \"Schema\" deep dive} guide.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Schema =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates schema instance.\n   */\n  function Schema() {\n    var _this = this;\n\n    _classCallCheck(this, Schema);\n\n    this._sourceDefinitions = {};\n    /**\n     * A dictionary containing attribute properties.\n     *\n     * @private\n     * @member {Object.<String,String>}\n     */\n\n    this._attributeProperties = {};\n    this.decorate('checkChild');\n    this.decorate('checkAttribute');\n    this.on('checkAttribute', function (evt, args) {\n      args[0] = new SchemaContext(args[0]);\n    }, {\n      priority: 'highest'\n    });\n    this.on('checkChild', function (evt, args) {\n      args[0] = new SchemaContext(args[0]);\n      args[1] = _this.getDefinition(args[1]);\n    }, {\n      priority: 'highest'\n    });\n  }\n  /**\n   * Registers schema item. Can only be called once for every item name.\n   *\n   *\t\tschema.register( 'paragraph', {\n   *\t\t\tinheritAllFrom: '$block'\n   *\t\t} );\n   *\n   * @param {String} itemName\n   * @param {module:engine/model/schema~SchemaItemDefinition} definition\n   */\n\n\n  _createClass(Schema, [{\n    key: \"register\",\n    value: function register(itemName, definition) {\n      if (this._sourceDefinitions[itemName]) {\n        /**\n         * A single item cannot be registered twice in the schema.\n         *\n         * This situation may happen when:\n         *\n         * * Two or more plugins called {@link #register `register()`} with the same name. This will usually mean that\n         * there is a collision between plugins which try to use the same element in the model. Unfortunately,\n         * the only way to solve this is by modifying one of these plugins to use a unique model element name.\n         * * A single plugin was loaded twice. This happens when it is installed by npm/yarn in two versions\n         * and usually means one or more of the following issues:\n         *     * a version mismatch (two of your dependencies require two different versions of this plugin),\n         *     * incorrect imports (this plugin is somehow imported twice in a way which confuses webpack),\n         *     * mess in `node_modules/` (`rm -rf node_modules/` may help).\n         *\n         * **Note:** Check the logged `itemName` to better understand which plugin was duplicated/conflicting.\n         *\n         * @param itemName The name of the model element that is being registered twice.\n         * @error schema-cannot-register-item-twice\n         */\n        throw new CKEditorError('schema-cannot-register-item-twice: A single item cannot be registered twice in the schema.', {\n          itemName: itemName\n        });\n      }\n\n      this._sourceDefinitions[itemName] = [Object.assign({}, definition)];\n\n      this._clearCache();\n    }\n    /**\n     * Extends a {@link #register registered} item's definition.\n     *\n     * Extending properties such as `allowIn` will add more items to the existing properties,\n     * while redefining properties such as `isBlock` will override the previously defined ones.\n     *\n     *\t\tschema.register( 'foo', {\n     *\t\t\tallowIn: '$root',\n     *\t\t\tisBlock: true;\n     *\t\t} );\n     *\t\tschema.extend( 'foo', {\n     *\t\t\tallowIn: 'blockQuote',\n     *\t\t\tisBlock: false\n     *\t\t} );\n     *\n     *\t\tschema.getDefinition( 'foo' );\n     *\t\t//\t{\n     *\t\t//\t\tallowIn: [ '$root', 'blockQuote' ],\n     *\t\t// \t\tisBlock: false\n     *\t\t//\t}\n     *\n     * @param {String} itemName\n     * @param {module:engine/model/schema~SchemaItemDefinition} definition\n     */\n\n  }, {\n    key: \"extend\",\n    value: function extend(itemName, definition) {\n      if (!this._sourceDefinitions[itemName]) {\n        /**\n         * Cannot extend an item which was not registered yet.\n         *\n         * This error happens when a plugin tries to extend the schema definition of an item which was not\n         * {@link #register registered} yet.\n         *\n         * @param itemName The name of the model element which is being extended.\n         * @error schema-cannot-register-item-twice\n         */\n        throw new CKEditorError('schema-cannot-extend-missing-item: Cannot extend an item which was not registered yet.', {\n          itemName: itemName\n        });\n      }\n\n      this._sourceDefinitions[itemName].push(Object.assign({}, definition));\n\n      this._clearCache();\n    }\n    /**\n     * Returns all registered items.\n     *\n     * @returns {Object.<String,module:engine/model/schema~SchemaCompiledItemDefinition>}\n     */\n\n  }, {\n    key: \"getDefinitions\",\n    value: function getDefinitions() {\n      if (!this._compiledDefinitions) {\n        this._compile();\n      }\n\n      return this._compiledDefinitions;\n    }\n    /**\n     * Returns a definition of the given item or `undefined` if item is not registered.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n     * @returns {module:engine/model/schema~SchemaCompiledItemDefinition}\n     */\n\n  }, {\n    key: \"getDefinition\",\n    value: function getDefinition(item) {\n      var itemName;\n\n      if (typeof item == 'string') {\n        itemName = item;\n      } else if (item.is && (item.is('text') || item.is('textProxy'))) {\n        itemName = '$text';\n      } // Element or module:engine/model/schema~SchemaContextItem.\n      else {\n          itemName = item.name;\n        }\n\n      return this.getDefinitions()[itemName];\n    }\n    /**\n     * Returns `true` if the given item is registered in the schema.\n     *\n     *\t\tschema.isRegistered( 'paragraph' ); // -> true\n     *\t\tschema.isRegistered( editor.model.document.getRoot() ); // -> true\n     *\t\tschema.isRegistered( 'foo' ); // -> false\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n     */\n\n  }, {\n    key: \"isRegistered\",\n    value: function isRegistered(item) {\n      return !!this.getDefinition(item);\n    }\n    /**\n     * Returns `true` if the given item is defined to be\n     * a block by {@link module:engine/model/schema~SchemaItemDefinition}'s `isBlock` property.\n     *\n     *\t\tschema.isBlock( 'paragraph' ); // -> true\n     *\t\tschema.isBlock( '$root' ); // -> false\n     *\n     *\t\tconst paragraphElement = writer.createElement( 'paragraph' );\n     *\t\tschema.isBlock( paragraphElement ); // -> true\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n     */\n\n  }, {\n    key: \"isBlock\",\n    value: function isBlock(item) {\n      var def = this.getDefinition(item);\n      return !!(def && def.isBlock);\n    }\n    /**\n     * Returns `true` if the given item is defined to be\n     * a limit element by {@link module:engine/model/schema~SchemaItemDefinition}'s `isLimit` or `isObject` property\n     * (all objects are also limits).\n     *\n     *\t\tschema.isLimit( 'paragraph' ); // -> false\n     *\t\tschema.isLimit( '$root' ); // -> true\n     *\t\tschema.isLimit( editor.model.document.getRoot() ); // -> true\n     *\t\tschema.isLimit( 'image' ); // -> true\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n     */\n\n  }, {\n    key: \"isLimit\",\n    value: function isLimit(item) {\n      var def = this.getDefinition(item);\n\n      if (!def) {\n        return false;\n      }\n\n      return !!(def.isLimit || def.isObject);\n    }\n    /**\n     * Returns `true` if the given item is defined to be\n     * an object element by {@link module:engine/model/schema~SchemaItemDefinition}'s `isObject` property.\n     *\n     *\t\tschema.isObject( 'paragraph' ); // -> false\n     *\t\tschema.isObject( 'image' ); // -> true\n     *\n     *\t\tconst imageElement = writer.createElement( 'image' );\n     *\t\tschema.isObject( imageElement ); // -> true\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n     */\n\n  }, {\n    key: \"isObject\",\n    value: function isObject(item) {\n      var def = this.getDefinition(item);\n      return !!(def && def.isObject);\n    }\n    /**\n     * Returns `true` if the given item is defined to be\n     * an inline element by {@link module:engine/model/schema~SchemaItemDefinition}'s `isInline` property.\n     *\n     *\t\tschema.isInline( 'paragraph' ); // -> false\n     *\t\tschema.isInline( 'softBreak' ); // -> true\n     *\n     *\t\tconst text = writer.createText('foo' );\n     *\t\tschema.isInline( text ); // -> true\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n     */\n\n  }, {\n    key: \"isInline\",\n    value: function isInline(item) {\n      var def = this.getDefinition(item);\n      return !!(def && def.isInline);\n    }\n    /**\n     * Checks whether the given node (`child`) can be a child of the given context.\n     *\n     *\t\tschema.checkChild( model.document.getRoot(), paragraph ); // -> false\n     *\n     *\t\tschema.register( 'paragraph', {\n     *\t\t\tallowIn: '$root'\n     *\t\t} );\n     *\t\tschema.checkChild( model.document.getRoot(), paragraph ); // -> true\n     *\n     * Note: When verifying whether the given node can be a child of the given context, the\n     * schema also verifies the entire context &mdash; from its root to its last element. Therefore, it is possible\n     * for `checkChild()` to return `false` even though the context's last element can contain the checked child.\n     * It happens if one of the context's elements does not allow its child.\n     *\n     * @fires checkChild\n     * @param {module:engine/model/schema~SchemaContextDefinition} context The context in which the child will be checked.\n     * @param {module:engine/model/node~Node|String} def The child to check.\n     */\n\n  }, {\n    key: \"checkChild\",\n    value: function checkChild(context, def) {\n      // Note: context and child are already normalized here to a SchemaContext and SchemaCompiledItemDefinition.\n      if (!def) {\n        return false;\n      }\n\n      return this._checkContextMatch(def, context);\n    }\n    /**\n     * Checks whether the given attribute can be applied in the given context (on the last\n     * item of the context).\n     *\n     *\t\tschema.checkAttribute( textNode, 'bold' ); // -> false\n     *\n     *\t\tschema.extend( '$text', {\n     *\t\t\tallowAttributes: 'bold'\n     *\t\t} );\n     *\t\tschema.checkAttribute( textNode, 'bold' ); // -> true\n     *\n     * @fires checkAttribute\n     * @param {module:engine/model/schema~SchemaContextDefinition} context The context in which the attribute will be checked.\n     * @param {String} attributeName\n     */\n\n  }, {\n    key: \"checkAttribute\",\n    value: function checkAttribute(context, attributeName) {\n      var def = this.getDefinition(context.last);\n\n      if (!def) {\n        return false;\n      }\n\n      return def.allowAttributes.includes(attributeName);\n    }\n    /**\n     * Checks whether the given element (`elementToMerge`) can be merged with the specified base element (`positionOrBaseElement`).\n     *\n     * In other words &mdash; whether `elementToMerge`'s children {@link #checkChild are allowed} in the `positionOrBaseElement`.\n     *\n     * This check ensures that elements merged with {@link module:engine/model/writer~Writer#merge `Writer#merge()`}\n     * will be valid.\n     *\n     * Instead of elements, you can pass the instance of the {@link module:engine/model/position~Position} class as the\n     * `positionOrBaseElement`. It means that the elements before and after the position will be checked whether they can be merged.\n     *\n     * @param {module:engine/model/position~Position|module:engine/model/element~Element} positionOrBaseElement The position or base\n     * element to which the `elementToMerge` will be merged.\n     * @param {module:engine/model/element~Element} elementToMerge The element to merge. Required if `positionOrBaseElement` is an element.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"checkMerge\",\n    value: function checkMerge(positionOrBaseElement) {\n      var elementToMerge = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (positionOrBaseElement instanceof Position) {\n        var nodeBefore = positionOrBaseElement.nodeBefore;\n        var nodeAfter = positionOrBaseElement.nodeAfter;\n\n        if (!(nodeBefore instanceof Element)) {\n          /**\n           * The node before the merge position must be an element.\n           *\n           * @error schema-check-merge-no-element-before\n           */\n          throw new CKEditorError('schema-check-merge-no-element-before: The node before the merge position must be an element.');\n        }\n\n        if (!(nodeAfter instanceof Element)) {\n          /**\n           * The node after the merge position must be an element.\n           *\n           * @error schema-check-merge-no-element-after\n           */\n          throw new CKEditorError('schema-check-merge-no-element-after: The node after the merge position must be an element.');\n        }\n\n        return this.checkMerge(nodeBefore, nodeAfter);\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = elementToMerge.getChildren()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var child = _step.value;\n\n          if (!this.checkChild(positionOrBaseElement, child)) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Allows registering a callback to the {@link #checkChild} method calls.\n     *\n     * Callbacks allow you to implement rules which are not otherwise possible to achieve\n     * by using the declarative API of {@link module:engine/model/schema~SchemaItemDefinition}.\n     * For example, by using this method you can disallow elements in specific contexts.\n     *\n     * This method is a shorthand for using the {@link #event:checkChild} event. For even better control,\n     * you can use that event instead.\n     *\n     * Example:\n     *\n     *\t\t// Disallow heading1 directly inside a blockQuote.\n     *\t\tschema.addChildCheck( ( context, childDefinition ) => {\n     *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition.name == 'heading1' ) {\n     *\t\t\t\treturn false;\n     *\t\t\t}\n     *\t\t} );\n     *\n     * Which translates to:\n     *\n     *\t\tschema.on( 'checkChild', ( evt, args ) => {\n     *\t\t\tconst context = args[ 0 ];\n     *\t\t\tconst childDefinition = args[ 1 ];\n     *\n     *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition && childDefinition.name == 'heading1' ) {\n     *\t\t\t\t// Prevent next listeners from being called.\n     *\t\t\t\tevt.stop();\n     *\t\t\t\t// Set the checkChild()'s return value.\n     *\t\t\t\tevt.return = false;\n     *\t\t\t}\n     *\t\t}, { priority: 'high' } );\n     *\n     * @param {Function} callback The callback to be called. It is called with two parameters:\n     * {@link module:engine/model/schema~SchemaContext} (context) instance and\n     * {@link module:engine/model/schema~SchemaCompiledItemDefinition} (child-to-check definition).\n     * The callback may return `true/false` to override `checkChild()`'s return value. If it does not return\n     * a boolean value, the default algorithm (or other callbacks) will define `checkChild()`'s return value.\n     */\n\n  }, {\n    key: \"addChildCheck\",\n    value: function addChildCheck(callback) {\n      this.on('checkChild', function (evt, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            ctx = _ref2[0],\n            childDef = _ref2[1];\n\n        // checkChild() was called with a non-registered child.\n        // In 99% cases such check should return false, so not to overcomplicate all callbacks\n        // don't even execute them.\n        if (!childDef) {\n          return;\n        }\n\n        var retValue = callback(ctx, childDef);\n\n        if (typeof retValue == 'boolean') {\n          evt.stop();\n          evt.return = retValue;\n        }\n      }, {\n        priority: 'high'\n      });\n    }\n    /**\n     * Allows registering a callback to the {@link #checkAttribute} method calls.\n     *\n     * Callbacks allow you to implement rules which are not otherwise possible to achieve\n     * by using the declarative API of {@link module:engine/model/schema~SchemaItemDefinition}.\n     * For example, by using this method you can disallow attribute if node to which it is applied\n     * is contained within some other element (e.g. you want to disallow `bold` on `$text` within `heading1`).\n     *\n     * This method is a shorthand for using the {@link #event:checkAttribute} event. For even better control,\n     * you can use that event instead.\n     *\n     * Example:\n     *\n     *\t\t// Disallow bold on $text inside heading1.\n     *\t\tschema.addAttributeCheck( ( context, attributeName ) => {\n     *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\n     *\t\t\t\treturn false;\n     *\t\t\t}\n     *\t\t} );\n     *\n     * Which translates to:\n     *\n     *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n     *\t\t\tconst context = args[ 0 ];\n     *\t\t\tconst attributeName = args[ 1 ];\n     *\n     *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\n     *\t\t\t\t// Prevent next listeners from being called.\n     *\t\t\t\tevt.stop();\n     *\t\t\t\t// Set the checkAttribute()'s return value.\n     *\t\t\t\tevt.return = false;\n     *\t\t\t}\n     *\t\t}, { priority: 'high' } );\n     *\n     * @param {Function} callback The callback to be called. It is called with two parameters:\n     * {@link module:engine/model/schema~SchemaContext} (context) instance and attribute name.\n     * The callback may return `true/false` to override `checkAttribute()`'s return value. If it does not return\n     * a boolean value, the default algorithm (or other callbacks) will define `checkAttribute()`'s return value.\n     */\n\n  }, {\n    key: \"addAttributeCheck\",\n    value: function addAttributeCheck(callback) {\n      this.on('checkAttribute', function (evt, _ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            ctx = _ref4[0],\n            attributeName = _ref4[1];\n\n        var retValue = callback(ctx, attributeName);\n\n        if (typeof retValue == 'boolean') {\n          evt.stop();\n          evt.return = retValue;\n        }\n      }, {\n        priority: 'high'\n      });\n    }\n    /**\n     * This method allows assigning additional metadata to the model attributes. For example,\n     * {@link module:engine/model/schema~AttributeProperties `AttributeProperties#isFormatting` property} is\n     * used to mark formatting attributes (like `bold` or `italic`).\n     *\n     *\t\t// Mark bold as a formatting attribute.\n     *\t\tschema.setAttributeProperties( 'bold', {\n     *\t\t\tisFormatting: true\n     *\t\t} );\n     *\n     *\t\t// Override code not to be considered a formatting markup.\n     *\t\tschema.setAttributeProperties( 'code', {\n     *\t\t\tisFormatting: false\n     *\t\t} );\n     *\n     * Properties are not limited to members defined in the\n     * {@link module:engine/model/schema~AttributeProperties `AttributeProperties` type} and you can also use custom properties:\n     *\n     *\t\tschema.setAttributeProperties( 'blockQuote', {\n     *\t\t\tcustomProperty: 'value'\n     *\t\t} );\n     *\n     * Subsequent calls with the same attribute will extend its custom properties:\n     *\n     *\t\tschema.setAttributeProperties( 'blockQuote', {\n     *\t\t\tone: 1\n     *\t\t} );\n     *\n     *\t\tschema.setAttributeProperties( 'blockQuote', {\n     *\t\t\ttwo: 2\n     *\t\t} );\n     *\n     *\t\tconsole.log( schema.getAttributeProperties( 'blockQuote' ) );\n     *\t\t// Logs: { one: 1, two: 2 }\n     *\n     * @param {String} attributeName A name of the attribute to receive the properties.\n     * @param {module:engine/model/schema~AttributeProperties} properties A dictionary of properties.\n     */\n\n  }, {\n    key: \"setAttributeProperties\",\n    value: function setAttributeProperties(attributeName, properties) {\n      this._attributeProperties[attributeName] = Object.assign(this.getAttributeProperties(attributeName), properties);\n    }\n    /**\n     * Returns properties associated with a given model attribute. See {@link #setAttributeProperties `setAttributeProperties()`}.\n     *\n     * @param {String} attributeName A name of the attribute.\n     * @returns {module:engine/model/schema~AttributeProperties}\n     */\n\n  }, {\n    key: \"getAttributeProperties\",\n    value: function getAttributeProperties(attributeName) {\n      return this._attributeProperties[attributeName] || {};\n    }\n    /**\n     * Returns the lowest {@link module:engine/model/schema~Schema#isLimit limit element} containing the entire\n     * selection/range/position or the root otherwise.\n     *\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection|\n     * module:engine/model/range~Range|module:engine/model/position~Position} selectionOrRangeOrPosition\n     * The selection/range/position to check.\n     * @returns {module:engine/model/element~Element} The lowest limit element containing\n     * the entire `selectionOrRangeOrPosition`.\n     */\n\n  }, {\n    key: \"getLimitElement\",\n    value: function getLimitElement(selectionOrRangeOrPosition) {\n      var element;\n\n      if (selectionOrRangeOrPosition instanceof Position) {\n        element = selectionOrRangeOrPosition.parent;\n      } else {\n        var ranges = selectionOrRangeOrPosition instanceof Range ? [selectionOrRangeOrPosition] : Array.from(selectionOrRangeOrPosition.getRanges()); // Find the common ancestor for all selection's ranges.\n\n        element = ranges.reduce(function (element, range) {\n          var rangeCommonAncestor = range.getCommonAncestor();\n\n          if (!element) {\n            return rangeCommonAncestor;\n          }\n\n          return element.getCommonAncestor(rangeCommonAncestor, {\n            includeSelf: true\n          });\n        }, null);\n      }\n\n      while (!this.isLimit(element)) {\n        if (element.parent) {\n          element = element.parent;\n        } else {\n          break;\n        }\n      }\n\n      return element;\n    }\n    /**\n     * Checks whether the attribute is allowed in selection:\n     *\n     * * if the selection is not collapsed, then checks if the attribute is allowed on any of nodes in that range,\n     * * if the selection is collapsed, then checks if on the selection position there's a text with the\n     * specified attribute allowed.\n     *\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n     * Selection which will be checked.\n     * @param {String} attribute The name of the attribute to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"checkAttributeInSelection\",\n    value: function checkAttributeInSelection(selection, attribute) {\n      if (selection.isCollapsed) {\n        var firstPosition = selection.getFirstPosition();\n        var context = [].concat(_toConsumableArray(firstPosition.getAncestors()), [new Text('', selection.getAttributes())]); // Check whether schema allows for a text with the attribute in the selection.\n\n        return this.checkAttribute(context, attribute);\n      } else {\n        var ranges = selection.getRanges(); // For all ranges, check nodes in them until you find a node that is allowed to have the attribute.\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = ranges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var range = _step2.value;\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = range[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var value = _step3.value;\n\n                if (this.checkAttribute(value.item, attribute)) {\n                  // If we found a node that is allowed to have the attribute, return true.\n                  return true;\n                }\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                  _iterator3.return();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      } // If we haven't found such node, return false.\n\n\n      return false;\n    }\n    /**\n     * Transforms the given set of ranges into a set of ranges where the given attribute is allowed (and can be applied).\n     *\n     * @param {Array.<module:engine/model/range~Range>} ranges Ranges to be validated.\n     * @param {String} attribute The name of the attribute to check.\n     * @returns {Iterable.<module:engine/model/range~Range>} Ranges in which the attribute is allowed.\n     */\n\n  }, {\n    key: \"getValidRanges\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getValidRanges(ranges, attribute) {\n      var _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, range;\n\n      return _regeneratorRuntime.wrap(function getValidRanges$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              ranges = convertToMinimalFlatRanges(ranges);\n              _iteratorNormalCompletion4 = true;\n              _didIteratorError4 = false;\n              _iteratorError4 = undefined;\n              _context.prev = 4;\n              _iterator4 = ranges[Symbol.iterator]();\n\n            case 6:\n              if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {\n                _context.next = 12;\n                break;\n              }\n\n              range = _step4.value;\n              return _context.delegateYield(this._getValidRangesForRange(range, attribute), \"t0\", 9);\n\n            case 9:\n              _iteratorNormalCompletion4 = true;\n              _context.next = 6;\n              break;\n\n            case 12:\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t1 = _context[\"catch\"](4);\n              _didIteratorError4 = true;\n              _iteratorError4 = _context.t1;\n\n            case 18:\n              _context.prev = 18;\n              _context.prev = 19;\n\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n\n            case 21:\n              _context.prev = 21;\n\n              if (!_didIteratorError4) {\n                _context.next = 24;\n                break;\n              }\n\n              throw _iteratorError4;\n\n            case 24:\n              return _context.finish(21);\n\n            case 25:\n              return _context.finish(18);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getValidRanges, this, [[4, 14, 18, 26], [19,, 21, 25]]);\n    })\n    /**\n     * Basing on given `position`, finds and returns a {@link module:engine/model/range~Range range} which is\n     * nearest to that `position` and is a correct range for selection.\n     *\n     * The correct selection range might be collapsed when it is located in a position where the text node can be placed.\n     * Non-collapsed range is returned when selection can be placed around element marked as an \"object\" in\n     * the {@link module:engine/model/schema~Schema schema}.\n     *\n     * Direction of searching for the nearest correct selection range can be specified as:\n     *\n     * * `both` - searching will be performed in both ways,\n     * * `forward` - searching will be performed only forward,\n     * * `backward` - searching will be performed only backward.\n     *\n     * When valid selection range cannot be found, `null` is returned.\n     *\n     * @param {module:engine/model/position~Position} position Reference position where new selection range should be looked for.\n     * @param {'both'|'forward'|'backward'} [direction='both'] Search direction.\n     * @returns {module:engine/model/range~Range|null} Nearest selection range or `null` if one cannot be found.\n     */\n\n  }, {\n    key: \"getNearestSelectionRange\",\n    value: function getNearestSelectionRange(position) {\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'both';\n\n      // Return collapsed range if provided position is valid.\n      if (this.checkChild(position, '$text')) {\n        return new Range(position);\n      }\n\n      var backwardWalker, forwardWalker;\n\n      if (direction == 'both' || direction == 'backward') {\n        backwardWalker = new TreeWalker({\n          startPosition: position,\n          direction: 'backward'\n        });\n      }\n\n      if (direction == 'both' || direction == 'forward') {\n        forwardWalker = new TreeWalker({\n          startPosition: position\n        });\n      }\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = combineWalkers(backwardWalker, forwardWalker)[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var data = _step5.value;\n          var type = data.walker == backwardWalker ? 'elementEnd' : 'elementStart';\n          var value = data.value;\n\n          if (value.type == type && this.isObject(value.item)) {\n            return Range._createOn(value.item);\n          }\n\n          if (this.checkChild(value.nextPosition, '$text')) {\n            return new Range(value.nextPosition);\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return null;\n    }\n    /**\n     * Tries to find position ancestors that allows to insert given node.\n     * It starts searching from the given position and goes node by node to the top of the model tree\n     * as long as {@link module:engine/model/schema~Schema#isLimit limit element},\n     * {@link module:engine/model/schema~Schema#isObject object element} or top-most ancestor won't be reached.\n     *\n     * @params {module:engine/model/position~Position} position Position from searching will start.\n     * @params {module:engine/model/node~Node|String} node Node for which allowed parent should be found or its name.\n     * @returns {module:engine/model/element~Element|null} element Allowed parent or null if nothing was found.\n     */\n\n  }, {\n    key: \"findAllowedParent\",\n    value: function findAllowedParent(position, node) {\n      var parent = position.parent;\n\n      while (parent) {\n        if (this.checkChild(parent, node)) {\n          return parent;\n        } // Do not split limit elements.\n\n\n        if (this.isLimit(parent)) {\n          return null;\n        }\n\n        parent = parent.parent;\n      }\n\n      return null;\n    }\n    /**\n     * Removes attributes disallowed by the schema.\n     *\n     * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes that will be filtered.\n     * @param {module:engine/model/writer~Writer} writer\n     */\n\n  }, {\n    key: \"removeDisallowedAttributes\",\n    value: function removeDisallowedAttributes(nodes, writer) {\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = nodes[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var node = _step6.value;\n          var _iteratorNormalCompletion7 = true;\n          var _didIteratorError7 = false;\n          var _iteratorError7 = undefined;\n\n          try {\n            for (var _iterator7 = node.getAttributeKeys()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n              var attribute = _step7.value;\n\n              if (!this.checkAttribute(node, attribute)) {\n                writer.removeAttribute(attribute, node);\n              }\n            }\n          } catch (err) {\n            _didIteratorError7 = true;\n            _iteratorError7 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n                _iterator7.return();\n              }\n            } finally {\n              if (_didIteratorError7) {\n                throw _iteratorError7;\n              }\n            }\n          }\n\n          if (node.is('element')) {\n            this.removeDisallowedAttributes(node.getChildren(), writer);\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n    }\n    /**\n     * Creates an instance of the schema context.\n     *\n     * @param {module:engine/model/schema~SchemaContextDefinition} context\n     * @returns {module:engine/model/schema~SchemaContext}\n     */\n\n  }, {\n    key: \"createContext\",\n    value: function createContext(context) {\n      return new SchemaContext(context);\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_clearCache\",\n    value: function _clearCache() {\n      this._compiledDefinitions = null;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_compile\",\n    value: function _compile() {\n      var compiledDefinitions = {};\n      var sourceRules = this._sourceDefinitions;\n      var itemNames = Object.keys(sourceRules);\n\n      for (var _i = 0, _itemNames = itemNames; _i < _itemNames.length; _i++) {\n        var itemName = _itemNames[_i];\n        compiledDefinitions[itemName] = compileBaseItemRule(sourceRules[itemName], itemName);\n      }\n\n      for (var _i2 = 0, _itemNames2 = itemNames; _i2 < _itemNames2.length; _i2++) {\n        var _itemName = _itemNames2[_i2];\n        compileAllowContentOf(compiledDefinitions, _itemName);\n      }\n\n      for (var _i3 = 0, _itemNames3 = itemNames; _i3 < _itemNames3.length; _i3++) {\n        var _itemName2 = _itemNames3[_i3];\n        compileAllowWhere(compiledDefinitions, _itemName2);\n      }\n\n      for (var _i4 = 0, _itemNames4 = itemNames; _i4 < _itemNames4.length; _i4++) {\n        var _itemName3 = _itemNames4[_i4];\n        compileAllowAttributesOf(compiledDefinitions, _itemName3);\n        compileInheritPropertiesFrom(compiledDefinitions, _itemName3);\n      }\n\n      for (var _i5 = 0, _itemNames5 = itemNames; _i5 < _itemNames5.length; _i5++) {\n        var _itemName4 = _itemNames5[_i5];\n        cleanUpAllowIn(compiledDefinitions, _itemName4);\n        cleanUpAllowAttributes(compiledDefinitions, _itemName4);\n      }\n\n      this._compiledDefinitions = compiledDefinitions;\n    }\n    /**\n     * @private\n     * @param {module:engine/model/schema~SchemaCompiledItemDefinition} def\n     * @param {module:engine/model/schema~SchemaContext} context\n     * @param {Number} contextItemIndex\n     */\n\n  }, {\n    key: \"_checkContextMatch\",\n    value: function _checkContextMatch(def, context) {\n      var contextItemIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : context.length - 1;\n      var contextItem = context.getItem(contextItemIndex);\n\n      if (def.allowIn.includes(contextItem.name)) {\n        if (contextItemIndex == 0) {\n          return true;\n        } else {\n          var parentRule = this.getDefinition(contextItem);\n          return this._checkContextMatch(parentRule, context, contextItemIndex - 1);\n        }\n      } else {\n        return false;\n      }\n    }\n    /**\n     * Takes a flat range and an attribute name. Traverses the range recursively and deeply to find and return all ranges\n     * inside the given range on which the attribute can be applied.\n     *\n     * This is a helper function for {@link ~Schema#getValidRanges}.\n     *\n     * @private\n     * @param {module:engine/model/range~Range} range Range to process.\n     * @param {String} attribute The name of the attribute to check.\n     * @returns {Iterable.<module:engine/model/range~Range>} Ranges in which the attribute is allowed.\n     */\n\n  }, {\n    key: \"_getValidRangesForRange\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _getValidRangesForRange(range, attribute) {\n      var start, end, _iteratorNormalCompletion8, _didIteratorError8, _iteratorError8, _iterator8, _step8, item;\n\n      return _regeneratorRuntime.wrap(function _getValidRangesForRange$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              start = range.start;\n              end = range.start;\n              _iteratorNormalCompletion8 = true;\n              _didIteratorError8 = false;\n              _iteratorError8 = undefined;\n              _context2.prev = 5;\n              _iterator8 = range.getItems({\n                shallow: true\n              })[Symbol.iterator]();\n\n            case 7:\n              if (_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done) {\n                _context2.next = 20;\n                break;\n              }\n\n              item = _step8.value;\n\n              if (!item.is('element')) {\n                _context2.next = 11;\n                break;\n              }\n\n              return _context2.delegateYield(this._getValidRangesForRange(Range._createIn(item), attribute), \"t0\", 11);\n\n            case 11:\n              if (this.checkAttribute(item, attribute)) {\n                _context2.next = 16;\n                break;\n              }\n\n              if (start.isEqual(end)) {\n                _context2.next = 15;\n                break;\n              }\n\n              _context2.next = 15;\n              return new Range(start, end);\n\n            case 15:\n              start = Position._createAfter(item);\n\n            case 16:\n              end = Position._createAfter(item);\n\n            case 17:\n              _iteratorNormalCompletion8 = true;\n              _context2.next = 7;\n              break;\n\n            case 20:\n              _context2.next = 26;\n              break;\n\n            case 22:\n              _context2.prev = 22;\n              _context2.t1 = _context2[\"catch\"](5);\n              _didIteratorError8 = true;\n              _iteratorError8 = _context2.t1;\n\n            case 26:\n              _context2.prev = 26;\n              _context2.prev = 27;\n\n              if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n                _iterator8.return();\n              }\n\n            case 29:\n              _context2.prev = 29;\n\n              if (!_didIteratorError8) {\n                _context2.next = 32;\n                break;\n              }\n\n              throw _iteratorError8;\n\n            case 32:\n              return _context2.finish(29);\n\n            case 33:\n              return _context2.finish(26);\n\n            case 34:\n              if (start.isEqual(end)) {\n                _context2.next = 37;\n                break;\n              }\n\n              _context2.next = 37;\n              return new Range(start, end);\n\n            case 37:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _getValidRangesForRange, this, [[5, 22, 26, 34], [27,, 29, 33]]);\n    })\n  }]);\n\n  return Schema;\n}();\n\nexport { Schema as default };\nmix(Schema, ObservableMixin);\n/**\n * Event fired when the {@link #checkChild} method is called. It allows plugging in\n * additional behavior – e.g. implementing rules which cannot be defined using the declarative\n * {@link module:engine/model/schema~SchemaItemDefinition} interface.\n *\n * **Note:** The {@link #addChildCheck} method is a more handy way to register callbacks. Internally,\n * it registers a listener to this event but comes with a simpler API and it is the recommended choice\n * in most of the cases.\n *\n * The {@link #checkChild} method fires an event because it is\n * {@link module:utils/observablemixin~ObservableMixin#decorate decorated} with it. Thanks to that you can\n * use this event in a various way, but the most important use case is overriding standard behaviour of the\n * `checkChild()` method. Let's see a typical listener template:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst childDefinition = args[ 1 ];\n *\t\t}, { priority: 'high' } );\n *\n * The listener is added with a `high` priority to be executed before the default method is really called. The `args` callback\n * parameter contains arguments passed to `checkChild( context, child )`. However, the `context` parameter is already\n * normalized to a {@link module:engine/model/schema~SchemaContext} instance and `child` to a\n * {@link module:engine/model/schema~SchemaCompiledItemDefinition} instance, so you don't have to worry about\n * the various ways how `context` and `child` may be passed to `checkChild()`.\n *\n * **Note:** `childDefinition` may be `undefined` if `checkChild()` was called with a non-registered element.\n *\n * So, in order to implement a rule \"disallow `heading1` in `blockQuote`\" you can add such a listener:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst childDefinition = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition && childDefinition.name == 'heading1' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkChild()'s return value.\n *\t\t\t\tevt.return = false;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * Allowing elements in specific contexts will be a far less common use case, because it's normally handled by\n * `allowIn` rule from {@link module:engine/model/schema~SchemaItemDefinition} but if you have a complex scenario\n * where `listItem` should be allowed only in element `foo` which must be in element `bar`, then this would be the way:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst childDefinition = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'bar foo' ) && childDefinition.name == 'listItem' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkChild()'s return value.\n *\t\t\t\tevt.return = true;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * @event checkChild\n * @param {Array} args The `checkChild()`'s arguments.\n */\n\n/**\n * Event fired when the {@link #checkAttribute} method is called. It allows plugging in\n * additional behavior – e.g. implementing rules which cannot be defined using the declarative\n * {@link module:engine/model/schema~SchemaItemDefinition} interface.\n *\n * **Note:** The {@link #addAttributeCheck} method is a more handy way to register callbacks. Internally,\n * it registers a listener to this event but comes with a simpler API and it is the recommended choice\n * in most of the cases.\n *\n * The {@link #checkAttribute} method fires an event because it's\n * {@link module:utils/observablemixin~ObservableMixin#decorate decorated} with it. Thanks to that you can\n * use this event in a various way, but the most important use case is overriding standard behaviour of the\n * `checkAttribute()` method. Let's see a typical listener template:\n *\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst attributeName = args[ 1 ];\n *\t\t}, { priority: 'high' } );\n *\n * The listener is added with a `high` priority to be executed before the default method is really called. The `args` callback\n * parameter contains arguments passed to `checkAttribute( context, attributeName )`. However, the `context` parameter is already\n * normalized to a {@link module:engine/model/schema~SchemaContext} instance, so you don't have to worry about\n * the various ways how `context` may be passed to `checkAttribute()`.\n *\n * So, in order to implement a rule \"disallow `bold` in a text which is in a `heading1` you can add such a listener:\n *\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst atributeName = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkAttribute()'s return value.\n *\t\t\t\tevt.return = false;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * Allowing attributes in specific contexts will be a far less common use case, because it's normally handled by\n * `allowAttributes` rule from {@link module:engine/model/schema~SchemaItemDefinition} but if you have a complex scenario\n * where `bold` should be allowed only in element `foo` which must be in element `bar`, then this would be the way:\n *\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst atributeName = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'bar foo $text' ) && attributeName == 'bold' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkAttribute()'s return value.\n *\t\t\t\tevt.return = true;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * @event checkAttribute\n * @param {Array} args The `checkAttribute()`'s arguments.\n */\n\n/**\n * A definition of a {@link module:engine/model/schema~Schema schema} item.\n *\n * You can define the following rules:\n *\n * * `allowIn` &ndash; A string or an array of strings. Defines in which other items this item will be allowed.\n * * `allowAttributes` &ndash; A string or an array of strings. Defines allowed attributes of the given item.\n * * `allowContentOf` &ndash; A string or an array of strings. Inherits \"allowed children\" from other items.\n * * `allowWhere` &ndash; A string or an array of strings. Inherits \"allowed in\" from other items.\n * * `allowAttributesOf` &ndash; A string or an array of strings. Inherits attributes from other items.\n * * `inheritTypesFrom` &ndash; A string or an array of strings. Inherits `is*` properties of other items.\n * * `inheritAllFrom` &ndash; A string. A shorthand for `allowContentOf`, `allowWhere`, `allowAttributesOf`, `inheritTypesFrom`.\n * * Additionally, you can define the following `is*` properties: `isBlock`, `isLimit`, `isObject`, `isInline`. Read about them below.\n *\n * # The is* properties\n *\n * There are 3 commonly used `is*` properties. Their role is to assign additional semantics to schema items.\n * You can define more properties but you will also need to implement support for them in the existing editor features.\n *\n * * `isBlock` &ndash; Whether this item is paragraph-like. Generally speaking, content is usually made out of blocks\n * like paragraphs, list items, images, headings, etc. All these elements are marked as blocks. A block\n * should not allow another block inside. Note: There is also the `$block` generic item which has `isBlock` set to `true`.\n * Most block type items will inherit from `$block` (through `inheritAllFrom`).\n * * `isLimit` &ndash; It can be understood as whether this element should not be split by <kbd>Enter</kbd>.\n * Examples of limit elements: `$root`, table cell, image caption, etc. In other words, all actions that happen inside\n * a limit element are limited to its content. **Note:** All objects (`isObject`) are treated as limit elements, too.\n * * `isObject` &ndash; Whether an item is \"self-contained\" and should be treated as a whole. Examples of object elements:\n * `image`, `table`, `video`, etc. **Note:** An object is also a limit, so\n * {@link module:engine/model/schema~Schema#isLimit `isLimit()`} returns `true` for object elements automatically.\n * * `isInline` &ndash; Whether an item is \"text-like\" and should be treated as an inline node. Examples of inline elements:\n * `$text`, `softBreak` (`<br>`), etc.\n *\n * # Generic items\n *\n * There are three basic generic items: `$root`, `$block` and `$text`.\n * They are defined as follows:\n *\n *\t\tthis.schema.register( '$root', {\n *\t\t\tisLimit: true\n *\t\t} );\n *\t\tthis.schema.register( '$block', {\n *\t\t\tallowIn: '$root',\n *\t\t\tisBlock: true\n *\t\t} );\n *\t\tthis.schema.register( '$text', {\n *\t\t\tallowIn: '$block',\n *\t\t\tisInline: true\n *\t\t} );\n *\n * They reflect typical editor content that is contained within one root, consists of several blocks\n * (paragraphs, lists items, headings, images) which, in turn, may contain text inside.\n *\n * By inheriting from the generic items you can define new items which will get extended by other editor features.\n * Read more about generic types in the {@linkTODO Defining schema} guide.\n *\n * # Example definitions\n *\n * Allow `paragraph` in roots and block quotes:\n *\n *\t\tschema.register( 'paragraph', {\n *\t\t\tallowIn: [ '$root', 'blockQuote' ],\n *\t\t\tisBlock: true\n *\t\t} );\n *\n * Allow `paragraph` everywhere where `$block` is allowed (i.e. in `$root`):\n *\n *\t\tschema.register( 'paragraph', {\n *\t\t\tallowWhere: '$block',\n *\t\t\tisBlock: true\n *\t\t} );\n *\n * Make `image` a block object, which is allowed everywhere where `$block` is.\n * Also, allow `src` and `alt` attributes in it:\n *\n *\t\tschema.register( 'image', {\n *\t\t\tallowWhere: '$block',\n *\t\t\tallowAttributes: [ 'src', 'alt' ],\n *\t\t\tisBlock: true,\n *\t\t\tisObject: true\n *\t\t} );\n *\n * Make `caption` allowed in `image` and make it allow all the content of `$block`s (usually, `$text`).\n * Also, mark it as a limit element so it cannot be split:\n *\n *\t\tschema.register( 'caption', {\n *\t\t\tallowIn: 'image',\n *\t\t\tallowContentOf: '$block',\n *\t\t\tisLimit: true\n *\t\t} );\n *\n * Make `listItem` inherit all from `$block` but also allow additional attributes:\n *\n *\t\tschema.register( 'listItem', {\n *\t\t\tinheritAllFrom: '$block',\n *\t\t\tallowAttributes: [ 'listType', 'listIndent' ]\n *\t\t} );\n *\n * Which translates to:\n *\n *\t\tschema.register( 'listItem', {\n *\t\t\tallowWhere: '$block',\n *\t\t\tallowContentOf: '$block',\n *\t\t\tallowAttributesOf: '$block',\n *\t\t\tinheritTypesFrom: '$block',\n *\t\t\tallowAttributes: [ 'listType', 'listIndent' ]\n *\t\t} );\n *\n * # Tips\n *\n * * Check schema definitions of existing features to see how they are defined.\n * * If you want to publish your feature so other developers can use it, try to use\n * generic items as much as possible.\n * * Keep your model clean. Limit it to the actual data and store information in a normalized way.\n * * Remember about definining the `is*` properties. They do not affect the allowed structures, but they can\n * affect how the editor features treat your elements.\n *\n * @typedef {Object} module:engine/model/schema~SchemaItemDefinition\n */\n\n/**\n * A simplified version of {@link module:engine/model/schema~SchemaItemDefinition} after\n * compilation by the {@link module:engine/model/schema~Schema schema}.\n * Rules fed to the schema by {@link module:engine/model/schema~Schema#register}\n * and {@link module:engine/model/schema~Schema#extend} methods are defined in the\n * {@link module:engine/model/schema~SchemaItemDefinition} format.\n * Later on, they are compiled to `SchemaCompiledItemDefition` so when you use e.g.\n * the {@link module:engine/model/schema~Schema#getDefinition} method you get the compiled version.\n *\n * The compiled version contains only the following properties:\n *\n * * The `name` property,\n * * The `is*` properties,\n * * The `allowIn` array,\n * * The `allowAttributes` array.\n *\n * @typedef {Object} module:engine/model/schema~SchemaCompiledItemDefinition\n */\n\n/**\n * A schema context &mdash; a list of ancestors of a given position in the document.\n *\n * Considering such position:\n *\n *\t\t<$root>\n *\t\t\t<blockQuote>\n *\t\t\t\t<paragraph>\n *\t\t\t\t\t^\n *\t\t\t\t</paragraph>\n *\t\t\t</blockQuote>\n *\t\t</$root>\n *\n * The context of this position is its {@link module:engine/model/position~Position#getAncestors lists of ancestors}:\n *\n *\t\t[ rootElement, blockQuoteElement, paragraphElement ]\n *\n * Contexts are used in the {@link module:engine/model/schema~Schema#event:checkChild `Schema#checkChild`} and\n * {@link module:engine/model/schema~Schema#event:checkAttribute `Schema#checkAttribute`} events as a definition\n * of a place in the document where the check occurs. The context instances are created based on the first arguments\n * of the {@link module:engine/model/schema~Schema#checkChild `Schema#checkChild()`} and\n * {@link module:engine/model/schema~Schema#checkAttribute `Schema#checkAttribute()`} methods so when\n * using these methods you need to use {@link module:engine/model/schema~SchemaContextDefinition}s.\n */\n\nexport var SchemaContext =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the context.\n   *\n   * @param {module:engine/model/schema~SchemaContextDefinition} context\n   */\n  function SchemaContext(context) {\n    _classCallCheck(this, SchemaContext);\n\n    if (context instanceof SchemaContext) {\n      return context;\n    }\n\n    if (typeof context == 'string') {\n      context = [context];\n    } else if (!Array.isArray(context)) {\n      // `context` is item or position.\n      // Position#getAncestors() doesn't accept any parameters but it works just fine here.\n      context = context.getAncestors({\n        includeSelf: true\n      });\n    }\n\n    if (context[0] && typeof context[0] != 'string' && context[0].is('documentFragment')) {\n      context.shift();\n    }\n\n    this._items = context.map(mapContextItem);\n  }\n  /**\n   * The number of items.\n   *\n   * @type {Number}\n   */\n\n\n  _createClass(SchemaContext, [{\n    key: Symbol.iterator,\n\n    /**\n     * Iterable interface.\n     *\n     * Iterates over all context items.\n     *\n     * @returns {Iterable.<module:engine/model/schema~SchemaContextItem>}\n     */\n    value: function value() {\n      return this._items[Symbol.iterator]();\n    }\n    /**\n     * Returns a new schema context instance with an additional item.\n     *\n     * Item can be added as:\n     *\n     * \t\tconst context = new SchemaContext( [ '$root' ] );\n     *\n     * \t\t// An element.\n     * \t\tconst fooElement = writer.createElement( 'fooElement' );\n     * \t\tconst newContext = context.push( fooElement ); // [ '$root', 'fooElement' ]\n     *\n     * \t\t// A text node.\n     * \t\tconst text = writer.createText( 'foobar' );\n     * \t\tconst newContext = context.push( text ); // [ '$root', '$text' ]\n     *\n     * \t\t// A string (element name).\n     * \t\tconst newContext = context.push( 'barElement' ); // [ '$root', 'barElement' ]\n     *\n     * **Note** {@link module:engine/model/node~Node} that is already in the model tree will be added as the only item\n     * (without ancestors).\n     *\n     * @param {String|module:engine/model/node~Node|Array<String|module:engine/model/node~Node>} item An item that will be added\n     * to the current context.\n     * @returns {module:engine/model/schema~SchemaContext} A new schema context instance with an additional item.\n     */\n\n  }, {\n    key: \"push\",\n    value: function push(item) {\n      var ctx = new SchemaContext([item]);\n      ctx._items = [].concat(_toConsumableArray(this._items), _toConsumableArray(ctx._items));\n      return ctx;\n    }\n    /**\n     * Gets an item on the given index.\n     *\n     * @returns {module:engine/model/schema~SchemaContextItem}\n     */\n\n  }, {\n    key: \"getItem\",\n    value: function getItem(index) {\n      return this._items[index];\n    }\n    /**\n     * Returns the names of items.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getNames\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getNames() {\n      return _regeneratorRuntime.wrap(function getNames$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.delegateYield(this._items.map(function (item) {\n                return item.name;\n              }), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, getNames, this);\n    })\n    /**\n     * Checks whether the context ends with the given nodes.\n     *\n     *\t\tconst ctx = new SchemaContext( [ rootElement, paragraphElement, textNode ] );\n     *\n     *\t\tctx.endsWith( '$text' ); // -> true\n     *\t\tctx.endsWith( 'paragraph $text' ); // -> true\n     *\t\tctx.endsWith( '$root' ); // -> false\n     *\t\tctx.endsWith( 'paragraph' ); // -> false\n     *\n     * @param {String} query\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"endsWith\",\n    value: function endsWith(query) {\n      return Array.from(this.getNames()).join(' ').endsWith(query);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this._items.length;\n    }\n    /**\n     * The last item (the lowest node).\n     *\n     * @type {module:engine/model/schema~SchemaContextItem}\n     */\n\n  }, {\n    key: \"last\",\n    get: function get() {\n      return this._items[this._items.length - 1];\n    }\n  }]);\n\n  return SchemaContext;\n}();\n/**\n * The definition of a {@link module:engine/model/schema~SchemaContext schema context}.\n *\n * Contexts can be created in multiple ways:\n *\n * * By defining a **node** – in this cases this node and all its ancestors will be used.\n * * By defining a **position** in the document – in this case all its ancestors will be used.\n * * By defining an **array of nodes** – in this case this array defines the entire context.\n * * By defining a **name of node** - in this case node will be \"mocked\". It is not recommended because context\n * will be unrealistic (e.g. attributes of these nodes are not specified). However, at times this may be the only\n * way to define the context (e.g. when checking some hypothetical situation).\n * * By defining an **array of node names** (potentially, mixed with real nodes) – The same as **name of node**\n * but it is possible to create a path.\n * * By defining a {@link module:engine/model/schema~SchemaContext} instance - in this case the same instance as provided\n * will be return.\n *\n * Examples of context definitions passed to the {@link module:engine/model/schema~Schema#checkChild `Schema#checkChild()`}\n * method:\n *\n *\t\t// Assuming that we have a $root > blockQuote > paragraph structure, the following code\n *\t\t// will check node 'foo' in the following context:\n *\t\t// [ rootElement, blockQuoteElement, paragraphElement ]\n *\t\tconst contextDefinition = paragraphElement;\n * \t\tconst childToCheck = 'foo';\n *\t\tschema.checkChild( contextDefinition, childToCheck );\n *\n *\t\t// Also check in [ rootElement, blockQuoteElement, paragraphElement ].\n *\t\tschema.checkChild( model.createPositionAt( paragraphElement, 0 ), 'foo' );\n *\n *\t\t// Check in [ rootElement, paragraphElement ].\n *\t\tschema.checkChild( [ rootElement, paragraphElement ], 'foo' );\n *\n *\t\t// Check only fakeParagraphElement.\n *\t\tschema.checkChild( 'paragraph', 'foo' );\n *\n *\t\t// Check in [ fakeRootElement, fakeBarElement, paragraphElement ].\n *\t\tschema.checkChild( [ '$root', 'bar', paragraphElement ], 'foo' );\n *\n * All these `checkChild()` calls will fire {@link module:engine/model/schema~Schema#event:checkChild `Schema#checkChild`}\n * events in which `args[ 0 ]` is an instance of the context. Therefore, you can write a listener like this:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst ctx = args[ 0 ];\n *\n *\t\t\tconsole.log( Array.from( ctx.getNames() ) );\n *\t\t} );\n *\n * Which will log the following:\n *\n *\t\t[ '$root', 'blockQuote', 'paragraph' ]\n *\t\t[ '$root', 'paragraph' ]\n *\t\t[ '$root', 'bar', 'paragraph' ]\n *\n * Note: When using the {@link module:engine/model/schema~Schema#checkAttribute `Schema#checkAttribute()`} method\n * you may want to check whether a text node may have an attribute. A {@link module:engine/model/text~Text} is a\n * correct way to define a context so you can do this:\n *\n *\t\tschema.checkAttribute( textNode, 'bold' );\n *\n * But sometimes you want to check whether a text at a given position might've had some attribute,\n * in which case you can create a context by mising an array of elements with a `'$text'` string:\n *\n *\t\t// Check in [ rootElement, paragraphElement, textNode ].\n *\t\tschema.checkChild( [ ...positionInParagraph.getAncestors(), '$text' ], 'bold' );\n *\n * @typedef {module:engine/model/node~Node|module:engine/model/position~Position|module:engine/model/schema~SchemaContext|\n * String|Array.<String|module:engine/model/node~Node>} module:engine/model/schema~SchemaContextDefinition\n */\n\n/**\n * An item of the {@link module:engine/model/schema~SchemaContext schema context}.\n *\n * It contains 3 properties:\n *\n * * `name` – the name of this item,\n * * `* getAttributeKeys()` – a generator of keys of item attributes,\n * * `getAttribute( keyName )` – a method to get attribute values.\n *\n * The context item interface is a highly simplified version of {@link module:engine/model/node~Node} and its role\n * is to expose only the information which schema checks are able to provide (which is the name of the node and\n * node's attributes).\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst ctx = args[ 0 ];\n *\t\t\tconst firstItem = ctx.getItem( 0 );\n *\n *\t\t\tconsole.log( firstItem.name ); // -> '$root'\n *\t\t\tconsole.log( firstItem.getAttribute( 'foo' ) ); // -> 'bar'\n *\t\t\tconsole.log( Array.from( firstItem.getAttributeKeys() ) ); // -> [ 'foo', 'faa' ]\n *\t\t} );\n *\n * @typedef {Object} module:engine/model/schema~SchemaContextItem\n */\n\n/**\n * A structure containing additional metadata describing the attribute.\n *\n * See {@link module:engine/model/schema~Schema#setAttributeProperties `Schema#setAttributeProperties()`} for usage examples.\n *\n * @typedef {Object} module:engine/model/schema~AttributeProperties\n * @property {Boolean} [isFormatting] Indicates that the attribute should be considered as a visual formatting, like `bold`, `italic` or\n * `fontSize` rather than semantic attribute (such as `src`, `listType`, etc.). For example, it is used by the \"Remove format\" feature.\n */\n\nfunction compileBaseItemRule(sourceItemRules, itemName) {\n  var itemRule = {\n    name: itemName,\n    allowIn: [],\n    allowContentOf: [],\n    allowWhere: [],\n    allowAttributes: [],\n    allowAttributesOf: [],\n    inheritTypesFrom: []\n  };\n  copyTypes(sourceItemRules, itemRule);\n  copyProperty(sourceItemRules, itemRule, 'allowIn');\n  copyProperty(sourceItemRules, itemRule, 'allowContentOf');\n  copyProperty(sourceItemRules, itemRule, 'allowWhere');\n  copyProperty(sourceItemRules, itemRule, 'allowAttributes');\n  copyProperty(sourceItemRules, itemRule, 'allowAttributesOf');\n  copyProperty(sourceItemRules, itemRule, 'inheritTypesFrom');\n  makeInheritAllWork(sourceItemRules, itemRule);\n  return itemRule;\n}\n\nfunction compileAllowContentOf(compiledDefinitions, itemName) {\n  var _iteratorNormalCompletion9 = true;\n  var _didIteratorError9 = false;\n  var _iteratorError9 = undefined;\n\n  try {\n    for (var _iterator9 = compiledDefinitions[itemName].allowContentOf[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n      var allowContentOfItemName = _step9.value;\n\n      // The allowContentOf property may point to an unregistered element.\n      if (compiledDefinitions[allowContentOfItemName]) {\n        var allowedChildren = getAllowedChildren(compiledDefinitions, allowContentOfItemName);\n        allowedChildren.forEach(function (allowedItem) {\n          allowedItem.allowIn.push(itemName);\n        });\n      }\n    }\n  } catch (err) {\n    _didIteratorError9 = true;\n    _iteratorError9 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n        _iterator9.return();\n      }\n    } finally {\n      if (_didIteratorError9) {\n        throw _iteratorError9;\n      }\n    }\n  }\n\n  delete compiledDefinitions[itemName].allowContentOf;\n}\n\nfunction compileAllowWhere(compiledDefinitions, itemName) {\n  var _iteratorNormalCompletion10 = true;\n  var _didIteratorError10 = false;\n  var _iteratorError10 = undefined;\n\n  try {\n    for (var _iterator10 = compiledDefinitions[itemName].allowWhere[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n      var allowWhereItemName = _step10.value;\n      var inheritFrom = compiledDefinitions[allowWhereItemName]; // The allowWhere property may point to an unregistered element.\n\n      if (inheritFrom) {\n        var _compiledDefinitions$;\n\n        var allowedIn = inheritFrom.allowIn;\n\n        (_compiledDefinitions$ = compiledDefinitions[itemName].allowIn).push.apply(_compiledDefinitions$, _toConsumableArray(allowedIn));\n      }\n    }\n  } catch (err) {\n    _didIteratorError10 = true;\n    _iteratorError10 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n        _iterator10.return();\n      }\n    } finally {\n      if (_didIteratorError10) {\n        throw _iteratorError10;\n      }\n    }\n  }\n\n  delete compiledDefinitions[itemName].allowWhere;\n}\n\nfunction compileAllowAttributesOf(compiledDefinitions, itemName) {\n  var _iteratorNormalCompletion11 = true;\n  var _didIteratorError11 = false;\n  var _iteratorError11 = undefined;\n\n  try {\n    for (var _iterator11 = compiledDefinitions[itemName].allowAttributesOf[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n      var allowAttributeOfItem = _step11.value;\n      var inheritFrom = compiledDefinitions[allowAttributeOfItem];\n\n      if (inheritFrom) {\n        var _compiledDefinitions$2;\n\n        var inheritAttributes = inheritFrom.allowAttributes;\n\n        (_compiledDefinitions$2 = compiledDefinitions[itemName].allowAttributes).push.apply(_compiledDefinitions$2, _toConsumableArray(inheritAttributes));\n      }\n    }\n  } catch (err) {\n    _didIteratorError11 = true;\n    _iteratorError11 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n        _iterator11.return();\n      }\n    } finally {\n      if (_didIteratorError11) {\n        throw _iteratorError11;\n      }\n    }\n  }\n\n  delete compiledDefinitions[itemName].allowAttributesOf;\n}\n\nfunction compileInheritPropertiesFrom(compiledDefinitions, itemName) {\n  var item = compiledDefinitions[itemName];\n  var _iteratorNormalCompletion12 = true;\n  var _didIteratorError12 = false;\n  var _iteratorError12 = undefined;\n\n  try {\n    for (var _iterator12 = item.inheritTypesFrom[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n      var inheritPropertiesOfItem = _step12.value;\n      var inheritFrom = compiledDefinitions[inheritPropertiesOfItem];\n\n      if (inheritFrom) {\n        var typeNames = Object.keys(inheritFrom).filter(function (name) {\n          return name.startsWith('is');\n        });\n        var _iteratorNormalCompletion13 = true;\n        var _didIteratorError13 = false;\n        var _iteratorError13 = undefined;\n\n        try {\n          for (var _iterator13 = typeNames[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n            var name = _step13.value;\n\n            if (!(name in item)) {\n              item[name] = inheritFrom[name];\n            }\n          }\n        } catch (err) {\n          _didIteratorError13 = true;\n          _iteratorError13 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n              _iterator13.return();\n            }\n          } finally {\n            if (_didIteratorError13) {\n              throw _iteratorError13;\n            }\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError12 = true;\n    _iteratorError12 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n        _iterator12.return();\n      }\n    } finally {\n      if (_didIteratorError12) {\n        throw _iteratorError12;\n      }\n    }\n  }\n\n  delete item.inheritTypesFrom;\n} // Remove items which weren't registered (because it may break some checks or we'd need to complicate them).\n// Make sure allowIn doesn't contain repeated values.\n\n\nfunction cleanUpAllowIn(compiledDefinitions, itemName) {\n  var itemRule = compiledDefinitions[itemName];\n  var existingItems = itemRule.allowIn.filter(function (itemToCheck) {\n    return compiledDefinitions[itemToCheck];\n  });\n  itemRule.allowIn = Array.from(new Set(existingItems));\n}\n\nfunction cleanUpAllowAttributes(compiledDefinitions, itemName) {\n  var itemRule = compiledDefinitions[itemName];\n  itemRule.allowAttributes = Array.from(new Set(itemRule.allowAttributes));\n}\n\nfunction copyTypes(sourceItemRules, itemRule) {\n  var _iteratorNormalCompletion14 = true;\n  var _didIteratorError14 = false;\n  var _iteratorError14 = undefined;\n\n  try {\n    for (var _iterator14 = sourceItemRules[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n      var sourceItemRule = _step14.value;\n      var typeNames = Object.keys(sourceItemRule).filter(function (name) {\n        return name.startsWith('is');\n      });\n      var _iteratorNormalCompletion15 = true;\n      var _didIteratorError15 = false;\n      var _iteratorError15 = undefined;\n\n      try {\n        for (var _iterator15 = typeNames[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n          var name = _step15.value;\n          itemRule[name] = sourceItemRule[name];\n        }\n      } catch (err) {\n        _didIteratorError15 = true;\n        _iteratorError15 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion15 && _iterator15.return != null) {\n            _iterator15.return();\n          }\n        } finally {\n          if (_didIteratorError15) {\n            throw _iteratorError15;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError14 = true;\n    _iteratorError14 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n        _iterator14.return();\n      }\n    } finally {\n      if (_didIteratorError14) {\n        throw _iteratorError14;\n      }\n    }\n  }\n}\n\nfunction copyProperty(sourceItemRules, itemRule, propertyName) {\n  var _iteratorNormalCompletion16 = true;\n  var _didIteratorError16 = false;\n  var _iteratorError16 = undefined;\n\n  try {\n    for (var _iterator16 = sourceItemRules[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n      var sourceItemRule = _step16.value;\n\n      if (typeof sourceItemRule[propertyName] == 'string') {\n        itemRule[propertyName].push(sourceItemRule[propertyName]);\n      } else if (Array.isArray(sourceItemRule[propertyName])) {\n        var _itemRule$propertyNam;\n\n        (_itemRule$propertyNam = itemRule[propertyName]).push.apply(_itemRule$propertyNam, _toConsumableArray(sourceItemRule[propertyName]));\n      }\n    }\n  } catch (err) {\n    _didIteratorError16 = true;\n    _iteratorError16 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion16 && _iterator16.return != null) {\n        _iterator16.return();\n      }\n    } finally {\n      if (_didIteratorError16) {\n        throw _iteratorError16;\n      }\n    }\n  }\n}\n\nfunction makeInheritAllWork(sourceItemRules, itemRule) {\n  var _iteratorNormalCompletion17 = true;\n  var _didIteratorError17 = false;\n  var _iteratorError17 = undefined;\n\n  try {\n    for (var _iterator17 = sourceItemRules[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n      var sourceItemRule = _step17.value;\n      var inheritFrom = sourceItemRule.inheritAllFrom;\n\n      if (inheritFrom) {\n        itemRule.allowContentOf.push(inheritFrom);\n        itemRule.allowWhere.push(inheritFrom);\n        itemRule.allowAttributesOf.push(inheritFrom);\n        itemRule.inheritTypesFrom.push(inheritFrom);\n      }\n    }\n  } catch (err) {\n    _didIteratorError17 = true;\n    _iteratorError17 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion17 && _iterator17.return != null) {\n        _iterator17.return();\n      }\n    } finally {\n      if (_didIteratorError17) {\n        throw _iteratorError17;\n      }\n    }\n  }\n}\n\nfunction getAllowedChildren(compiledDefinitions, itemName) {\n  var itemRule = compiledDefinitions[itemName];\n  return getValues(compiledDefinitions).filter(function (def) {\n    return def.allowIn.includes(itemRule.name);\n  });\n}\n\nfunction getValues(obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n}\n\nfunction mapContextItem(ctxItem) {\n  if (typeof ctxItem == 'string') {\n    return {\n      name: ctxItem,\n      getAttributeKeys:\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function getAttributeKeys() {\n        return _regeneratorRuntime.wrap(function getAttributeKeys$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, getAttributeKeys);\n      }),\n      getAttribute: function getAttribute() {}\n    };\n  } else {\n    return {\n      // '$text' means text nodes and text proxies.\n      name: ctxItem.is('element') ? ctxItem.name : '$text',\n      getAttributeKeys:\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function getAttributeKeys() {\n        return _regeneratorRuntime.wrap(function getAttributeKeys$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.delegateYield(ctxItem.getAttributeKeys(), \"t0\", 1);\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, getAttributeKeys);\n      }),\n      getAttribute: function getAttribute(key) {\n        return ctxItem.getAttribute(key);\n      }\n    };\n  }\n} // Generator function returning values from provided walkers, switching between them at each iteration. If only one walker\n// is provided it will return data only from that walker.\n//\n// @param {module:engine/module/treewalker~TreeWalker} [backward] Walker iterating in backward direction.\n// @param {module:engine/module/treewalker~TreeWalker} [forward] Walker iterating in forward direction.\n// @returns {Iterable.<Object>} Object returned at each iteration contains `value` and `walker` (informing which walker returned\n// given value) fields.\n\n\nfunction combineWalkers(backward, forward) {\n  var done, step, _step18;\n\n  return _regeneratorRuntime.wrap(function combineWalkers$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          done = false;\n\n        case 1:\n          if (done) {\n            _context6.next = 17;\n            break;\n          }\n\n          done = true;\n\n          if (!backward) {\n            _context6.next = 9;\n            break;\n          }\n\n          step = backward.next();\n\n          if (step.done) {\n            _context6.next = 9;\n            break;\n          }\n\n          done = false;\n          _context6.next = 9;\n          return {\n            walker: backward,\n            value: step.value\n          };\n\n        case 9:\n          if (!forward) {\n            _context6.next = 15;\n            break;\n          }\n\n          _step18 = forward.next();\n\n          if (_step18.done) {\n            _context6.next = 15;\n            break;\n          }\n\n          done = false;\n          _context6.next = 15;\n          return {\n            walker: forward,\n            value: _step18.value\n          };\n\n        case 15:\n          _context6.next = 1;\n          break;\n\n        case 17:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked);\n} // Takes an array of non-intersecting ranges. For each of them gets minimal flat ranges covering that range and returns\n// all those minimal flat ranges.\n//\n// @param {Array.<module:engine/model/range~Range>} ranges Ranges to process.\n// @returns {Iterable.<module:engine/model/range~Range>} Minimal flat ranges of given `ranges`.\n\n\nfunction convertToMinimalFlatRanges(ranges) {\n  var _iteratorNormalCompletion18, _didIteratorError18, _iteratorError18, _iterator18, _step19, range;\n\n  return _regeneratorRuntime.wrap(function convertToMinimalFlatRanges$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _iteratorNormalCompletion18 = true;\n          _didIteratorError18 = false;\n          _iteratorError18 = undefined;\n          _context7.prev = 3;\n          _iterator18 = ranges[Symbol.iterator]();\n\n        case 5:\n          if (_iteratorNormalCompletion18 = (_step19 = _iterator18.next()).done) {\n            _context7.next = 11;\n            break;\n          }\n\n          range = _step19.value;\n          return _context7.delegateYield(range.getMinimalFlatRanges(), \"t0\", 8);\n\n        case 8:\n          _iteratorNormalCompletion18 = true;\n          _context7.next = 5;\n          break;\n\n        case 11:\n          _context7.next = 17;\n          break;\n\n        case 13:\n          _context7.prev = 13;\n          _context7.t1 = _context7[\"catch\"](3);\n          _didIteratorError18 = true;\n          _iteratorError18 = _context7.t1;\n\n        case 17:\n          _context7.prev = 17;\n          _context7.prev = 18;\n\n          if (!_iteratorNormalCompletion18 && _iterator18.return != null) {\n            _iterator18.return();\n          }\n\n        case 20:\n          _context7.prev = 20;\n\n          if (!_didIteratorError18) {\n            _context7.next = 23;\n            break;\n          }\n\n          throw _iteratorError18;\n\n        case 23:\n          return _context7.finish(20);\n\n        case 24:\n          return _context7.finish(17);\n\n        case 25:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked2, null, [[3, 13, 17, 25], [18,, 20, 24]]);\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/upcastdispatcher\n */\nimport ViewConsumable from './viewconsumable';\nimport ModelRange from '../model/range';\nimport ModelPosition from '../model/position';\nimport { SchemaContext } from '../model/schema';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * `UpcastDispatcher` is a central point of {@link module:engine/view/view view} conversion, which is a process of\n * converting given {@link module:engine/view/documentfragment~DocumentFragment view document fragment} or\n * {@link module:engine/view/element~Element} into another structure.\n * In default application, {@link module:engine/view/view view} is converted to {@link module:engine/model/model}.\n *\n * During conversion process, for all {@link module:engine/view/node~Node view nodes} from the converted view document fragment,\n * `UpcastDispatcher` fires corresponding events. Special callbacks called \"converters\" should listen to\n * `UpcastDispatcher` for those events.\n *\n * Each callback, as the second argument, is passed a special object `data` that has `viewItem`, `modelCursor` and\n * `modelRange` properties. `viewItem` property contains {@link module:engine/view/node~Node view node} or\n * {@link module:engine/view/documentfragment~DocumentFragment view document fragment}\n * that is converted at the moment and might be handled by the callback. `modelRange` property should be used to save the result\n * of conversion and is always a {@link module:engine/model/range~Range} when conversion result is correct.\n * `modelCursor` property is a {@link module:engine/model/position~Position position} on which conversion result will be inserted\n * and is a context according to {@link module:engine/model/schema~Schema schema} will be checked before the conversion.\n * See also {@link ~UpcastDispatcher#convert}. It is also shared by reference by all callbacks listening to given event.\n *\n * The third parameter passed to a callback is an instance of {@link ~UpcastDispatcher}\n * which provides additional tools for converters.\n *\n * Examples of providing callbacks for `UpcastDispatcher`:\n *\n *\t\t// Converter for links (<a>).\n *\t\tupcastDispatcher.on( 'element:a', ( evt, data, conversionApi ) => {\n *\t\t\tif ( conversionApi.consumable.consume( data.viewItem, { name: true, attributes: [ 'href' ] } ) ) {\n *\t\t\t\t// <a> element is inline and is represented by an attribute in the model.\n *\t\t\t\t// This is why we need to convert only children.\n *\t\t\t\tconst { modelRange } = conversionApi.convertChildren( data.viewItem, data.modelCursor );\n *\n *\t\t\t\tfor ( let item of modelRange.getItems() ) {\n *\t\t\t\t\tif ( conversionApi.schema.checkAttribute( item, 'linkHref' ) ) {\n *\t\t\t\t\t\tconversionApi.writer.setAttribute( 'linkHref', data.viewItem.getAttribute( 'href' ), item );\n *\t\t\t\t\t}\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// Convert all elements which have no custom converter into paragraph (autoparagraphing).\n *  \tdata.viewToModel.on( 'element', ( evt, data, conversionApi ) => {\n *  \t \t// When element is already consumed by higher priority converters then do nothing.\n *  \t \tif ( conversionApi.consumable.test( data.viewItem, { name: data.viewItem.name } ) ) {\n *  \t \t\t\tconst paragraph = conversionApi.writer.createElement( 'paragraph' );\n *\n *  \t \t\t\t// Find allowed parent for paragraph that we are going to insert. If current parent does not allow\n *  \t \t\t\t// to insert paragraph but one of the ancestors does then split nodes to allowed parent.\n *  \t \t\t\tconst splitResult = conversionApi.splitToAllowedParent( paragraph, data.modelCursor );\n *\n *  \t \t\t\t// When there is no split result it means that we can't insert paragraph in this position.\n *  \t \t\t\tif ( splitResult ) {\n *  \t \t\t\t\t// Insert paragraph in allowed position.\n *  \t \t\t\t\tconversionApi.writer.insert( paragraph, splitResult.position );\n *\n *  \t \t\t\t\t// Convert children to paragraph.\n *  \t \t\t\t\tconst { modelRange } = conversionApi.convertChildren(\n *  \t \t\t\t\t\tdata.viewItem,\n *  \t \t\t\t\t\tconversionApi.writer.createPositionAt( paragraph, 0 )\n *  \t \t\t\t\t);\n *\n * \t\t\t\t\t\t// Set as conversion result, attribute converters may use this property.\n *  \t \t\t\t\tdata.modelRange = conversionApi.writer.createRange(\n *  \t \t\t\t\t\tconversionApi.writer.createPositionBefore( paragraph ),\n *  \t \t\t\t\t\tmodelRange.end\n *  \t \t\t\t\t);\n *\n *  \t \t\t\t\t// Continue conversion inside paragraph.\n *  \t \t\t\t\tdata.modelCursor = data.modelRange.end;\n *  \t \t\t\t}\n *  \t \t\t}\n *  \t \t}\n *  \t }, { priority: 'low' } );\n *\n * Before each conversion process, `UpcastDispatcher` fires {@link ~UpcastDispatcher#event:viewCleanup}\n * event which can be used to prepare tree view for conversion.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n * @fires viewCleanup\n * @fires element\n * @fires text\n * @fires documentFragment\n */\n\nvar UpcastDispatcher =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a `UpcastDispatcher` that operates using passed API.\n   *\n   * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi\n   * @param {Object} [conversionApi] Additional properties for interface that will be passed to events fired\n   * by `UpcastDispatcher`.\n   */\n  function UpcastDispatcher() {\n    var conversionApi = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, UpcastDispatcher);\n\n    /**\n     * List of the elements that were created during splitting.\n     *\n     * After conversion process the list is cleared.\n     *\n     * @private\n     * @type {Map.<module:engine/model/element~Element,Array.<module:engine/model/element~Element>>}\n     */\n    this._splitParts = new Map();\n    /**\n     * Position in the temporary structure where the converted content is inserted. The structure reflect the context of\n     * the target position where the content will be inserted. This property is build based on the context parameter of the\n     * convert method.\n     *\n     * @private\n     * @type {module:engine/model/position~Position|null}\n     */\n\n    this._modelCursor = null;\n    /**\n     * Interface passed by dispatcher to the events callbacks.\n     *\n     * @member {module:engine/conversion/upcastdispatcher~UpcastConversionApi}\n     */\n\n    this.conversionApi = Object.assign({}, conversionApi); // `convertItem`, `convertChildren` and `splitToAllowedParent` are bound to this `UpcastDispatcher`\n    // instance and set on `conversionApi`. This way only a part of `UpcastDispatcher` API is exposed.\n\n    this.conversionApi.convertItem = this._convertItem.bind(this);\n    this.conversionApi.convertChildren = this._convertChildren.bind(this);\n    this.conversionApi.splitToAllowedParent = this._splitToAllowedParent.bind(this);\n    this.conversionApi.getSplitParts = this._getSplitParts.bind(this);\n  }\n  /**\n   * Starts the conversion process. The entry point for the conversion.\n   *\n   * @fires element\n   * @fires text\n   * @fires documentFragment\n   * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element} viewItem\n   * Part of the view to be converted.\n   * @param {module:engine/model/writer~Writer} writer Instance of model writer.\n   * @param {module:engine/model/schema~SchemaContextDefinition} [context=['$root']] Elements will be converted according to this context.\n   * @returns {module:engine/model/documentfragment~DocumentFragment} Model data that is a result of the conversion process\n   * wrapped in `DocumentFragment`. Converted marker elements will be set as that document fragment's\n   * {@link module:engine/model/documentfragment~DocumentFragment#markers static markers map}.\n   */\n\n\n  _createClass(UpcastDispatcher, [{\n    key: \"convert\",\n    value: function convert(viewItem, writer) {\n      var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ['$root'];\n      this.fire('viewCleanup', viewItem); // Create context tree and set position in the top element.\n      // Items will be converted according to this position.\n\n      this._modelCursor = createContextTree(context, writer); // Store writer in conversion as a conversion API\n      // to be sure that conversion process will use the same batch.\n\n      this.conversionApi.writer = writer; // Create consumable values list for conversion process.\n\n      this.conversionApi.consumable = ViewConsumable.createFrom(viewItem); // Custom data stored by converter for conversion process.\n\n      this.conversionApi.store = {}; // Do the conversion.\n\n      var _this$_convertItem = this._convertItem(viewItem, this._modelCursor),\n          modelRange = _this$_convertItem.modelRange; // Conversion result is always a document fragment so let's create it.\n\n\n      var documentFragment = writer.createDocumentFragment(); // When there is a conversion result.\n\n      if (modelRange) {\n        // Remove all empty elements that were create while splitting.\n        this._removeEmptyElements(); // Move all items that were converted in context tree to the document fragment.\n\n\n        for (var _i = 0, _Array$from = Array.from(this._modelCursor.parent.getChildren()); _i < _Array$from.length; _i++) {\n          var item = _Array$from[_i];\n          writer.append(item, documentFragment);\n        } // Extract temporary markers elements from model and set as static markers collection.\n\n\n        documentFragment.markers = extractMarkersFromModelFragment(documentFragment, writer);\n      } // Clear context position.\n\n\n      this._modelCursor = null; // Clear split elements lists.\n\n      this._splitParts.clear(); // Clear conversion API.\n\n\n      this.conversionApi.writer = null;\n      this.conversionApi.store = null; // Return fragment as conversion result.\n\n      return documentFragment;\n    }\n    /**\n     * @private\n     * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#convertItem\n     */\n\n  }, {\n    key: \"_convertItem\",\n    value: function _convertItem(viewItem, modelCursor) {\n      var data = Object.assign({\n        viewItem: viewItem,\n        modelCursor: modelCursor,\n        modelRange: null\n      });\n\n      if (viewItem.is('element')) {\n        this.fire('element:' + viewItem.name, data, this.conversionApi);\n      } else if (viewItem.is('text')) {\n        this.fire('text', data, this.conversionApi);\n      } else {\n        this.fire('documentFragment', data, this.conversionApi);\n      } // Handle incorrect conversion result.\n\n\n      if (data.modelRange && !(data.modelRange instanceof ModelRange)) {\n        /**\n         * Incorrect conversion result was dropped.\n         *\n         * {@link module:engine/model/range~Range Model range} should be a conversion result.\n         *\n         * @error view-conversion-dispatcher-incorrect-result\n         */\n        throw new CKEditorError('view-conversion-dispatcher-incorrect-result: Incorrect conversion result was dropped.');\n      }\n\n      return {\n        modelRange: data.modelRange,\n        modelCursor: data.modelCursor\n      };\n    }\n    /**\n     * @private\n     * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#convertChildren\n     */\n\n  }, {\n    key: \"_convertChildren\",\n    value: function _convertChildren(viewItem, modelCursor) {\n      var modelRange = new ModelRange(modelCursor);\n      var nextModelCursor = modelCursor;\n\n      for (var _i2 = 0, _Array$from2 = Array.from(viewItem.getChildren()); _i2 < _Array$from2.length; _i2++) {\n        var viewChild = _Array$from2[_i2];\n\n        var result = this._convertItem(viewChild, nextModelCursor);\n\n        if (result.modelRange instanceof ModelRange) {\n          modelRange.end = result.modelRange.end;\n          nextModelCursor = result.modelCursor;\n        }\n      }\n\n      return {\n        modelRange: modelRange,\n        modelCursor: nextModelCursor\n      };\n    }\n    /**\n     * @private\n     * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#splitToAllowedParent\n     */\n\n  }, {\n    key: \"_splitToAllowedParent\",\n    value: function _splitToAllowedParent(node, modelCursor) {\n      // Try to find allowed parent.\n      var allowedParent = this.conversionApi.schema.findAllowedParent(modelCursor, node); // When there is no parent that allows to insert node then return `null`.\n\n      if (!allowedParent) {\n        return null;\n      } // When current position parent allows to insert node then return this position.\n\n\n      if (allowedParent === modelCursor.parent) {\n        return {\n          position: modelCursor\n        };\n      } // When allowed parent is in context tree.\n\n\n      if (this._modelCursor.parent.getAncestors().includes(allowedParent)) {\n        return null;\n      } // Split element to allowed parent.\n\n\n      var splitResult = this.conversionApi.writer.split(modelCursor, allowedParent); // Using the range returned by `model.Writer#split`, we will pair original elements with their split parts.\n      //\n      // The range returned from the writer spans \"over the split\" or, precisely saying, from the end of the original element (the one\n      // that got split) to the beginning of the other part of that element:\n      //\n      // <limit><a><b><c>X[]Y</c></b><a></limit> ->\n      // <limit><a><b><c>X[</c></b></a><a><b><c>]Y</c></b></a>\n      //\n      // After the split there cannot be any full node between the positions in `splitRange`. The positions are touching.\n      // Also, because of how splitting works, it is easy to notice, that \"closing tags\" are in the reverse order than \"opening tags\".\n      // Also, since we split all those elements, each of them has to have the other part.\n      //\n      // With those observations in mind, we will pair the original elements with their split parts by saving \"closing tags\" and matching\n      // them with \"opening tags\" in the reverse order. For that we can use a stack.\n\n      var stack = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = splitResult.range.getWalker()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var treeWalkerValue = _step.value;\n\n          if (treeWalkerValue.type == 'elementEnd') {\n            stack.push(treeWalkerValue.item);\n          } else {\n            // There should not be any text nodes after the element is split, so the only other value is `elementStart`.\n            var originalPart = stack.pop();\n            var splitPart = treeWalkerValue.item;\n\n            this._registerSplitPair(originalPart, splitPart);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return {\n        position: splitResult.position,\n        cursorParent: splitResult.range.end.parent\n      };\n    }\n    /**\n     * Registers that `splitPart` element is a split part of the `originalPart` element.\n     *\n     * Data set by this method is used by {@link #_getSplitParts} and {@link #_removeEmptyElements}.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} originalPart\n     * @param {module:engine/model/element~Element} splitPart\n     */\n\n  }, {\n    key: \"_registerSplitPair\",\n    value: function _registerSplitPair(originalPart, splitPart) {\n      if (!this._splitParts.has(originalPart)) {\n        this._splitParts.set(originalPart, [originalPart]);\n      }\n\n      var list = this._splitParts.get(originalPart);\n\n      this._splitParts.set(splitPart, list);\n\n      list.push(splitPart);\n    }\n    /**\n     * @private\n     * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#getSplitParts\n     */\n\n  }, {\n    key: \"_getSplitParts\",\n    value: function _getSplitParts(element) {\n      var parts;\n\n      if (!this._splitParts.has(element)) {\n        parts = [element];\n      } else {\n        parts = this._splitParts.get(element);\n      }\n\n      return parts;\n    }\n    /**\n     * Checks if there are any empty elements created while splitting and removes them.\n     *\n     * This method works recursively to re-check empty elements again after at least one element was removed in the initial call,\n     * as some elements might have become empty after other empty elements were removed from them.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_removeEmptyElements\",\n    value: function _removeEmptyElements() {\n      var anyRemoved = false;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this._splitParts.keys()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var element = _step2.value;\n\n          if (element.isEmpty) {\n            this.conversionApi.writer.remove(element);\n\n            this._splitParts.delete(element);\n\n            anyRemoved = true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      if (anyRemoved) {\n        this._removeEmptyElements();\n      }\n    }\n    /**\n     * Fired before the first conversion event, at the beginning of upcast (view to model conversion) process.\n     *\n     * @event viewCleanup\n     * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element}\n     * viewItem Part of the view to be converted.\n     */\n\n    /**\n     * Fired when {@link module:engine/view/element~Element} is converted.\n     *\n     * `element` is a namespace event for a class of events. Names of actually called events follow this pattern:\n     * `element:<elementName>` where `elementName` is the name of converted element. This way listeners may listen to\n     * all elements conversion or to conversion of specific elements.\n     *\n     * @event element\n     * @param {Object} data Conversion data. Keep in mind that this object is shared by reference between all\n     * callbacks that will be called. This means that callbacks can override values if needed, and those values will\n     * be available in other callbacks.\n     * @param {module:engine/view/item~Item} data.viewItem Converted item.\n     * @param {module:engine/model/position~Position} data.modelCursor Position where a converter should start changes.\n     * Change this value for the next converter to tell where the conversion should continue.\n     * @param {module:engine/model/range~Range} data.modelRange The current state of conversion result. Every change to\n     * converted element should be reflected by setting or modifying this property.\n     * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion utilities to be used by callback.\n     */\n\n    /**\n     * Fired when {@link module:engine/view/text~Text} is converted.\n     *\n     * @event text\n     * @see #event:element\n     */\n\n    /**\n     * Fired when {@link module:engine/view/documentfragment~DocumentFragment} is converted.\n     *\n     * @event documentFragment\n     * @see #event:element\n     */\n\n  }]);\n\n  return UpcastDispatcher;\n}();\n\nexport { UpcastDispatcher as default };\nmix(UpcastDispatcher, EmitterMixin); // Traverses given model item and searches elements which marks marker range. Found element is removed from\n// DocumentFragment but path of this element is stored in a Map which is then returned.\n//\n// @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/node~Node} modelItem Fragment of model.\n// @returns {Map<String, module:engine/model/range~Range>} List of static markers.\n\nfunction extractMarkersFromModelFragment(modelItem, writer) {\n  var markerElements = new Set();\n  var markers = new Map(); // Create ModelTreeWalker.\n\n  var range = ModelRange._createIn(modelItem).getItems(); // Walk through DocumentFragment and collect marker elements.\n\n\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = range[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var item = _step3.value;\n\n      // Check if current element is a marker.\n      if (item.name == '$marker') {\n        markerElements.add(item);\n      }\n    } // Walk through collected marker elements store its path and remove its from the DocumentFragment.\n\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = markerElements[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var markerElement = _step4.value;\n      var markerName = markerElement.getAttribute('data-name');\n      var currentPosition = writer.createPositionBefore(markerElement); // When marker of given name is not stored it means that we have found the beginning of the range.\n\n      if (!markers.has(markerName)) {\n        markers.set(markerName, new ModelRange(currentPosition.clone())); // Otherwise is means that we have found end of the marker range.\n      } else {\n        markers.get(markerName).end = currentPosition.clone();\n      } // Remove marker element from DocumentFragment.\n\n\n      writer.remove(markerElement);\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  return markers;\n} // Creates model fragment according to given context and returns position in the bottom (the deepest) element.\n\n\nfunction createContextTree(contextDefinition, writer) {\n  var position;\n  var _iteratorNormalCompletion5 = true;\n  var _didIteratorError5 = false;\n  var _iteratorError5 = undefined;\n\n  try {\n    for (var _iterator5 = new SchemaContext(contextDefinition)[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n      var item = _step5.value;\n      var attributes = {};\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = item.getAttributeKeys()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var key = _step6.value;\n          attributes[key] = item.getAttribute(key);\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      var current = writer.createElement(item.name, attributes);\n\n      if (position) {\n        writer.append(current, position);\n      }\n\n      position = ModelPosition._createAt(current, 0);\n    }\n  } catch (err) {\n    _didIteratorError5 = true;\n    _iteratorError5 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n        _iterator5.return();\n      }\n    } finally {\n      if (_didIteratorError5) {\n        throw _iteratorError5;\n      }\n    }\n  }\n\n  return position;\n}\n/**\n * Conversion interface that is registered for given {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher}\n * and is passed as one of parameters when {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher dispatcher}\n * fires it's events.\n *\n * @interface module:engine/conversion/upcastdispatcher~UpcastConversionApi\n */\n\n/**\n * Starts conversion of given item by firing an appropriate event.\n *\n * Every fired event is passed (as first parameter) an object with `modelRange` property. Every event may set and/or\n * modify that property. When all callbacks are done, the final value of `modelRange` property is returned by this method.\n * The `modelRange` must be {@link module:engine/model/range~Range model range} or `null` (as set by default).\n *\n * @method #convertItem\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:text\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:documentFragment\n * @param {module:engine/view/item~Item} viewItem Item to convert.\n * @param {module:engine/model/position~Position} modelCursor Position of conversion.\n * @returns {Object} result Conversion result.\n * @returns {module:engine/model/range~Range|null} result.modelRange Model range containing result of item conversion,\n * created and modified by callbacks attached to fired event, or `null` if the conversion result was incorrect.\n * @returns {module:engine/model/position~Position} result.modelCursor Position where conversion should be continued.\n */\n\n/**\n * Starts conversion of all children of given item by firing appropriate events for all those children.\n *\n * @method #convertChildren\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:text\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:documentFragment\n * @param {module:engine/view/item~Item} viewItem Element which children should be converted.\n * @param {module:engine/model/position~Position} modelCursor Position of conversion.\n * @returns {Object} result Conversion result.\n * @returns {module:engine/model/range~Range} result.modelRange Model range containing results of conversion of all children of given item.\n * When no children was converted then range is collapsed.\n * @returns {module:engine/model/position~Position} result.modelCursor Position where conversion should be continued.\n */\n\n/**\n * Checks {@link module:engine/model/schema~Schema schema} to find allowed parent for element that we are going to insert\n * starting from given position. If current parent does not allow to insert element but one of the ancestors does then\n * split nodes to allowed parent.\n *\n * If schema allows to insert node in given position, nothing is split and object with that position is returned.\n *\n * If it was not possible to find allowed parent, `null` is returned, nothing is split.\n *\n * Otherwise, ancestors are split and object with position and the copy of the split element is returned.\n *\n * For instance, if `<image>` is not allowed in `<paragraph>` but is allowed in `$root`:\n *\n *\t\t<paragraph>foo[]bar</paragraph>\n *\n *  \t-> split for `<image>` ->\n *\n *  \t<paragraph>foo</paragraph>[]<paragraph>bar</paragraph>\n *\n * In the sample above position between `<paragraph>` elements will be returned as `position` and the second `paragraph`\n * as `cursorParent`.\n *\n * @method #splitToAllowedParent\n * @param {module:engine/model/position~Position} position Position on which element is going to be inserted.\n * @param {module:engine/model/node~Node} node Node to insert.\n * @returns {Object|null} Split result. If it was not possible to find allowed position `null` is returned.\n * @returns {module:engine/model/position~Position} position between split elements.\n * @returns {module:engine/model/element~Element} [cursorParent] Element inside which cursor should be placed to\n * continue conversion. When element is not defined it means that there was no split.\n */\n\n/**\n * Returns all the split parts of given `element` that were created during upcasting through using {@link #splitToAllowedParent}.\n * It enables you to easily track those elements and continue processing them after they are split during their children conversion.\n *\n *\t\t<paragraph>Foo<image />bar<image />baz</paragraph> ->\n *\t\t<paragraph>Foo</paragraph><image /><paragraph>bar</paragraph><image /><paragraph>baz</paragraph>\n *\n * For a reference to any of above paragraphs, the function will return all three paragraphs (the original element included),\n * sorted in the order of their creation (the original element is the first one).\n *\n * If given `element` was not split, an array with single element is returned.\n *\n * Example of a usage in a converter code:\n *\n *\t\tconst myElement = conversionApi.writer.createElement( 'myElement' );\n *\n *\t\t// Children conversion may split `myElement`.\n *\t\tconversionApi.convertChildren( myElement, modelCursor );\n *\n *\t\tconst splitParts = conversionApi.getSplitParts( myElement );\n *\t\tconst lastSplitPart = splitParts[ splitParts.length - 1 ];\n *\n *\t\t// Setting `data.modelRange` basing on split parts:\n *\t\tdata.modelRange = conversionApi.writer.createRange(\n *\t\t\tconversionApi.writer.createPositionBefore( myElement ),\n *\t\t\tconversionApi.writer.createPositionAfter( lastSplitPart )\n *\t\t);\n *\n *\t\t// Setting `data.modelCursor` to continue after the last split element:\n *\t\tdata.modelCursor = conversionApi.writer.createPositionAfter( lastSplitPart );\n *\n * **Tip:** if you are unable to get a reference to the original element (for example because the code is split into multiple converters\n * or even classes) but it was already converted, you might want to check first element in `data.modelRange`. This is a common situation\n * if an attribute converter is separated from an element converter.\n *\n * @method #getSplitParts\n * @param {module:engine/model/element~Element} element\n * @returns {Array.<module:engine/model/element~Element>}\n */\n\n/**\n * Stores information about what parts of processed view item are still waiting to be handled. After a piece of view item\n * was converted, appropriate consumable value should be {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consumed}.\n *\n * @member {module:engine/conversion/viewconsumable~ViewConsumable} #consumable\n */\n\n/**\n * Custom data stored by converters for conversion process. Custom properties of this object can be defined and use to\n * pass parameters between converters.\n *\n * The difference between this property and `data` parameter of\n * {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element} is that `data` parameters allows you\n * to pass parameters within a single event and `store` within the whole conversion.\n *\n * @member {Object} #store\n */\n\n/**\n * The model's schema instance.\n *\n * @member {module:engine/model/schema~Schema} #schema\n */\n\n/**\n * The {@link module:engine/model/writer~Writer} instance used to manipulate data during conversion.\n *\n * @member {module:engine/model/writer~Writer} #writer\n */","import _slicedToArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/controller/datacontroller\n */\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Mapper from '../conversion/mapper';\nimport DowncastDispatcher from '../conversion/downcastdispatcher';\nimport { insertText } from '../conversion/downcasthelpers';\nimport UpcastDispatcher from '../conversion/upcastdispatcher';\nimport { convertText, convertToModelFragment } from '../conversion/upcasthelpers';\nimport ViewDocumentFragment from '../view/documentfragment';\nimport ViewDocument from '../view/document';\nimport ViewDowncastWriter from '../view/downcastwriter';\nimport ModelRange from '../model/range';\n/**\n * Controller for the data pipeline. The data pipeline controls how data is retrieved from the document\n * and set inside it. Hence, the controller features two methods which allow to {@link ~DataController#get get}\n * and {@link ~DataController#set set} data of the {@link ~DataController#model model}\n * using given:\n *\n * * {@link module:engine/dataprocessor/dataprocessor~DataProcessor data processor},\n * * downcast converters,\n * * upcast converters.\n *\n * An instance of the data controller is always available in the {@link module:core/editor/editor~Editor#data `editor.data`}\n * property:\n *\n *\t\teditor.data.get( { rootName: 'customRoot' } ); // -> '<p>Hello!</p>'\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar DataController =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a data controller instance.\n   *\n   * @param {module:engine/model/model~Model} model Data model.\n   * @param {module:engine/dataprocessor/dataprocessor~DataProcessor} [dataProcessor] Data processor that should be used\n   * by the controller.\n   */\n  function DataController(model, dataProcessor) {\n    var _this = this;\n\n    _classCallCheck(this, DataController);\n\n    /**\n     * Data model.\n     *\n     * @readonly\n     * @member {module:engine/model/model~Model}\n     */\n    this.model = model;\n    /**\n     * Data processor used during the conversion.\n     *\n     * @readonly\n     * @member {module:engine/dataprocessor/dataprocessor~DataProcessor}\n     */\n\n    this.processor = dataProcessor;\n    /**\n     * Mapper used for the conversion. It has no permanent bindings, because they are created when getting data and\n     * cleared directly after the data are converted. However, the mapper is defined as a class property, because\n     * it needs to be passed to the `DowncastDispatcher` as a conversion API.\n     *\n     * @readonly\n     * @member {module:engine/conversion/mapper~Mapper}\n     */\n\n    this.mapper = new Mapper();\n    /**\n     * Downcast dispatcher used by the {@link #get get method}. Downcast converters should be attached to it.\n     *\n     * @readonly\n     * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher}\n     */\n\n    this.downcastDispatcher = new DowncastDispatcher({\n      mapper: this.mapper\n    });\n    this.downcastDispatcher.on('insert:$text', insertText(), {\n      priority: 'lowest'\n    });\n    /**\n     * Upcast dispatcher used by the {@link #set set method}. Upcast converters should be attached to it.\n     *\n     * @readonly\n     * @member {module:engine/conversion/upcastdispatcher~UpcastDispatcher}\n     */\n\n    this.upcastDispatcher = new UpcastDispatcher({\n      schema: model.schema\n    }); // Define default converters for text and elements.\n    //\n    // Note that if there is no default converter for the element it will be skipped, for instance `<b>foo</b>` will be\n    // converted to nothing. We add `convertToModelFragment` as a last converter so it converts children of that\n    // element to the document fragment so `<b>foo</b>` will be converted to `foo` if there is no converter for `<b>`.\n\n    this.upcastDispatcher.on('text', convertText(), {\n      priority: 'lowest'\n    });\n    this.upcastDispatcher.on('element', convertToModelFragment(), {\n      priority: 'lowest'\n    });\n    this.upcastDispatcher.on('documentFragment', convertToModelFragment(), {\n      priority: 'lowest'\n    });\n    this.decorate('init'); // Fire `ready` event when initialisation has completed. Such low level listener gives possibility\n    // to plug into initialisation pipeline without interrupting the initialisation flow.\n\n    this.on('init', function () {\n      _this.fire('ready');\n    }, {\n      priority: 'lowest'\n    });\n  }\n  /**\n   * Returns the model's data converted by downcast dispatchers attached to {@link #downcastDispatcher} and\n   * formatted by the {@link #processor data processor}.\n   *\n   * @param {Object} [options]\n   * @param {String} [options.rootName='main'] Root name.\n   * @param {String} [options.trim='empty'] Whether returned data should be trimmed. This option is set to `empty` by default,\n   * which means whenever editor content is considered empty, an empty string will be returned. To turn off trimming completely\n   * use `'none'`. In such cases exact content will be returned (for example `<p>&nbsp;</p>` for an empty editor).\n   * @returns {String} Output data.\n   */\n\n\n  _createClass(DataController, [{\n    key: \"get\",\n    value: function get(options) {\n      var _ref = options || {},\n          _ref$rootName = _ref.rootName,\n          rootName = _ref$rootName === void 0 ? 'main' : _ref$rootName,\n          _ref$trim = _ref.trim,\n          trim = _ref$trim === void 0 ? 'empty' : _ref$trim;\n\n      if (!this._checkIfRootsExists([rootName])) {\n        /**\n         * Cannot get data from a non-existing root. This error is thrown when {@link #get DataController#get() method}\n         * is called with non-existent root name. For example, if there is an editor instance with only `main` root,\n         * calling {@link #get} like:\n         *\n         *\t\tdata.get( { rootName: 'root2' } );\n         *\n         * will throw this error.\n         *\n         * @error datacontroller-get-non-existent-root\n         */\n        throw new CKEditorError('datacontroller-get-non-existent-root: Attempting to get data from a non-existing root.');\n      }\n\n      var root = this.model.document.getRoot(rootName);\n\n      if (trim === 'empty' && !this.model.hasContent(root, {\n        ignoreWhitespaces: true\n      })) {\n        return '';\n      }\n\n      return this.stringify(root);\n    }\n    /**\n     * Returns the content of the given {@link module:engine/model/element~Element model's element} or\n     * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} converted by the downcast converters\n     * attached to {@link #downcastDispatcher} and formatted by the {@link #processor data processor}.\n     *\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} modelElementOrFragment\n     * Element whose content will be stringified.\n     * @returns {String} Output data.\n     */\n\n  }, {\n    key: \"stringify\",\n    value: function stringify(modelElementOrFragment) {\n      // Model -> view.\n      var viewDocumentFragment = this.toView(modelElementOrFragment); // View -> data.\n\n      return this.processor.toData(viewDocumentFragment);\n    }\n    /**\n     * Returns the content of the given {@link module:engine/model/element~Element model element} or\n     * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} converted by the downcast\n     * converters attached to {@link #downcastDispatcher} to a\n     * {@link module:engine/view/documentfragment~DocumentFragment view document fragment}.\n     *\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} modelElementOrFragment\n     * Element or document fragment whose content will be converted.\n     * @returns {module:engine/view/documentfragment~DocumentFragment} Output view DocumentFragment.\n     */\n\n  }, {\n    key: \"toView\",\n    value: function toView(modelElementOrFragment) {\n      // Clear bindings so the call to this method gives correct results.\n      this.mapper.clearBindings(); // First, convert elements.\n\n      var modelRange = ModelRange._createIn(modelElementOrFragment);\n\n      var viewDocumentFragment = new ViewDocumentFragment(); // Create separate ViewDowncastWriter just for data conversion purposes.\n      // We have no view controller and rendering do DOM in DataController so view.change() block is not used here.\n\n      var viewWriter = new ViewDowncastWriter(new ViewDocument());\n      this.mapper.bindElements(modelElementOrFragment, viewDocumentFragment);\n      this.downcastDispatcher.convertInsert(modelRange, viewWriter);\n\n      if (!modelElementOrFragment.is('documentFragment')) {\n        // Then, if a document element is converted, convert markers.\n        // From all document markers, get those, which \"intersect\" with the converter element.\n        var markers = _getMarkersRelativeToElement(modelElementOrFragment);\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = markers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _step$value = _slicedToArray(_step.value, 2),\n                name = _step$value[0],\n                range = _step$value[1];\n\n            this.downcastDispatcher.convertMarkerAdd(name, range, viewWriter);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      return viewDocumentFragment;\n    }\n    /**\n     * Sets initial input data parsed by the {@link #processor data processor} and\n     * converted by the {@link #upcastDispatcher view-to-model converters}.\n     * Initial data can be set only to document that {@link module:engine/model/document~Document#version} is equal 0.\n     *\n     * **Note** This method is {@link module:utils/observablemixin~ObservableMixin#decorate decorated} which is\n     * used by e.g. collaborative editing plugin that syncs remote data on init.\n     *\n     * When data is passed as a string it is initialized on a default `main` root:\n     *\n     *\t\tdataController.init( '<p>Foo</p>' ); // Initializes data on the `main` root.\n     *\n     * To initialize data on a different root or multiple roots at once, object containing `rootName` - `data` pairs should be passed:\n     *\n     *\t\tdataController.init( { main: '<p>Foo</p>', title: '<h1>Bar</h1>' } ); // Initializes data on the `main` and `title` roots.\n     *\n     * @fires init\n     * @param {String|Object.<String,String>} data Input data as a string or an object containing `rootName` - `data`\n     * pairs to initialize data on multiple roots at once.\n     * @returns {Promise} Promise that is resolved after the data is set on the editor.\n     */\n\n  }, {\n    key: \"init\",\n    value: function init(data) {\n      var _this2 = this;\n\n      if (this.model.document.version) {\n        /**\n         * Cannot set initial data to not empty {@link module:engine/model/document~Document}.\n         * Initial data should be set once, during {@link module:core/editor/editor~Editor} initialization,\n         * when the {@link module:engine/model/document~Document#version} is equal 0.\n         *\n         * @error datacontroller-init-document-not-empty\n         */\n        throw new CKEditorError('datacontroller-init-document-not-empty: Trying to set initial data to not empty document.');\n      }\n\n      var initialData = {};\n\n      if (typeof data === 'string') {\n        initialData.main = data; // Default root is 'main'. To initiate data on a different root, object should be passed.\n      } else {\n        initialData = data;\n      }\n\n      if (!this._checkIfRootsExists(Object.keys(initialData))) {\n        /**\n         * Cannot init data on a non-existing root. This error is thrown when {@link #init DataController#init() method}\n         * is called with non-existent root name. For example, if there is an editor instance with only `main` root,\n         * calling {@link #init} like:\n         *\n         * \t\tdata.init( { main: '<p>Foo</p>', root2: '<p>Bar</p>' } );\n         *\n         * will throw this error.\n         *\n         * @error datacontroller-init-non-existent-root\n         */\n        throw new CKEditorError('datacontroller-init-non-existent-root: Attempting to init data on a non-existing root.');\n      }\n\n      this.model.enqueueChange('transparent', function (writer) {\n        for (var _i = 0, _Object$keys = Object.keys(initialData); _i < _Object$keys.length; _i++) {\n          var rootName = _Object$keys[_i];\n\n          var modelRoot = _this2.model.document.getRoot(rootName);\n\n          writer.insert(_this2.parse(initialData[rootName], modelRoot), modelRoot, 0);\n        }\n      });\n      return Promise.resolve();\n    }\n    /**\n     * Sets input data parsed by the {@link #processor data processor} and\n     * converted by the {@link #upcastDispatcher view-to-model converters}.\n     * This method can be used any time to replace existing editor data by the new one without clearing the\n     * {@link module:engine/model/document~Document#history document history}.\n     *\n     * This method also creates a batch with all the changes applied. If all you need is to parse data, use\n     * the {@link #parse} method.\n     *\n     * When data is passed as a string it is set on a default `main` root:\n     *\n     *\t\tdataController.set( '<p>Foo</p>' ); // Sets data on the `main` root.\n     *\n     * To set data on a different root or multiple roots at once, object containing `rootName` - `data` pairs should be passed:\n     *\n     *\t\tdataController.set( { main: '<p>Foo</p>', title: '<h1>Bar</h1>' } ); // Sets data on the `main` and `title` roots.\n     *\n     * @param {String|Object.<String,String>} data Input data as a string or an object containing `rootName` - `data`\n     * pairs to set data on multiple roots at once.\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(data) {\n      var _this3 = this;\n\n      var newData = {};\n\n      if (typeof data === 'string') {\n        newData.main = data; // Default root is 'main'. To set data on a different root, object should be passed.\n      } else {\n        newData = data;\n      }\n\n      if (!this._checkIfRootsExists(Object.keys(newData))) {\n        /**\n         * Cannot set data on a non-existing root. This error is thrown when {@link #set DataController#set() method}\n         * is called with non-existent root name. For example, if there is an editor instance with only `main` root,\n         * calling {@link #set} like:\n         *\n         * \t\tdata.set( { main: '<p>Foo</p>', root2: '<p>Bar</p>' } );\n         *\n         * will throw this error.\n         *\n         * @error datacontroller-set-non-existent-root\n         */\n        throw new CKEditorError('datacontroller-set-non-existent-root: Attempting to set data on a non-existing root.');\n      }\n\n      this.model.enqueueChange('transparent', function (writer) {\n        writer.setSelection(null);\n        writer.removeSelectionAttribute(_this3.model.document.selection.getAttributeKeys());\n\n        for (var _i2 = 0, _Object$keys2 = Object.keys(newData); _i2 < _Object$keys2.length; _i2++) {\n          var rootName = _Object$keys2[_i2];\n\n          // Save to model.\n          var modelRoot = _this3.model.document.getRoot(rootName);\n\n          writer.remove(writer.createRangeIn(modelRoot));\n          writer.insert(_this3.parse(newData[rootName], modelRoot), modelRoot, 0);\n        }\n      });\n    }\n    /**\n     * Returns the data parsed by the {@link #processor data processor} and then converted by upcast converters\n     * attached to the {@link #upcastDispatcher}.\n     *\n     * @see #set\n     * @param {String} data Data to parse.\n     * @param {module:engine/model/schema~SchemaContextDefinition} [context='$root'] Base context in which the view will\n     * be converted to the model. See: {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#convert}.\n     * @returns {module:engine/model/documentfragment~DocumentFragment} Parsed data.\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(data) {\n      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$root';\n      // data -> view\n      var viewDocumentFragment = this.processor.toView(data); // view -> model\n\n      return this.toModel(viewDocumentFragment, context);\n    }\n    /**\n     * Returns the result of the given {@link module:engine/view/element~Element view element} or\n     * {@link module:engine/view/documentfragment~DocumentFragment view document fragment} converted by the\n     * {@link #upcastDispatcher view-to-model converters}, wrapped by {@link module:engine/model/documentfragment~DocumentFragment}.\n     *\n     * When marker elements were converted during the conversion process, it will be set as a document fragment's\n     * {@link module:engine/model/documentfragment~DocumentFragment#markers static markers map}.\n     *\n     * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewElementOrFragment\n     * Element or document fragment whose content will be converted.\n     * @param {module:engine/model/schema~SchemaContextDefinition} [context='$root'] Base context in which the view will\n     * be converted to the model. See: {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#convert}.\n     * @returns {module:engine/model/documentfragment~DocumentFragment} Output document fragment.\n     */\n\n  }, {\n    key: \"toModel\",\n    value: function toModel(viewElementOrFragment) {\n      var _this4 = this;\n\n      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$root';\n      return this.model.change(function (writer) {\n        return _this4.upcastDispatcher.convert(viewElementOrFragment, writer, context);\n      });\n    }\n    /**\n     * Removes all event listeners set by the DataController.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopListening();\n    }\n    /**\n     * Checks if all provided root names are existing editor roots.\n     *\n     * @private\n     * @param {Array.<String>} rootNames Root names to check.\n     * @returns {Boolean} Whether all provided root names are existing editor roots.\n     */\n\n  }, {\n    key: \"_checkIfRootsExists\",\n    value: function _checkIfRootsExists(rootNames) {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = rootNames[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var rootName = _step2.value;\n\n          if (!this.model.document.getRootNames().includes(rootName)) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Event fired once data initialisation has finished.\n     *\n     * @event ready\n     */\n\n    /**\n     * Event fired after {@link #init init() method} has been run. It can be {@link #listenTo listened to} to adjust/modify\n     * the initialisation flow. However, if the `init` event is stopped or prevented, the {@link #event:ready ready event}\n     * should be fired manually.\n     *\n     * The `init` event is fired by decorated {@link #init} method.\n     * See {@link module:utils/observablemixin~ObservableMixin#decorate} for more information and samples.\n     *\n     * @event init\n     */\n\n  }]);\n\n  return DataController;\n}();\n\nexport { DataController as default };\nmix(DataController, ObservableMixin); // Helper function for downcast conversion.\n//\n// Takes a document element (element that is added to a model document) and checks which markers are inside it\n// and which markers are containing it. If the marker is intersecting with element, the intersection is returned.\n\nfunction _getMarkersRelativeToElement(element) {\n  var result = [];\n  var doc = element.root.document;\n\n  if (!doc) {\n    return [];\n  }\n\n  var elementRange = ModelRange._createIn(element);\n\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = doc.model.markers[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var marker = _step3.value;\n      var intersection = elementRange.getIntersection(marker.getRange());\n\n      if (intersection) {\n        result.push([marker.name, intersection]);\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return result;\n}","import _regeneratorRuntime from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(_getAllUpcastDefinitions),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(_getUpcastDefinition);\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/conversion\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport UpcastHelpers from './upcasthelpers';\nimport DowncastHelpers from './downcasthelpers';\n/**\n * A utility class that helps add converters to upcast and downcast dispatchers.\n *\n * We recommend reading the {@glink framework/guides/architecture/editing-engine Editing engine architecture} guide first to\n * understand the core concepts of the conversion mechanisms.\n *\n * An instance of the conversion manager is available in the\n * {@link module:core/editor/editor~Editor#conversion `editor.conversion`} property\n * and by default has the following groups of dispatchers (i.e. directions of conversion):\n *\n * * `downcast` (editing and data downcasts)\n * * `editingDowncast`\n * * `dataDowncast`\n * * `upcast`\n *\n * # One-way converters\n *\n * To add a converter to a specific group, use the {@link module:engine/conversion/conversion~Conversion#for `for()`}\n * method:\n *\n *\t\t// Add a converter to editing downcast and data downcast.\n *\t\teditor.conversion.for( 'downcast' ).elementToElement( config ) );\n *\n *\t\t// Add a converter to the data pipepline only:\n *\t\teditor.conversion.for( 'dataDowncast' ).elementToElement( dataConversionConfig ) );\n *\n *\t\t// And a slightly different one for the editing pipeline:\n *\t\teditor.conversion.for( 'editingDowncast' ).elementToElement( editingConversionConfig ) );\n *\n * See {@link module:engine/conversion/conversion~Conversion#for `for()`} method documentation to learn more about\n * available conversion helpers and how to use your custom ones.\n *\n * # Two-way converters\n *\n * Besides using one-way converters via the `for()` method, you can also use other methods available in this\n * class to add two-way converters (upcast and downcast):\n *\n * * {@link module:engine/conversion/conversion~Conversion#elementToElement `elementToElement()`} &ndash;\n * Model element to view element and vice versa.\n * * {@link module:engine/conversion/conversion~Conversion#attributeToElement `attributeToElement()`} &ndash;\n * Model attribute to view element and vice versa.\n * * {@link module:engine/conversion/conversion~Conversion#attributeToAttribute `attributeToAttribute()`} &ndash;\n * Model attribute to view element and vice versa.\n */\n\nvar Conversion =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new conversion instance.\n   *\n   * @param {module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n   * Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher>} downcastDispatchers\n   * @param {module:engine/conversion/upcastdispatcher~UpcastDispatcher|\n   * Array.<module:engine/conversion/upcastdispatcher~UpcastDispatcher>} upcastDispatchers\n   */\n  function Conversion(downcastDispatchers, upcastDispatchers) {\n    _classCallCheck(this, Conversion);\n\n    /**\n     * Maps dispatchers group name to ConversionHelpers instances.\n     *\n     * @private\n     * @member {Map.<String,module:engine/conversion/conversionhelpers~ConversionHelpers>}\n     */\n    this._helpers = new Map(); // Define default 'downcast' & 'upcast' dispatchers groups. Those groups are always available as two-way converters needs them.\n\n    this._downcast = Array.isArray(downcastDispatchers) ? downcastDispatchers : [downcastDispatchers];\n\n    this._createConversionHelpers({\n      name: 'downcast',\n      dispatchers: this._downcast,\n      isDowncast: true\n    });\n\n    this._upcast = Array.isArray(upcastDispatchers) ? upcastDispatchers : [upcastDispatchers];\n\n    this._createConversionHelpers({\n      name: 'upcast',\n      dispatchers: this._upcast,\n      isDowncast: false\n    });\n  }\n  /**\n   * Define an alias for registered dispatcher.\n   *\n   *\t\tconst conversion = new Conversion(\n   *\t\t\t[ dataDowncastDispatcher, editingDowncastDispatcher ],\n   *\t\t\tupcastDispatcher\n   *\t\t);\n   *\n   *\t\tconversion.addAlias( 'dataDowncast', dataDowncastDispatcher );\n   *\n   * @param {String} alias An alias of a dispatcher.\n   * @param {module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n   * module:engine/conversion/upcastdispatcher~UpcastDispatcher} dispatcher Dispatcher which should have an alias.\n   */\n\n\n  _createClass(Conversion, [{\n    key: \"addAlias\",\n    value: function addAlias(alias, dispatcher) {\n      var isDowncast = this._downcast.includes(dispatcher);\n\n      var isUpcast = this._upcast.includes(dispatcher);\n\n      if (!isUpcast && !isDowncast) {\n        /**\n         * Trying to register and alias for a dispatcher that nas not been registered.\n         *\n         * @error conversion-add-alias-dispatcher-not-registered\n         */\n        throw new CKEditorError('conversion-add-alias-dispatcher-not-registered: ' + 'Trying to register and alias for a dispatcher that nas not been registered.');\n      }\n\n      this._createConversionHelpers({\n        name: alias,\n        dispatchers: [dispatcher],\n        isDowncast: isDowncast\n      });\n    }\n    /**\n     * Provides a chainable API to assign converters to conversion dispatchers group.\n     *\n     * If the given group name has not been registered, the\n     * {@link module:utils/ckeditorerror~CKEditorError `conversion-for-unknown-group` error} is thrown.\n     *\n     * You can use conversion helpers available directly in the `for()` chain or your custom ones via\n     * the {@link module:engine/conversion/conversionhelpers~ConversionHelpers#add `add()`} method.\n     *\n     * # Using bulit-in conversion helpers\n     *\n     * The `for()` chain comes with a set of conversion helpers which you can use like this:\n     *\n     *\t\teditor.conversion.for( 'downcast' )\n     *\t\t\t.elementToElement( config1 )        // Adds an element-to-element downcast converter.\n     *\t\t\t.attributeToElement( config2 );     // Adds an attribute-to-element downcast converter.\n     *\n     *\t\teditor.conversion.for( 'upcast' )\n     *\t\t\t.elementToAttribute( config3 );     // Adds an element-to-attribute upcast converter.\n     *\n     * Refer to the documentation of built-in conversion helpers to learn about their configuration options.\n     *\n     * * downcast (model-to-view) conversion helpers:\n     *\n     *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#elementToElement `elementToElement()`},\n     *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToElement `attributeToElement()`},\n     *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToAttribute `attributeToAttribute()`}.\n     *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#markerToElement `markerToElement()`}.\n     *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#markerToHighlight `markerToHighlight()`}.\n     *\n     * * upcast (view-to-model) conversion helpers:\n     *\n     *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToElement `elementToElement()`},\n     *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToAttribute `elementToAttribute()`},\n     *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#attributeToAttribute `attributeToAttribute()`}.\n     *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToMarker `elementToMarker()`}.\n     *\n     * # Using custom conversion helpers\n     *\n     * If you need to implement a nontypical converter, you can do so by calling:\n     *\n     *\t\teditor.conversion.for( direction ).add( customHelper );\n     *\n     * The `.add()` method takes exactly one parameter, which is a function. This function should accept one parameter that\n     * is a dispatcher instance. The function should add an actual converter to the passed dispatcher instance.\n     *\n     * Example:\n     *\n     *\t\teditor.conversion.for( 'upcast' ).add( dispatcher => {\n     *\t\t\tdispatcher.on( 'element:a',  ( evt, data, conversionApi ) => {\n     *\t\t\t\t// Do something with a view <a> element.\n     *\t\t\t} );\n     *\t\t} );\n     *\n     * Refer to the documentation of {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher}\n     * and {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} to learn how to write\n     * custom converters.\n     *\n     * @param {String} groupName The name of dispatchers group to add the converters to.\n     * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers|module:engine/conversion/upcasthelpers~UpcastHelpers}\n     */\n\n  }, {\n    key: \"for\",\n    value: function _for(groupName) {\n      if (!this._helpers.has(groupName)) {\n        /**\n         * Trying to add a converter to an unknown dispatchers group.\n         *\n         * @error conversion-for-unknown-group\n         */\n        throw new CKEditorError('conversion-for-unknown-group: Trying to add a converter to an unknown dispatchers group.');\n      }\n\n      return this._helpers.get(groupName);\n    }\n    /**\n     * Sets up converters between the model and the view that convert a model element to a view element (and vice versa).\n     * For example, the model `<paragraph>Foo</paragraph>` is `<p>Foo</p>` in the view.\n     *\n     *\t\t// A simple conversion from the `paragraph` model element to the `<p>` view element (and vice versa).\n     *\t\teditor.conversion.elementToElement( { model: 'paragraph', view: 'p' } );\n     *\n     *\t\t// Override other converters by specifying a converter definition with a higher priority.\n     *\t\teditor.conversion.elementToElement( { model: 'paragraph', view: 'div', converterPriority: 'high' } );\n     *\n     *\t\t// View specified as an object instead of a string.\n     *\t\teditor.conversion.elementToElement( {\n     *\t\t\tmodel: 'fancyParagraph',\n     *\t\t\tview: {\n     *\t\t\t\tname: 'p',\n     *\t\t\t\tclasses: 'fancy'\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\t// Use `upcastAlso` to define other view elements that should also be converted to a `paragraph` element.\n     *\t\teditor.conversion.elementToElement( {\n     *\t\t\tmodel: 'paragraph',\n     *\t\t\tview: 'p',\n     *\t\t\tupcastAlso: [\n     *\t\t\t\t'div',\n     *\t\t\t\t{\n     *\t\t\t\t\t// Any element with the `display: block` style.\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\tdisplay: 'block'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t]\n     *\t\t} );\n     *\n     *\t\t// `upcastAlso` set as callback enables a conversion of a wide range of different view elements.\n     *\t\teditor.conversion.elementToElement( {\n     *\t\t\tmodel: 'heading',\n     *\t\t\tview: 'h2',\n     *\t\t\t// Convert \"headling-like\" paragraphs to headings.\n     *\t\t\tupcastAlso: viewElement => {\n     *\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n     *\n     *\t\t\t\tif ( !fontSize ) {\n     *\t\t\t\t\treturn null;\n     *\t\t\t\t}\n     *\n     *\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\n     *\n     *\t\t\t\tif ( !match ) {\n     *\t\t\t\t\treturn null;\n     *\t\t\t\t}\n     *\n     *\t\t\t\tconst size = Number( match[ 1 ] );\n     *\n     *\t\t\t\tif ( size > 26 ) {\n     *\t\t\t\t\t// Returned value can be an object with the matched properties.\n     *\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n     *\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n     *\n     *\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\n     *\t\t\t\t}\n     *\n     *\t\t\t\treturn null;\n     *\t\t\t}\n     *\t\t} );\n     *\n     * `definition.model` is a `String` with a model element name to convert from or to.\n     * See {@link module:engine/conversion/conversion~ConverterDefinition} to learn about other parameters.\n     *\n     * @param {module:engine/conversion/conversion~ConverterDefinition} definition The converter definition.\n     */\n\n  }, {\n    key: \"elementToElement\",\n    value: function elementToElement(definition) {\n      // Set up downcast converter.\n      this.for('downcast').elementToElement(definition); // Set up upcast converter.\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getAllUpcastDefinitions(definition)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _step$value = _step.value,\n              model = _step$value.model,\n              view = _step$value.view;\n          this.for('upcast').elementToElement({\n            model: model,\n            view: view,\n            converterPriority: definition.converterPriority\n          });\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n    /**\n     * Sets up converters between the model and the view that convert a model attribute to a view element (and vice versa).\n     * For example, a model text node with `\"Foo\"` as data and the `bold` attribute is `<strong>Foo</strong>` in the view.\n     *\n     *\t\t// A simple conversion from the `bold=true` attribute to the `<strong>` view element (and vice versa).\n     *\t\teditor.conversion.attributeToElement( { model: 'bold', view: 'strong' } );\n     *\n     *\t\t// Override other converters by specifying a converter definition with a higher priority.\n     *\t\teditor.conversion.attributeToElement( { model: 'bold', view: 'b', converterPriority: 'high' } );\n     *\n     *\t\t// View specified as an object instead of a string.\n     *\t\teditor.conversion.attributeToElement( {\n     *\t\t\tmodel: 'bold',\n     *\t\t\tview: {\n     *\t\t\t\tname: 'span',\n     *\t\t\t\tclasses: 'bold'\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\t// Use `config.model.name` to define the conversion only from a given node type, `$text` in this case.\n     *\t\t// The same attribute on different elements may then be handled by a different converter.\n     *\t\teditor.conversion.attributeToElement( {\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'textDecoration',\n     *\t\t\t\tvalues: [ 'underline', 'lineThrough' ],\n     *\t\t\t\tname: '$text'\n     *\t\t\t},\n     *\t\t\tview: {\n     *\t\t\t\tunderline: {\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'text-decoration': 'underline'\n     *\t\t\t\t\t}\n     *\t\t\t\t},\n     *\t\t\t\tlineThrough: {\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'text-decoration': 'line-through'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\t// Use `upcastAlso` to define other view elements that should also be converted to the `bold` attribute.\n     *\t\teditor.conversion.attributeToElement( {\n     *\t\t\tmodel: 'bold',\n     *\t\t\tview: 'strong',\n     *\t\t\tupcastAlso: [\n     *\t\t\t\t'b',\n     *\t\t\t\t{\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tclasses: 'bold'\n     *\t\t\t\t},\n     *\t\t\t\t{\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'font-weight': 'bold'\n     *\t\t\t\t\t}\n     *\t\t\t\t},\n     *\t\t\t\tviewElement => {\n     *\t\t\t\t\tconst fontWeight = viewElement.getStyle( 'font-weight' );\n     *\n     *\t\t\t\t\tif ( viewElement.is( 'span' ) && fontWeight && /\\d+/.test() && Number( fontWeight ) > 500 ) {\n     *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\n     *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n     *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n     *\n     *\t\t\t\t\t\treturn {\n     *\t\t\t\t\t\t\tname: true,\n     *\t\t\t\t\t\t\tstyles: [ 'font-weight' ]\n     *\t\t\t\t\t\t};\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t]\n     *\t\t} );\n     *\n     *\t\t// Conversion from and to a model attribute key whose value is an enum (`fontSize=big|small`).\n     *\t\t// `upcastAlso` set as callback enables a conversion of a wide range of different view elements.\n     *\t\teditor.conversion.attributeToElement( {\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'fontSize',\n     *\t\t\t\tvalues: [ 'big', 'small' ]\n     *\t\t\t},\n     *\t\t\tview: {\n     *\t\t\t\tbig: {\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'font-size': '1.2em'\n     *\t\t\t\t\t}\n     *\t\t\t\t},\n     *\t\t\t\tsmall: {\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'font-size': '0.8em'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t},\n     *\t\t\tupcastAlso: {\n     *\t\t\t\tbig: viewElement => {\n     *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n     *\n     *\t\t\t\t\tif ( !fontSize ) {\n     *\t\t\t\t\t\treturn null;\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\n     *\n     *\t\t\t\t\tif ( !match ) {\n     *\t\t\t\t\t\treturn null;\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\tconst size = Number( match[ 1 ] );\n     *\n     *\t\t\t\t\tif ( viewElement.is( 'span' ) && size > 10 ) {\n     *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\n     *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n     *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n     *\n     *\t\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\treturn null;\n     *\t\t\t\t},\n     *\t\t\t\tsmall: viewElement => {\n     *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n     *\n     *\t\t\t\t\tif ( !fontSize ) {\n     *\t\t\t\t\t\treturn null;\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\n     *\n     *\t\t\t\t\tif ( !match ) {\n     *\t\t\t\t\t\treturn null;\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\tconst size = Number( match[ 1 ] );\n     *\n     *\t\t\t\t\tif ( viewElement.is( 'span' ) && size < 10 ) {\n     *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\n     *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n     *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n     *\n     *\t\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\treturn null;\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     * The `definition.model` parameter specifies which model attribute should be converted from or to. It can be a `{ key, value }` object\n     * describing the attribute key and value to convert or a `String` specifying just the attribute key (then `value` is set to `true`).\n     * See {@link module:engine/conversion/conversion~ConverterDefinition} to learn about other parameters.\n     *\n     * @param {module:engine/conversion/conversion~ConverterDefinition} definition The converter definition.\n     */\n\n  }, {\n    key: \"attributeToElement\",\n    value: function attributeToElement(definition) {\n      // Set up downcast converter.\n      this.for('downcast').attributeToElement(definition); // Set up upcast converter.\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _getAllUpcastDefinitions(definition)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _step2$value = _step2.value,\n              model = _step2$value.model,\n              view = _step2$value.view;\n          this.for('upcast').elementToAttribute({\n            view: view,\n            model: model,\n            converterPriority: definition.converterPriority\n          });\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n    /**\n     * Sets up converters between the model and the view that convert a model attribute to a view attribute (and vice versa).\n     * For example, `<image src='foo.jpg'></image>` is converted to `<img src='foo.jpg'></img>` (the same attribute key and value).\n     * This type of converters is intended to be used with {@link module:engine/model/element~Element model element} nodes.\n     * To convert text attributes {@link module:engine/conversion/conversion~Conversion#attributeToElement `attributeToElement converter`}\n     * should be set up.\n     *\n     *\t\t// A simple conversion from the `source` model attribute to the `src` view attribute (and vice versa).\n     *\t\teditor.conversion.attributeToAttribute( { model: 'source', view: 'src' } );\n     *\n     *\t\t// Attribute values are strictly specified.\n     *\t\teditor.conversion.attributeToAttribute( {\n     *\t\t\tmodel: {\n     *\t\t\t\tname: 'image',\n     *\t\t\t\tkey: 'aside',\n     *\t\t\t\tvalues: [ 'aside' ]\n     *\t\t\t},\n     *\t\t\tview: {\n     *\t\t\t\taside: {\n     *\t\t\t\t\tname: 'img',\n     *\t\t\t\t\tkey: 'class',\n     *\t\t\t\t\tvalue: [ 'aside', 'half-size' ]\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\t// Set the style attribute.\n     *\t\teditor.conversion.attributeToAttribute( {\n     *\t\t\tmodel: {\n     *\t\t\t\tname: 'image',\n     *\t\t\t\tkey: 'aside',\n     *\t\t\t\tvalues: [ 'aside' ]\n     *\t\t\t},\n     *\t\t\tview: {\n     *\t\t\t\taside: {\n     *\t\t\t\t\tname: 'img',\n     *\t\t\t\t\tkey: 'style',\n     *\t\t\t\t\tvalue: {\n     *\t\t\t\t\t\tfloat: 'right',\n     *\t\t\t\t\t\twidth: '50%',\n     *\t\t\t\t\t\tmargin: '5px'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\t// Conversion from and to a model attribute key whose value is an enum (`align=right|center`).\n     *\t\t// Use `upcastAlso` to define other view elements that should also be converted to the `align=right` attribute.\n     *\t\teditor.conversion.attributeToAttribute( {\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'align',\n     *\t\t\t\tvalues: [ 'right', 'center' ]\n     *\t\t\t},\n     *\t\t\tview: {\n     *\t\t\t\tright: {\n     *\t\t\t\t\tkey: 'class',\n     *\t\t\t\t\tvalue: 'align-right'\n     *\t\t\t\t},\n     *\t\t\t\tcenter: {\n     *\t\t\t\t\tkey: 'class',\n     *\t\t\t\t\tvalue: 'align-center'\n     *\t\t\t\t}\n     *\t\t\t},\n     *\t\t\tupcastAlso: {\n     *\t\t\t\tright: {\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'text-align': 'right'\n     *\t\t\t\t\t}\n     *\t\t\t\t},\n     *\t\t\t\tcenter: {\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'text-align': 'center'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     * The `definition.model` parameter specifies which model attribute should be converted from and to.\n     * It can be a `{ key, [ values ], [ name ] }` object or a `String`, which will be treated like `{ key: definition.model }`.\n     * The `key` property is the model attribute key to convert from and to.\n     * The `values` are the possible model attribute values. If `values` is not set, the model attribute value will be the same as the\n     * view attribute value.\n     * If `name` is set, the conversion will be set up only for model elements with the given name.\n     *\n     * The `definition.view` parameter specifies which view attribute should be converted from and to.\n     * It can be a `{ key, value, [ name ] }` object or a `String`, which will be treated like `{ key: definition.view }`.\n     * The `key` property is the view attribute key to convert from and to.\n     * The `value` is the view attribute value to convert from and to. If `definition.value` is not set, the view attribute value will be\n     * the same as the model attribute value.\n     * If `key` is `'class'`, `value` can be a `String` or an array of `String`s.\n     * If `key` is `'style'`, `value` is an object with key-value pairs.\n     * In other cases, `value` is a `String`.\n     * If `name` is set, the conversion will be set up only for model elements with the given name.\n     * If `definition.model.values` is set, `definition.view` is an object that assigns values from `definition.model.values`\n     * to `{ key, value, [ name ] }` objects.\n     *\n     * `definition.upcastAlso` specifies which other matching view elements should also be upcast to the given model configuration.\n     * If `definition.model.values` is set, `definition.upcastAlso` should be an object assigning values from `definition.model.values`\n     * to {@link module:engine/view/matcher~MatcherPattern}s or arrays of {@link module:engine/view/matcher~MatcherPattern}s.\n     *\n     * **Note:** `definition.model` and `definition.view` form should be mirrored, so the same types of parameters should\n     * be given in both parameters.\n     *\n     * @param {Object} definition The converter definition.\n     * @param {String|Object} definition.model The model attribute to convert from and to.\n     * @param {String|Object} definition.view The view attribute to convert from and to.\n     * @param {module:engine/view/matcher~MatcherPattern|Array.<module:engine/view/matcher~MatcherPattern>} [definition.upcastAlso]\n     * Any view element matching `definition.upcastAlso` will also be converted to the given model attribute. `definition.upcastAlso`\n     * is used only if `config.model.values` is specified.\n     */\n\n  }, {\n    key: \"attributeToAttribute\",\n    value: function attributeToAttribute(definition) {\n      // Set up downcast converter.\n      this.for('downcast').attributeToAttribute(definition); // Set up upcast converter.\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = _getAllUpcastDefinitions(definition)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _step3$value = _step3.value,\n              model = _step3$value.model,\n              view = _step3$value.view;\n          this.for('upcast').attributeToAttribute({\n            view: view,\n            model: model\n          });\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n    /**\n     * Creates and caches conversion helpers for given dispatchers group.\n     *\n     * @private\n     * @param {Object} options\n     * @param {String} options.name Group name.\n     * @param {Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n     * module:engine/conversion/upcastdispatcher~UpcastDispatcher>} options.dispatchers\n     * @param {Boolean} options.isDowncast\n     */\n\n  }, {\n    key: \"_createConversionHelpers\",\n    value: function _createConversionHelpers(_ref) {\n      var name = _ref.name,\n          dispatchers = _ref.dispatchers,\n          isDowncast = _ref.isDowncast;\n\n      if (this._helpers.has(name)) {\n        /**\n         * Trying to register a group name that has already been registered.\n         *\n         * @error conversion-group-exists\n         */\n        throw new CKEditorError('conversion-group-exists: Trying to register a group name that has already been registered.');\n      }\n\n      var helpers = isDowncast ? new DowncastHelpers(dispatchers) : new UpcastHelpers(dispatchers);\n\n      this._helpers.set(name, helpers);\n    }\n  }]);\n\n  return Conversion;\n}();\n/**\n * Defines how the model should be converted from and to the view.\n *\n * @typedef {Object} module:engine/conversion/conversion~ConverterDefinition\n *\n * @property {*} [model] The model conversion definition. Describes the model element or model attribute to convert. This parameter differs\n * for different functions that accept `ConverterDefinition`. See the description of the function to learn how to set it.\n * @property {module:engine/view/elementdefinition~ElementDefinition|Object} view The definition of the view element to convert from and\n * to. If `model` describes multiple values, `view` is an object that assigns these values (`view` object keys) to view element definitions\n * (`view` object values).\n * @property {module:engine/view/matcher~MatcherPattern|Array.<module:engine/view/matcher~MatcherPattern>} [upcastAlso]\n * Any view element matching `upcastAlso` will also be converted to the model. If `model` describes multiple values, `upcastAlso`\n * is an object that assigns these values (`upcastAlso` object keys) to {@link module:engine/view/matcher~MatcherPattern}s\n * (`upcastAlso` object values).\n * @property {module:utils/priorities~PriorityString} [converterPriority] The converter priority.\n */\n// Helper function that creates a joint array out of an item passed in `definition.view` and items passed in\n// `definition.upcastAlso`.\n//\n// @param {module:engine/conversion/conversion~ConverterDefinition} definition\n// @returns {Array} Array containing view definitions.\n\n\nexport { Conversion as default };\n\nfunction _getAllUpcastDefinitions(definition) {\n  var _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, value, model, view, upcastAlso;\n\n  return _regeneratorRuntime.wrap(function _getAllUpcastDefinitions$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!definition.model.values) {\n            _context.next = 31;\n            break;\n          }\n\n          _iteratorNormalCompletion4 = true;\n          _didIteratorError4 = false;\n          _iteratorError4 = undefined;\n          _context.prev = 4;\n          _iterator4 = definition.model.values[Symbol.iterator]();\n\n        case 6:\n          if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {\n            _context.next = 15;\n            break;\n          }\n\n          value = _step4.value;\n          model = {\n            key: definition.model.key,\n            value: value\n          };\n          view = definition.view[value];\n          upcastAlso = definition.upcastAlso ? definition.upcastAlso[value] : undefined;\n          return _context.delegateYield(_getUpcastDefinition(model, view, upcastAlso), \"t0\", 12);\n\n        case 12:\n          _iteratorNormalCompletion4 = true;\n          _context.next = 6;\n          break;\n\n        case 15:\n          _context.next = 21;\n          break;\n\n        case 17:\n          _context.prev = 17;\n          _context.t1 = _context[\"catch\"](4);\n          _didIteratorError4 = true;\n          _iteratorError4 = _context.t1;\n\n        case 21:\n          _context.prev = 21;\n          _context.prev = 22;\n\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n\n        case 24:\n          _context.prev = 24;\n\n          if (!_didIteratorError4) {\n            _context.next = 27;\n            break;\n          }\n\n          throw _iteratorError4;\n\n        case 27:\n          return _context.finish(24);\n\n        case 28:\n          return _context.finish(21);\n\n        case 29:\n          _context.next = 32;\n          break;\n\n        case 31:\n          return _context.delegateYield(_getUpcastDefinition(definition.model, definition.view, definition.upcastAlso), \"t2\", 32);\n\n        case 32:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[4, 17, 21, 29], [22,, 24, 28]]);\n}\n\nfunction _getUpcastDefinition(model, view, upcastAlso) {\n  var _iteratorNormalCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, upcastAlsoItem;\n\n  return _regeneratorRuntime.wrap(function _getUpcastDefinition$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return {\n            model: model,\n            view: view\n          };\n\n        case 2:\n          if (!upcastAlso) {\n            _context2.next = 30;\n            break;\n          }\n\n          upcastAlso = Array.isArray(upcastAlso) ? upcastAlso : [upcastAlso];\n          _iteratorNormalCompletion5 = true;\n          _didIteratorError5 = false;\n          _iteratorError5 = undefined;\n          _context2.prev = 7;\n          _iterator5 = upcastAlso[Symbol.iterator]();\n\n        case 9:\n          if (_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done) {\n            _context2.next = 16;\n            break;\n          }\n\n          upcastAlsoItem = _step5.value;\n          _context2.next = 13;\n          return {\n            model: model,\n            view: upcastAlsoItem\n          };\n\n        case 13:\n          _iteratorNormalCompletion5 = true;\n          _context2.next = 9;\n          break;\n\n        case 16:\n          _context2.next = 22;\n          break;\n\n        case 18:\n          _context2.prev = 18;\n          _context2.t0 = _context2[\"catch\"](7);\n          _didIteratorError5 = true;\n          _iteratorError5 = _context2.t0;\n\n        case 22:\n          _context2.prev = 22;\n          _context2.prev = 23;\n\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n\n        case 25:\n          _context2.prev = 25;\n\n          if (!_didIteratorError5) {\n            _context2.next = 28;\n            break;\n          }\n\n          throw _iteratorError5;\n\n        case 28:\n          return _context2.finish(25);\n\n        case 29:\n          return _context2.finish(22);\n\n        case 30:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[7, 18, 22, 30], [23,, 25, 29]]);\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/batch\n */\n\n/**\n * A batch instance groups model changes ({@link module:engine/model/operation/operation~Operation operations}). All operations\n * grouped in a single batch can be reverted together, so you can also think about a batch as of a single undo step. If you want\n * to extend a given undo step, you can add more changes to the batch using {@link module:engine/model/model~Model#enqueueChange}:\n *\n *\t\tmodel.enqueueChange( batch, writer => {\n *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n *\t\t} );\n *\n * @see module:engine/model/model~Model#enqueueChange\n * @see module:engine/model/model~Model#change\n */\nvar Batch =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a batch instance.\n   *\n   * @see module:engine/model/model~Model#enqueueChange\n   * @see module:engine/model/model~Model#change\n   * @param {'transparent'|'default'} [type='default'] The type of the batch.\n   */\n  function Batch() {\n    var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n\n    _classCallCheck(this, Batch);\n\n    /**\n     * An array of operations that compose this batch.\n     *\n     * @readonly\n     * @type {Array.<module:engine/model/operation/operation~Operation>}\n     */\n    this.operations = [];\n    /**\n     * The type of the batch.\n     *\n     * It can be one of the following values:\n     * * `'default'` &ndash; All \"normal\" batches. This is the most commonly used type.\n     * * `'transparent'` &ndash; A batch that should be ignored by other features, i.e. an initial batch or collaborative editing\n     * changes.\n     *\n     * @readonly\n     * @type {'transparent'|'default'}\n     */\n\n    this.type = type;\n  }\n  /**\n   * Returns the base version of this batch, which is equal to the base version of the first operation in the batch.\n   * If there are no operations in the batch or neither operation has the base version set, it returns `null`.\n   *\n   * @readonly\n   * @type {Number|null}\n   */\n\n\n  _createClass(Batch, [{\n    key: \"addOperation\",\n\n    /**\n     * Adds an operation to the batch instance.\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation An operation to add.\n     * @returns {module:engine/model/operation/operation~Operation} The added operation.\n     */\n    value: function addOperation(operation) {\n      operation.batch = this;\n      this.operations.push(operation);\n      return operation;\n    }\n  }, {\n    key: \"baseVersion\",\n    get: function get() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.operations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var op = _step.value;\n\n          if (op.baseVersion !== null) {\n            return op.baseVersion;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  return Batch;\n}();\n\nexport { Batch as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/detachoperation\n */\nimport Operation from './operation';\nimport Range from '../range';\nimport { _remove } from './utils';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Operation to permanently remove node from detached root.\n * Note this operation is only a local operation and won't be send to the other clients.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar DetachOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(DetachOperation, _Operation);\n\n  /**\n   * Creates an insert operation.\n   *\n   * @param {module:engine/model/position~Position} sourcePosition\n   * Position before the first {@link module:engine/model/item~Item model item} to move.\n   * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\n   * `sourcePosition` with offset shifted by `howMany`.\n   */\n  function DetachOperation(sourcePosition, howMany) {\n    var _this;\n\n    _classCallCheck(this, DetachOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DetachOperation).call(this, null));\n    /**\n     * Position before the first {@link module:engine/model/item~Item model item} to detach.\n     *\n     * @member {module:engine/model/position~Position} #sourcePosition\n     */\n\n    _this.sourcePosition = sourcePosition.clone();\n    /**\n     * Offset size of moved range.\n     *\n     * @member {Number} #howMany\n     */\n\n    _this.howMany = howMany;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(DetachOperation, [{\n    key: \"toJSON\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(DetachOperation.prototype), \"toJSON\", this).call(this);\n\n      json.sourcePosition = this.sourcePosition.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      if (this.sourcePosition.root.document) {\n        /**\n         * Cannot detach document node.\n         *\n         * @error detach-operation-on-document-node\n         */\n        throw new CKEditorError('detach-operation-on-document-node: Cannot detach document node.');\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      _remove(Range._createFromPositionAndShift(this.sourcePosition, this.howMany));\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'detach';\n    }\n  }], [{\n    key: \"className\",\n    get: function get() {\n      return 'DetachOperation';\n    }\n  }]);\n\n  return DetachOperation;\n}(Operation);\n\nexport { DetachOperation as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/rootelement\n */\nimport Element from './element';\n/**\n * Type of {@link module:engine/model/element~Element} that is a root of a model tree.\n * @extends module:engine/model/element~Element\n */\n\nvar RootElement =\n/*#__PURE__*/\nfunction (_Element) {\n  _inherits(RootElement, _Element);\n\n  /**\n   * Creates root element.\n   *\n   * @param {module:engine/model/document~Document} doc Document that is an owner of this root.\n   * @param {String} name Node name.\n   * @param {String} [rootName='main'] Unique root name used to identify this root\n   * element by {@link module:engine/model/document~Document}.\n   */\n  function RootElement(doc, name) {\n    var _this;\n\n    var rootName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'main';\n\n    _classCallCheck(this, RootElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RootElement).call(this, name));\n    /**\n     * Document that is an owner of this root.\n     *\n     * @private\n     * @member {module:engine/model/document~Document}\n     */\n\n    _this._doc = doc;\n    /**\n     * Unique root name used to identify this root element by {@link module:engine/model/document~Document}.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.rootName = rootName;\n    return _this;\n  }\n  /**\n   * {@link module:engine/model/document~Document Document} that owns this root element.\n   *\n   * In contrary, to {@link module:engine/model/node~Node node}, root element always have a `document`.\n   *\n   * @readonly\n   * @type {module:engine/model/document~Document|null}\n   */\n\n\n  _createClass(RootElement, [{\n    key: \"is\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function is(type, name) {\n      if (!name) {\n        return type == 'rootElement' || _get(_getPrototypeOf(RootElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'rootElement' && name == this.name || _get(_getPrototypeOf(RootElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n    /**\n     * Converts `RootElement` instance to `String` containing it's name.\n     *\n     * @returns {String} `RootElement` instance converted to `String`.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.rootName;\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this._doc;\n    }\n  }]);\n\n  return RootElement;\n}(Element);\n\nexport { RootElement as default };","import _slicedToArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/writer\n */\nimport AttributeOperation from './operation/attributeoperation';\nimport DetachOperation from './operation/detachoperation';\nimport InsertOperation from './operation/insertoperation';\nimport MarkerOperation from './operation/markeroperation';\nimport MoveOperation from './operation/moveoperation';\nimport RenameOperation from './operation/renameoperation';\nimport RootAttributeOperation from './operation/rootattributeoperation';\nimport SplitOperation from './operation/splitoperation';\nimport MergeOperation from './operation/mergeoperation';\nimport DocumentFragment from './documentfragment';\nimport Text from './text';\nimport Element from './element';\nimport RootElement from './rootelement';\nimport Position from './position';\nimport Range from './range.js';\nimport DocumentSelection from './documentselection';\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * The model can only be modified by using the writer. It should be used whenever you want to create a node, modify\n * child nodes, attributes or text, set the selection's position and its attributes.\n *\n * The instance of the writer is only available in the {@link module:engine/model/model~Model#change `change()`} or\n * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()`}.\n *\n *\t\tmodel.change( writer => {\n *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n *\t\t} );\n *\n * Note that the writer should never be stored and used outside of the `change()` and\n * `enqueueChange()` blocks.\n *\n * Note that writer's methods do not check the {@link module:engine/model/schema~Schema}. It is possible\n * to create incorrect model structures by using the writer. Read more about in\n * {@glink framework/guides/deep-dive/schema#who-checks-the-schema \"Who checks the schema?\"}.\n *\n * @see module:engine/model/model~Model#change\n * @see module:engine/model/model~Model#enqueueChange\n */\n\nvar Writer =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a writer instance.\n   *\n   * **Note:** It is not recommended to use it directly. Use {@link module:engine/model/model~Model#change `Model#change()`} or\n   * {@link module:engine/model/model~Model#enqueueChange `Model#enqueueChange()`} instead.\n   *\n   * @protected\n   * @param {module:engine/model/model~Model} model\n   * @param {module:engine/model/batch~Batch} batch\n   */\n  function Writer(model, batch) {\n    _classCallCheck(this, Writer);\n\n    /**\n     * Instance of the model on which this writer operates.\n     *\n     * @readonly\n     * @type {module:engine/model/model~Model}\n     */\n    this.model = model;\n    /**\n     * The batch to which this writer will add changes.\n     *\n     * @readonly\n     * @type {module:engine/model/batch~Batch}\n     */\n\n    this.batch = batch;\n  }\n  /**\n   * Creates a new {@link module:engine/model/text~Text text node}.\n   *\n   *\t\twriter.createText( 'foo' );\n   *\t\twriter.createText( 'foo', { bold: true } );\n   *\n   * @param {String} data Text data.\n   * @param {Object} [attributes] Text attributes.\n   * @returns {module:engine/model/text~Text} Created text node.\n   */\n\n\n  _createClass(Writer, [{\n    key: \"createText\",\n    value: function createText(data, attributes) {\n      return new Text(data, attributes);\n    }\n    /**\n     * Creates a new {@link module:engine/model/element~Element element}.\n     *\n     *\t\twriter.createElement( 'paragraph' );\n     *\t\twriter.createElement( 'paragraph', { alignment: 'center' } );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @returns {module:engine/model/element~Element} Created element.\n     */\n\n  }, {\n    key: \"createElement\",\n    value: function createElement(name, attributes) {\n      return new Element(name, attributes);\n    }\n    /**\n     * Creates a new {@link module:engine/model/documentfragment~DocumentFragment document fragment}.\n     *\n     * @returns {module:engine/model/documentfragment~DocumentFragment} Created document fragment.\n     */\n\n  }, {\n    key: \"createDocumentFragment\",\n    value: function createDocumentFragment() {\n      return new DocumentFragment();\n    }\n    /**\n     * Inserts item on given position.\n     *\n     *\t\tconst paragraph = writer.createElement( 'paragraph' );\n     *\t\twriter.insert( paragraph, position );\n     *\n     * Instead of using position you can use parent and offset:\n     *\n     *\t\tconst text = writer.createText( 'foo' );\n     *\t\twriter.insert( text, paragraph, 5 );\n     *\n     * You can also use `end` instead of the offset to insert at the end:\n     *\n     *\t\tconst text = writer.createText( 'foo' );\n     *\t\twriter.insert( text, paragraph, 'end' );\n     *\n     * Or insert before or after another element:\n     *\n     *\t\tconst paragraph = writer.createElement( 'paragraph' );\n     *\t\twriter.insert( paragraph, anotherParagraph, 'after' );\n     *\n     * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n     *\n     * Note that if the item already has parent it will be removed from the previous parent.\n     *\n     * Note that you cannot re-insert a node from a document to a different document or a document fragment. In this case,\n     * `model-writer-insert-forbidden-move` is thrown.\n     *\n     * If you want to move {@link module:engine/model/range~Range range} instead of an\n     * {@link module:engine/model/item~Item item} use {@link module:engine/model/writer~Writer#move `Writer#move()`}.\n     *\n     * **Note:** For a paste-like content insertion mechanism see\n     * {@link module:engine/model/model~Model#insertContent `model.insertContent()`}.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/documentfragment~DocumentFragment} item Item or document\n     * fragment to insert.\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * second parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"insert\",\n    value: function insert(item, itemOrPosition) {\n      var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      this._assertWriterUsedCorrectly();\n\n      if (item instanceof Text && item.data == '') {\n        return;\n      }\n\n      var position = Position._createAt(itemOrPosition, offset); // If item has a parent already.\n\n\n      if (item.parent) {\n        // We need to check if item is going to be inserted within the same document.\n        if (isSameTree(item.root, position.root)) {\n          // If it's we just need to move it.\n          this.move(Range._createOn(item), position);\n          return;\n        } // If it isn't the same root.\n        else {\n            if (item.root.document) {\n              // It is forbidden to move a node that was already in a document outside of it.\n              throw new Error('model-writer-insert-forbidden-move: Cannot move a node from a document to a different tree.');\n            } else {\n              // Move between two different document fragments or from document fragment to a document is possible.\n              // In that case, remove the item from it's original parent.\n              this.remove(item);\n            }\n          }\n      }\n\n      var version = position.root.document ? position.root.document.version : null;\n      var insert = new InsertOperation(position, item, version);\n\n      if (item instanceof Text) {\n        insert.shouldReceiveAttributes = true;\n      }\n\n      this.batch.addOperation(insert);\n      this.model.applyOperation(insert); // When element is a DocumentFragment we need to move its markers to Document#markers.\n\n      if (item instanceof DocumentFragment) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = item.markers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _step$value = _slicedToArray(_step.value, 2),\n                markerName = _step$value[0],\n                markerRange = _step$value[1];\n\n            // We need to migrate marker range from DocumentFragment to Document.\n            var rangeRootPosition = Position._createAt(markerRange.root, 0);\n\n            var range = new Range(markerRange.start._getCombined(rangeRootPosition, position), markerRange.end._getCombined(rangeRootPosition, position));\n            this.addMarker(markerName, {\n              range: range,\n              usingOperation: true,\n              affectsData: true\n            });\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Creates and inserts text on given position. You can optionally set text attributes:\n     *\n     *\t\twriter.insertText( 'foo', position );\n     *\t\twriter.insertText( 'foo', { bold: true }, position );\n     *\n     * Instead of using position you can use parent and offset or define that text should be inserted at the end\n     * or before or after other node:\n     *\n     *\t\t// Inserts 'foo' in paragraph, at offset 5:\n     *\t\twriter.insertText( 'foo', paragraph, 5 );\n     *\t\t// Inserts 'foo' at the end of a paragraph:\n     *\t\twriter.insertText( 'foo', paragraph, 'end' );\n     *\t\t// Inserts 'foo' after an image:\n     *\t\twriter.insertText( 'foo', image, 'after' );\n     *\n     * These parameters work in the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n     *\n     * @param {String} data Text data.\n     * @param {Object} [attributes] Text attributes.\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * third parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"insertText\",\n    value: function insertText(text, attributes, itemOrPosition, offset) {\n      if (attributes instanceof DocumentFragment || attributes instanceof Element || attributes instanceof Position) {\n        this.insert(this.createText(text), attributes, itemOrPosition);\n      } else {\n        this.insert(this.createText(text, attributes), itemOrPosition, offset);\n      }\n    }\n    /**\n     * Creates and inserts element on given position. You can optionally set attributes:\n     *\n     *\t\twriter.insertElement( 'paragraph', position );\n     *\t\twriter.insertElement( 'paragraph', { alignment: 'center' }, position );\n     *\n     * Instead of using position you can use parent and offset or define that text should be inserted at the end\n     * or before or after other node:\n     *\n     *\t\t// Inserts paragraph in the root at offset 5:\n     *\t\twriter.insertElement( 'paragraph', root, 5 );\n     *\t\t// Inserts paragraph at the end of a blockquote:\n     *\t\twriter.insertElement( 'paragraph', blockquote, 'end' );\n     *\t\t// Inserts after an image:\n     *\t\twriter.insertElement( 'paragraph', image, 'after' );\n     *\n     * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * third parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"insertElement\",\n    value: function insertElement(name, attributes, itemOrPosition, offset) {\n      if (attributes instanceof DocumentFragment || attributes instanceof Element || attributes instanceof Position) {\n        this.insert(this.createElement(name), attributes, itemOrPosition);\n      } else {\n        this.insert(this.createElement(name, attributes), itemOrPosition, offset);\n      }\n    }\n    /**\n     * Inserts item at the end of the given parent.\n     *\n     *\t\tconst paragraph = writer.createElement( 'paragraph' );\n     *\t\twriter.append( paragraph, root );\n     *\n     * Note that if the item already has parent it will be removed from the previous parent.\n     *\n     * If you want to move {@link module:engine/model/range~Range range} instead of an\n     * {@link module:engine/model/item~Item item} use {@link module:engine/model/writer~Writer#move `Writer#move()`}.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/documentfragment~DocumentFragment}\n     * item Item or document fragment to insert.\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\n     */\n\n  }, {\n    key: \"append\",\n    value: function append(item, parent) {\n      this.insert(item, parent, 'end');\n    }\n    /**\n     * Creates text node and inserts it at the end of the parent. You can optionally set text attributes:\n     *\n     *\t\twriter.appendText( 'foo', paragraph );\n     *\t\twriter.appendText( 'foo', { bold: true }, paragraph );\n     *\n     * @param {String} text Text data.\n     * @param {Object} [attributes] Text attributes.\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\n     */\n\n  }, {\n    key: \"appendText\",\n    value: function appendText(text, attributes, parent) {\n      if (attributes instanceof DocumentFragment || attributes instanceof Element) {\n        this.insert(this.createText(text), attributes, 'end');\n      } else {\n        this.insert(this.createText(text, attributes), parent, 'end');\n      }\n    }\n    /**\n     * Creates element and inserts it at the end of the parent. You can optionally set attributes:\n     *\n     *\t\twriter.appendElement( 'paragraph', root );\n     *\t\twriter.appendElement( 'paragraph', { alignment: 'center' }, root );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\n     */\n\n  }, {\n    key: \"appendElement\",\n    value: function appendElement(name, attributes, parent) {\n      if (attributes instanceof DocumentFragment || attributes instanceof Element) {\n        this.insert(this.createElement(name), attributes, 'end');\n      } else {\n        this.insert(this.createElement(name, attributes), parent, 'end');\n      }\n    }\n    /**\n     * Sets value of the attribute with given key on a {@link module:engine/model/item~Item model item}\n     * or on a {@link module:engine/model/range~Range range}.\n     *\n     * @param {String} key Attribute key.\n     * @param {*} value Attribute new value.\n     * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n     * Model item or range on which the attribute will be set.\n     */\n\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(key, value, itemOrRange) {\n      this._assertWriterUsedCorrectly();\n\n      if (itemOrRange instanceof Range) {\n        var ranges = itemOrRange.getMinimalFlatRanges();\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = ranges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var range = _step2.value;\n            setAttributeOnRange(this, key, value, range);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      } else {\n        setAttributeOnItem(this, key, value, itemOrRange);\n      }\n    }\n    /**\n     * Sets values of attributes on a {@link module:engine/model/item~Item model item}\n     * or on a {@link module:engine/model/range~Range range}.\n     *\n     *\t\twriter.setAttributes( {\n     *\t\t\tbold: true,\n     *\t\t\titalic: true\n     *\t\t}, range );\n     *\n     * @param {Object} attributes Attributes keys and values.\n     * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n     * Model item or range on which the attributes will be set.\n     */\n\n  }, {\n    key: \"setAttributes\",\n    value: function setAttributes(attributes, itemOrRange) {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = toMap(attributes)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n              key = _step3$value[0],\n              val = _step3$value[1];\n\n          this.setAttribute(key, val, itemOrRange);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n    /**\n     * Removes an attribute with given key from a {@link module:engine/model/item~Item model item}\n     * or from a {@link module:engine/model/range~Range range}.\n     *\n     * @param {String} key Attribute key.\n     * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n     * Model item or range from which the attribute will be removed.\n     */\n\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(key, itemOrRange) {\n      this._assertWriterUsedCorrectly();\n\n      if (itemOrRange instanceof Range) {\n        var ranges = itemOrRange.getMinimalFlatRanges();\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = ranges[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var range = _step4.value;\n            setAttributeOnRange(this, key, null, range);\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n      } else {\n        setAttributeOnItem(this, key, null, itemOrRange);\n      }\n    }\n    /**\n     * Removes all attributes from all elements in the range or from the given item.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n     * Model item or range from which all attributes will be removed.\n     */\n\n  }, {\n    key: \"clearAttributes\",\n    value: function clearAttributes(itemOrRange) {\n      var _this = this;\n\n      this._assertWriterUsedCorrectly();\n\n      var removeAttributesFromItem = function removeAttributesFromItem(item) {\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = item.getAttributeKeys()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var attribute = _step5.value;\n\n            _this.removeAttribute(attribute, item);\n          }\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n              _iterator5.return();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n      };\n\n      if (!(itemOrRange instanceof Range)) {\n        removeAttributesFromItem(itemOrRange);\n      } else {\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n          for (var _iterator6 = itemOrRange.getItems()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n            var item = _step6.value;\n            removeAttributesFromItem(item);\n          }\n        } catch (err) {\n          _didIteratorError6 = true;\n          _iteratorError6 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n              _iterator6.return();\n            }\n          } finally {\n            if (_didIteratorError6) {\n              throw _iteratorError6;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Moves all items in the source range to the target position.\n     *\n     *\t\twriter.move( sourceRange, targetPosition );\n     *\n     * Instead of the target position you can use parent and offset or define that range should be moved to the end\n     * or before or after chosen item:\n     *\n     *\t\t// Moves all items in the range to the paragraph at offset 5:\n     *\t\twriter.move( sourceRange, paragraph, 5 );\n     *\t\t// Moves all items in the range to the end of a blockquote:\n     *\t\twriter.move( sourceRange, blockquote, 'end' );\n     *\t\t// Moves all items in the range to a position after an image:\n     *\t\twriter.move( sourceRange, image, 'after' );\n     *\n     * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n     *\n     * Note that items can be moved only within the same tree. It means that you can move items within the same root\n     * (element or document fragment) or between {@link module:engine/model/document~Document#roots documents roots},\n     * but you can not move items from document fragment to the document or from one detached element to another. Use\n     * {@link module:engine/model/writer~Writer#insert} in such cases.\n     *\n     * @param {module:engine/model/range~Range} range Source range.\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * second parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"move\",\n    value: function move(range, itemOrPosition, offset) {\n      this._assertWriterUsedCorrectly();\n\n      if (!(range instanceof Range)) {\n        /**\n         * Invalid range to move.\n         *\n         * @error writer-move-invalid-range\n         */\n        throw new CKEditorError('writer-move-invalid-range: Invalid range to move.');\n      }\n\n      if (!range.isFlat) {\n        /**\n         * Range to move is not flat.\n         *\n         * @error writer-move-range-not-flat\n         */\n        throw new CKEditorError('writer-move-range-not-flat: Range to move is not flat.');\n      }\n\n      var position = Position._createAt(itemOrPosition, offset); // Do not move anything if the move target is same as moved range start.\n\n\n      if (position.isEqual(range.start)) {\n        return;\n      } // If part of the marker is removed, create additional marker operation for undo purposes.\n\n\n      this._addOperationForAffectedMarkers('move', range);\n\n      if (!isSameTree(range.root, position.root)) {\n        /**\n         * Range is going to be moved within not the same document. Please use\n         * {@link module:engine/model/writer~Writer#insert insert} instead.\n         *\n         * @error writer-move-different-document\n         */\n        throw new CKEditorError('writer-move-different-document: Range is going to be moved between different documents.');\n      }\n\n      var version = range.root.document ? range.root.document.version : null;\n      var operation = new MoveOperation(range.start, range.end.offset - range.start.offset, position, version);\n      this.batch.addOperation(operation);\n      this.model.applyOperation(operation);\n    }\n    /**\n     * Removes given model {@link module:engine/model/item~Item item} or {@link module:engine/model/range~Range range}.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange Model item or range to remove.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(itemOrRange) {\n      this._assertWriterUsedCorrectly();\n\n      var rangeToRemove = itemOrRange instanceof Range ? itemOrRange : Range._createOn(itemOrRange);\n      var ranges = rangeToRemove.getMinimalFlatRanges().reverse();\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = ranges[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var flat = _step7.value;\n\n          // If part of the marker is removed, create additional marker operation for undo purposes.\n          this._addOperationForAffectedMarkers('move', flat);\n\n          applyRemoveOperation(flat.start, flat.end.offset - flat.start.offset, this.batch, this.model);\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n            _iterator7.return();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n    }\n    /**\n     * Merges two siblings at the given position.\n     *\n     * Node before and after the position have to be an element. Otherwise `writer-merge-no-element-before` or\n     * `writer-merge-no-element-after` error will be thrown.\n     *\n     * @param {module:engine/model/position~Position} position Position between merged elements.\n     */\n\n  }, {\n    key: \"merge\",\n    value: function merge(position) {\n      this._assertWriterUsedCorrectly();\n\n      var nodeBefore = position.nodeBefore;\n      var nodeAfter = position.nodeAfter; // If part of the marker is removed, create additional marker operation for undo purposes.\n\n      this._addOperationForAffectedMarkers('merge', position);\n\n      if (!(nodeBefore instanceof Element)) {\n        /**\n         * Node before merge position must be an element.\n         *\n         * @error writer-merge-no-element-before\n         */\n        throw new CKEditorError('writer-merge-no-element-before: Node before merge position must be an element.');\n      }\n\n      if (!(nodeAfter instanceof Element)) {\n        /**\n         * Node after merge position must be an element.\n         *\n         * @error writer-merge-no-element-after\n         */\n        throw new CKEditorError('writer-merge-no-element-after: Node after merge position must be an element.');\n      }\n\n      if (!position.root.document) {\n        this._mergeDetached(position);\n      } else {\n        this._merge(position);\n      }\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createPositionFromPath `Model#createPositionFromPath()`}.\n     *\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n     * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n     * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n     * See {@link module:engine/model/position~PositionStickiness}.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionFromPath\",\n    value: function createPositionFromPath(root, path, stickiness) {\n      return this.model.createPositionFromPath(root, path, stickiness);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createPositionAt `Model#createPositionAt()`}.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionAt\",\n    value: function createPositionAt(itemOrPosition, offset) {\n      return this.model.createPositionAt(itemOrPosition, offset);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createPositionAfter `Model#createPositionAfter()`}.\n     *\n     * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionAfter\",\n    value: function createPositionAfter(item) {\n      return this.model.createPositionAfter(item);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createPositionBefore `Model#createPositionBefore()`}.\n     *\n     * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionBefore\",\n    value: function createPositionBefore(item) {\n      return this.model.createPositionBefore(item);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createRange `Model#createRange()`}.\n     *\n     * @param {module:engine/model/position~Position} start Start position.\n     * @param {module:engine/model/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"createRange\",\n    value: function createRange(start, end) {\n      return this.model.createRange(start, end);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createRangeIn `Model#createRangeIn()`}.\n     *\n     * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"createRangeIn\",\n    value: function createRangeIn(element) {\n      return this.model.createRangeIn(element);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createRangeOn `Model#createRangeOn()`}.\n     *\n     * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"createRangeOn\",\n    value: function createRangeOn(element) {\n      return this.model.createRangeOn(element);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createSelection `Model#createSelection()`}.\n     *\n     * @param {module:engine/model/selection~Selectable} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     * @returns {module:engine/model/selection~Selection}\n     */\n\n  }, {\n    key: \"createSelection\",\n    value: function createSelection(selectable, placeOrOffset, options) {\n      return this.model.createSelection(selectable, placeOrOffset, options);\n    }\n    /**\n     * Performs merge action in a detached tree.\n     *\n     * @private\n     * @param {module:engine/model/position~Position} position Position between merged elements.\n     */\n\n  }, {\n    key: \"_mergeDetached\",\n    value: function _mergeDetached(position) {\n      var nodeBefore = position.nodeBefore;\n      var nodeAfter = position.nodeAfter;\n      this.move(Range._createIn(nodeAfter), Position._createAt(nodeBefore, 'end'));\n      this.remove(nodeAfter);\n    }\n    /**\n     * Performs merge action in a non-detached tree.\n     *\n     * @private\n     * @param {module:engine/model/position~Position} position Position between merged elements.\n     */\n\n  }, {\n    key: \"_merge\",\n    value: function _merge(position) {\n      var targetPosition = Position._createAt(position.nodeBefore, 'end');\n\n      var sourcePosition = Position._createAt(position.nodeAfter, 0);\n\n      var graveyard = position.root.document.graveyard;\n      var graveyardPosition = new Position(graveyard, [0]);\n      var version = position.root.document.version;\n      var merge = new MergeOperation(sourcePosition, position.nodeAfter.maxOffset, targetPosition, graveyardPosition, version);\n      this.batch.addOperation(merge);\n      this.model.applyOperation(merge);\n    }\n    /**\n     * Renames the given element.\n     *\n     * @param {module:engine/model/element~Element} element The element to rename.\n     * @param {String} newName New element name.\n     */\n\n  }, {\n    key: \"rename\",\n    value: function rename(element, newName) {\n      this._assertWriterUsedCorrectly();\n\n      if (!(element instanceof Element)) {\n        /**\n         * Trying to rename an object which is not an instance of Element.\n         *\n         * @error writer-rename-not-element-instance\n         */\n        throw new CKEditorError('writer-rename-not-element-instance: Trying to rename an object which is not an instance of Element.');\n      }\n\n      var version = element.root.document ? element.root.document.version : null;\n      var renameOperation = new RenameOperation(Position._createBefore(element), element.name, newName, version);\n      this.batch.addOperation(renameOperation);\n      this.model.applyOperation(renameOperation);\n    }\n    /**\n     * Splits elements starting from the given position and going to the top of the model tree as long as given\n     * `limitElement` is reached. When `limitElement` is not defined then only the parent of the given position will be split.\n     *\n     * The element needs to have a parent. It cannot be a root element nor a document fragment.\n     * The `writer-split-element-no-parent` error will be thrown if you try to split an element with no parent.\n     *\n     * @param {module:engine/model/position~Position} position Position of split.\n     * @param {module:engine/model/node~Node} [limitElement] Stop splitting when this element will be reached.\n     * @returns {Object} result Split result.\n     * @returns {module:engine/model/position~Position} result.position Position between split elements.\n     * @returns {module:engine/model/range~Range} result.range Range that stars from the end of the first split element and ends\n     * at the beginning of the first copy element.\n     */\n\n  }, {\n    key: \"split\",\n    value: function split(position, limitElement) {\n      this._assertWriterUsedCorrectly();\n\n      var splitElement = position.parent;\n\n      if (!splitElement.parent) {\n        /**\n         * Element with no parent can not be split.\n         *\n         * @error writer-split-element-no-parent\n         */\n        throw new CKEditorError('writer-split-element-no-parent: Element with no parent can not be split.');\n      } // When limit element is not defined lets set splitElement parent as limit.\n\n\n      if (!limitElement) {\n        limitElement = splitElement.parent;\n      }\n\n      if (!position.parent.getAncestors({\n        includeSelf: true\n      }).includes(limitElement)) {\n        throw new CKEditorError('writer-split-invalid-limit-element: Limit element is not a position ancestor.');\n      } // We need to cache elements that will be created as a result of the first split because\n      // we need to create a range from the end of the first split element to the beginning of the\n      // first copy element. This should be handled by LiveRange but it doesn't work on detached nodes.\n\n\n      var firstSplitElement, firstCopyElement;\n\n      do {\n        var version = splitElement.root.document ? splitElement.root.document.version : null;\n        var howMany = splitElement.maxOffset - position.offset;\n        var split = new SplitOperation(position, howMany, null, version);\n        this.batch.addOperation(split);\n        this.model.applyOperation(split); // Cache result of the first split.\n\n        if (!firstSplitElement && !firstCopyElement) {\n          firstSplitElement = splitElement;\n          firstCopyElement = position.parent.nextSibling;\n        }\n\n        position = this.createPositionAfter(position.parent);\n        splitElement = position.parent;\n      } while (splitElement !== limitElement);\n\n      return {\n        position: position,\n        range: new Range(Position._createAt(firstSplitElement, 'end'), Position._createAt(firstCopyElement, 0))\n      };\n    }\n    /**\n     * Wraps the given range with the given element or with a new element (if a string was passed).\n     *\n     * **Note:** range to wrap should be a \"flat range\" (see {@link module:engine/model/range~Range#isFlat `Range#isFlat`}).\n     * If not, an error will be thrown.\n     *\n     * @param {module:engine/model/range~Range} range Range to wrap.\n     * @param {module:engine/model/element~Element|String} elementOrString Element or name of element to wrap the range with.\n     */\n\n  }, {\n    key: \"wrap\",\n    value: function wrap(range, elementOrString) {\n      this._assertWriterUsedCorrectly();\n\n      if (!range.isFlat) {\n        /**\n         * Range to wrap is not flat.\n         *\n         * @error writer-wrap-range-not-flat\n         */\n        throw new CKEditorError('writer-wrap-range-not-flat: Range to wrap is not flat.');\n      }\n\n      var element = elementOrString instanceof Element ? elementOrString : new Element(elementOrString);\n\n      if (element.childCount > 0) {\n        /**\n         * Element to wrap with is not empty.\n         *\n         * @error writer-wrap-element-not-empty\n         */\n        throw new CKEditorError('writer-wrap-element-not-empty: Element to wrap with is not empty.');\n      }\n\n      if (element.parent !== null) {\n        /**\n         * Element to wrap with is already attached to a tree model.\n         *\n         * @error writer-wrap-element-attached\n         */\n        throw new CKEditorError('writer-wrap-element-attached: Element to wrap with is already attached to tree model.');\n      }\n\n      this.insert(element, range.start); // Shift the range-to-wrap because we just inserted an element before that range.\n\n      var shiftedRange = new Range(range.start.getShiftedBy(1), range.end.getShiftedBy(1));\n      this.move(shiftedRange, Position._createAt(element, 0));\n    }\n    /**\n     * Unwraps children of the given element – all its children are moved before it and then the element is removed.\n     * Throws error if you try to unwrap an element which does not have a parent.\n     *\n     * @param {module:engine/model/element~Element} element Element to unwrap.\n     */\n\n  }, {\n    key: \"unwrap\",\n    value: function unwrap(element) {\n      this._assertWriterUsedCorrectly();\n\n      if (element.parent === null) {\n        /**\n         * Trying to unwrap an element which has no parent.\n         *\n         * @error writer-unwrap-element-no-parent\n         */\n        throw new CKEditorError('writer-unwrap-element-no-parent: Trying to unwrap an element which has no parent.');\n      }\n\n      this.move(Range._createIn(element), this.createPositionAfter(element));\n      this.remove(element);\n    }\n    /**\n     * Adds a {@link module:engine/model/markercollection~Marker marker}. Marker is a named range, which tracks\n     * changes in the document and updates its range automatically, when model tree changes.\n     *\n     * As the first parameter you can set marker name.\n     *\n     * The required `options.usingOperation` parameter lets you decide if the marker should be managed by operations or not. See\n     * {@link module:engine/model/markercollection~Marker marker class description} to learn about the difference between\n     * markers managed by operations and not-managed by operations.\n     *\n     * The `options.affectsData` parameter, which defaults to `false`, allows you to define if a marker affects the data. It should be\n     * `true` when the marker change changes the data returned by the\n     * {@link module:core/editor/utils/dataapimixin~DataApi#getData `editor.getData()`} method.\n     * When set to `true` it fires the {@link module:engine/model/document~Document#event:change:data `change:data`} event.\n     * When set to `false` it fires the {@link module:engine/model/document~Document#event:change `change`} event.\n     *\n     * Create marker directly base on marker's name:\n     *\n     *\t\taddMarker( markerName, { range, usingOperation: false } );\n     *\n     * Create marker using operation:\n     *\n     *\t\taddMarker( markerName, { range, usingOperation: true } );\n     *\n     * Create marker that affects the editor data:\n     *\n     *\t\taddMarker( markerName, { range, usingOperation: false, affectsData: true } );\n     *\n     * Note: For efficiency reasons, it's best to create and keep as little markers as possible.\n     *\n     * @see module:engine/model/markercollection~Marker\n     * @param {String} name Name of a marker to create - must be unique.\n     * @param {Object} options\n     * @param {Boolean} options.usingOperation Flag indicating that the marker should be added by MarkerOperation.\n     * See {@link module:engine/model/markercollection~Marker#managedUsingOperations}.\n     * @param {module:engine/model/range~Range} options.range Marker range.\n     * @param {Boolean} [options.affectsData=false] Flag indicating that the marker changes the editor data.\n     * @returns {module:engine/model/markercollection~Marker} Marker that was set.\n     */\n\n  }, {\n    key: \"addMarker\",\n    value: function addMarker(name, options) {\n      this._assertWriterUsedCorrectly();\n\n      if (!options || typeof options.usingOperation != 'boolean') {\n        /**\n         * The `options.usingOperation` parameter is required when adding a new marker.\n         *\n         * @error writer-addMarker-no-usingOperation\n         */\n        throw new CKEditorError('writer-addMarker-no-usingOperation: The options.usingOperation parameter is required when adding a new marker.');\n      }\n\n      var usingOperation = options.usingOperation;\n      var range = options.range;\n      var affectsData = options.affectsData === undefined ? false : options.affectsData;\n\n      if (this.model.markers.has(name)) {\n        /**\n         * Marker with provided name already exists.\n         *\n         * @error writer-addMarker-marker-exists\n         */\n        throw new CKEditorError('writer-addMarker-marker-exists: Marker with provided name already exists.');\n      }\n\n      if (!range) {\n        /**\n         * Range parameter is required when adding a new marker.\n         *\n         * @error writer-addMarker-no-range\n         */\n        throw new CKEditorError('writer-addMarker-no-range: Range parameter is required when adding a new marker.');\n      }\n\n      if (!usingOperation) {\n        return this.model.markers._set(name, range, usingOperation, affectsData);\n      }\n\n      applyMarkerOperation(this, name, null, range, affectsData);\n      return this.model.markers.get(name);\n    }\n    /**\n     * Adds, updates or refreshes a {@link module:engine/model/markercollection~Marker marker}. Marker is a named range, which tracks\n     * changes in the document and updates its range automatically, when model tree changes. Still, it is possible to change the\n     * marker's range directly using this method.\n     *\n     * As the first parameter you can set marker name or instance. If none of them is provided, new marker, with a unique\n     * name is created and returned.\n     *\n     * As the second parameter you can set the new marker data or leave this parameter as empty which will just refresh\n     * the marker by triggering downcast conversion for it. Refreshing the marker is useful when you want to change\n     * the marker {@link module:engine/view/element~Element view element} without changing any marker data.\n     *\n     * \t\tlet isCommentActive = false;\n     *\n     * \t\tmodel.conversion.markerToHighlight( {\n     * \t\t\tmodel: 'comment',\n     *\t\t\tview: data => {\n     *\t\t\t\tconst classes = [ 'comment-marker' ];\n     *\n     *\t\t\t\tif ( isCommentActive ) {\n     *\t\t\t\t\tclasses.push( 'comment-marker--active' );\n     *\t\t\t\t}\n     *\n     *\t\t\t\treturn { classes };\n     *\t\t\t}\n     * \t\t} );\n     *\n     * \t\t// Change the property that indicates if marker is displayed as active or not.\n     * \t\tisCommentActive = true;\n     *\n     * \t\t// And refresh the marker to convert it with additional class.\n     * \t\tmodel.change( writer => writer.updateMarker( 'comment' ) );\n     *\n     * The `options.usingOperation` parameter lets you change if the marker should be managed by operations or not. See\n     * {@link module:engine/model/markercollection~Marker marker class description} to learn about the difference between\n     * markers managed by operations and not-managed by operations. It is possible to change this option for an existing marker.\n     *\n     * The `options.affectsData` parameter, which defaults to `false`, allows you to define if a marker affects the data. It should be\n     * `true` when the marker change changes the data returned by\n     * the {@link module:core/editor/utils/dataapimixin~DataApi#getData `editor.getData()`} method.\n     * When set to `true` it fires the {@link module:engine/model/document~Document#event:change:data `change:data`} event.\n     * When set to `false` it fires the {@link module:engine/model/document~Document#event:change `change`} event.\n     *\n     * Update marker directly base on marker's name:\n     *\n     *\t\tupdateMarker( markerName, { range } );\n     *\n     * Update marker using operation:\n     *\n     *\t\tupdateMarker( marker, { range, usingOperation: true } );\n     *\t\tupdateMarker( markerName, { range, usingOperation: true } );\n     *\n     * Change marker's option (start using operations to manage it):\n     *\n     *\t\tupdateMarker( marker, { usingOperation: true } );\n     *\n     * Change marker's option (inform the engine, that the marker does not affect the data anymore):\n     *\n     *\t\tupdateMarker( markerName, { affectsData: false } );\n     *\n     * @see module:engine/model/markercollection~Marker\n     * @param {String} markerOrName Name of a marker to update, or a marker instance.\n     * @param {Object} [options] If options object is not defined then marker will be refreshed by triggering\n     * downcast conversion for this marker with the same data.\n     * @param {module:engine/model/range~Range} [options.range] Marker range to update.\n     * @param {Boolean} [options.usingOperation] Flag indicated whether the marker should be added by MarkerOperation.\n     * See {@link module:engine/model/markercollection~Marker#managedUsingOperations}.\n     * @param {Boolean} [options.affectsData] Flag indicating that the marker changes the editor data.\n     */\n\n  }, {\n    key: \"updateMarker\",\n    value: function updateMarker(markerOrName, options) {\n      this._assertWriterUsedCorrectly();\n\n      var markerName = typeof markerOrName == 'string' ? markerOrName : markerOrName.name;\n      var currentMarker = this.model.markers.get(markerName);\n\n      if (!currentMarker) {\n        /**\n         * Marker with provided name does not exists.\n         *\n         * @error writer-updateMarker-marker-not-exists\n         */\n        throw new CKEditorError('writer-updateMarker-marker-not-exists: Marker with provided name does not exists.');\n      }\n\n      if (!options) {\n        this.model.markers._refresh(currentMarker);\n\n        return;\n      }\n\n      var hasUsingOperationDefined = typeof options.usingOperation == 'boolean';\n      var affectsDataDefined = typeof options.affectsData == 'boolean'; // Use previously defined marker's affectsData if the property is not provided.\n\n      var affectsData = affectsDataDefined ? options.affectsData : currentMarker.affectsData;\n\n      if (!hasUsingOperationDefined && !options.range && !affectsDataDefined) {\n        /**\n         * One of the options is required - provide range, usingOperations or affectsData.\n         *\n         * @error writer-updateMarker-wrong-options\n         */\n        throw new CKEditorError('writer-updateMarker-wrong-options: One of the options is required - provide range, usingOperations or affectsData.');\n      }\n\n      var currentRange = currentMarker.getRange();\n      var updatedRange = options.range ? options.range : currentRange;\n\n      if (hasUsingOperationDefined && options.usingOperation !== currentMarker.managedUsingOperations) {\n        // The marker type is changed so it's necessary to create proper operations.\n        if (options.usingOperation) {\n          // If marker changes to a managed one treat this as synchronizing existing marker.\n          // Create `MarkerOperation` with `oldRange` set to `null`, so reverse operation will remove the marker.\n          applyMarkerOperation(this, markerName, null, updatedRange, affectsData);\n        } else {\n          // If marker changes to a marker that do not use operations then we need to create additional operation\n          // that removes that marker first.\n          applyMarkerOperation(this, markerName, currentRange, null, affectsData); // Although not managed the marker itself should stay in model and its range should be preserver or changed to passed range.\n\n          this.model.markers._set(markerName, updatedRange, undefined, affectsData);\n        }\n\n        return;\n      } // Marker's type doesn't change so update it accordingly.\n\n\n      if (currentMarker.managedUsingOperations) {\n        applyMarkerOperation(this, markerName, currentRange, updatedRange, affectsData);\n      } else {\n        this.model.markers._set(markerName, updatedRange, undefined, affectsData);\n      }\n    }\n    /**\n     * Removes given {@link module:engine/model/markercollection~Marker marker} or marker with given name.\n     * The marker is removed accordingly to how it has been created, so if the marker was created using operation,\n     * it will be destroyed using operation.\n     *\n     * @param {module:engine/model/markercollection~Marker|String} markerOrName Marker or marker name to remove.\n     */\n\n  }, {\n    key: \"removeMarker\",\n    value: function removeMarker(markerOrName) {\n      this._assertWriterUsedCorrectly();\n\n      var name = typeof markerOrName == 'string' ? markerOrName : markerOrName.name;\n\n      if (!this.model.markers.has(name)) {\n        /**\n         * Trying to remove marker which does not exist.\n         *\n         * @error writer-removeMarker-no-marker\n         */\n        throw new CKEditorError('writer-removeMarker-no-marker: Trying to remove marker which does not exist.');\n      }\n\n      var marker = this.model.markers.get(name);\n\n      if (!marker.managedUsingOperations) {\n        this.model.markers._remove(name);\n\n        return;\n      }\n\n      var oldRange = marker.getRange();\n      applyMarkerOperation(this, name, oldRange, null, marker.affectsData);\n    }\n    /**\n     * Sets the document's selection (ranges and direction) to the specified location based on the given\n     * {@link module:engine/model/selection~Selectable selectable} or creates an empty selection if no arguments were passed.\n     *\n     *\t\t// Sets selection to the given range.\n     *\t\tconst range = writer.createRange( start, end );\n     *\t\twriter.setSelection( range );\n     *\n     *\t\t// Sets selection to given ranges.\n     *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n     *\t\twriter.setSelection( range );\n     *\n     *\t\t// Sets selection to other selection.\n     *\t\tconst otherSelection = writer.createSelection();\n     *\t\twriter.setSelection( otherSelection );\n     *\n     *\t\t// Sets selection to the given document selection.\n     *\t\tconst documentSelection = model.document.selection;\n     *\t\twriter.setSelection( documentSelection );\n     *\n     *\t\t// Sets collapsed selection at the given position.\n     *\t\tconst position = writer.createPosition( root, path );\n     *\t\twriter.setSelection( position );\n     *\n     *\t\t// Sets collapsed selection at the position of the given node and an offset.\n     *\t\twriter.setSelection( paragraph, offset );\n     *\n     * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n    \t * that element and ends after the last child of that element.\n     *\n     *\t\twriter.setSelection( paragraph, 'in' );\n     *\n     * Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends just after the item.\n     *\n     *\t\twriter.setSelection( paragraph, 'on' );\n     *\n     *\t\t// Removes all selection's ranges.\n     *\t\twriter.setSelection( null );\n     *\n     * `Writer#setSelection()` allow passing additional options (`backward`) as the last argument.\n     *\n     *\t\t// Sets selection as backward.\n     *\t\twriter.setSelection( range, { backward: true } );\n     *\n     * Throws `writer-incorrect-use` error when the writer is used outside the `change()` block.\n     *\n     * @param {module:engine/model/selection~Selectable} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     */\n\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(selectable, placeOrOffset, options) {\n      this._assertWriterUsedCorrectly();\n\n      this.model.document.selection._setTo(selectable, placeOrOffset, options);\n    }\n    /**\n     * Moves {@link module:engine/model/documentselection~DocumentSelection#focus} to the specified location.\n     *\n     * The location can be specified in the same form as\n     * {@link #createPositionAt `writer.createPositionAt()`} parameters.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset=0] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"setSelectionFocus\",\n    value: function setSelectionFocus(itemOrPosition, offset) {\n      this._assertWriterUsedCorrectly();\n\n      this.model.document.selection._setFocus(itemOrPosition, offset);\n    }\n    /**\n     * Sets attribute(s) on the selection. If attribute with the same key already is set, it's value is overwritten.\n     *\n     * Using key and value pair:\n     *\n     * \twriter.setSelectionAttribute( 'italic', true );\n     *\n     * Using key-value object:\n     *\n     * \twriter.setSelectionAttribute( { italic: true, bold: false } );\n     *\n     * Using iterable object:\n     *\n     * \twriter.setSelectionAttribute( new Map( [ [ 'italic', true ] ] ) );\n     *\n     * @param {String|Object|Iterable.<*>} keyOrObjectOrIterable Key of the attribute to set\n     * or object / iterable of key => value attribute pairs.\n     * @param {*} [value] Attribute value.\n     */\n\n  }, {\n    key: \"setSelectionAttribute\",\n    value: function setSelectionAttribute(keyOrObjectOrIterable, value) {\n      this._assertWriterUsedCorrectly();\n\n      if (typeof keyOrObjectOrIterable === 'string') {\n        this._setSelectionAttribute(keyOrObjectOrIterable, value);\n      } else {\n        var _iteratorNormalCompletion8 = true;\n        var _didIteratorError8 = false;\n        var _iteratorError8 = undefined;\n\n        try {\n          for (var _iterator8 = toMap(keyOrObjectOrIterable)[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n            var _step8$value = _slicedToArray(_step8.value, 2),\n                key = _step8$value[0],\n                _value = _step8$value[1];\n\n            this._setSelectionAttribute(key, _value);\n          }\n        } catch (err) {\n          _didIteratorError8 = true;\n          _iteratorError8 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n              _iterator8.return();\n            }\n          } finally {\n            if (_didIteratorError8) {\n              throw _iteratorError8;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Removes attribute(s) with given key(s) from the selection.\n     *\n     * Remove one attribute:\n     *\n     *\t\twriter.removeSelectionAttribute( 'italic' );\n     *\n     * Remove multiple attributes:\n     *\n     *\t\twriter.removeSelectionAttribute( [ 'italic', 'bold' ] );\n     *\n     * @param {String|Iterable.<String>} keyOrIterableOfKeys Key of the attribute to remove or an iterable of attribute keys to remove.\n     */\n\n  }, {\n    key: \"removeSelectionAttribute\",\n    value: function removeSelectionAttribute(keyOrIterableOfKeys) {\n      this._assertWriterUsedCorrectly();\n\n      if (typeof keyOrIterableOfKeys === 'string') {\n        this._removeSelectionAttribute(keyOrIterableOfKeys);\n      } else {\n        var _iteratorNormalCompletion9 = true;\n        var _didIteratorError9 = false;\n        var _iteratorError9 = undefined;\n\n        try {\n          for (var _iterator9 = keyOrIterableOfKeys[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n            var key = _step9.value;\n\n            this._removeSelectionAttribute(key);\n          }\n        } catch (err) {\n          _didIteratorError9 = true;\n          _iteratorError9 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n              _iterator9.return();\n            }\n          } finally {\n            if (_didIteratorError9) {\n              throw _iteratorError9;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Temporarily changes the {@link module:engine/model/documentselection~DocumentSelection#isGravityOverridden gravity}\n     * of the selection from left to right.\n     *\n     * The gravity defines from which direction the selection inherits its attributes. If it's the default left gravity,\n     * then the selection (after being moved by the user) inherits attributes from its left-hand side.\n     * This method allows to temporarily override this behavior by forcing the gravity to the right.\n     *\n     * For the following model fragment:\n     *\n     *\t\t<$text bold=\"true\" linkHref=\"url\">bar[]</$text><$text bold=\"true\">biz</$text>\n     *\n     * * Default gravity: selection will have the `bold` and `linkHref` attributes.\n     * * Overridden gravity: selection will have `bold` attribute.\n     *\n     * **Note**: It returns an unique identifier which is required to restore the gravity. It guarantees the symmetry\n     * of the process.\n     *\n     * @returns {String} The unique id which allows restoring the gravity.\n     */\n\n  }, {\n    key: \"overrideSelectionGravity\",\n    value: function overrideSelectionGravity() {\n      return this.model.document.selection._overrideGravity();\n    }\n    /**\n     * Restores {@link ~Writer#overrideSelectionGravity} gravity to default.\n     *\n     * Restoring the gravity is only possible using the unique identifier returned by\n     * {@link ~Writer#overrideSelectionGravity}. Note that the gravity remains overridden as long as won't be restored\n     * the same number of times it was overridden.\n     *\n     * @param {String} uid The unique id returned by {@link ~Writer#overrideSelectionGravity}.\n     */\n\n  }, {\n    key: \"restoreSelectionGravity\",\n    value: function restoreSelectionGravity(uid) {\n      this.model.document.selection._restoreGravity(uid);\n    }\n    /**\n     * @private\n     * @param {String} key Key of the attribute to remove.\n     * @param {*} value Attribute value.\n     */\n\n  }, {\n    key: \"_setSelectionAttribute\",\n    value: function _setSelectionAttribute(key, value) {\n      var selection = this.model.document.selection; // Store attribute in parent element if the selection is collapsed in an empty node.\n\n      if (selection.isCollapsed && selection.anchor.parent.isEmpty) {\n        var storeKey = DocumentSelection._getStoreAttributeKey(key);\n\n        this.setAttribute(storeKey, value, selection.anchor.parent);\n      }\n\n      selection._setAttribute(key, value);\n    }\n    /**\n     * @private\n     * @param {String} key Key of the attribute to remove.\n     */\n\n  }, {\n    key: \"_removeSelectionAttribute\",\n    value: function _removeSelectionAttribute(key) {\n      var selection = this.model.document.selection; // Remove stored attribute from parent element if the selection is collapsed in an empty node.\n\n      if (selection.isCollapsed && selection.anchor.parent.isEmpty) {\n        var storeKey = DocumentSelection._getStoreAttributeKey(key);\n\n        this.removeAttribute(storeKey, selection.anchor.parent);\n      }\n\n      selection._removeAttribute(key);\n    }\n    /**\n     * Throws `writer-detached-writer-tries-to-modify-model` error when the writer is used outside of the `change()` block.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_assertWriterUsedCorrectly\",\n    value: function _assertWriterUsedCorrectly() {\n      /**\n       * Trying to use a writer outside a {@link module:engine/model/model~Model#change `change()` or\n       * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()`} blocks.\n       *\n       * The writer can only be used inside these blocks which ensures that the model\n       * can only be changed during such \"sessions\".\n       *\n       * @error writer-incorrect-use\n       */\n      if (this.model._currentWriter !== this) {\n        throw new CKEditorError('writer-incorrect-use: Trying to use a writer outside the change() block.');\n      }\n    }\n    /**\n     * For given action `type` and `positionOrRange` where the action happens, this function finds all affected markers\n     * and applies a marker operation with the new marker range equal to the current range. Thanks to this, the marker range\n     * can be later correctly processed during undo.\n     *\n     * @private\n     * @param {'move'|'merge'} type Writer action type.\n     * @param {module:engine/model/position~Position|module:engine/model/range~Range} positionOrRange Position or range\n     * where the writer action happens.\n     */\n\n  }, {\n    key: \"_addOperationForAffectedMarkers\",\n    value: function _addOperationForAffectedMarkers(type, positionOrRange) {\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = this.model.markers[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var marker = _step10.value;\n\n          if (!marker.managedUsingOperations) {\n            continue;\n          }\n\n          var markerRange = marker.getRange();\n          var isAffected = false;\n\n          if (type == 'move') {\n            isAffected = positionOrRange.containsPosition(markerRange.start) || positionOrRange.start.isEqual(markerRange.start) || positionOrRange.containsPosition(markerRange.end) || positionOrRange.end.isEqual(markerRange.end);\n          } else {\n            // if type == 'merge'.\n            var elementBefore = positionOrRange.nodeBefore;\n            var elementAfter = positionOrRange.nodeAfter;\n            var affectedOnLeft = markerRange.start.parent == elementBefore && markerRange.start.isAtEnd;\n            var affectedOnRight = markerRange.end.parent == elementAfter && markerRange.end.offset == 0;\n            isAffected = affectedOnLeft || affectedOnRight;\n          }\n\n          if (isAffected) {\n            this.updateMarker(marker.name, {\n              range: markerRange\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n            _iterator10.return();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n    }\n  }]);\n\n  return Writer;\n}(); // Sets given attribute to each node in given range. When attribute value is null then attribute will be removed.\n//\n// Because attribute operation needs to have the same attribute value on the whole range, this function splits\n// the range into smaller parts.\n//\n// Given `range` must be flat.\n//\n// @private\n// @param {module:engine/model/writer~Writer} writer\n// @param {String} key Attribute key.\n// @param {*} value Attribute new value.\n// @param {module:engine/model/range~Range} range Model range on which the attribute will be set.\n\n\nexport { Writer as default };\n\nfunction setAttributeOnRange(writer, key, value, range) {\n  var model = writer.model;\n  var doc = model.document; // Position of the last split, the beginning of the new range.\n\n  var lastSplitPosition = range.start; // Currently position in the scanning range. Because we need value after the position, it is not a current\n  // position of the iterator but the previous one (we need to iterate one more time to get the value after).\n\n  var position; // Value before the currently position.\n\n  var valueBefore; // Value after the currently position.\n\n  var valueAfter;\n  var _iteratorNormalCompletion11 = true;\n  var _didIteratorError11 = false;\n  var _iteratorError11 = undefined;\n\n  try {\n    for (var _iterator11 = range.getWalker({\n      shallow: true\n    })[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n      var val = _step11.value;\n      valueAfter = val.item.getAttribute(key); // At the first run of the iterator the position in undefined. We also do not have a valueBefore, but\n      // because valueAfter may be null, valueBefore may be equal valueAfter ( undefined == null ).\n\n      if (position && valueBefore != valueAfter) {\n        // if valueBefore == value there is nothing to change, so we add operation only if these values are different.\n        if (valueBefore != value) {\n          addOperation();\n        }\n\n        lastSplitPosition = position;\n      }\n\n      position = val.nextPosition;\n      valueBefore = valueAfter;\n    } // Because position in the loop is not the iterator position (see let position comment), the last position in\n    // the while loop will be last but one position in the range. We need to check the last position manually.\n\n  } catch (err) {\n    _didIteratorError11 = true;\n    _iteratorError11 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n        _iterator11.return();\n      }\n    } finally {\n      if (_didIteratorError11) {\n        throw _iteratorError11;\n      }\n    }\n  }\n\n  if (position instanceof Position && position != lastSplitPosition && valueBefore != value) {\n    addOperation();\n  }\n\n  function addOperation() {\n    var range = new Range(lastSplitPosition, position);\n    var version = range.root.document ? doc.version : null;\n    var operation = new AttributeOperation(range, key, valueBefore, value, version);\n    writer.batch.addOperation(operation);\n    model.applyOperation(operation);\n  }\n} // Sets given attribute to the given node. When attribute value is null then attribute will be removed.\n//\n// @private\n// @param {module:engine/model/writer~Writer} writer\n// @param {String} key Attribute key.\n// @param {*} value Attribute new value.\n// @param {module:engine/model/item~Item} item Model item on which the attribute will be set.\n\n\nfunction setAttributeOnItem(writer, key, value, item) {\n  var model = writer.model;\n  var doc = model.document;\n  var previousValue = item.getAttribute(key);\n  var range, operation;\n\n  if (previousValue != value) {\n    var isRootChanged = item.root === item;\n\n    if (isRootChanged) {\n      // If we change attributes of root element, we have to use `RootAttributeOperation`.\n      var version = item.document ? doc.version : null;\n      operation = new RootAttributeOperation(item, key, previousValue, value, version);\n    } else {\n      range = new Range(Position._createBefore(item), writer.createPositionAfter(item));\n\n      var _version = range.root.document ? doc.version : null;\n\n      operation = new AttributeOperation(range, key, previousValue, value, _version);\n    }\n\n    writer.batch.addOperation(operation);\n    model.applyOperation(operation);\n  }\n} // Creates and applies marker operation to {@link module:engine/model/operation/operation~Operation operation}.\n//\n// @private\n// @param {module:engine/model/writer~Writer} writer\n// @param {String} name Marker name.\n// @param {module:engine/model/range~Range} oldRange Marker range before the change.\n// @param {module:engine/model/range~Range} newRange Marker range after the change.\n// @param {Boolean} affectsData\n\n\nfunction applyMarkerOperation(writer, name, oldRange, newRange, affectsData) {\n  var model = writer.model;\n  var doc = model.document;\n  var operation = new MarkerOperation(name, oldRange, newRange, model.markers, affectsData, doc.version);\n  writer.batch.addOperation(operation);\n  model.applyOperation(operation);\n} // Creates `MoveOperation` or `DetachOperation` that removes `howMany` nodes starting from `position`.\n// The operation will be applied on given model instance and added to given operation instance.\n//\n// @private\n// @param {module:engine/model/position~Position} position Position from which nodes are removed.\n// @param {Number} howMany Number of nodes to remove.\n// @param {Batch} batch Batch to which the operation will be added.\n// @param {module:engine/model/model~Model} model Model instance on which operation will be applied.\n\n\nfunction applyRemoveOperation(position, howMany, batch, model) {\n  var operation;\n\n  if (position.root.document) {\n    var doc = model.document;\n    var graveyardPosition = new Position(doc.graveyard, [0]);\n    operation = new MoveOperation(position, howMany, graveyardPosition, doc.version);\n  } else {\n    operation = new DetachOperation(position, howMany);\n  }\n\n  batch.addOperation(operation);\n  model.applyOperation(operation);\n} // Returns `true` if both root elements are the same element or both are documents root elements.\n//\n// Elements in the same tree can be moved (for instance you can move element form one documents root to another, or\n// within the same document fragment), but when element supposed to be moved from document fragment to the document, or\n// to another document it should be removed and inserted to avoid problems with OT. This is because features like undo or\n// collaboration may track changes on the document but ignore changes on detached fragments and should not get\n// unexpected `move` operation.\n\n\nfunction isSameTree(rootA, rootB) {\n  // If it is the same root this is the same tree.\n  if (rootA === rootB) {\n    return true;\n  } // If both roots are documents root it is operation within the document what we still treat as the same tree.\n\n\n  if (rootA instanceof RootElement && rootB instanceof RootElement) {\n    return true;\n  }\n\n  return false;\n}","import _toConsumableArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/differ\n */\nimport Position from './position';\nimport Range from './range';\n/**\n * Calculates the difference between two model states.\n *\n * Receives operations that are to be applied on the model document. Marks parts of the model document tree which\n * are changed and saves the state of these elements before the change. Then, it compares saved elements with the\n * changed elements, after all changes are applied on the model document. Calculates the diff between saved\n * elements and new ones and returns a change set.\n */\n\nvar Differ =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a `Differ` instance.\n   *\n   * @param {module:engine/model/markercollection~MarkerCollection} markerCollection Model's marker collection.\n   */\n  function Differ(markerCollection) {\n    _classCallCheck(this, Differ);\n\n    /**\n     * Reference to the model's marker collection.\n     *\n     * @private\n     * @type {module:engine/model/markercollection~MarkerCollection}\n     */\n    this._markerCollection = markerCollection;\n    /**\n     * A map that stores changes that happened in a given element.\n     *\n     * The keys of the map are references to the model elements.\n     * The values of the map are arrays with changes that were done on this element.\n     *\n     * @private\n     * @type {Map}\n     */\n\n    this._changesInElement = new Map();\n    /**\n     * A map that stores \"element's children snapshots\". A snapshot is representing children of a given element before\n     * the first change was applied on that element. Snapshot items are objects with two properties: `name`,\n     * containing the element name (or `'$text'` for a text node) and `attributes` which is a map of the node's attributes.\n     *\n     * @private\n     * @type {Map}\n     */\n\n    this._elementSnapshots = new Map();\n    /**\n     * A map that stores all changed markers.\n     *\n     * The keys of the map are marker names.\n     * The values of the map are objects with the `oldRange` and `newRange` properties. They store the marker range\n     * state before and after the change.\n     *\n     * @private\n     * @type {Map}\n     */\n\n    this._changedMarkers = new Map();\n    /**\n     * Stores the number of changes that were processed. Used to order the changes chronologically. It is important\n     * when changes are sorted.\n     *\n     * @private\n     * @type {Number}\n     */\n\n    this._changeCount = 0;\n    /**\n     * For efficiency purposes, `Differ` stores the change set returned by the differ after {@link #getChanges} call.\n     * Cache is reset each time a new operation is buffered. If the cache has not been reset, {@link #getChanges} will\n     * return the cached value instead of calculating it again.\n     *\n     * This property stores those changes that did not take place in graveyard root.\n     *\n     * @private\n     * @type {Array.<Object>|null}\n     */\n\n    this._cachedChanges = null;\n    /**\n     * For efficiency purposes, `Differ` stores the change set returned by the differ after the {@link #getChanges} call.\n     * The cache is reset each time a new operation is buffered. If the cache has not been reset, {@link #getChanges} will\n     * return the cached value instead of calculating it again.\n     *\n     * This property stores all changes evaluated by `Differ`, including those that took place in the graveyard.\n     *\n     * @private\n     * @type {Array.<Object>|null}\n     */\n\n    this._cachedChangesWithGraveyard = null;\n  }\n  /**\n   * Informs whether there are any changes buffered in `Differ`.\n   *\n   * @readonly\n   * @type {Boolean}\n   */\n\n\n  _createClass(Differ, [{\n    key: \"bufferOperation\",\n\n    /**\n     * Buffers the given operation. An operation has to be buffered before it is executed.\n     *\n     * Operation type is checked and it is checked which nodes it will affect. These nodes are then stored in `Differ`\n     * in the state before the operation is executed.\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation An operation to buffer.\n     */\n    value: function bufferOperation(operation) {\n      // Below we take an operation, check its type, then use its parameters in marking (private) methods.\n      // The general rule is to not mark elements inside inserted element. All inserted elements are re-rendered.\n      // Marking changes in them would cause a \"double\" changing then.\n      //\n      switch (operation.type) {\n        case 'insert':\n          {\n            if (this._isInInsertedElement(operation.position.parent)) {\n              return;\n            }\n\n            this._markInsert(operation.position.parent, operation.position.offset, operation.nodes.maxOffset);\n\n            break;\n          }\n\n        case 'addAttribute':\n        case 'removeAttribute':\n        case 'changeAttribute':\n          {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (var _iterator = operation.range.getItems()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var item = _step.value;\n\n                if (this._isInInsertedElement(item.parent)) {\n                  continue;\n                }\n\n                this._markAttribute(item);\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 'remove':\n        case 'move':\n        case 'reinsert':\n          {\n            // When range is moved to the same position then not mark it as a change.\n            // See: https://github.com/ckeditor/ckeditor5-engine/issues/1664.\n            if (operation.sourcePosition.isEqual(operation.targetPosition) || operation.sourcePosition.getShiftedBy(operation.howMany).isEqual(operation.targetPosition)) {\n              return;\n            }\n\n            var sourceParentInserted = this._isInInsertedElement(operation.sourcePosition.parent);\n\n            var targetParentInserted = this._isInInsertedElement(operation.targetPosition.parent);\n\n            if (!sourceParentInserted) {\n              this._markRemove(operation.sourcePosition.parent, operation.sourcePosition.offset, operation.howMany);\n            }\n\n            if (!targetParentInserted) {\n              this._markInsert(operation.targetPosition.parent, operation.getMovedRangeStart().offset, operation.howMany);\n            }\n\n            break;\n          }\n\n        case 'rename':\n          {\n            if (this._isInInsertedElement(operation.position.parent)) {\n              return;\n            }\n\n            this._markRemove(operation.position.parent, operation.position.offset, 1);\n\n            this._markInsert(operation.position.parent, operation.position.offset, 1);\n\n            var range = Range._createFromPositionAndShift(operation.position, 1);\n\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n              for (var _iterator2 = this._markerCollection.getMarkersIntersectingRange(range)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var marker = _step2.value;\n                var markerRange = marker.getRange();\n                this.bufferMarkerChange(marker.name, markerRange, markerRange, marker.affectsData);\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                  _iterator2.return();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 'split':\n          {\n            var splitElement = operation.splitPosition.parent; // Mark that children of the split element were removed.\n\n            if (!this._isInInsertedElement(splitElement)) {\n              this._markRemove(splitElement, operation.splitPosition.offset, operation.howMany);\n            } // Mark that the new element (split copy) was inserted.\n\n\n            if (!this._isInInsertedElement(operation.insertionPosition.parent)) {\n              this._markInsert(operation.insertionPosition.parent, operation.insertionPosition.offset, 1);\n            } // If the split took the element from the graveyard, mark that the element from the graveyard was removed.\n\n\n            if (operation.graveyardPosition) {\n              this._markRemove(operation.graveyardPosition.parent, operation.graveyardPosition.offset, 1);\n            }\n\n            break;\n          }\n\n        case 'merge':\n          {\n            // Mark that the merged element was removed.\n            var mergedElement = operation.sourcePosition.parent;\n\n            if (!this._isInInsertedElement(mergedElement.parent)) {\n              this._markRemove(mergedElement.parent, mergedElement.startOffset, 1);\n            } // Mark that the merged element was inserted into graveyard.\n\n\n            var graveyardParent = operation.graveyardPosition.parent;\n\n            this._markInsert(graveyardParent, operation.graveyardPosition.offset, 1); // Mark that children of merged element were inserted at new parent.\n\n\n            var mergedIntoElement = operation.targetPosition.parent;\n\n            if (!this._isInInsertedElement(mergedIntoElement)) {\n              this._markInsert(mergedIntoElement, operation.targetPosition.offset, mergedElement.maxOffset);\n            }\n\n            break;\n          }\n      } // Clear cache after each buffered operation as it is no longer valid.\n\n\n      this._cachedChanges = null;\n    }\n    /**\n     * Buffers a marker change.\n     *\n     * @param {String} markerName The name of the marker that changed.\n     * @param {module:engine/model/range~Range|null} oldRange Marker range before the change or `null` if the marker has just\n     * been created.\n     * @param {module:engine/model/range~Range|null} newRange Marker range after the change or `null` if the marker was removed.\n     * @param {Boolean} affectsData Flag indicating whether marker affects the editor data.\n     */\n\n  }, {\n    key: \"bufferMarkerChange\",\n    value: function bufferMarkerChange(markerName, oldRange, newRange, affectsData) {\n      var buffered = this._changedMarkers.get(markerName);\n\n      if (!buffered) {\n        this._changedMarkers.set(markerName, {\n          oldRange: oldRange,\n          newRange: newRange,\n          affectsData: affectsData\n        });\n      } else {\n        buffered.newRange = newRange;\n        buffered.affectsData = affectsData;\n\n        if (buffered.oldRange == null && buffered.newRange == null) {\n          // The marker is going to be removed (`newRange == null`) but it did not exist before the first buffered change\n          // (`buffered.oldRange == null`). In this case, do not keep the marker in buffer at all.\n          this._changedMarkers.delete(markerName);\n        }\n      }\n    }\n    /**\n     * Returns all markers that should be removed as a result of buffered changes.\n     *\n     * @returns {Array.<Object>} Markers to remove. Each array item is an object containing the `name` and `range` properties.\n     */\n\n  }, {\n    key: \"getMarkersToRemove\",\n    value: function getMarkersToRemove() {\n      var result = [];\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this._changedMarkers[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n              name = _step3$value[0],\n              change = _step3$value[1];\n\n          if (change.oldRange != null) {\n            result.push({\n              name: name,\n              range: change.oldRange\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Returns all markers which should be added as a result of buffered changes.\n     *\n     * @returns {Array.<Object>} Markers to add. Each array item is an object containing the `name` and `range` properties.\n     */\n\n  }, {\n    key: \"getMarkersToAdd\",\n    value: function getMarkersToAdd() {\n      var result = [];\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this._changedMarkers[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n              name = _step4$value[0],\n              change = _step4$value[1];\n\n          if (change.newRange != null) {\n            result.push({\n              name: name,\n              range: change.newRange\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Returns all markers which changed.\n     *\n     * @returns {Array.<Object>}\n     */\n\n  }, {\n    key: \"getChangedMarkers\",\n    value: function getChangedMarkers() {\n      return Array.from(this._changedMarkers).map(function (item) {\n        return {\n          name: item[0],\n          data: {\n            oldRange: item[1].oldRange,\n            newRange: item[1].newRange\n          }\n        };\n      });\n    }\n    /**\n     * Checks whether some of the buffered changes affect the editor data.\n     *\n     * Types of changes which affect the editor data:\n     *\n     * * model structure changes,\n     * * attribute changes,\n     * * changes of markers which were defined as `affectingData`.\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"hasDataChanges\",\n    value: function hasDataChanges() {\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this._changedMarkers[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n              change = _step5$value[1];\n\n          if (change.affectsData) {\n            return true;\n          }\n        } // If markers do not affect the data, check whether there are some changes in elements.\n\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return this._changesInElement.size > 0;\n    }\n    /**\n     * Calculates the diff between the old model tree state (the state before the first buffered operations since the last {@link #reset}\n     * call) and the new model tree state (actual one). It should be called after all buffered operations are executed.\n     *\n     * The diff set is returned as an array of diff items, each describing a change done on the model. The items are sorted by\n     * the position on which the change happened. If a position {@link module:engine/model/position~Position#isBefore is before}\n     * another one, it will be on an earlier index in the diff set.\n     *\n     * Because calculating the diff is a costly operation, the result is cached. If no new operation was buffered since the\n     * previous {@link #getChanges} call, the next call will return the cached value.\n     *\n     * @param {Object} options Additional options.\n     * @param {Boolean} [options.includeChangesInGraveyard=false] If set to `true`, also changes that happened\n     * in the graveyard root will be returned. By default, changes in the graveyard root are not returned.\n     * @returns {Array.<Object>} Diff between the old and the new model tree state.\n     */\n\n  }, {\n    key: \"getChanges\",\n    value: function getChanges() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeChangesInGraveyard: false\n      };\n\n      // If there are cached changes, just return them instead of calculating changes again.\n      if (this._cachedChanges) {\n        if (options.includeChangesInGraveyard) {\n          return this._cachedChangesWithGraveyard.slice();\n        } else {\n          return this._cachedChanges.slice();\n        }\n      } // Will contain returned results.\n\n\n      var diffSet = []; // Check all changed elements.\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = this._changesInElement.keys()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var element = _step6.value;\n\n          // Get changes for this element and sort them.\n          var changes = this._changesInElement.get(element).sort(function (a, b) {\n            if (a.offset === b.offset) {\n              if (a.type != b.type) {\n                // If there are multiple changes at the same position, \"remove\" change should be first.\n                // If the order is different, for example, we would first add some nodes and then removed them\n                // (instead of the nodes that we should remove).\n                return a.type == 'remove' ? -1 : 1;\n              }\n\n              return 0;\n            }\n\n            return a.offset < b.offset ? -1 : 1;\n          }); // Get children of this element before any change was applied on it.\n\n\n          var snapshotChildren = this._elementSnapshots.get(element); // Get snapshot of current element's children.\n\n\n          var elementChildren = _getChildrenSnapshot(element.getChildren()); // Generate actions basing on changes done on element.\n\n\n          var actions = _generateActionsFromChanges(snapshotChildren.length, changes);\n\n          var _i2 = 0; // Iterator in `elementChildren` array -- iterates through current children of element.\n\n          var j = 0; // Iterator in `snapshotChildren` array -- iterates through old children of element.\n          // Process every action.\n\n          var _iteratorNormalCompletion7 = true;\n          var _didIteratorError7 = false;\n          var _iteratorError7 = undefined;\n\n          try {\n            for (var _iterator7 = actions[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n              var action = _step7.value;\n\n              if (action === 'i') {\n                // Generate diff item for this element and insert it into the diff set.\n                diffSet.push(this._getInsertDiff(element, _i2, elementChildren[_i2].name));\n                _i2++;\n              } else if (action === 'r') {\n                // Generate diff item for this element and insert it into the diff set.\n                diffSet.push(this._getRemoveDiff(element, _i2, snapshotChildren[j].name));\n                j++;\n              } else if (action === 'a') {\n                // Take attributes from saved and current children.\n                var elementAttributes = elementChildren[_i2].attributes;\n                var snapshotAttributes = snapshotChildren[j].attributes;\n                var range = void 0;\n\n                if (elementChildren[_i2].name == '$text') {\n                  range = new Range(Position._createAt(element, _i2), Position._createAt(element, _i2 + 1));\n                } else {\n                  var index = element.offsetToIndex(_i2);\n                  range = new Range(Position._createAt(element, _i2), Position._createAt(element.getChild(index), 0));\n                } // Generate diff items for this change (there might be multiple attributes changed and\n                // there is a single diff for each of them) and insert them into the diff set.\n\n\n                diffSet.push.apply(diffSet, _toConsumableArray(this._getAttributesDiff(range, snapshotAttributes, elementAttributes)));\n                _i2++;\n                j++;\n              } else {\n                // `action` is 'equal'. Child not changed.\n                _i2++;\n                j++;\n              }\n            }\n          } catch (err) {\n            _didIteratorError7 = true;\n            _iteratorError7 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n                _iterator7.return();\n              }\n            } finally {\n              if (_didIteratorError7) {\n                throw _iteratorError7;\n              }\n            }\n          }\n        } // Then, sort the changes by the position (change at position before other changes is first).\n\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      diffSet.sort(function (a, b) {\n        // If the change is in different root, we don't care much, but we'd like to have all changes in given\n        // root \"together\" in the array. So let's just sort them by the root name. It does not matter which root\n        // will be processed first.\n        if (a.position.root != b.position.root) {\n          return a.position.root.rootName < b.position.root.rootName ? -1 : 1;\n        } // If change happens at the same position...\n\n\n        if (a.position.isEqual(b.position)) {\n          // Keep chronological order of operations.\n          return a.changeCount - b.changeCount;\n        } // If positions differ, position \"on the left\" should be earlier in the result.\n\n\n        return a.position.isBefore(b.position) ? -1 : 1;\n      }); // Glue together multiple changes (mostly on text nodes).\n\n      for (var i = 1; i < diffSet.length; i++) {\n        var prevDiff = diffSet[i - 1];\n        var thisDiff = diffSet[i]; // Glue remove changes if they happen on text on same position.\n\n        var isConsecutiveTextRemove = prevDiff.type == 'remove' && thisDiff.type == 'remove' && prevDiff.name == '$text' && thisDiff.name == '$text' && prevDiff.position.isEqual(thisDiff.position); // Glue insert changes if they happen on text on consecutive fragments.\n\n        var isConsecutiveTextAdd = prevDiff.type == 'insert' && thisDiff.type == 'insert' && prevDiff.name == '$text' && thisDiff.name == '$text' && prevDiff.position.parent == thisDiff.position.parent && prevDiff.position.offset + prevDiff.length == thisDiff.position.offset; // Glue attribute changes if they happen on consecutive fragments and have same key, old value and new value.\n\n        var isConsecutiveAttributeChange = prevDiff.type == 'attribute' && thisDiff.type == 'attribute' && prevDiff.position.parent == thisDiff.position.parent && prevDiff.range.isFlat && thisDiff.range.isFlat && prevDiff.position.offset + prevDiff.length == thisDiff.position.offset && prevDiff.attributeKey == thisDiff.attributeKey && prevDiff.attributeOldValue == thisDiff.attributeOldValue && prevDiff.attributeNewValue == thisDiff.attributeNewValue;\n\n        if (isConsecutiveTextRemove || isConsecutiveTextAdd || isConsecutiveAttributeChange) {\n          diffSet[i - 1].length++;\n\n          if (isConsecutiveAttributeChange) {\n            diffSet[i - 1].range.end = diffSet[i - 1].range.end.getShiftedBy(1);\n          }\n\n          diffSet.splice(i, 1);\n          i--;\n        }\n      } // Remove `changeCount` property from diff items. It is used only for sorting and is internal thing.\n\n\n      for (var _i = 0, _diffSet = diffSet; _i < _diffSet.length; _i++) {\n        var item = _diffSet[_i];\n        delete item.changeCount;\n\n        if (item.type == 'attribute') {\n          delete item.position;\n          delete item.length;\n        }\n      }\n\n      this._changeCount = 0; // Cache changes.\n\n      this._cachedChangesWithGraveyard = diffSet.slice();\n      this._cachedChanges = diffSet.slice().filter(_changesInGraveyardFilter);\n\n      if (options.includeChangesInGraveyard) {\n        return this._cachedChangesWithGraveyard;\n      } else {\n        return this._cachedChanges;\n      }\n    }\n    /**\n     * Resets `Differ`. Removes all buffered changes.\n     */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._changesInElement.clear();\n\n      this._elementSnapshots.clear();\n\n      this._changedMarkers.clear();\n\n      this._cachedChanges = null;\n    }\n    /**\n     * Saves and handles an insert change.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} parent\n     * @param {Number} offset\n     * @param {Number} howMany\n     */\n\n  }, {\n    key: \"_markInsert\",\n    value: function _markInsert(parent, offset, howMany) {\n      var changeItem = {\n        type: 'insert',\n        offset: offset,\n        howMany: howMany,\n        count: this._changeCount++\n      };\n\n      this._markChange(parent, changeItem);\n    }\n    /**\n     * Saves and handles a remove change.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} parent\n     * @param {Number} offset\n     * @param {Number} howMany\n     */\n\n  }, {\n    key: \"_markRemove\",\n    value: function _markRemove(parent, offset, howMany) {\n      var changeItem = {\n        type: 'remove',\n        offset: offset,\n        howMany: howMany,\n        count: this._changeCount++\n      };\n\n      this._markChange(parent, changeItem);\n\n      this._removeAllNestedChanges(parent, offset, howMany);\n    }\n    /**\n     * Saves and handles an attribute change.\n     *\n     * @private\n     * @param {module:engine/model/item~Item} item\n     */\n\n  }, {\n    key: \"_markAttribute\",\n    value: function _markAttribute(item) {\n      var changeItem = {\n        type: 'attribute',\n        offset: item.startOffset,\n        howMany: item.offsetSize,\n        count: this._changeCount++\n      };\n\n      this._markChange(item.parent, changeItem);\n    }\n    /**\n     * Saves and handles a model change.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} parent\n     * @param {Object} changeItem\n     */\n\n  }, {\n    key: \"_markChange\",\n    value: function _markChange(parent, changeItem) {\n      // First, make a snapshot of this parent's children (it will be made only if it was not made before).\n      this._makeSnapshot(parent); // Then, get all changes that already were done on the element (empty array if this is the first change).\n\n\n      var changes = this._getChangesForElement(parent); // Then, look through all the changes, and transform them or the new change.\n\n\n      this._handleChange(changeItem, changes); // Add the new change.\n\n\n      changes.push(changeItem); // Remove incorrect changes. During transformation some change might be, for example, included in another.\n      // In that case, the change will have `howMany` property set to `0` or less. We need to remove those changes.\n\n      for (var i = 0; i < changes.length; i++) {\n        if (changes[i].howMany < 1) {\n          changes.splice(i, 1);\n          i--;\n        }\n      }\n    }\n    /**\n     * Gets an array of changes that have already been saved for a given element.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} element\n     * @returns {Array.<Object>}\n     */\n\n  }, {\n    key: \"_getChangesForElement\",\n    value: function _getChangesForElement(element) {\n      var changes;\n\n      if (this._changesInElement.has(element)) {\n        changes = this._changesInElement.get(element);\n      } else {\n        changes = [];\n\n        this._changesInElement.set(element, changes);\n      }\n\n      return changes;\n    }\n    /**\n     * Saves a children snapshot for a given element.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} element\n     */\n\n  }, {\n    key: \"_makeSnapshot\",\n    value: function _makeSnapshot(element) {\n      if (!this._elementSnapshots.has(element)) {\n        this._elementSnapshots.set(element, _getChildrenSnapshot(element.getChildren()));\n      }\n    }\n    /**\n     * For a given newly saved change, compares it with a change already done on the element and modifies the incoming\n     * change and/or the old change.\n     *\n     * @private\n     * @param {Object} inc Incoming (new) change.\n     * @param {Array.<Object>} changes An array containing all the changes done on that element.\n     */\n\n  }, {\n    key: \"_handleChange\",\n    value: function _handleChange(inc, changes) {\n      // We need a helper variable that will store how many nodes are to be still handled for this change item.\n      // `nodesToHandle` (how many nodes still need to be handled) and `howMany` (how many nodes were affected)\n      // needs to be differentiated.\n      //\n      // This comes up when there are multiple changes that are affected by `inc` change item.\n      //\n      // For example: assume two insert changes: `{ offset: 2, howMany: 1 }` and `{ offset: 5, howMany: 1 }`.\n      // Assume that `inc` change is remove `{ offset: 2, howMany: 2, nodesToHandle: 2 }`.\n      //\n      // Then, we:\n      // - \"forget\" about first insert change (it is \"eaten\" by remove),\n      // - because of that, at the end we will want to remove only one node (`nodesToHandle = 1`),\n      // - but still we have to change offset of the second insert change from `5` to `3`!\n      //\n      // So, `howMany` does not change throughout items transformation and keeps information about how many nodes were affected,\n      // while `nodesToHandle` means how many nodes need to be handled after the change item is transformed by other changes.\n      inc.nodesToHandle = inc.howMany;\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = changes[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var old = _step8.value;\n          var incEnd = inc.offset + inc.howMany;\n          var oldEnd = old.offset + old.howMany;\n\n          if (inc.type == 'insert') {\n            if (old.type == 'insert') {\n              if (inc.offset <= old.offset) {\n                old.offset += inc.howMany;\n              } else if (inc.offset < oldEnd) {\n                old.howMany += inc.nodesToHandle;\n                inc.nodesToHandle = 0;\n              }\n            }\n\n            if (old.type == 'remove') {\n              if (inc.offset < old.offset) {\n                old.offset += inc.howMany;\n              }\n            }\n\n            if (old.type == 'attribute') {\n              if (inc.offset <= old.offset) {\n                old.offset += inc.howMany;\n              } else if (inc.offset < oldEnd) {\n                // This case is more complicated, because attribute change has to be split into two.\n                // Example (assume that uppercase and lowercase letters mean different attributes):\n                //\n                // initial state:\t\tabcxyz\n                // attribute change:\taBCXYz\n                // incoming insert:\t\taBCfooXYz\n                //\n                // Change ranges cannot intersect because each item has to be described exactly (it was either\n                // not changed, inserted, removed, or its attribute was changed). That's why old attribute\n                // change has to be split and both parts has to be handled separately from now on.\n                var howMany = old.howMany;\n                old.howMany = inc.offset - old.offset; // Add the second part of attribute change to the beginning of processed array so it won't\n                // be processed again in this loop.\n\n                changes.unshift({\n                  type: 'attribute',\n                  offset: incEnd,\n                  howMany: howMany - old.howMany,\n                  count: this._changeCount++\n                });\n              }\n            }\n          }\n\n          if (inc.type == 'remove') {\n            if (old.type == 'insert') {\n              if (incEnd <= old.offset) {\n                old.offset -= inc.howMany;\n              } else if (incEnd <= oldEnd) {\n                if (inc.offset < old.offset) {\n                  var intersectionLength = incEnd - old.offset;\n                  old.offset = inc.offset;\n                  old.howMany -= intersectionLength;\n                  inc.nodesToHandle -= intersectionLength;\n                } else {\n                  old.howMany -= inc.nodesToHandle;\n                  inc.nodesToHandle = 0;\n                }\n              } else {\n                if (inc.offset <= old.offset) {\n                  inc.nodesToHandle -= old.howMany;\n                  old.howMany = 0;\n                } else if (inc.offset < oldEnd) {\n                  var _intersectionLength = oldEnd - inc.offset;\n\n                  old.howMany -= _intersectionLength;\n                  inc.nodesToHandle -= _intersectionLength;\n                }\n              }\n            }\n\n            if (old.type == 'remove') {\n              if (incEnd <= old.offset) {\n                old.offset -= inc.howMany;\n              } else if (inc.offset < old.offset) {\n                inc.nodesToHandle += old.howMany;\n                old.howMany = 0;\n              }\n            }\n\n            if (old.type == 'attribute') {\n              if (incEnd <= old.offset) {\n                old.offset -= inc.howMany;\n              } else if (inc.offset < old.offset) {\n                var _intersectionLength2 = incEnd - old.offset;\n\n                old.offset = inc.offset;\n                old.howMany -= _intersectionLength2;\n              } else if (inc.offset < oldEnd) {\n                if (incEnd <= oldEnd) {\n                  // On first sight in this case we don't need to split attribute operation into two.\n                  // However the changes set is later converted to actions (see `_generateActionsFromChanges`).\n                  // For that reason, no two changes may intersect.\n                  // So we cannot have an attribute change that \"contains\" remove change.\n                  // Attribute change needs to be split.\n                  var _howMany = old.howMany;\n                  old.howMany = inc.offset - old.offset;\n                  var howManyAfter = _howMany - old.howMany - inc.nodesToHandle; // Add the second part of attribute change to the beginning of processed array so it won't\n                  // be processed again in this loop.\n\n                  changes.unshift({\n                    type: 'attribute',\n                    offset: inc.offset,\n                    howMany: howManyAfter,\n                    count: this._changeCount++\n                  });\n                } else {\n                  old.howMany -= oldEnd - inc.offset;\n                }\n              }\n            }\n          }\n\n          if (inc.type == 'attribute') {\n            // In case of attribute change, `howMany` should be kept same as `nodesToHandle`. It's not an error.\n            if (old.type == 'insert') {\n              if (inc.offset < old.offset && incEnd > old.offset) {\n                if (incEnd > oldEnd) {\n                  // This case is similar to a case described when incoming change was insert and old change was attribute.\n                  // See comment above.\n                  //\n                  // This time incoming change is attribute. We need to split incoming change in this case too.\n                  // However this time, the second part of the attribute change needs to be processed further\n                  // because there might be other changes that it collides with.\n                  var attributePart = {\n                    type: 'attribute',\n                    offset: oldEnd,\n                    howMany: incEnd - oldEnd,\n                    count: this._changeCount++\n                  };\n\n                  this._handleChange(attributePart, changes);\n\n                  changes.push(attributePart);\n                }\n\n                inc.nodesToHandle = old.offset - inc.offset;\n                inc.howMany = inc.nodesToHandle;\n              } else if (inc.offset >= old.offset && inc.offset < oldEnd) {\n                if (incEnd > oldEnd) {\n                  inc.nodesToHandle = incEnd - oldEnd;\n                  inc.offset = oldEnd;\n                } else {\n                  inc.nodesToHandle = 0;\n                }\n              }\n            }\n\n            if (old.type == 'remove') {\n              // This is a case when attribute change \"contains\" remove change.\n              // The attribute change needs to be split into two because changes cannot intersect.\n              if (inc.offset < old.offset && incEnd > old.offset) {\n                var _attributePart = {\n                  type: 'attribute',\n                  offset: old.offset,\n                  howMany: incEnd - old.offset,\n                  count: this._changeCount++\n                };\n\n                this._handleChange(_attributePart, changes);\n\n                changes.push(_attributePart);\n                inc.nodesToHandle = old.offset - inc.offset;\n                inc.howMany = inc.nodesToHandle;\n              }\n            }\n\n            if (old.type == 'attribute') {\n              // There are only two conflicting scenarios possible here:\n              if (inc.offset >= old.offset && incEnd <= oldEnd) {\n                // `old` change includes `inc` change, or they are the same.\n                inc.nodesToHandle = 0;\n                inc.howMany = 0;\n                inc.offset = 0;\n              } else if (inc.offset <= old.offset && incEnd >= oldEnd) {\n                // `inc` change includes `old` change.\n                old.howMany = 0;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n\n      inc.howMany = inc.nodesToHandle;\n      delete inc.nodesToHandle;\n    }\n    /**\n     * Returns an object with a single insert change description.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} parent The element in which the change happened.\n     * @param {Number} offset The offset at which change happened.\n     * @param {String} name The name of the removed element or `'$text'` for a character.\n     * @returns {Object} The diff item.\n     */\n\n  }, {\n    key: \"_getInsertDiff\",\n    value: function _getInsertDiff(parent, offset, name) {\n      return {\n        type: 'insert',\n        position: Position._createAt(parent, offset),\n        name: name,\n        length: 1,\n        changeCount: this._changeCount++\n      };\n    }\n    /**\n     * Returns an object with a single remove change description.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} parent The element in which change happened.\n     * @param {Number} offset The offset at which change happened.\n     * @param {String} name The name of the removed element or `'$text'` for a character.\n     * @returns {Object} The diff item.\n     */\n\n  }, {\n    key: \"_getRemoveDiff\",\n    value: function _getRemoveDiff(parent, offset, name) {\n      return {\n        type: 'remove',\n        position: Position._createAt(parent, offset),\n        name: name,\n        length: 1,\n        changeCount: this._changeCount++\n      };\n    }\n    /**\n     * Returns an array of objects where each one is a single attribute change description.\n     *\n     * @private\n     * @param {module:engine/model/range~Range} range The range where the change happened.\n     * @param {Map} oldAttributes A map, map iterator or compatible object that contains attributes before the change.\n     * @param {Map} newAttributes A map, map iterator or compatible object that contains attributes after the change.\n     * @returns {Array.<Object>} An array containing one or more diff items.\n     */\n\n  }, {\n    key: \"_getAttributesDiff\",\n    value: function _getAttributesDiff(range, oldAttributes, newAttributes) {\n      // Results holder.\n      var diffs = []; // Clone new attributes as we will be performing changes on this object.\n\n      newAttributes = new Map(newAttributes); // Look through old attributes.\n\n      var _iteratorNormalCompletion9 = true;\n      var _didIteratorError9 = false;\n      var _iteratorError9 = undefined;\n\n      try {\n        for (var _iterator9 = oldAttributes[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n          var _step9$value = _slicedToArray(_step9.value, 2),\n              key = _step9$value[0],\n              oldValue = _step9$value[1];\n\n          // Check what is the new value of the attribute (or if it was removed).\n          var newValue = newAttributes.has(key) ? newAttributes.get(key) : null; // If values are different (or attribute was removed)...\n\n          if (newValue !== oldValue) {\n            // Add diff item.\n            diffs.push({\n              type: 'attribute',\n              position: range.start,\n              range: range.clone(),\n              length: 1,\n              attributeKey: key,\n              attributeOldValue: oldValue,\n              attributeNewValue: newValue,\n              changeCount: this._changeCount++\n            });\n          } // Prevent returning two diff items for the same change.\n\n\n          newAttributes.delete(key);\n        } // Look through new attributes that weren't handled above.\n\n      } catch (err) {\n        _didIteratorError9 = true;\n        _iteratorError9 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n            _iterator9.return();\n          }\n        } finally {\n          if (_didIteratorError9) {\n            throw _iteratorError9;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = newAttributes[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var _step10$value = _slicedToArray(_step10.value, 2),\n              key = _step10$value[0],\n              _newValue = _step10$value[1];\n\n          // Each of them is a new attribute. Add diff item.\n          diffs.push({\n            type: 'attribute',\n            position: range.start,\n            range: range.clone(),\n            length: 1,\n            attributeKey: key,\n            attributeOldValue: null,\n            attributeNewValue: _newValue,\n            changeCount: this._changeCount++\n          });\n        }\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n            _iterator10.return();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n\n      return diffs;\n    }\n    /**\n     * Checks whether given element or any of its parents is an element that is buffered as an inserted element.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} element Element to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_isInInsertedElement\",\n    value: function _isInInsertedElement(element) {\n      var parent = element.parent;\n\n      if (!parent) {\n        return false;\n      }\n\n      var changes = this._changesInElement.get(parent);\n\n      var offset = element.startOffset;\n\n      if (changes) {\n        var _iteratorNormalCompletion11 = true;\n        var _didIteratorError11 = false;\n        var _iteratorError11 = undefined;\n\n        try {\n          for (var _iterator11 = changes[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n            var change = _step11.value;\n\n            if (change.type == 'insert' && offset >= change.offset && offset < change.offset + change.howMany) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _didIteratorError11 = true;\n          _iteratorError11 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n              _iterator11.return();\n            }\n          } finally {\n            if (_didIteratorError11) {\n              throw _iteratorError11;\n            }\n          }\n        }\n      }\n\n      return this._isInInsertedElement(parent);\n    }\n    /**\n     * Removes deeply all buffered changes that are registered in elements from range specified by `parent`, `offset`\n     * and `howMany`.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} parent\n     * @param {Number} offset\n     * @param {Number} howMany\n     */\n\n  }, {\n    key: \"_removeAllNestedChanges\",\n    value: function _removeAllNestedChanges(parent, offset, howMany) {\n      var range = new Range(Position._createAt(parent, offset), Position._createAt(parent, offset + howMany));\n      var _iteratorNormalCompletion12 = true;\n      var _didIteratorError12 = false;\n      var _iteratorError12 = undefined;\n\n      try {\n        for (var _iterator12 = range.getItems({\n          shallow: true\n        })[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n          var item = _step12.value;\n\n          if (item.is('element')) {\n            this._elementSnapshots.delete(item);\n\n            this._changesInElement.delete(item);\n\n            this._removeAllNestedChanges(item, 0, item.maxOffset);\n          }\n        }\n      } catch (err) {\n        _didIteratorError12 = true;\n        _iteratorError12 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n            _iterator12.return();\n          }\n        } finally {\n          if (_didIteratorError12) {\n            throw _iteratorError12;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this._changesInElement.size == 0 && this._changedMarkers.size == 0;\n    }\n  }]);\n\n  return Differ;\n}(); // Returns an array that is a copy of passed child list with the exception that text nodes are split to one or more\n// objects, each representing one character and attributes set on that character.\n\n\nexport { Differ as default };\n\nfunction _getChildrenSnapshot(children) {\n  var snapshot = [];\n  var _iteratorNormalCompletion13 = true;\n  var _didIteratorError13 = false;\n  var _iteratorError13 = undefined;\n\n  try {\n    for (var _iterator13 = children[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n      var child = _step13.value;\n\n      if (child.is('text')) {\n        for (var i = 0; i < child.data.length; i++) {\n          snapshot.push({\n            name: '$text',\n            attributes: new Map(child.getAttributes())\n          });\n        }\n      } else {\n        snapshot.push({\n          name: child.name,\n          attributes: new Map(child.getAttributes())\n        });\n      }\n    }\n  } catch (err) {\n    _didIteratorError13 = true;\n    _iteratorError13 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n        _iterator13.return();\n      }\n    } finally {\n      if (_didIteratorError13) {\n        throw _iteratorError13;\n      }\n    }\n  }\n\n  return snapshot;\n} // Generates array of actions for given changes set.\n// It simulates what `diff` function does.\n// Generated actions are:\n// - 'e' for 'equal' - when item at that position did not change,\n// - 'i' for 'insert' - when item at that position was inserted,\n// - 'r' for 'remove' - when item at that position was removed,\n// - 'a' for 'attribute' - when item at that position has it attributes changed.\n//\n// Example (assume that uppercase letters have bold attribute, compare with function code):\n//\n// children before:\tfooBAR\n// children after:\tfoxybAR\n//\n// changes: type: remove, offset: 1, howMany: 1\n//\t\t\ttype: insert, offset: 2, howMany: 2\n//\t\t\ttype: attribute, offset: 4, howMany: 1\n//\n// expected actions: equal (f), remove (o), equal (o), insert (x), insert (y), attribute (b), equal (A), equal (R)\n//\n// steps taken by th script:\n//\n// 1. change = \"type: remove, offset: 1, howMany: 1\"; offset = 0; oldChildrenHandled = 0\n//    1.1 between this change and the beginning is one not-changed node, fill with one equal action, one old child has been handled\n//    1.2 this change removes one node, add one remove action\n//    1.3 change last visited `offset` to 1\n//    1.4 since an old child has been removed, one more old child has been handled\n//    1.5 actions at this point are: equal, remove\n//\n// 2. change = \"type: insert, offset: 2, howMany: 2\"; offset = 1; oldChildrenHandled = 2\n//    2.1 between this change and previous change is one not-changed node, add equal action, another one old children has been handled\n//    2.2 this change inserts two nodes, add two insert actions\n//    2.3 change last visited offset to the end of the inserted range, that is 4\n//    2.4 actions at this point are: equal, remove, equal, insert, insert\n//\n// 3. change = \"type: attribute, offset: 4, howMany: 1\"; offset = 4, oldChildrenHandled = 3\n//    3.1 between this change and previous change are no not-changed nodes\n//    3.2 this change changes one node, add one attribute action\n//    3.3 change last visited `offset` to the end of change range, that is 5\n//    3.4 since an old child has been changed, one more old child has been handled\n//    3.5 actions at this point are: equal, remove, equal, insert, insert, attribute\n//\n// 4. after loop oldChildrenHandled = 4, oldChildrenLength = 6 (fooBAR is 6 characters)\n//    4.1 fill up with two equal actions\n//\n// The result actions are: equal, remove, equal, insert, insert, attribute, equal, equal.\n\n\nfunction _generateActionsFromChanges(oldChildrenLength, changes) {\n  var actions = [];\n  var offset = 0;\n  var oldChildrenHandled = 0; // Go through all buffered changes.\n\n  var _iteratorNormalCompletion14 = true;\n  var _didIteratorError14 = false;\n  var _iteratorError14 = undefined;\n\n  try {\n    for (var _iterator14 = changes[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n      var change = _step14.value;\n\n      // First, fill \"holes\" between changes with \"equal\" actions.\n      if (change.offset > offset) {\n        actions.push.apply(actions, _toConsumableArray('e'.repeat(change.offset - offset).split('')));\n        oldChildrenHandled += change.offset - offset;\n      } // Then, fill up actions accordingly to change type.\n\n\n      if (change.type == 'insert') {\n        actions.push.apply(actions, _toConsumableArray('i'.repeat(change.howMany).split(''))); // The last handled offset is after inserted range.\n\n        offset = change.offset + change.howMany;\n      } else if (change.type == 'remove') {\n        actions.push.apply(actions, _toConsumableArray('r'.repeat(change.howMany).split(''))); // The last handled offset is at the position where the nodes were removed.\n\n        offset = change.offset; // We removed `howMany` old nodes, update `oldChildrenHandled`.\n\n        oldChildrenHandled += change.howMany;\n      } else {\n        actions.push.apply(actions, _toConsumableArray('a'.repeat(change.howMany).split(''))); // The last handled offset is at the position after the changed range.\n\n        offset = change.offset + change.howMany; // We changed `howMany` old nodes, update `oldChildrenHandled`.\n\n        oldChildrenHandled += change.howMany;\n      }\n    } // Fill \"equal\" actions at the end of actions set. Use `oldChildrenHandled` to see how many children\n    // has not been changed / removed at the end of their parent.\n\n  } catch (err) {\n    _didIteratorError14 = true;\n    _iteratorError14 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n        _iterator14.return();\n      }\n    } finally {\n      if (_didIteratorError14) {\n        throw _iteratorError14;\n      }\n    }\n  }\n\n  if (oldChildrenHandled < oldChildrenLength) {\n    actions.push.apply(actions, _toConsumableArray('e'.repeat(oldChildrenLength - oldChildrenHandled).split('')));\n  }\n\n  return actions;\n} // Filter callback for Array.filter that filters out change entries that are in graveyard.\n\n\nfunction _changesInGraveyardFilter(entry) {\n  var posInGy = entry.position && entry.position.root.rootName == '$graveyard';\n  var rangeInGy = entry.range && entry.range.root.rootName == '$graveyard';\n  return !posInGy && !rangeInGy;\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/history\n */\n\n/**\n * `History` keeps the track of all the operations applied to the {@link module:engine/model/document~Document document}.\n */\nvar History =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an empty History instance.\n   */\n  function History() {\n    _classCallCheck(this, History);\n\n    /**\n     * Operations added to the history.\n     *\n     * @protected\n     * @member {Array.<module:engine/model/operation/operation~Operation>} module:engine/model/history~History#_operations\n     */\n    this._operations = [];\n    /**\n     * Holds an information which {@link module:engine/model/operation/operation~Operation operation} undoes which\n     * {@link module:engine/model/operation/operation~Operation operation}.\n     *\n     * Keys of the map are \"undoing operations\", that is operations that undone some other operations. For each key, the\n     * value is an operation that has been undone by the \"undoing operation\".\n     *\n     * @private\n     * @member {Map} module:engine/model/history~History#_undoPairs\n     */\n\n    this._undoPairs = new Map();\n    /**\n     * Holds all undone operations.\n     *\n     * @private\n     * @member {Set.<module:engine/model/operation/operation~Operation>} module:engine/model/history~History#_undoneOperations\n     */\n\n    this._undoneOperations = new Set();\n  }\n  /**\n   * Adds an operation to the history.\n   *\n   * @param {module:engine/model/operation/operation~Operation} operation Operation to add.\n   */\n\n\n  _createClass(History, [{\n    key: \"addOperation\",\n    value: function addOperation(operation) {\n      if (this._operations.includes(operation)) {\n        return;\n      }\n\n      this._operations.push(operation);\n    }\n    /**\n     * Returns operations added to the history.\n     *\n     * @param {Number} [from=0] Base version from which operations should be returned (inclusive). Defaults to `0`, which means\n     * that operations from the first one will be returned.\n     * @param {Number} [to=Number.POSITIVE_INFINITY] Base version up to which operations should be returned (exclusive).\n     * Defaults to `Number.POSITIVE_INFINITY` which means that operations up to the last one will be returned.\n     * @returns {Iterable.<module:engine/model/operation/operation~Operation>} Operations added to the history.\n     */\n\n  }, {\n    key: \"getOperations\",\n    value: function getOperations() {\n      var from = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.POSITIVE_INFINITY;\n\n      if (from < 0) {\n        return [];\n      }\n\n      return this._operations.slice(from, to);\n    }\n    /**\n     * Returns operation from the history that bases on given `baseVersion`.\n     *\n     * @param {Number} baseVersion Base version of the operation to get.\n     * @returns {module:engine/model/operation/operation~Operation|null} Operation with given base version or `null` if\n     * there is no such operation in history.\n     */\n\n  }, {\n    key: \"getOperation\",\n    value: function getOperation(baseVersion) {\n      return this._operations[baseVersion];\n    }\n    /**\n     * Marks in history that one operation is an operation that is undoing the other operation. By marking operation this way,\n     * history is keeping more context information about operations, which helps in operational transformation.\n     *\n     * @param {module:engine/model/operation/operation~Operation} undoneOperation Operation which is undone by `undoingOperation`.\n     * @param {module:engine/model/operation/operation~Operation} undoingOperation Operation which undoes `undoneOperation`.\n     */\n\n  }, {\n    key: \"setOperationAsUndone\",\n    value: function setOperationAsUndone(undoneOperation, undoingOperation) {\n      this._undoPairs.set(undoingOperation, undoneOperation);\n\n      this._undoneOperations.add(undoneOperation);\n    }\n    /**\n     * Checks whether given `operation` is undoing any other operation.\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation Operation to check.\n     * @returns {Boolean} `true` if given `operation` is undoing any other operation, `false` otherwise.\n     */\n\n  }, {\n    key: \"isUndoingOperation\",\n    value: function isUndoingOperation(operation) {\n      return this._undoPairs.has(operation);\n    }\n    /**\n     * Checks whether given `operation` has been undone by any other operation.\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation Operation to check.\n     * @returns {Boolean} `true` if given `operation` has been undone any other operation, `false` otherwise.\n     */\n\n  }, {\n    key: \"isUndoneOperation\",\n    value: function isUndoneOperation(operation) {\n      return this._undoneOperations.has(operation);\n    }\n    /**\n     * For given `undoingOperation`, returns the operation which has been undone by it.\n     *\n     * @param {module:engine/model/operation/operation~Operation} undoingOperation\n     * @returns {module:engine/model/operation/operation~Operation|undefined} Operation that has been undone by given\n     * `undoingOperation` or `undefined` if given `undoingOperation` is not undoing any other operation.\n     */\n\n  }, {\n    key: \"getUndoneOperation\",\n    value: function getUndoneOperation(undoingOperation) {\n      return this._undoPairs.get(undoingOperation);\n    }\n  }]);\n\n  return History;\n}();\n\nexport { History as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * Set of utils to handle unicode characters.\n *\n * @module utils/unicode\n */\n\n/**\n * Checks whether given `character` is a combining mark.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\nexport function isCombiningMark(character) {\n  return !!character && character.length == 1 && /[\\u0300-\\u036f\\u1ab0-\\u1aff\\u1dc0-\\u1dff\\u20d0-\\u20ff\\ufe20-\\ufe2f]/.test(character);\n}\n/**\n * Checks whether given `character` is a high half of surrogate pair.\n *\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\n * consist of high surrogate pair character followed by low surrogate pair character.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\n\nexport function isHighSurrogateHalf(character) {\n  return !!character && character.length == 1 && /[\\ud800-\\udbff]/.test(character);\n}\n/**\n * Checks whether given `character` is a low half of surrogate pair.\n *\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\n * consist of high surrogate pair character followed by low surrogate pair character.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\n\nexport function isLowSurrogateHalf(character) {\n  return !!character && character.length == 1 && /[\\udc00-\\udfff]/.test(character);\n}\n/**\n * Checks whether given offset in a string is inside a surrogate pair (between two surrogate halves).\n *\n * @param {String} string String to check.\n * @param {Number} offset Offset to check.\n * @returns {Boolean}\n */\n\nexport function isInsideSurrogatePair(string, offset) {\n  return isHighSurrogateHalf(string.charAt(offset - 1)) && isLowSurrogateHalf(string.charAt(offset));\n}\n/**\n * Checks whether given offset in a string is between base character and combining mark or between two combining marks.\n *\n * @param {String} string String to check.\n * @param {Number} offset Offset to check.\n * @returns {Boolean}\n */\n\nexport function isInsideCombinedSymbol(string, offset) {\n  return isCombiningMark(string.charAt(offset));\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/document\n */\nimport Differ from './differ';\nimport RootElement from './rootelement';\nimport History from './history';\nimport DocumentSelection from './documentselection';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { isInsideSurrogatePair, isInsideCombinedSymbol } from '@ckeditor/ckeditor5-utils/src/unicode';\nimport { clone } from 'lodash-es';\nvar graveyardName = '$graveyard';\n/**\n * Data model's document. It contains the model's structure, its selection and the history of changes.\n *\n * Read more about working with the model in\n * {@glink framework/guides/architecture/editing-engine#model introduction to the the editing engine's architecture}.\n *\n * Usually, the document contains just one {@link module:engine/model/document~Document#roots root element}, so\n * you can retrieve it by just calling {@link module:engine/model/document~Document#getRoot} without specifying its name:\n *\n *\t\tmodel.document.getRoot(); // -> returns the main root\n *\n * However, the document may contain multiple roots – e.g. when the editor has multiple editable areas\n * (e.g. a title and a body of a message).\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar Document =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an empty document instance with no {@link #roots} (other than\n   * the {@link #graveyard graveyard root}).\n   */\n  function Document(model) {\n    var _this = this;\n\n    _classCallCheck(this, Document);\n\n    /**\n     * The {@link module:engine/model/model~Model model} that the document is a part of.\n     *\n     * @readonly\n     * @type {module:engine/model/model~Model}\n     */\n    this.model = model;\n    /**\n     * The document version. It starts from `0` and every operation increases the version number. It is used to ensure that\n     * operations are applied on a proper document version.\n     *\n     * If the {@link module:engine/model/operation/operation~Operation#baseVersion base version} does not match the document version,\n     * a {@link module:utils/ckeditorerror~CKEditorError model-document-applyOperation-wrong-version} error is thrown.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n    this.version = 0;\n    /**\n     * The document's history.\n     *\n     * @readonly\n     * @type {module:engine/model/history~History}\n     */\n\n    this.history = new History(this);\n    /**\n     * The selection in this document.\n     *\n     * @readonly\n     * @type {module:engine/model/documentselection~DocumentSelection}\n     */\n\n    this.selection = new DocumentSelection(this);\n    /**\n     * A list of roots that are owned and managed by this document. Use {@link #createRoot} and\n     * {@link #getRoot} to manipulate it.\n     *\n     * @readonly\n     * @type {module:utils/collection~Collection}\n     */\n\n    this.roots = new Collection({\n      idProperty: 'rootName'\n    });\n    /**\n     * The model differ object. Its role is to buffer changes done on the model document and then calculate a diff of those changes.\n     *\n     * @readonly\n     * @type {module:engine/model/differ~Differ}\n     */\n\n    this.differ = new Differ(model.markers);\n    /**\n     * Post-fixer callbacks registered to the model document.\n     *\n     * @private\n     * @type {Set.<Function>}\n     */\n\n    this._postFixers = new Set();\n    /**\n     * A boolean indicates whether the selection has changed until\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    this._hasSelectionChangedFromTheLastChangeBlock = false; // Graveyard tree root. Document always have a graveyard root, which stores removed nodes.\n\n    this.createRoot('$root', graveyardName); // First, if the operation is a document operation check if it's base version is correct.\n\n    this.listenTo(model, 'applyOperation', function (evt, args) {\n      var operation = args[0];\n\n      if (operation.isDocumentOperation && operation.baseVersion !== _this.version) {\n        /**\n         * Only operations with matching versions can be applied.\n         *\n         * @error document-applyOperation-wrong-version\n         * @param {module:engine/model/operation/operation~Operation} operation\n         */\n        throw new CKEditorError('model-document-applyOperation-wrong-version: Only operations with matching versions can be applied.', {\n          operation: operation\n        });\n      }\n    }, {\n      priority: 'highest'\n    }); // Then, still before an operation is applied on model, buffer the change in differ.\n\n    this.listenTo(model, 'applyOperation', function (evt, args) {\n      var operation = args[0];\n\n      if (operation.isDocumentOperation) {\n        _this.differ.bufferOperation(operation);\n      }\n    }, {\n      priority: 'high'\n    }); // After the operation is applied, bump document's version and add the operation to the history.\n\n    this.listenTo(model, 'applyOperation', function (evt, args) {\n      var operation = args[0];\n\n      if (operation.isDocumentOperation) {\n        _this.version++;\n\n        _this.history.addOperation(operation);\n      }\n    }, {\n      priority: 'low'\n    }); // Listen to selection changes. If selection changed, mark it.\n\n    this.listenTo(this.selection, 'change', function () {\n      _this._hasSelectionChangedFromTheLastChangeBlock = true;\n    }); // Buffer marker changes.\n    // This is not covered in buffering operations because markers may change outside of them (when they\n    // are modified using `model.markers` collection, not through `MarkerOperation`).\n\n    this.listenTo(model.markers, 'update', function (evt, marker, oldRange, newRange) {\n      // Whenever marker is updated, buffer that change.\n      _this.differ.bufferMarkerChange(marker.name, oldRange, newRange, marker.affectsData);\n\n      if (oldRange === null) {\n        // If this is a new marker, add a listener that will buffer change whenever marker changes.\n        marker.on('change', function (evt, oldRange) {\n          _this.differ.bufferMarkerChange(marker.name, oldRange, marker.getRange(), marker.affectsData);\n        });\n      }\n    });\n  }\n  /**\n   * The graveyard tree root. A document always has a graveyard root that stores removed nodes.\n   *\n   * @readonly\n   * @member {module:engine/model/rootelement~RootElement}\n   */\n\n\n  _createClass(Document, [{\n    key: \"createRoot\",\n\n    /**\n     * Creates a new root.\n     *\n     * @param {String} [elementName='$root'] The element name. Defaults to `'$root'` which also has some basic schema defined\n     * (`$block`s are allowed inside the `$root`). Make sure to define a proper schema if you use a different name.\n     * @param {String} [rootName='main'] A unique root name.\n     * @returns {module:engine/model/rootelement~RootElement} The created root.\n     */\n    value: function createRoot() {\n      var elementName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '$root';\n      var rootName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'main';\n\n      if (this.roots.get(rootName)) {\n        /**\n         * A root with the specified name already exists.\n         *\n         * @error model-document-createRoot-name-exists\n         * @param {module:engine/model/document~Document} doc\n         * @param {String} name\n         */\n        throw new CKEditorError('model-document-createRoot-name-exists: Root with specified name already exists.', {\n          name: rootName\n        });\n      }\n\n      var root = new RootElement(this, elementName, rootName);\n      this.roots.add(root);\n      return root;\n    }\n    /**\n     * Removes all event listeners set by the document instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.selection.destroy();\n      this.stopListening();\n    }\n    /**\n     * Returns a root by its name.\n     *\n     * @param {String} [name='main'] A unique root name.\n     * @returns {module:engine/model/rootelement~RootElement|null} The root registered under a given name or `null` when\n     * there is no root with the given name.\n     */\n\n  }, {\n    key: \"getRoot\",\n    value: function getRoot() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n      return this.roots.get(name);\n    }\n    /**\n     * Returns an array with names of all roots (without the {@link #graveyard}) added to the document.\n     *\n     * @returns {Array.<String>} Roots names.\n     */\n\n  }, {\n    key: \"getRootNames\",\n    value: function getRootNames() {\n      return Array.from(this.roots, function (root) {\n        return root.rootName;\n      }).filter(function (name) {\n        return name != graveyardName;\n      });\n    }\n    /**\n     * Used to register a post-fixer callback. A post-fixer mechanism guarantees that the features\n     * will operate on a correct model state.\n     *\n     * An execution of a feature may lead to an incorrect document tree state. The callbacks are used to fix the document tree after\n     * it has changed. Post-fixers are fired just after all changes from the outermost change block were applied but\n     * before the {@link module:engine/model/document~Document#event:change change event} is fired. If a post-fixer callback made\n     * a change, it should return `true`. When this happens, all post-fixers are fired again to check if something else should\n     * not be fixed in the new document tree state.\n     *\n     * As a parameter, a post-fixer callback receives a {@link module:engine/model/writer~Writer writer} instance connected with the\n     * executed changes block. Thanks to that, all changes done by the callback will be added to the same\n     * {@link module:engine/model/batch~Batch batch} (and undo step) as the original changes. This makes post-fixer changes transparent\n     * for the user.\n     *\n     * An example of a post-fixer is a callback that checks if all the data were removed from the editor. If so, the\n     * callback should add an empty paragraph so that the editor is never empty:\n     *\n     *\t\tdocument.registerPostFixer( writer => {\n     *\t\t\tconst changes = document.differ.getChanges();\n     *\n     *\t\t\t// Check if the changes lead to an empty root in the editor.\n     *\t\t\tfor ( const entry of changes ) {\n     *\t\t\t\tif ( entry.type == 'remove' && entry.position.root.isEmpty ) {\n     *\t\t\t\t\twriter.insertElement( 'paragraph', entry.position.root, 0 );\n     *\n     *\t\t\t\t\t// It is fine to return early, even if multiple roots would need to be fixed.\n     *\t\t\t\t\t// All post-fixers will be fired again, so if there are more empty roots, those will be fixed, too.\n     *\t\t\t\t\treturn true;\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     * @param {Function} postFixer\n     */\n\n  }, {\n    key: \"registerPostFixer\",\n    value: function registerPostFixer(postFixer) {\n      this._postFixers.add(postFixer);\n    }\n    /**\n     * A custom `toJSON()` method to solve child-parent circular dependencies.\n     *\n     * @returns {Object} A clone of this object with the document property changed to a string.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = clone(this); // Due to circular references we need to remove parent reference.\n\n      json.selection = '[engine.model.DocumentSelection]';\n      json.model = '[engine.model.Model]';\n      return json;\n    }\n    /**\n     * Check if there were any changes done on document, and if so, call post-fixers,\n     * fire `change` event for features and conversion and then reset the differ.\n     * Fire `change:data` event when at least one operation or buffered marker changes the data.\n     *\n     * @protected\n     * @fires change\n     * @fires change:data\n     * @param {module:engine/model/writer~Writer} writer The writer on which post-fixers will be called.\n     */\n\n  }, {\n    key: \"_handleChangeBlock\",\n    value: function _handleChangeBlock(writer) {\n      if (this._hasDocumentChangedFromTheLastChangeBlock()) {\n        this._callPostFixers(writer);\n\n        if (this.differ.hasDataChanges()) {\n          this.fire('change:data', writer.batch);\n        } else {\n          this.fire('change', writer.batch);\n        }\n\n        this.differ.reset();\n      }\n\n      this._hasSelectionChangedFromTheLastChangeBlock = false;\n    }\n    /**\n     * Returns whether there is a buffered change or if the selection has changed from the last\n     * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()` block}\n     * or {@link module:engine/model/model~Model#change `change()` block}.\n     *\n     * @protected\n     * @returns {Boolean} Returns `true` if document has changed from the last `change()` or `enqueueChange()` block.\n     */\n\n  }, {\n    key: \"_hasDocumentChangedFromTheLastChangeBlock\",\n    value: function _hasDocumentChangedFromTheLastChangeBlock() {\n      return !this.differ.isEmpty || this._hasSelectionChangedFromTheLastChangeBlock;\n    }\n    /**\n     * Returns the default root for this document which is either the first root that was added to the document using\n     * {@link #createRoot} or the {@link #graveyard graveyard root} if no other roots were created.\n     *\n     * @protected\n     * @returns {module:engine/model/rootelement~RootElement} The default root for this document.\n     */\n\n  }, {\n    key: \"_getDefaultRoot\",\n    value: function _getDefaultRoot() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.roots[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var root = _step.value;\n\n          if (root !== this.graveyard) {\n            return root;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return this.graveyard;\n    }\n    /**\n     * Returns the default range for this selection. The default range is a collapsed range that starts and ends\n     * at the beginning of this selection's document {@link #_getDefaultRoot default root}.\n     *\n     * @protected\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"_getDefaultRange\",\n    value: function _getDefaultRange() {\n      var defaultRoot = this._getDefaultRoot();\n\n      var model = this.model;\n      var schema = model.schema; // Find the first position where the selection can be put.\n\n      var position = model.createPositionFromPath(defaultRoot, [0]);\n      var nearestRange = schema.getNearestSelectionRange(position); // If valid selection range is not found - return range collapsed at the beginning of the root.\n\n      return nearestRange || model.createRange(position);\n    }\n    /**\n     * Checks whether a given {@link module:engine/model/range~Range range} is a valid range for\n     * the {@link #selection document's selection}.\n     *\n     * @private\n     * @param {module:engine/model/range~Range} range A range to check.\n     * @returns {Boolean} `true` if `range` is valid, `false` otherwise.\n     */\n\n  }, {\n    key: \"_validateSelectionRange\",\n    value: function _validateSelectionRange(range) {\n      return validateTextNodePosition(range.start) && validateTextNodePosition(range.end);\n    }\n    /**\n     * Performs post-fixer loops. Executes post-fixer callbacks as long as none of them has done any changes to the model.\n     *\n     * @private\n     * @param {module:engine/model/writer~Writer} writer The writer on which post-fixer callbacks will be called.\n     */\n\n  }, {\n    key: \"_callPostFixers\",\n    value: function _callPostFixers(writer) {\n      var wasFixed = false;\n\n      do {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this._postFixers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var callback = _step2.value;\n            wasFixed = callback(writer);\n\n            if (wasFixed) {\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      } while (wasFixed);\n    }\n    /**\n     * Fired after each {@link module:engine/model/model~Model#enqueueChange `enqueueChange()` block} or the outermost\n     * {@link module:engine/model/model~Model#change `change()` block} was executed and the document was changed\n     * during that block's execution.\n     *\n     * The changes which this event will cover include:\n     *\n     * * document structure changes,\n     * * selection changes,\n     * * marker changes.\n     *\n     * If you want to be notified about all these changes, then simply listen to this event like this:\n     *\n     *\t\tmodel.document.on( 'change', () => {\n     *\t\t\tconsole.log( 'The document has changed!' );\n     *\t\t} );\n     *\n     * If, however, you only want to be notified about the data changes, then use the\n     * {@link module:engine/model/document~Document#event:change:data change:data} event,\n     * which is fired for document structure changes and marker changes (which affects the data).\n     *\n     *\t\tmodel.document.on( 'change:data', () => {\n     *\t\t\tconsole.log( 'The data has changed!' );\n     *\t\t} );\n     *\n     * @event change\n     * @param {module:engine/model/batch~Batch} batch The batch that was used in the executed changes block.\n     */\n\n    /**\n     * It is a narrower version of the {@link #event:change} event. It is fired for changes which\n     * affect the editor data. This is:\n     *\n     * * document structure changes,\n     * * marker changes (which affects the data).\n     *\n     * If you want to be notified about the data changes, then listen to this event:\n     *\n     *\t\tmodel.document.on( 'change:data', () => {\n     *\t\t\tconsole.log( 'The data has changed!' );\n     *\t\t} );\n     *\n     * If you would like to listen to all document changes, then check out the\n     * {@link module:engine/model/document~Document#event:change change} event.\n     *\n     * @event change:data\n     * @param {module:engine/model/batch~Batch} batch The batch that was used in the executed changes block.\n     */\n\n  }, {\n    key: \"graveyard\",\n    get: function get() {\n      return this.getRoot(graveyardName);\n    }\n  }]);\n\n  return Document;\n}();\n\nexport { Document as default };\nmix(Document, EmitterMixin); // Checks whether given range boundary position is valid for document selection, meaning that is not between\n// unicode surrogate pairs or base character and combining marks.\n\nfunction validateTextNodePosition(rangeBoundary) {\n  var textNode = rangeBoundary.textNode;\n\n  if (textNode) {\n    var data = textNode.data;\n    var offset = rangeBoundary.offset - textNode.startOffset;\n    return !isInsideSurrogatePair(data, offset) && !isInsideCombinedSymbol(data, offset);\n  }\n\n  return true;\n}","import _regeneratorRuntime from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/markercollection\n */\nimport LiveRange from './liverange';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * The collection of all {@link module:engine/model/markercollection~Marker markers} attached to the document.\n * It lets you {@link module:engine/model/markercollection~MarkerCollection#get get} markers or track them using\n * {@link module:engine/model/markercollection~MarkerCollection#event:update} event.\n *\n * To create, change or remove makers use {@link module:engine/model/writer~Writer model writers'} methods:\n * {@link module:engine/model/writer~Writer#addMarker} or {@link module:engine/model/writer~Writer#removeMarker}. Since\n * the writer is the only proper way to change the data model it is not possible to change markers directly using this\n * collection. All markers created by the writer will be automatically added to this collection.\n *\n * By default there is one marker collection available as {@link module:engine/model/model~Model#markers model property}.\n *\n * @see module:engine/model/markercollection~Marker\n */\n\nvar MarkerCollection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a markers collection.\n   */\n  function MarkerCollection() {\n    _classCallCheck(this, MarkerCollection);\n\n    /**\n     * Stores {@link ~Marker markers} added to the collection.\n     *\n     * @private\n     * @member {Map} #_markers\n     */\n    this._markers = new Map();\n  }\n  /**\n   * Iterable interface.\n   *\n   * Iterates over all {@link ~Marker markers} added to the collection.\n   *\n   * @returns {Iterable}\n   */\n\n\n  _createClass(MarkerCollection, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this._markers.values();\n    }\n    /**\n     * Checks if marker with given `markerName` is in the collection.\n     *\n     * @param {String} markerName Marker name.\n     * @returns {Boolean} `true` if marker with given `markerName` is in the collection, `false` otherwise.\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(markerName) {\n      return this._markers.has(markerName);\n    }\n    /**\n     * Returns {@link ~Marker marker} with given `markerName`.\n     *\n     * @param {String} markerName Name of marker to get.\n     * @returns {module:engine/model/markercollection~Marker|null} Marker with given name or `null` if such marker was\n     * not added to the collection.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(markerName) {\n      return this._markers.get(markerName) || null;\n    }\n    /**\n     * Creates and adds a {@link ~Marker marker} to the `MarkerCollection` with given name on given\n     * {@link module:engine/model/range~Range range}.\n     *\n     * If `MarkerCollection` already had a marker with given name (or {@link ~Marker marker} was passed), the marker in\n     * collection is updated and {@link module:engine/model/markercollection~MarkerCollection#event:update} event is fired\n     * but only if there was a change (marker range or {@link module:engine/model/markercollection~Marker#managedUsingOperations}\n     * flag has changed.\n     *\n     * @protected\n     * @fires module:engine/model/markercollection~MarkerCollection#event:update\n     * @param {String|module:engine/model/markercollection~Marker} markerOrName Name of marker to set or marker instance to update.\n     * @param {module:engine/model/range~Range} range Marker range.\n     * @param {Boolean} [managedUsingOperations=false] Specifies whether the marker is managed using operations.\n     * @param {Boolean} [affectsData=false] Specifies whether the marker affects the data produced by the data pipeline\n     * (is persisted in the editor's data).\n     * @returns {module:engine/model/markercollection~Marker} `Marker` instance which was added or updated.\n     */\n\n  }, {\n    key: \"_set\",\n    value: function _set(markerOrName, range) {\n      var managedUsingOperations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var affectsData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\n      var oldMarker = this._markers.get(markerName);\n\n      if (oldMarker) {\n        var oldRange = oldMarker.getRange();\n        var hasChanged = false;\n\n        if (!oldRange.isEqual(range)) {\n          oldMarker._attachLiveRange(LiveRange.fromRange(range));\n\n          hasChanged = true;\n        }\n\n        if (managedUsingOperations != oldMarker.managedUsingOperations) {\n          oldMarker._managedUsingOperations = managedUsingOperations;\n          hasChanged = true;\n        }\n\n        if (typeof affectsData === 'boolean' && affectsData != oldMarker.affectsData) {\n          oldMarker._affectsData = affectsData;\n          hasChanged = true;\n        }\n\n        if (hasChanged) {\n          this.fire('update:' + markerName, oldMarker, oldRange, range);\n        }\n\n        return oldMarker;\n      }\n\n      var liveRange = LiveRange.fromRange(range);\n      var marker = new Marker(markerName, liveRange, managedUsingOperations, affectsData);\n\n      this._markers.set(markerName, marker);\n\n      this.fire('update:' + markerName, marker, null, range);\n      return marker;\n    }\n    /**\n     * Removes given {@link ~Marker marker} or a marker with given name from the `MarkerCollection`.\n     *\n     * @protected\n     * @fires module:engine/model/markercollection~MarkerCollection#event:update\n     * @param {String} markerOrName Marker or name of a marker to remove.\n     * @returns {Boolean} `true` if marker was found and removed, `false` otherwise.\n     */\n\n  }, {\n    key: \"_remove\",\n    value: function _remove(markerOrName) {\n      var markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\n      var oldMarker = this._markers.get(markerName);\n\n      if (oldMarker) {\n        this._markers.delete(markerName);\n\n        this.fire('update:' + markerName, oldMarker, oldMarker.getRange(), null);\n\n        this._destroyMarker(oldMarker);\n\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Fires an {@link module:engine/model/markercollection~MarkerCollection#event:update} event for the given {@link ~Marker marker}\n     * but does not change the marker. Useful to force {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher downcast\n     * conversion} for the marker.\n     *\n     * @protected\n     * @fires module:engine/model/markercollection~MarkerCollection#event:update\n     * @param {String} markerOrName Marker or name of a marker to refresh.\n     */\n\n  }, {\n    key: \"_refresh\",\n    value: function _refresh(markerOrName) {\n      var markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\n      var marker = this._markers.get(markerName);\n\n      if (!marker) {\n        throw new CKEditorError('markercollection-refresh-marker-not-exists: Marker with provided name does not exists.');\n      }\n\n      var range = marker.getRange();\n      this.fire('update:' + markerName, marker, range, range, marker.managedUsingOperations, marker.affectsData);\n    }\n    /**\n     * Returns iterator that iterates over all markers, which ranges contain given {@link module:engine/model/position~Position position}.\n     *\n     * @param {module:engine/model/position~Position} position\n     * @returns {Iterable.<module:engine/model/markercollection~Marker>}\n     */\n\n  }, {\n    key: \"getMarkersAtPosition\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getMarkersAtPosition(position) {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, marker;\n\n      return _regeneratorRuntime.wrap(function getMarkersAtPosition$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context.prev = 3;\n              _iterator = this[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context.next = 13;\n                break;\n              }\n\n              marker = _step.value;\n\n              if (!marker.getRange().containsPosition(position)) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 10;\n              return marker;\n\n            case 10:\n              _iteratorNormalCompletion = true;\n              _context.next = 5;\n              break;\n\n            case 13:\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 19:\n              _context.prev = 19;\n              _context.prev = 20;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 22:\n              _context.prev = 22;\n\n              if (!_didIteratorError) {\n                _context.next = 25;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 25:\n              return _context.finish(22);\n\n            case 26:\n              return _context.finish(19);\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getMarkersAtPosition, this, [[3, 15, 19, 27], [20,, 22, 26]]);\n    })\n    /**\n     * Returns iterator that iterates over all markers, which intersects with given {@link module:engine/model/range~Range range}.\n     *\n     * @param {module:engine/model/range~Range} range\n     * @returns {Iterable.<module:engine/model/markercollection~Marker>}\n     */\n\n  }, {\n    key: \"getMarkersIntersectingRange\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getMarkersIntersectingRange(range) {\n      var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, marker;\n\n      return _regeneratorRuntime.wrap(function getMarkersIntersectingRange$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _iteratorError2 = undefined;\n              _context2.prev = 3;\n              _iterator2 = this[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                _context2.next = 13;\n                break;\n              }\n\n              marker = _step2.value;\n\n              if (!(marker.getRange().getIntersection(range) !== null)) {\n                _context2.next = 10;\n                break;\n              }\n\n              _context2.next = 10;\n              return marker;\n\n            case 10:\n              _iteratorNormalCompletion2 = true;\n              _context2.next = 5;\n              break;\n\n            case 13:\n              _context2.next = 19;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](3);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context2.t0;\n\n            case 19:\n              _context2.prev = 19;\n              _context2.prev = 20;\n\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n\n            case 22:\n              _context2.prev = 22;\n\n              if (!_didIteratorError2) {\n                _context2.next = 25;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 25:\n              return _context2.finish(22);\n\n            case 26:\n              return _context2.finish(19);\n\n            case 27:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, getMarkersIntersectingRange, this, [[3, 15, 19, 27], [20,, 22, 26]]);\n    })\n    /**\n     * Destroys marker collection and all markers inside it.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this._markers.values()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var marker = _step3.value;\n\n          this._destroyMarker(marker);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this._markers = null;\n      this.stopListening();\n    }\n    /**\n     * Iterates over all markers that starts with given `prefix`.\n     *\n     *\t\tconst markerFooA = markersCollection.set( 'foo:a', rangeFooA );\n     *\t\tconst markerFooB = markersCollection.set( 'foo:b', rangeFooB );\n     *\t\tconst markerBarA = markersCollection.set( 'bar:a', rangeBarA );\n     *\t\tconst markerFooBarA = markersCollection.set( 'foobar:a', rangeFooBarA );\n     *\t\tArray.from( markersCollection.getMarkersGroup( 'foo' ) ); // [ markerFooA, markerFooB ]\n     *\t\tArray.from( markersCollection.getMarkersGroup( 'a' ) ); // []\n     *\n     * @param prefix\n     * @returns {Iterable.<module:engine/model/markercollection~Marker>}\n     */\n\n  }, {\n    key: \"getMarkersGroup\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function getMarkersGroup(prefix) {\n      var _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, marker;\n\n      return _regeneratorRuntime.wrap(function getMarkersGroup$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _iteratorNormalCompletion4 = true;\n              _didIteratorError4 = false;\n              _iteratorError4 = undefined;\n              _context3.prev = 3;\n              _iterator4 = this._markers.values()[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {\n                _context3.next = 13;\n                break;\n              }\n\n              marker = _step4.value;\n\n              if (!marker.name.startsWith(prefix + ':')) {\n                _context3.next = 10;\n                break;\n              }\n\n              _context3.next = 10;\n              return marker;\n\n            case 10:\n              _iteratorNormalCompletion4 = true;\n              _context3.next = 5;\n              break;\n\n            case 13:\n              _context3.next = 19;\n              break;\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](3);\n              _didIteratorError4 = true;\n              _iteratorError4 = _context3.t0;\n\n            case 19:\n              _context3.prev = 19;\n              _context3.prev = 20;\n\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n\n            case 22:\n              _context3.prev = 22;\n\n              if (!_didIteratorError4) {\n                _context3.next = 25;\n                break;\n              }\n\n              throw _iteratorError4;\n\n            case 25:\n              return _context3.finish(22);\n\n            case 26:\n              return _context3.finish(19);\n\n            case 27:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, getMarkersGroup, this, [[3, 15, 19, 27], [20,, 22, 26]]);\n    })\n    /**\n     * Destroys the marker.\n     *\n     * @private\n     * @param {module:engine/model/markercollection~Marker} marker Marker to destroy.\n     */\n\n  }, {\n    key: \"_destroyMarker\",\n    value: function _destroyMarker(marker) {\n      marker.stopListening();\n\n      marker._detachLiveRange();\n    }\n    /**\n     * Fired whenever marker is added, updated or removed from `MarkerCollection`.\n     *\n     * @event update\n     * @param {module:engine/model/markercollection~Marker} marker Updated Marker.\n     * @param {module:engine/model/range~Range|null} oldRange Marker range before the update. When is not defined it\n     * means that marker is just added.\n     * @param {module:engine/model/range~Range|null} newRange Marker range after update. When is not defined it\n     * means that marker is just removed.\n     */\n\n  }]);\n\n  return MarkerCollection;\n}();\n\nexport { MarkerCollection as default };\nmix(MarkerCollection, EmitterMixin);\n/**\n * `Marker` is a continuous parts of model (like a range), is named and represent some kind of information about marked\n * part of model document. In contrary to {@link module:engine/model/node~Node nodes}, which are building blocks of\n * model document tree, markers are not stored directly in document tree but in\n * {@link module:engine/model/model~Model#markers model markers' collection}. Still, they are document data, by giving\n * additional meaning to the part of a model document between marker start and marker end.\n *\n * In this sense, markers are similar to adding and converting attributes on nodes. The difference is that attribute is\n * connected with a given node (e.g. a character is bold no matter if it gets moved or content around it changes).\n * Markers on the other hand are continuous ranges and are characterized by their start and end position. This means that\n * any character in the marker is marked by the marker. For example, if a character is moved outside of marker it stops being\n * \"special\" and the marker is shrunk. Similarly, when a character is moved into the marker from other place in document\n * model, it starts being \"special\" and the marker is enlarged.\n *\n * Another upside of markers is that finding marked part of document is fast and easy. Using attributes to mark some nodes\n * and then trying to find that part of document would require traversing whole document tree. Marker gives instant access\n * to the range which it is marking at the moment.\n *\n * Markers are built from a name and a range.\n *\n * Range of the marker is updated automatically when document changes, using\n * {@link module:engine/model/liverange~LiveRange live range} mechanism.\n *\n * Name is used to group and identify markers. Names have to be unique, but markers can be grouped by\n * using common prefixes, separated with `:`, for example: `user:john` or `search:3`. That's useful in term of creating\n * namespaces for custom elements (e.g. comments, highlights). You can use this prefixes in\n * {@link module:engine/model/markercollection~MarkerCollection#event:update} listeners to listen on changes in a group of markers.\n * For instance: `model.markers.on( 'set:user', callback );` will be called whenever any `user:*` markers changes.\n *\n * There are two types of markers.\n *\n * 1. Markers managed directly, without using operations. They are added directly by {@link module:engine/model/writer~Writer}\n * to the {@link module:engine/model/markercollection~MarkerCollection} without any additional mechanism. They can be used\n * as bookmarks or visual markers. They are great for showing results of the find, or select link when the focus is in the input.\n *\n * 1. Markers managed using operations. These markers are also stored in {@link module:engine/model/markercollection~MarkerCollection}\n * but changes in these markers is managed the same way all other changes in the model structure - using operations.\n * Therefore, they are handled in the undo stack and synchronized between clients if the collaboration plugin is enabled.\n * This type of markers is useful for solutions like spell checking or comments.\n *\n * Both type of them should be added / updated by {@link module:engine/model/writer~Writer#addMarker}\n * and removed by {@link module:engine/model/writer~Writer#removeMarker} methods.\n *\n *\t\tmodel.change( ( writer ) => {\n * \t\t\tconst marker = writer.addMarker( name, { range, usingOperation: true } );\n *\n * \t\t\t// ...\n *\n * \t\t\twriter.removeMarker( marker );\n *\t\t} );\n *\n * See {@link module:engine/model/writer~Writer} to find more examples.\n *\n * Since markers need to track change in the document, for efficiency reasons, it is best to create and keep as little\n * markers as possible and remove them as soon as they are not needed anymore.\n *\n * Markers can be downcasted and upcasted.\n *\n * Markers downcast happens on {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker} and\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:removeMarker} events.\n * Use {@link module:engine/conversion/downcasthelpers downcast converters} or attach a custom converter to mentioned events.\n * For {@link module:engine/controller/datacontroller~DataController data pipeline}, marker should be downcasted to an element.\n * Then, it can be upcasted back to a marker. Again, use {@link module:engine/conversion/upcasthelpers upcast converters} or\n * attach a custom converter to {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element}.\n *\n * `Marker` instances are created and destroyed only by {@link ~MarkerCollection MarkerCollection}.\n */\n\nvar Marker =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a marker instance.\n   *\n   * @param {String} name Marker name.\n   * @param {module:engine/model/liverange~LiveRange} liveRange Range marked by the marker.\n   * @param {Boolean} managedUsingOperations Specifies whether the marker is managed using operations.\n   * @param {Boolean} affectsData Specifies whether the marker affects the data produced by the data pipeline\n   * (is persisted in the editor's data).\n   */\n  function Marker(name, liveRange, managedUsingOperations, affectsData) {\n    _classCallCheck(this, Marker);\n\n    /**\n     * Marker's name.\n     *\n     * @readonly\n     * @type {String}\n     */\n    this.name = name;\n    /**\n     * Range marked by the marker.\n     *\n     * @protected\n     * @member {module:engine/model/liverange~LiveRange}\n     */\n\n    this._liveRange = this._attachLiveRange(liveRange);\n    /**\n     * Flag indicates if the marker is managed using operations or not.\n     *\n     * @private\n     * @member {Boolean}\n     */\n\n    this._managedUsingOperations = managedUsingOperations;\n    /**\n     * Specifies whether the marker affects the data produced by the data pipeline\n     * (is persisted in the editor's data).\n     *\n     * @private\n     * @member {Boolean}\n     */\n\n    this._affectsData = affectsData;\n  }\n  /**\n   * A value indicating if the marker is managed using operations.\n   * See {@link ~Marker marker class description} to learn more about marker types.\n   * See {@link module:engine/model/writer~Writer#addMarker}.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(Marker, [{\n    key: \"getStart\",\n\n    /**\n     * Returns current marker start position.\n     *\n     * @returns {module:engine/model/position~Position}\n     */\n    value: function getStart() {\n      if (!this._liveRange) {\n        throw new CKEditorError('marker-destroyed: Cannot use a destroyed marker instance.');\n      }\n\n      return this._liveRange.start.clone();\n    }\n    /**\n     * Returns current marker end position.\n     *\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"getEnd\",\n    value: function getEnd() {\n      if (!this._liveRange) {\n        throw new CKEditorError('marker-destroyed: Cannot use a destroyed marker instance.');\n      }\n\n      return this._liveRange.end.clone();\n    }\n    /**\n     * Returns a range that represents the current state of the marker.\n     *\n     * Keep in mind that returned value is a {@link module:engine/model/range~Range Range}, not a\n     * {@link module:engine/model/liverange~LiveRange LiveRange}. This means that it is up-to-date and relevant only\n     * until next model document change. Do not store values returned by this method. Instead, store {@link ~Marker#name}\n     * and get `Marker` instance from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection} every\n     * time there is a need to read marker properties. This will guarantee that the marker has not been removed and\n     * that it's data is up-to-date.\n     *\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      if (!this._liveRange) {\n        throw new CKEditorError('marker-destroyed: Cannot use a destroyed marker instance.');\n      }\n\n      return this._liveRange.toRange();\n    }\n    /**\n     * Binds new live range to the marker and detach the old one if is attached.\n     *\n     * @protected\n     * @param {module:engine/model/liverange~LiveRange} liveRange Live range to attach\n     * @returns {module:engine/model/liverange~LiveRange} Attached live range.\n     */\n\n  }, {\n    key: \"_attachLiveRange\",\n    value: function _attachLiveRange(liveRange) {\n      if (this._liveRange) {\n        this._detachLiveRange();\n      } // Delegating does not work with namespaces. Alternatively, we could delegate all events (using `*`).\n\n\n      liveRange.delegate('change:range').to(this);\n      liveRange.delegate('change:content').to(this);\n      this._liveRange = liveRange;\n      return liveRange;\n    }\n    /**\n     * Unbinds and destroys currently attached live range.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_detachLiveRange\",\n    value: function _detachLiveRange() {\n      this._liveRange.stopDelegating('change:range', this);\n\n      this._liveRange.stopDelegating('change:content', this);\n\n      this._liveRange.detach();\n\n      this._liveRange = null;\n    }\n    /**\n     * Fired whenever {@link ~Marker#_liveRange marker range} is changed due to changes on {@link module:engine/model/document~Document}.\n     * This is a delegated {@link module:engine/model/liverange~LiveRange#event:change:range LiveRange change:range event}.\n     *\n     * When marker is removed from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection},\n     * all event listeners listening to it should be removed. It is best to do it on\n     * {@link module:engine/model/markercollection~MarkerCollection#event:update MarkerCollection update event}.\n     *\n     * @see module:engine/model/liverange~LiveRange#event:change:range\n     * @event change:range\n     * @param {module:engine/model/range~Range} oldRange\n     * @param {Object} data\n     */\n\n    /**\n     * Fired whenever change on {@link module:engine/model/document~Document} is done inside {@link ~Marker#_liveRange marker range}.\n     * This is a delegated {@link module:engine/model/liverange~LiveRange#event:change:content LiveRange change:content event}.\n     *\n     * When marker is removed from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection},\n     * all event listeners listening to it should be removed. It is best to do it on\n     * {@link module:engine/model/markercollection~MarkerCollection#event:update MarkerCollection update event}.\n     *\n     * @see module:engine/model/liverange~LiveRange#event:change:content\n     * @event change:content\n     * @param {module:engine/model/range~Range} oldRange\n     * @param {Object} data\n     */\n\n  }, {\n    key: \"managedUsingOperations\",\n    get: function get() {\n      if (!this._liveRange) {\n        throw new CKEditorError('marker-destroyed: Cannot use a destroyed marker instance.');\n      }\n\n      return this._managedUsingOperations;\n    }\n    /**\n     * A value indicating if the marker changes the data.\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"affectsData\",\n    get: function get() {\n      if (!this._liveRange) {\n        throw new CKEditorError('marker-destroyed: Cannot use a destroyed marker instance.');\n      }\n\n      return this._affectsData;\n    }\n  }]);\n\n  return Marker;\n}();\n\nmix(Marker, EmitterMixin);\n/**\n * Cannot use a {@link module:engine/model/markercollection~MarkerCollection#destroy destroyed marker} instance.\n *\n * @error marker-destroyed\n */","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/liveposition\n */\nimport Position from './position';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * `LivePosition` is a type of {@link module:engine/model/position~Position Position}\n * that updates itself as {@link module:engine/model/document~Document document}\n * is changed through operations. It may be used as a bookmark.\n *\n * **Note:** Contrary to {@link module:engine/model/position~Position}, `LivePosition` works only in roots that are\n * {@link module:engine/model/rootelement~RootElement}.\n * If {@link module:engine/model/documentfragment~DocumentFragment} is passed, error will be thrown.\n *\n * **Note:** Be very careful when dealing with `LivePosition`. Each `LivePosition` instance bind events that might\n * have to be unbound.\n * Use {@link module:engine/model/liveposition~LivePosition#detach} whenever you don't need `LivePosition` anymore.\n *\n * @extends module:engine/model/position~Position\n */\n\nvar LivePosition =\n/*#__PURE__*/\nfunction (_Position) {\n  _inherits(LivePosition, _Position);\n\n  /**\n   * Creates a live position.\n   *\n   * @see module:engine/model/position~Position\n   * @param {module:engine/model/rootelement~RootElement} root\n   * @param {Array.<Number>} path\n   * @param {module:engine/model/position~PositionStickiness} [stickiness]\n   */\n  function LivePosition(root, path) {\n    var _this;\n\n    var stickiness = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'toNone';\n\n    _classCallCheck(this, LivePosition);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LivePosition).call(this, root, path, stickiness));\n\n    if (!_this.root.is('rootElement')) {\n      /**\n       * LivePosition's root has to be an instance of RootElement.\n       *\n       * @error liveposition-root-not-rootelement\n       */\n      throw new CKEditorError('model-liveposition-root-not-rootelement: LivePosition\\'s root has to be an instance of RootElement.');\n    }\n\n    bindWithDocument.call(_assertThisInitialized(_this));\n    return _this;\n  }\n  /**\n   * Unbinds all events previously bound by `LivePosition`. Use it whenever you don't need `LivePosition` instance\n   * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\n   * referring to it).\n   */\n\n\n  _createClass(LivePosition, [{\n    key: \"detach\",\n    value: function detach() {\n      this.stopListening();\n    }\n    /**\n     * Creates a {@link module:engine/model/position~Position position instance}, which is equal to this live position.\n     *\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"toPosition\",\n    value: function toPosition() {\n      return new Position(this.root, this.path.slice(), this.stickiness);\n    }\n    /**\n     * Creates a `LivePosition` instance that is equal to position.\n     *\n     * @param {module:engine/model/position~Position} position\n     * @param {module:engine/model/position~PositionStickiness} [stickiness]\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }], [{\n    key: \"fromPosition\",\n    value: function fromPosition(position, stickiness) {\n      return new this(position.root, position.path.slice(), stickiness ? stickiness : position.stickiness);\n    }\n    /**\n     * @static\n     * @protected\n     * @method module:engine/model/liveposition~LivePosition._createAfter\n     * @see module:engine/model/position~Position._createAfter\n     * @param {module:engine/model/node~Node} node\n     * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone']\n     * @returns {module:engine/model/liveposition~LivePosition}\n     */\n\n    /**\n     * @static\n     * @protected\n     * @method module:engine/model/liveposition~LivePosition._createBefore\n     * @see module:engine/model/position~Position._createBefore\n     * @param {module:engine/model/node~Node} node\n     * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone']\n     * @returns {module:engine/model/liveposition~LivePosition}\n     */\n\n    /**\n     * @static\n     * @protected\n     * @method module:engine/model/liveposition~LivePosition._createAt\n     * @see module:engine/model/position~Position._createAt\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset]\n     * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone']\n     * @returns {module:engine/model/liveposition~LivePosition}\n     */\n\n    /**\n     * Fired when `LivePosition` instance is changed due to changes on {@link module:engine/model/document~Document}.\n     *\n     * @event module:engine/model/liveposition~LivePosition#change\n     * @param {module:engine/model/position~Position} oldPosition Position equal to this live position before it got changed.\n     */\n\n  }]);\n\n  return LivePosition;\n}(Position); // Binds this `LivePosition` to the {@link module:engine/model/document~Document document} that owns\n// this position's {@link module:engine/model/position~Position#root root}.\n//\n// @private\n\n\nexport { LivePosition as default };\n\nfunction bindWithDocument() {\n  var _this2 = this;\n\n  this.listenTo(this.root.document.model, 'applyOperation', function (event, args) {\n    var operation = args[0];\n\n    if (!operation.isDocumentOperation) {\n      return;\n    }\n\n    transform.call(_this2, operation);\n  }, {\n    priority: 'low'\n  });\n} // Updates this position accordingly to the updates applied to the model. Bases on change events.\n//\n// @private\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\n\n\nfunction transform(operation) {\n  var result = this.getTransformedByOperation(operation);\n\n  if (!this.isEqual(result)) {\n    var oldPosition = this.toPosition();\n    this.path = result.path;\n    this.root = result.root;\n    this.fire('change', oldPosition);\n  }\n}\n\nmix(LivePosition, EmitterMixin);","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/utils/insertcontent\n */\nimport Position from '../position';\nimport LivePosition from '../liveposition';\nimport Element from '../element';\nimport Range from '../range';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport DocumentSelection from '../documentselection';\nimport Selection from '../selection';\n/**\n * Inserts content into the editor (specified selection) as one would expect the paste\n * functionality to work.\n *\n * If an instance of {@link module:engine/model/selection~Selection} is passed as `selectable` it will be modified\n * to the insertion selection (equal to a range to be selected after insertion).\n *\n * If `selectable` is not passed, the content will be inserted using the current selection of the model document.\n *\n * **Note:** Use {@link module:engine/model/model~Model#insertContent} instead of this function.\n * This function is only exposed to be reusable in algorithms which change the {@link module:engine/model/model~Model#insertContent}\n * method's behavior.\n *\n * @param {module:engine/model/model~Model} model The model in context of which the insertion\n * should be performed.\n * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\n * @param {module:engine/model/selection~Selectable} [selectable=model.document.selection]\n * Selection into which the content should be inserted.\n * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n * @returns {module:engine/model/range~Range} Range which contains all the performed changes. This is a range that, if removed,\n * would return the model to the state before the insertion. If no changes were preformed by `insertContent`, returns a range collapsed\n * at the insertion position.\n */\n\nexport default function insertContent(model, content, selectable, placeOrOffset) {\n  return model.change(function (writer) {\n    var selection;\n\n    if (!selectable) {\n      selection = model.document.selection;\n    } else if (selectable instanceof Selection || selectable instanceof DocumentSelection) {\n      selection = selectable;\n    } else {\n      selection = writer.createSelection(selectable, placeOrOffset);\n    }\n\n    var insertionPosition = selection.getFirstPosition();\n\n    if (!selection.isCollapsed) {\n      model.deleteContent(selection, {\n        doNotAutoparagraph: true\n      });\n    }\n\n    var insertion = new Insertion(model, writer, insertionPosition);\n    var nodesToInsert;\n\n    if (content.is('documentFragment')) {\n      nodesToInsert = content.getChildren();\n    } else {\n      nodesToInsert = [content];\n    }\n\n    insertion.handleNodes(nodesToInsert, {\n      // The set of children being inserted is the only set in this context\n      // so it's the first and last (it's a hack ;)).\n      isFirst: true,\n      isLast: true\n    });\n    var newRange = insertion.getSelectionRange();\n    /* istanbul ignore else */\n\n    if (newRange) {\n      if (selection instanceof DocumentSelection) {\n        writer.setSelection(newRange);\n      } else {\n        selection.setTo(newRange);\n      }\n    } else {\n      // We are not testing else because it's a safe check for unpredictable edge cases:\n      // an insertion without proper range to select.\n\n      /**\n       * Cannot determine a proper selection range after insertion.\n       *\n       * @warning insertcontent-no-range\n       */\n      log.warn('insertcontent-no-range: Cannot determine a proper selection range after insertion.');\n    }\n\n    var affectedRange = insertion.getAffectedRange() || model.createRange(insertionPosition);\n    insertion.destroy();\n    return affectedRange;\n  });\n}\n/**\n * Utility class for performing content insertion.\n *\n * @private\n */\n\nvar Insertion =\n/*#__PURE__*/\nfunction () {\n  function Insertion(model, writer, position) {\n    _classCallCheck(this, Insertion);\n\n    /**\n     * The model in context of which the insertion should be performed.\n     *\n     * @member {module:engine/model~Model} #model\n     */\n    this.model = model;\n    /**\n     * Batch to which operations will be added.\n     *\n     * @member {module:engine/controller/writer~Batch} #writer\n     */\n\n    this.writer = writer;\n    /**\n     * The position at which (or near which) the next node will be inserted.\n     *\n     * @member {module:engine/model/position~Position} #position\n     */\n\n    this.position = position;\n    /**\n     * Elements with which the inserted elements can be merged.\n     *\n     *\t\t<p>x^</p><p>y</p> + <p>z</p> (can merge to <p>x</p>)\n     *\t\t<p>x</p><p>^y</p> + <p>z</p> (can merge to <p>y</p>)\n     *\t\t<p>x^y</p> + <p>z</p> (can merge to <p>xy</p> which will be split during the action,\n     *\t\t\t\t\t\t\t\tso both its pieces will be added to this set)\n     *\n     *\n     * @member {Set} #canMergeWith\n     */\n\n    this.canMergeWith = new Set([this.position.parent]);\n    /**\n     * Schema of the model.\n     *\n     * @member {module:engine/model/schema~Schema} #schema\n     */\n\n    this.schema = model.schema;\n    this._filterAttributesOf = [];\n    /**\n     * Beginning of the affected range. See {@link module:engine/model/utils/insertcontent~Insertion#getAffectedRange}.\n     *\n     * @private\n     * @member {module:engine/model/liveposition~LivePosition|null} #_affectedStart\n     */\n\n    this._affectedStart = null;\n    /**\n     * End of the affected range. See {@link module:engine/model/utils/insertcontent~Insertion#getAffectedRange}.\n     *\n     * @private\n     * @member {module:engine/model/liveposition~LivePosition|null} #_affectedEnd\n     */\n\n    this._affectedEnd = null;\n  }\n  /**\n   * Handles insertion of a set of nodes.\n   *\n   * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes to insert.\n   * @param {Object} parentContext Context in which parent of these nodes was supposed to be inserted.\n   * If the parent context is passed it means that the parent element was stripped (was not allowed).\n   */\n\n\n  _createClass(Insertion, [{\n    key: \"handleNodes\",\n    value: function handleNodes(nodes, parentContext) {\n      nodes = Array.from(nodes);\n\n      for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n\n        this._handleNode(node, {\n          isFirst: i === 0 && parentContext.isFirst,\n          isLast: i === nodes.length - 1 && parentContext.isLast\n        });\n      } // TMP this will become a post-fixer.\n\n\n      this.schema.removeDisallowedAttributes(this._filterAttributesOf, this.writer);\n      this._filterAttributesOf = [];\n    }\n    /**\n     * Returns range to be selected after insertion.\n     * Returns `null` if there is no valid range to select after insertion.\n     *\n     * @returns {module:engine/model/range~Range|null}\n     */\n\n  }, {\n    key: \"getSelectionRange\",\n    value: function getSelectionRange() {\n      if (this.nodeToSelect) {\n        return Range._createOn(this.nodeToSelect);\n      }\n\n      return this.model.schema.getNearestSelectionRange(this.position);\n    }\n    /**\n     * Returns a range which contains all the performed changes. This is a range that, if removed, would return the model to the state\n     * before the insertion. Returns `null` if no changes were done.\n     *\n     * @returns {module:engine/model/range~Range|null}\n     */\n\n  }, {\n    key: \"getAffectedRange\",\n    value: function getAffectedRange() {\n      if (!this._affectedStart) {\n        return null;\n      }\n\n      return new Range(this._affectedStart, this._affectedEnd);\n    }\n    /**\n     * Destroys `Insertion` instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this._affectedStart) {\n        this._affectedStart.detach();\n      }\n\n      if (this._affectedEnd) {\n        this._affectedEnd.detach();\n      }\n    }\n    /**\n     * Handles insertion of a single node.\n     *\n     * @private\n     * @param {module:engine/model/node~Node} node\n     * @param {Object} context\n     * @param {Boolean} context.isFirst Whether the given node is the first one in the content to be inserted.\n     * @param {Boolean} context.isLast Whether the given node is the last one in the content to be inserted.\n     */\n\n  }, {\n    key: \"_handleNode\",\n    value: function _handleNode(node, context) {\n      // Let's handle object in a special way.\n      // * They should never be merged with other elements.\n      // * If they are not allowed in any of the selection ancestors, they could be either autoparagraphed or totally removed.\n      if (this.schema.isObject(node)) {\n        this._handleObject(node, context);\n\n        return;\n      } // Try to find a place for the given node.\n      // Split the position.parent's branch up to a point where the node can be inserted.\n      // If it isn't allowed in the whole branch, then of course don't split anything.\n\n\n      var isAllowed = this._checkAndSplitToAllowedPosition(node, context);\n\n      if (!isAllowed) {\n        this._handleDisallowedNode(node, context);\n\n        return;\n      }\n\n      this._insert(node); // After the node was inserted we may try to merge it with its siblings.\n      // This should happen only if it was the first and/or last of the nodes (so only with boundary nodes)\n      // and only if the selection was in those elements initially.\n      //\n      // E.g.:\n      // <p>x^</p> + <p>y</p> => <p>x</p><p>y</p> => <p>xy[]</p>\n      // and:\n      // <p>x^y</p> + <p>z</p> => <p>x</p>^<p>y</p> + <p>z</p> => <p>x</p><p>z</p><p>y</p> => <p>xz[]y</p>\n      // but:\n      // <p>x</p><p>^</p><p>z</p> + <p>y</p> => <p>x</p><p>y</p><p>z</p> (no merging)\n      // <p>x</p>[<img>]<p>z</p> + <p>y</p> => <p>x</p><p>y</p><p>z</p> (no merging, note: after running deleteContents\n      //\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t it's exactly the same case as above)\n\n\n      this._mergeSiblingsOf(node, context);\n    }\n    /**\n     * @private\n     * @param {module:engine/model/element~Element} node The object element.\n     * @param {Object} context\n     */\n\n  }, {\n    key: \"_handleObject\",\n    value: function _handleObject(node, context) {\n      // Try finding it a place in the tree.\n      if (this._checkAndSplitToAllowedPosition(node)) {\n        this._insert(node);\n      } // Try autoparagraphing.\n      else {\n          this._tryAutoparagraphing(node, context);\n        }\n    }\n    /**\n     * @private\n     * @param {module:engine/model/node~Node} node The disallowed node which needs to be handled.\n     * @param {Object} context\n     */\n\n  }, {\n    key: \"_handleDisallowedNode\",\n    value: function _handleDisallowedNode(node, context) {\n      // If the node is an element, try inserting its children (strip the parent).\n      if (node.is('element')) {\n        this.handleNodes(node.getChildren(), context);\n      } // If text is not allowed, try autoparagraphing it.\n      else {\n          this._tryAutoparagraphing(node, context);\n        }\n    }\n    /**\n     * @private\n     * @param {module:engine/model/node~Node} node The node to insert.\n     */\n\n  }, {\n    key: \"_insert\",\n    value: function _insert(node) {\n      /* istanbul ignore if */\n      if (!this.schema.checkChild(this.position, node)) {\n        // Algorithm's correctness check. We should never end up here but it's good to know that we did.\n        // Note that it would often be a silent issue if we insert node in a place where it's not allowed.\n        log.error('insertcontent-wrong-position: The node cannot be inserted on the given position.', {\n          node: node,\n          position: this.position\n        });\n        return;\n      }\n\n      var livePos = LivePosition.fromPosition(this.position, 'toNext');\n\n      this._setAffectedBoundaries(this.position);\n\n      this.writer.insert(node, this.position);\n      this.position = livePos.toPosition();\n      livePos.detach(); // The last inserted object should be selected because we can't put a collapsed selection after it.\n\n      if (this.schema.isObject(node) && !this.schema.checkChild(this.position, '$text')) {\n        this.nodeToSelect = node;\n      } else {\n        this.nodeToSelect = null;\n      }\n\n      this._filterAttributesOf.push(node);\n    }\n    /**\n     * Sets `_affectedStart` and `_affectedEnd` to the given `position`. Should be used before a change is done during insertion process to\n     * mark the affected range.\n     *\n     * This method is used before inserting a node or splitting a parent node. `_affectedStart` and `_affectedEnd` are also changed\n     * during merging, but the logic there is more complicated so it is left out of this function.\n     *\n     * @private\n     * @param {module:engine/model/position~Position} position\n     */\n\n  }, {\n    key: \"_setAffectedBoundaries\",\n    value: function _setAffectedBoundaries(position) {\n      // Set affected boundaries stickiness so that those position will \"expand\" when something is inserted in between them:\n      // <paragraph>Foo][bar</paragraph> -> <paragraph>Foo]xx[bar</paragraph>\n      // This is why it cannot be a range but two separate positions.\n      if (!this._affectedStart) {\n        this._affectedStart = LivePosition.fromPosition(position, 'toPrevious');\n      } // If `_affectedEnd` is before the new boundary position, expand `_affectedEnd`. This can happen if first inserted node was\n      // inserted into the parent but the next node is moved-out of that parent:\n      // (1) <paragraph>Foo][</paragraph> -> <paragraph>Foo]xx[</paragraph>\n      // (2) <paragraph>Foo]xx[</paragraph> -> <paragraph>Foo]xx</paragraph><widget></widget>[\n\n\n      if (!this._affectedEnd || this._affectedEnd.isBefore(position)) {\n        if (this._affectedEnd) {\n          this._affectedEnd.detach();\n        }\n\n        this._affectedEnd = LivePosition.fromPosition(position, 'toNext');\n      }\n    }\n    /**\n     * @private\n     * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n     * @param {Object} context\n     */\n\n  }, {\n    key: \"_mergeSiblingsOf\",\n    value: function _mergeSiblingsOf(node, context) {\n      if (!(node instanceof Element)) {\n        return;\n      }\n\n      var mergeLeft = this._canMergeLeft(node, context);\n\n      var mergeRight = this._canMergeRight(node, context);\n\n      var mergePosLeft = LivePosition._createBefore(node);\n\n      mergePosLeft.stickiness = 'toNext';\n\n      var mergePosRight = LivePosition._createAfter(node);\n\n      mergePosRight.stickiness = 'toNext';\n\n      if (mergeLeft) {\n        var livePosition = LivePosition.fromPosition(this.position);\n        livePosition.stickiness = 'toNext'; // If `_affectedStart` is sames as merge position, it means that the element \"marked\" by `_affectedStart` is going to be\n        // removed and its contents will be moved. This won't transform `LivePosition` so `_affectedStart` needs to be moved\n        // by hand to properly reflect affected range. (Due to `_affectedStart` and `_affectedEnd` stickiness, the \"range\" is\n        // shown as `][`).\n        //\n        // Example - insert `<paragraph>Abc</paragraph><paragraph>Xyz</paragraph>` at the end of `<paragraph>Foo^</paragraph>`:\n        //\n        // <paragraph>Foo</paragraph><paragraph>Bar</paragraph>   -->\n        // <paragraph>Foo</paragraph>]<paragraph>Abc</paragraph><paragraph>Xyz</paragraph>[<paragraph>Bar</paragraph>   -->\n        // <paragraph>Foo]Abc</paragraph><paragraph>Xyz</paragraph>[<paragraph>Bar</paragraph>\n        //\n        // Note, that if we are here then something must have been inserted, so `_affectedStart` and `_affectedEnd` have to be set.\n\n        if (this._affectedStart.isEqual(mergePosLeft)) {\n          this._affectedStart.detach();\n\n          this._affectedStart = LivePosition._createAt(mergePosLeft.nodeBefore, 'end', 'toPrevious');\n        }\n\n        this.writer.merge(mergePosLeft); // If only one element (the merged one) is in the \"affected range\", also move the affected range end appropriately.\n        //\n        // Example - insert `<paragraph>Abc</paragraph>` at the of `<paragraph>Foo^</paragraph>`:\n        //\n        // <paragraph>Foo</paragraph><paragraph>Bar</paragraph>   -->\n        // <paragraph>Foo</paragraph>]<paragraph>Abc</paragraph>[<paragraph>Bar</paragraph>   -->\n        // <paragraph>Foo]Abc</paragraph>[<paragraph>Bar</paragraph>   -->\n        // <paragraph>Foo]Abc[</paragraph><paragraph>Bar</paragraph>\n\n        if (mergePosLeft.isEqual(this._affectedEnd) && context.isLast) {\n          this._affectedEnd.detach();\n\n          this._affectedEnd = LivePosition._createAt(mergePosLeft.nodeBefore, 'end', 'toNext');\n        }\n\n        this.position = livePosition.toPosition();\n        livePosition.detach();\n      }\n\n      if (mergeRight) {\n        /* istanbul ignore if */\n        if (!this.position.isEqual(mergePosRight)) {\n          // Algorithm's correctness check. We should never end up here but it's good to know that we did.\n          // At this point the insertion position should be after the node we'll merge. If it isn't,\n          // it should need to be secured as in the left merge case.\n          log.error('insertcontent-wrong-position-on-merge: The insertion position should equal the merge position');\n        } // Move the position to the previous node, so it isn't moved to the graveyard on merge.\n        // <p>x</p>[]<p>y</p> => <p>x[]</p><p>y</p>\n\n\n        this.position = Position._createAt(mergePosRight.nodeBefore, 'end'); // OK:  <p>xx[]</p> + <p>yy</p> => <p>xx[]yy</p> (when sticks to previous)\n        // NOK: <p>xx[]</p> + <p>yy</p> => <p>xxyy[]</p> (when sticks to next)\n\n        var _livePosition = LivePosition.fromPosition(this.position, 'toPrevious'); // See comment above on moving `_affectedStart`.\n\n\n        if (this._affectedEnd.isEqual(mergePosRight)) {\n          this._affectedEnd.detach();\n\n          this._affectedEnd = LivePosition._createAt(mergePosRight.nodeBefore, 'end', 'toNext');\n        }\n\n        this.writer.merge(mergePosRight); // See comment above on moving `_affectedStart`.\n\n        if (mergePosRight.getShiftedBy(-1).isEqual(this._affectedStart) && context.isFirst) {\n          this._affectedStart.detach();\n\n          this._affectedStart = LivePosition._createAt(mergePosRight.nodeBefore, 0, 'toPrevious');\n        }\n\n        this.position = _livePosition.toPosition();\n\n        _livePosition.detach();\n      }\n\n      if (mergeLeft || mergeRight) {\n        // After merge elements that were marked by _insert() to be filtered might be gone so\n        // we need to mark the new container.\n        this._filterAttributesOf.push(this.position.parent);\n      }\n\n      mergePosLeft.detach();\n      mergePosRight.detach();\n    }\n    /**\n     * Checks whether specified node can be merged with previous sibling element.\n     *\n     * @private\n     * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n     * @param {Object} context\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_canMergeLeft\",\n    value: function _canMergeLeft(node, context) {\n      var previousSibling = node.previousSibling;\n      return context.isFirst && previousSibling instanceof Element && this.canMergeWith.has(previousSibling) && this.model.schema.checkMerge(previousSibling, node);\n    }\n    /**\n     * Checks whether specified node can be merged with next sibling element.\n     *\n     * @private\n     * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n     * @param {Object} context\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_canMergeRight\",\n    value: function _canMergeRight(node, context) {\n      var nextSibling = node.nextSibling;\n      return context.isLast && nextSibling instanceof Element && this.canMergeWith.has(nextSibling) && this.model.schema.checkMerge(node, nextSibling);\n    }\n    /**\n     * Tries wrapping the node in a new paragraph and inserting it this way.\n     *\n     * @private\n     * @param {module:engine/model/node~Node} node The node which needs to be autoparagraphed.\n     * @param {Object} context\n     */\n\n  }, {\n    key: \"_tryAutoparagraphing\",\n    value: function _tryAutoparagraphing(node, context) {\n      var paragraph = this.writer.createElement('paragraph'); // Do not autoparagraph if the paragraph won't be allowed there,\n      // cause that would lead to an infinite loop. The paragraph would be rejected in\n      // the next _handleNode() call and we'd be here again.\n\n      if (this._getAllowedIn(paragraph, this.position.parent) && this.schema.checkChild(paragraph, node)) {\n        paragraph._appendChild(node);\n\n        this._handleNode(paragraph, context);\n      }\n    }\n    /**\n     * @private\n     * @param {module:engine/model/node~Node} node\n     * @returns {Boolean} Whether an allowed position was found.\n     * `false` is returned if the node isn't allowed at any position up in the tree, `true` if was.\n     */\n\n  }, {\n    key: \"_checkAndSplitToAllowedPosition\",\n    value: function _checkAndSplitToAllowedPosition(node) {\n      var allowedIn = this._getAllowedIn(node, this.position.parent);\n\n      if (!allowedIn) {\n        return false;\n      }\n\n      while (allowedIn != this.position.parent) {\n        // If a parent which we'd need to leave is a limit element, break.\n        if (this.schema.isLimit(this.position.parent)) {\n          return false;\n        }\n\n        if (this.position.isAtStart) {\n          // If insertion position is at the beginning of the parent, move it out instead of splitting.\n          // <p>^Foo</p> -> ^<p>Foo</p>\n          var parent = this.position.parent;\n          this.position = this.writer.createPositionBefore(parent); // Special case – parent is empty (<p>^</p>).\n          // We can remove the element after moving insertion position out of it.\n\n          if (parent.isEmpty) {\n            this.writer.remove(parent);\n          }\n        } else if (this.position.isAtEnd) {\n          // If insertion position is at the end of the parent, move it out instead of splitting.\n          // <p>Foo^</p> -> <p>Foo</p>^\n          this.position = this.writer.createPositionAfter(this.position.parent);\n        } else {\n          var tempPos = this.writer.createPositionAfter(this.position.parent);\n\n          this._setAffectedBoundaries(this.position);\n\n          this.writer.split(this.position);\n          this.position = tempPos;\n          this.canMergeWith.add(this.position.nodeAfter);\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Gets the element in which the given node is allowed. It checks the passed element and all its ancestors.\n     *\n     * @private\n     * @param {module:engine/model/node~Node} node The node to check.\n     * @param {module:engine/model/element~Element} element The element in which the node's correctness should be checked.\n     * @returns {module:engine/model/element~Element|null}\n     */\n\n  }, {\n    key: \"_getAllowedIn\",\n    value: function _getAllowedIn(node, element) {\n      if (this.schema.checkChild(element, node)) {\n        return element;\n      }\n\n      if (element.parent) {\n        return this._getAllowedIn(node, element.parent);\n      }\n\n      return null;\n    }\n  }]);\n\n  return Insertion;\n}();","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/utils/deletecontent\n */\nimport LivePosition from '../liveposition';\nimport Range from '../range';\nimport DocumentSelection from '../documentselection';\n/**\n * Deletes content of the selection and merge siblings. The resulting selection is always collapsed.\n *\n * **Note:** Use {@link module:engine/model/model~Model#deleteContent} instead of this function.\n * This function is only exposed to be reusable in algorithms\n * which change the {@link module:engine/model/model~Model#deleteContent}\n * method's behavior.\n *\n * @param {module:engine/model/model~Model} model The model in context of which the insertion\n * should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * Selection of which the content should be deleted.\n * @param {module:engine/model/batch~Batch} batch Batch to which the operations will be added.\n * @param {Object} [options]\n * @param {Boolean} [options.leaveUnmerged=false] Whether to merge elements after removing the content of the selection.\n *\n * For example `<heading>x[x</heading><paragraph>y]y</paragraph>` will become:\n *\n * * `<heading>x^y</heading>` with the option disabled (`leaveUnmerged == false`)\n * * `<heading>x^</heading><paragraph>y</paragraph>` with enabled (`leaveUnmerged == true`).\n *\n * Note: {@link module:engine/model/schema~Schema#isObject object} and {@link module:engine/model/schema~Schema#isLimit limit}\n * elements will not be merged.\n *\n * @param {Boolean} [options.doNotResetEntireContent=false] Whether to skip replacing the entire content with a\n * paragraph when the entire content was selected.\n *\n * For example `<heading>[x</heading><paragraph>y]</paragraph>` will become:\n *\n * * `<paragraph>^</paragraph>` with the option disabled (`doNotResetEntireContent == false`)\n * * `<heading>^</heading>` with enabled (`doNotResetEntireContent == true`).\n *\n * @param {Boolean} [options.doNotAutoparagraph=false] Whether to create a paragraph if after content deletion selection is moved\n * to a place where text cannot be inserted.\n *\n * For example `<paragraph>x</paragraph>[<image src=\"foo.jpg\"></image>]` will become:\n *\n * * `<paragraph>x</paragraph><paragraph>[]</paragraph>` with the option disabled (`doNotAutoparagraph == false`)\n * * `<paragraph>x[]</paragraph>` with the option enabled (`doNotAutoparagraph == true`).\n *\n * **Note:** if there is no valid position for the selection, the paragraph will always be created:\n *\n * `[<image src=\"foo.jpg\"></image>]` -> `<paragraph>[]</paragraph>`.\n */\n\nexport default function deleteContent(model, selection) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (selection.isCollapsed) {\n    return;\n  }\n\n  var selRange = selection.getFirstRange(); // If the selection is already removed, don't do anything.\n\n  if (selRange.root.rootName == '$graveyard') {\n    return;\n  }\n\n  var schema = model.schema;\n  model.change(function (writer) {\n    // 1. Replace the entire content with paragraph.\n    // See: https://github.com/ckeditor/ckeditor5-engine/issues/1012#issuecomment-315017594.\n    if (!options.doNotResetEntireContent && shouldEntireContentBeReplacedWithParagraph(schema, selection)) {\n      replaceEntireContentWithParagraph(writer, selection, schema);\n      return;\n    }\n\n    var startPos = selRange.start;\n    var endPos = LivePosition.fromPosition(selRange.end, 'toNext'); // 2. Remove the content if there is any.\n\n    if (!selRange.start.isTouching(selRange.end)) {\n      writer.remove(selRange);\n    } // 3. Merge elements in the right branch to the elements in the left branch.\n    // The only reasonable (in terms of data and selection correctness) case in which we need to do that is:\n    //\n    // <heading type=1>Fo[</heading><paragraph>]ar</paragraph> => <heading type=1>Fo^ar</heading>\n    //\n    // However, the algorithm supports also merging deeper structures (up to the depth of the shallower branch),\n    // as it's hard to imagine what should actually be the default behavior. Usually, specific features will\n    // want to override that behavior anyway.\n\n\n    if (!options.leaveUnmerged) {\n      mergeBranches(writer, startPos, endPos); // TMP this will be replaced with a postfixer.\n      // We need to check and strip disallowed attributes in all nested nodes because after merge\n      // some attributes could end up in a path where are disallowed.\n      //\n      // e.g. bold is disallowed for <H1>\n      // <h1>Fo{o</h1><p>b}a<b>r</b><p> -> <h1>Fo{}a<b>r</b><h1> -> <h1>Fo{}ar<h1>.\n\n      schema.removeDisallowedAttributes(startPos.parent.getChildren(), writer);\n    }\n\n    collapseSelectionAt(writer, selection, startPos); // 4. Add a paragraph to set selection in it.\n    // Check if a text is allowed in the new container. If not, try to create a new paragraph (if it's allowed here).\n\n    if (shouldAutoparagraph(schema, startPos)) {\n      // If auto-paragraphing is off, find the closest valid selection range and collapse the selection there.\n      // If there is no valid selection range, create paragraph anyway and set selection there.\n      var validSelectionRange = schema.getNearestSelectionRange(startPos);\n\n      if (options.doNotAutoparagraph && validSelectionRange) {\n        collapseSelectionAt(writer, selection, validSelectionRange);\n      } else {\n        insertParagraph(writer, startPos, selection);\n      }\n    }\n\n    endPos.detach();\n  });\n} // This function is a result of reaching the Ballmer's peak for just the right amount of time.\n// Even I had troubles documenting it after a while and after reading it again I couldn't believe that it really works.\n\nfunction mergeBranches(writer, startPos, endPos) {\n  var startParent = startPos.parent;\n  var endParent = endPos.parent; // If both positions ended up in the same parent, then there's nothing more to merge:\n  // <$root><p>x[]</p><p>{}y</p></$root> => <$root><p>xy</p>[]{}</$root>\n\n  if (startParent == endParent) {\n    return;\n  } // If one of the positions is a limit element, then there's nothing to merge because we don't want to cross the limit boundaries.\n\n\n  if (writer.model.schema.isLimit(startParent) || writer.model.schema.isLimit(endParent)) {\n    return;\n  } // Check if operations we'll need to do won't need to cross object or limit boundaries.\n  // E.g., we can't merge endParent into startParent in this case:\n  // <limit><startParent>x[]</startParent></limit><endParent>{}</endParent>\n\n\n  if (!checkCanBeMerged(startPos, endPos, writer.model.schema)) {\n    return;\n  } // Remember next positions to merge. For example:\n  // <a><b>x[]</b></a><c><d>{}y</d></c>\n  // will become:\n  // <a><b>xy</b>[]</a><c>{}</c>\n\n\n  startPos = writer.createPositionAfter(startParent);\n  endPos = writer.createPositionBefore(endParent);\n\n  if (!endPos.isEqual(startPos)) {\n    // In this case, before we merge, we need to move `endParent` to the `startPos`:\n    // <a><b>x[]</b></a><c><d>{}y</d></c>\n    // becomes:\n    // <a><b>x</b>[]<d>y</d></a><c>{}</c>\n    writer.insert(endParent, startPos);\n  } // Merge two siblings:\n  // <a>x</a>[]<b>y</b> -> <a>xy</a> (the usual case)\n  // <a><b>x</b>[]<d>y</d></a><c></c> -> <a><b>xy</b>[]</a><c></c> (this is the \"move parent\" case shown above)\n\n\n  writer.merge(startPos); // Remove empty end ancestors:\n  // <a>fo[o</a><b><a><c>bar]</c></a></b>\n  // becomes:\n  // <a>fo[]</a><b><a>{}</a></b>\n  // So we can remove <a> and <b>.\n\n  while (endPos.parent.isEmpty) {\n    var parentToRemove = endPos.parent;\n    endPos = writer.createPositionBefore(parentToRemove);\n    writer.remove(parentToRemove);\n  } // Continue merging next level.\n\n\n  mergeBranches(writer, startPos, endPos);\n}\n\nfunction shouldAutoparagraph(schema, position) {\n  var isTextAllowed = schema.checkChild(position, '$text');\n  var isParagraphAllowed = schema.checkChild(position, 'paragraph');\n  return !isTextAllowed && isParagraphAllowed;\n} // Check if parents of two positions can be merged by checking if there are no limit/object\n// boundaries between those two positions.\n//\n// E.g. in <bQ><p>x[]</p></bQ><widget><caption>{}</caption></widget>\n// we'll check <p>, <bQ>, <widget> and <caption>.\n// Usually, widget and caption are marked as objects/limits in the schema, so in this case merging will be blocked.\n\n\nfunction checkCanBeMerged(leftPos, rightPos, schema) {\n  var rangeToCheck = new Range(leftPos, rightPos);\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = rangeToCheck.getWalker()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      if (schema.isLimit(value.item)) {\n        return false;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction insertParagraph(writer, position, selection) {\n  var paragraph = writer.createElement('paragraph');\n  writer.insert(paragraph, position);\n  collapseSelectionAt(writer, selection, writer.createPositionAt(paragraph, 0));\n}\n\nfunction replaceEntireContentWithParagraph(writer, selection) {\n  var limitElement = writer.model.schema.getLimitElement(selection);\n  writer.remove(writer.createRangeIn(limitElement));\n  insertParagraph(writer, writer.createPositionAt(limitElement, 0), selection);\n} // We want to replace the entire content with a paragraph when:\n// * the entire content is selected,\n// * selection contains at least two elements,\n// * whether the paragraph is allowed in schema in the common ancestor.\n\n\nfunction shouldEntireContentBeReplacedWithParagraph(schema, selection) {\n  var limitElement = schema.getLimitElement(selection);\n\n  if (!selection.containsEntireContent(limitElement)) {\n    return false;\n  }\n\n  var range = selection.getFirstRange();\n\n  if (range.start.parent == range.end.parent) {\n    return false;\n  }\n\n  return schema.checkChild(limitElement, 'paragraph');\n} // Helper function that sets the selection. Depending whether given `selection` is a document selection or not,\n// uses a different method to set it.\n\n\nfunction collapseSelectionAt(writer, selection, positionOrRange) {\n  if (selection instanceof DocumentSelection) {\n    writer.setSelection(positionOrRange);\n  } else {\n    selection.setTo(positionOrRange);\n  }\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/utils/modifyselection\n */\nimport Position from '../position';\nimport TreeWalker from '../treewalker';\nimport Range from '../range';\nimport { isInsideSurrogatePair, isInsideCombinedSymbol } from '@ckeditor/ckeditor5-utils/src/unicode';\nimport DocumentSelection from '../documentselection';\nvar wordBoundaryCharacters = ' ,.?!:;\"-()';\n/**\n * Modifies the selection. Currently, the supported modifications are:\n *\n * * Extending. The selection focus is moved in the specified `options.direction` with a step specified in `options.unit`.\n * Possible values for `unit` are:\n *  * `'character'` (default) - moves selection by one user-perceived character. In most cases this means moving by one\n *  character in `String` sense. However, unicode also defines \"combing marks\". These are special symbols, that combines\n *  with a symbol before it (\"base character\") to create one user-perceived character. For example, `q̣̇` is a normal\n *  letter `q` with two \"combining marks\": upper dot (`Ux0307`) and lower dot (`Ux0323`). For most actions, i.e. extending\n *  selection by one position, it is correct to include both \"base character\" and all of it's \"combining marks\". That is\n *  why `'character'` value is most natural and common method of modifying selection.\n *  * `'codePoint'` - moves selection by one unicode code point. In contrary to, `'character'` unit, this will insert\n *  selection between \"base character\" and \"combining mark\", because \"combining marks\" have their own unicode code points.\n *  However, for technical reasons, unicode code points with values above `UxFFFF` are represented in native `String` by\n *  two characters, called \"surrogate pairs\". Halves of \"surrogate pairs\" have a meaning only when placed next to each other.\n *  For example `𨭎` is represented in `String` by `\\uD862\\uDF4E`. Both `\\uD862` and `\\uDF4E` do not have any meaning\n *  outside the pair (are rendered as ? when alone). Position between them would be incorrect. In this case, selection\n *  extension will include whole \"surrogate pair\".\n *  * `'word'` - moves selection by a whole word.\n *\n * **Note:** if you extend a forward selection in a backward direction you will in fact shrink it.\n *\n * **Note:** Use {@link module:engine/model/model~Model#modifySelection} instead of this function.\n * This function is only exposed to be reusable in algorithms\n * which change the {@link module:engine/model/model~Model#modifySelection}\n * method's behavior.\n *\n * @param {module:engine/model/model~Model} model The model in context of which\n * the selection modification should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * The selection to modify.\n * @param {Object} [options]\n * @param {'forward'|'backward'} [options.direction='forward'] The direction in which the selection should be modified.\n * @param {'character'|'codePoint'|'word'} [options.unit='character'] The unit by which selection should be modified.\n */\n\nexport default function modifySelection(model, selection) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var schema = model.schema;\n  var isForward = options.direction != 'backward';\n  var unit = options.unit ? options.unit : 'character';\n  var focus = selection.focus;\n  var walker = new TreeWalker({\n    boundaries: getSearchRange(focus, isForward),\n    singleCharacters: true,\n    direction: isForward ? 'forward' : 'backward'\n  });\n  var data = {\n    walker: walker,\n    schema: schema,\n    isForward: isForward,\n    unit: unit\n  };\n  var next;\n\n  var _loop = function _loop() {\n    if (next.done) {\n      return {\n        v: void 0\n      };\n    }\n\n    var position = tryExtendingTo(data, next.value);\n\n    if (position) {\n      if (selection instanceof DocumentSelection) {\n        model.change(function (writer) {\n          writer.setSelectionFocus(position);\n        });\n      } else {\n        selection.setFocus(position);\n      }\n\n      return {\n        v: void 0\n      };\n    }\n  };\n\n  while (next = walker.next()) {\n    var _ret = _loop();\n\n    if (typeof _ret === \"object\") return _ret.v;\n  }\n} // Checks whether the selection can be extended to the the walker's next value (next position).\n// @param {{ walker, unit, isForward, schema }} data\n// @param {module:engine/view/treewalker~TreeWalkerValue} value\n\nfunction tryExtendingTo(data, value) {\n  // If found text, we can certainly put the focus in it. Let's just find a correct position\n  // based on the unit.\n  if (value.type == 'text') {\n    if (data.unit === 'word') {\n      return getCorrectWordBreakPosition(data.walker, data.isForward);\n    }\n\n    return getCorrectPosition(data.walker, data.unit, data.isForward);\n  } // Entering an element.\n\n\n  if (value.type == (data.isForward ? 'elementStart' : 'elementEnd')) {\n    // If it's an object, we can select it now.\n    if (data.schema.isObject(value.item)) {\n      return Position._createAt(value.item, data.isForward ? 'after' : 'before');\n    } // If text allowed on this position, extend to this place.\n\n\n    if (data.schema.checkChild(value.nextPosition, '$text')) {\n      return value.nextPosition;\n    }\n  } // Leaving an element.\n  else {\n      // If leaving a limit element, stop.\n      if (data.schema.isLimit(value.item)) {\n        // NOTE: Fast-forward the walker until the end.\n        data.walker.skip(function () {\n          return true;\n        });\n        return;\n      } // If text allowed on this position, extend to this place.\n\n\n      if (data.schema.checkChild(value.nextPosition, '$text')) {\n        return value.nextPosition;\n      }\n    }\n} // Finds a correct position by walking in a text node and checking whether selection can be extended to given position\n// or should be extended further.\n//\n// @param {module:engine/model/treewalker~TreeWalker} walker\n// @param {String} unit The unit by which selection should be modified.\n\n\nfunction getCorrectPosition(walker, unit) {\n  var textNode = walker.position.textNode;\n\n  if (textNode) {\n    var data = textNode.data;\n    var offset = walker.position.offset - textNode.startOffset;\n\n    while (isInsideSurrogatePair(data, offset) || unit == 'character' && isInsideCombinedSymbol(data, offset)) {\n      walker.next();\n      offset = walker.position.offset - textNode.startOffset;\n    }\n  }\n\n  return walker.position;\n} // Finds a correct position of a word break by walking in a text node and checking whether selection can be extended to given position\n// or should be extended further.\n//\n// @param {module:engine/model/treewalker~TreeWalker} walker\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\n\n\nfunction getCorrectWordBreakPosition(walker, isForward) {\n  var textNode = walker.position.textNode;\n\n  if (textNode) {\n    var offset = walker.position.offset - textNode.startOffset;\n\n    while (!isAtWordBoundary(textNode.data, offset, isForward) && !isAtNodeBoundary(textNode, offset, isForward)) {\n      walker.next(); // Check of adjacent text nodes with different attributes (like BOLD).\n      // Example          : 'foofoo []bar<$text bold=\"true\">bar</$text> bazbaz'\n      // should expand to : 'foofoo [bar<$text bold=\"true\">bar</$text>] bazbaz'.\n\n      var nextNode = isForward ? walker.position.nodeAfter : walker.position.nodeBefore; // Scan only text nodes. Ignore inline elements (like `<softBreak>`).\n\n      if (nextNode && nextNode.is('text')) {\n        // Check boundary char of an adjacent text node.\n        var boundaryChar = nextNode.data.charAt(isForward ? 0 : nextNode.data.length - 1); // Go to the next node if the character at the boundary of that node belongs to the same word.\n\n        if (!wordBoundaryCharacters.includes(boundaryChar)) {\n          // If adjacent text node belongs to the same word go to it & reset values.\n          walker.next();\n          textNode = walker.position.textNode;\n        }\n      }\n\n      offset = walker.position.offset - textNode.startOffset;\n    }\n  }\n\n  return walker.position;\n}\n\nfunction getSearchRange(start, isForward) {\n  var root = start.root;\n\n  var searchEnd = Position._createAt(root, isForward ? 'end' : 0);\n\n  if (isForward) {\n    return new Range(start, searchEnd);\n  } else {\n    return new Range(searchEnd, start);\n  }\n} // Checks if selection is on word boundary.\n//\n// @param {String} data The text node value to investigate.\n// @param {Number} offset Position offset.\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\n\n\nfunction isAtWordBoundary(data, offset, isForward) {\n  // The offset to check depends on direction.\n  var offsetToCheck = offset + (isForward ? 0 : -1);\n  return wordBoundaryCharacters.includes(data.charAt(offsetToCheck));\n} // Checks if selection is on node boundary.\n//\n// @param {module:engine/model/text~Text} textNode The text node to investigate.\n// @param {Number} offset Position offset.\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\n\n\nfunction isAtNodeBoundary(textNode, offset, isForward) {\n  return offset === (isForward ? textNode.endOffset : 0);\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/utils/getselectedcontent\n */\n\n/**\n * Gets a clone of the selected content.\n *\n * For example, for the following selection:\n *\n * ```html\n * <p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\n * ```\n *\n * It will return a document fragment with such a content:\n *\n * ```html\n * <quote><h>st</h></quote><p>se</p>\n * ```\n *\n * @param {module:engine/model/model~Model} model The model in context of which\n * the selection modification should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * The selection of which content will be returned.\n * @returns {module:engine/model/documentfragment~DocumentFragment}\n */\nexport default function getSelectedContent(model, selection) {\n  return model.change(function (writer) {\n    var frag = writer.createDocumentFragment();\n    var range = selection.getFirstRange();\n\n    if (!range || range.isCollapsed) {\n      return frag;\n    }\n\n    var root = range.start.root;\n    var commonPath = range.start.getCommonPath(range.end);\n    var commonParent = root.getNodeByPath(commonPath); // ## 1st step\n    //\n    // First, we'll clone a fragment represented by a minimal flat range\n    // containing the original range to be cloned.\n    // E.g. let's consider such a range:\n    //\n    // <p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\n    //\n    // A minimal flat range containing this one is:\n    //\n    // <p>x</p>[<quote><p>y</p><h>first</h></quote><p>second</p>]<p>z</p>\n    //\n    // We can easily clone this structure, preserving e.g. the <quote> element.\n\n    var flatSubtreeRange;\n\n    if (range.start.parent == range.end.parent) {\n      // The original range is flat, so take it.\n      flatSubtreeRange = range;\n    } else {\n      flatSubtreeRange = writer.createRange(writer.createPositionAt(commonParent, range.start.path[commonPath.length]), writer.createPositionAt(commonParent, range.end.path[commonPath.length] + 1));\n    }\n\n    var howMany = flatSubtreeRange.end.offset - flatSubtreeRange.start.offset; // Clone the whole contents.\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = flatSubtreeRange.getItems({\n        shallow: true\n      })[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var item = _step.value;\n\n        if (item.is('textProxy')) {\n          writer.appendText(item.data, item.getAttributes(), frag);\n        } else {\n          writer.append(item._clone(true), frag);\n        }\n      } // ## 2nd step\n      //\n      // If the original range wasn't flat, then we need to remove the excess nodes from the both ends of the cloned fragment.\n      //\n      // For example, for the range shown in the 1st step comment, we need to remove these pieces:\n      //\n      // <quote>[<p>y</p>]<h>[fir]st</h></quote><p>se[cond]</p>\n      //\n      // So this will be the final copied content:\n      //\n      // <quote><h>st</h></quote><p>se</p>\n      //\n      // In order to do that, we remove content from these two ranges:\n      //\n      // [<quote><p>y</p><h>fir]st</h></quote><p>se[cond</p>]\n\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    if (flatSubtreeRange != range) {\n      // Find the position of the original range in the cloned fragment.\n      var newRange = range._getTransformedByMove(flatSubtreeRange.start, writer.createPositionAt(frag, 0), howMany)[0];\n\n      var leftExcessRange = writer.createRange(writer.createPositionAt(frag, 0), newRange.start);\n      var rightExcessRange = writer.createRange(newRange.end, writer.createPositionAt(frag, 'end'));\n      removeRangeContent(rightExcessRange, writer);\n      removeRangeContent(leftExcessRange, writer);\n    }\n\n    return frag;\n  });\n} // After https://github.com/ckeditor/ckeditor5-engine/issues/690 is fixed,\n// this function will, most likely, be able to rewritten using getMinimalFlatRanges().\n\nfunction removeRangeContent(range, writer) {\n  var parentsToCheck = [];\n  Array.from(range.getItems({\n    direction: 'backward'\n  })) // We should better store ranges because text proxies will lose integrity\n  // with the text nodes when we'll start removing content.\n  .map(function (item) {\n    return writer.createRangeOn(item);\n  }) // Filter only these items which are fully contained in the passed range.\n  //\n  // E.g. for the following range: [<quote><p>y</p><h>fir]st</h>\n  // the walker will return the entire <h> element, when only the \"fir\" item inside it is fully contained.\n  .filter(function (itemRange) {\n    // We should be able to use Range.containsRange, but https://github.com/ckeditor/ckeditor5-engine/issues/691.\n    var contained = (itemRange.start.isAfter(range.start) || itemRange.start.isEqual(range.start)) && (itemRange.end.isBefore(range.end) || itemRange.end.isEqual(range.end));\n    return contained;\n  }).forEach(function (itemRange) {\n    parentsToCheck.push(itemRange.start.parent);\n    writer.remove(itemRange);\n  }); // Remove ancestors of the removed items if they turned to be empty now\n  // (their whole content was contained in the range).\n\n  parentsToCheck.forEach(function (parentToCheck) {\n    var parent = parentToCheck;\n\n    while (parent.parent && parent.isEmpty) {\n      var removeRange = writer.createRangeOn(parent);\n      parent = parent.parent;\n      writer.remove(removeRange);\n    }\n  });\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/utils/selection-post-fixer\n */\nimport Range from '../range';\nimport Position from '../position';\n/**\n * Injects selection post-fixer to the model.\n *\n * The role of the selection post-fixer is to ensure that the selection is in a correct place\n * after a {@link module:engine/model/model~Model#change `change()`} block was executed.\n *\n * The correct position means that:\n *\n * * All collapsed selection ranges are in a place where the {@link module:engine/model/schema~Schema}\n * allows a `$text`.\n * * None of the selection's non-collapsed ranges crosses a {@link module:engine/model/schema~Schema#isLimit limit element}\n * boundary (a range must be rooted within one limit element).\n * * Only {@link module:engine/model/schema~Schema#isObject object elements} can be selected from the outside\n * (e.g. `[<paragraph>foo</paragraph>]` is invalid). This rule applies independently to both selection ends, so this\n * selection is correct: `<paragraph>f[oo</paragraph><image></image>]`.\n *\n * If the position is not correct, the post-fixer will automatically correct it.\n *\n * ## Fixing a non-collapsed selection\n *\n * See as an example a selection that starts in a P1 element and ends inside the text of a TD element\n * (`[` and `]` are range boundaries and `(l)` denotes an element defined as `isLimit=true`):\n *\n *\t\troot\n *\t\t |- element P1\n *\t\t |   |- \"foo\"                                      root\n *\t\t |- element TABLE (l)                   P1         TABLE             P2\n *\t\t |   |- element TR (l)                 f o[o     TR      TR         b a r\n *\t\t |   |   |- element TD (l)                       TD      TD\n *\t\t |   |       |- \"aaa\"                          a]a a    b b b\n *\t\t |   |- element TR (l)\n *\t\t |   |   |- element TD (l)                           ||\n *\t\t |   |       |- \"bbb\"                                ||\n *\t\t |- element P2                                       VV\n *\t\t |   |- \"bar\"\n *\t\t                                                   root\n *\t\t                                        P1         TABLE]            P2\n *\t\t                                       f o[o     TR      TR         b a r\n *\t\t                                                 TD      TD\n *\t\t                                               a a a    b b b\n *\n * In the example above, the TABLE, TR and TD are defined as `isLimit=true` in the schema. The range which is not contained within\n * a single limit element must be expanded to select the outermost limit element. The range end is inside the text node of the TD element.\n * As the TD element is a child of the TR and TABLE elements, where both are defined as `isLimit=true` in the schema, the range must be\n * expanded to select the whole TABLE element.\n *\n * **Note** If the selection contains multiple ranges, the method returns a minimal set of ranges that are not intersecting after expanding\n * them to select `isLimit=true` elements.\n *\n * @param {module:engine/model/model~Model} model\n */\n\nexport function injectSelectionPostFixer(model) {\n  model.document.registerPostFixer(function (writer) {\n    return selectionPostFixer(writer, model);\n  });\n} // The selection post-fixer.\n//\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/model~Model} model\n\nfunction selectionPostFixer(writer, model) {\n  var selection = model.document.selection;\n  var schema = model.schema;\n  var ranges = [];\n  var wasFixed = false;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = selection.getRanges()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var modelRange = _step.value;\n      // Go through all ranges in selection and try fixing each of them.\n      // Those ranges might overlap but will be corrected later.\n      var correctedRange = tryFixingRange(modelRange, schema);\n\n      if (correctedRange) {\n        ranges.push(correctedRange);\n        wasFixed = true;\n      } else {\n        ranges.push(modelRange);\n      }\n    } // If any of ranges were corrected update the selection.\n\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  if (wasFixed) {\n    // The above algorithm might create ranges that intersects each other when selection contains more then one range.\n    // This is case happens mostly on Firefox which creates multiple ranges for selected table.\n    var fixedRanges = ranges; // Fixing selection with many ranges usually breaks the selection in Firefox. As only Firefox supports multiple selection ranges\n    // we simply create one continuous range from fixed selection ranges (even if they are not adjacent).\n\n    if (ranges.length > 1) {\n      var selectionStart = ranges[0].start;\n      var selectionEnd = ranges[ranges.length - 1].end;\n      fixedRanges = [new Range(selectionStart, selectionEnd)];\n    }\n\n    writer.setSelection(fixedRanges, {\n      backward: selection.isBackward\n    });\n  }\n} // Tries fixing a range if it's incorrect.\n//\n// @param {module:engine/model/range~Range} range\n// @param {module:engine/model/schema~Schema} schema\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\n\n\nfunction tryFixingRange(range, schema) {\n  if (range.isCollapsed) {\n    return tryFixingCollapsedRange(range, schema);\n  }\n\n  return tryFixingNonCollapsedRage(range, schema);\n} // Tries to fix collapsed ranges.\n//\n// * Fixes situation when a range is in a place where $text is not allowed\n//\n// @param {module:engine/model/range~Range} range Collapsed range to fix.\n// @param {module:engine/model/schema~Schema} schema\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\n\n\nfunction tryFixingCollapsedRange(range, schema) {\n  var originalPosition = range.start;\n  var nearestSelectionRange = schema.getNearestSelectionRange(originalPosition); // This might be null ie when editor data is empty.\n  // In such cases there is no need to fix the selection range.\n\n  if (!nearestSelectionRange) {\n    return null;\n  }\n\n  var fixedPosition = nearestSelectionRange.start; // Fixed position is the same as original - no need to return corrected range.\n\n  if (originalPosition.isEqual(fixedPosition)) {\n    return null;\n  } // Check single node selection (happens in tables).\n\n\n  if (fixedPosition.nodeAfter && schema.isLimit(fixedPosition.nodeAfter)) {\n    return new Range(fixedPosition, Position._createAfter(fixedPosition.nodeAfter));\n  }\n\n  return new Range(fixedPosition);\n} // Tries to fix an expanded range.\n//\n// @param {module:engine/model/range~Range} range Expanded range to fix.\n// @param {module:engine/model/schema~Schema} schema\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\n\n\nfunction tryFixingNonCollapsedRage(range, schema) {\n  var start = range.start;\n  var end = range.end;\n  var isTextAllowedOnStart = schema.checkChild(start, '$text');\n  var isTextAllowedOnEnd = schema.checkChild(end, '$text');\n  var startLimitElement = schema.getLimitElement(start);\n  var endLimitElement = schema.getLimitElement(end); // Ranges which both end are inside the same limit element (or root) might needs only minor fix.\n\n  if (startLimitElement === endLimitElement) {\n    // Range is valid when both position allows to place a text:\n    // - <block>f[oobarba]z</block>\n    // This would be \"fixed\" by a next check but as it will be the same it's better to return null so the selection stays the same.\n    if (isTextAllowedOnStart && isTextAllowedOnEnd) {\n      return null;\n    } // Range that is on non-limit element (or is partially) must be fixed so it is placed inside the block around $text:\n    // - [<block>foo</block>]    ->    <block>[foo]</block>\n    // - [<block>foo]</block>    ->    <block>[foo]</block>\n    // - <block>f[oo</block>]    ->    <block>f[oo]</block>\n    // - [<block>foo</block><object></object>]    ->    <block>[foo</block><object></object>]\n\n\n    if (checkSelectionOnNonLimitElements(start, end, schema)) {\n      var isStartObject = start.nodeAfter && schema.isObject(start.nodeAfter);\n      var fixedStart = isStartObject ? null : schema.getNearestSelectionRange(start, 'forward');\n      var isEndObject = end.nodeBefore && schema.isObject(end.nodeBefore);\n      var fixedEnd = isEndObject ? null : schema.getNearestSelectionRange(end, 'backward'); // The schema.getNearestSelectionRange might return null - if that happens use original position.\n\n      var rangeStart = fixedStart ? fixedStart.start : start;\n      var rangeEnd = fixedEnd ? fixedEnd.start : end;\n      return new Range(rangeStart, rangeEnd);\n    }\n  }\n\n  var isStartInLimit = startLimitElement && !startLimitElement.is('rootElement');\n  var isEndInLimit = endLimitElement && !endLimitElement.is('rootElement'); // At this point we eliminated valid positions on text nodes so if one of range positions is placed inside a limit element\n  // then the range crossed limit element boundaries and needs to be fixed.\n\n  if (isStartInLimit || isEndInLimit) {\n    var bothInSameParent = start.nodeAfter && end.nodeBefore && start.nodeAfter.parent === end.nodeBefore.parent;\n    var expandStart = isStartInLimit && (!bothInSameParent || !isInObject(start.nodeAfter, schema));\n    var expandEnd = isEndInLimit && (!bothInSameParent || !isInObject(end.nodeBefore, schema)); // Although we've already found limit element on start/end positions we must find the outer-most limit element.\n    // as limit elements might be nested directly inside (ie table > tableRow > tableCell).\n\n    var _fixedStart = start;\n    var _fixedEnd = end;\n\n    if (expandStart) {\n      _fixedStart = Position._createBefore(findOutermostLimitAncestor(startLimitElement, schema));\n    }\n\n    if (expandEnd) {\n      _fixedEnd = Position._createAfter(findOutermostLimitAncestor(endLimitElement, schema));\n    }\n\n    return new Range(_fixedStart, _fixedEnd);\n  } // Range was not fixed at this point so it is valid - ie it was placed around limit element already.\n\n\n  return null;\n} // Finds the outer-most ancestor.\n//\n// @param {module:engine/model/node~Node} startingNode\n// @param {module:engine/model/schema~Schema} schema\n// @param {String} expandToDirection Direction of expansion - either 'start' or 'end' of the range.\n// @returns {module:engine/model/node~Node}\n\n\nfunction findOutermostLimitAncestor(startingNode, schema) {\n  var isLimitNode = startingNode;\n  var parent = isLimitNode; // Find outer most isLimit block as such blocks might be nested (ie. in tables).\n\n  while (schema.isLimit(parent) && parent.parent) {\n    isLimitNode = parent;\n    parent = parent.parent;\n  }\n\n  return isLimitNode;\n} // Checks whether any of range boundaries is placed around non-limit elements.\n//\n// @param {module:engine/model/position~Position} start\n// @param {module:engine/model/position~Position} end\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\n\n\nfunction checkSelectionOnNonLimitElements(start, end, schema) {\n  var startIsOnBlock = start.nodeAfter && !schema.isLimit(start.nodeAfter) || schema.checkChild(start, '$text');\n  var endIsOnBlock = end.nodeBefore && !schema.isLimit(end.nodeBefore) || schema.checkChild(end, '$text'); // We should fix such selection when one of those nodes needs fixing.\n\n  return startIsOnBlock || endIsOnBlock;\n} // Checks if node exists and if it's an object.\n//\n// @param {module:engine/model/node~Node} node\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\n\n\nfunction isInObject(node, schema) {\n  return node && schema.isObject(node);\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/model\n */\nimport Batch from './batch';\nimport Writer from './writer';\nimport Schema from './schema';\nimport Document from './document';\nimport MarkerCollection from './markercollection';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ModelElement from './element';\nimport ModelRange from './range';\nimport ModelPosition from './position';\nimport ModelSelection from './selection';\nimport _insertContent from './utils/insertcontent';\nimport _deleteContent from './utils/deletecontent';\nimport _modifySelection from './utils/modifyselection';\nimport _getSelectedContent from './utils/getselectedcontent';\nimport { injectSelectionPostFixer } from './utils/selection-post-fixer';\n/**\n * Editor's data model. Read about the model in the\n * {@glink framework/guides/architecture/editing-engine engine architecture guide}.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Model =\n/*#__PURE__*/\nfunction () {\n  function Model() {\n    var _this = this;\n\n    _classCallCheck(this, Model);\n\n    /**\n     * Model's marker collection.\n     *\n     * @readonly\n     * @member {module:engine/model/markercollection~MarkerCollection}\n     */\n    this.markers = new MarkerCollection();\n    /**\n     * Model's document.\n     *\n     * @readonly\n     * @member {module:engine/model/document~Document}\n     */\n\n    this.document = new Document(this);\n    /**\n     * Model's schema.\n     *\n     * @readonly\n     * @member {module:engine/model/schema~Schema}\n     */\n\n    this.schema = new Schema();\n    /**\n     * All callbacks added by {@link module:engine/model/model~Model#change} or\n     * {@link module:engine/model/model~Model#enqueueChange} methods waiting to be executed.\n     *\n     * @private\n     * @type {Array.<Function>}\n     */\n\n    this._pendingChanges = [];\n    /**\n     * The last created and currently used writer instance.\n     *\n     * @private\n     * @member {module:engine/model/writer~Writer}\n     */\n\n    this._currentWriter = null;\n    ['insertContent', 'deleteContent', 'modifySelection', 'getSelectedContent', 'applyOperation'].forEach(function (methodName) {\n      return _this.decorate(methodName);\n    }); // Adding operation validation with `highest` priority, so it is called before any other feature would like\n    // to do anything with the operation. If the operation has incorrect parameters it should throw on the earliest occasion.\n\n    this.on('applyOperation', function (evt, args) {\n      var operation = args[0];\n\n      operation._validate();\n    }, {\n      priority: 'highest'\n    }); // Register some default abstract entities.\n\n    this.schema.register('$root', {\n      isLimit: true\n    });\n    this.schema.register('$block', {\n      allowIn: '$root',\n      isBlock: true\n    });\n    this.schema.register('$text', {\n      allowIn: '$block',\n      isInline: true\n    });\n    this.schema.register('$clipboardHolder', {\n      allowContentOf: '$root',\n      isLimit: true\n    });\n    this.schema.extend('$text', {\n      allowIn: '$clipboardHolder'\n    }); // An element needed by the `upcastElementToMarker` converter.\n    // This element temporarily represents a marker boundary during the conversion process and is removed\n    // at the end of the conversion. `UpcastDispatcher` or at least `Conversion` class looks like a\n    // better place for this registration but both know nothing about `Schema`.\n\n    this.schema.register('$marker');\n    this.schema.addChildCheck(function (context, childDefinition) {\n      if (childDefinition.name === '$marker') {\n        return true;\n      }\n    });\n    injectSelectionPostFixer(this);\n  }\n  /**\n   * The `change()` method is the primary way of changing the model. You should use it to modify all document nodes\n   * (including detached nodes – i.e. nodes not added to the {@link module:engine/model/model~Model#document model document}),\n   * the {@link module:engine/model/document~Document#selection document's selection}, and\n   * {@link module:engine/model/model~Model#markers model markers}.\n   *\n   *\t\tmodel.change( writer => {\n   *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n   *\t\t} );\n   *\n   * All changes inside the change block use the same {@link module:engine/model/batch~Batch} so they are combined\n   * into a single undo step.\n   *\n   *\t\tmodel.change( writer => {\n   *\t\t\twriter.insertText( 'foo', paragraph, 'end' ); // foo.\n   *\n   *\t\t\tmodel.change( writer => {\n   *\t\t\t\twriter.insertText( 'bar', paragraph, 'end' ); // foobar.\n   *\t\t\t} );\n   *\n   * \t\t\twriter.insertText( 'bom', paragraph, 'end' ); // foobarbom.\n   *\t\t} );\n   *\n   * The callback of the `change()` block is executed synchronously.\n   *\n   * You can also return a value from the change block.\n   *\n   *\t\tconst img = model.change( writer => {\n   *\t\t\treturn writer.createElement( 'img' );\n   *\t\t} );\n   *\n   * @see #enqueueChange\n   * @param {Function} callback Callback function which may modify the model.\n   * @returns {*} Value returned by the callback.\n   */\n\n\n  _createClass(Model, [{\n    key: \"change\",\n    value: function change(callback) {\n      if (this._pendingChanges.length === 0) {\n        // If this is the outermost block, create a new batch and start `_runPendingChanges` execution flow.\n        this._pendingChanges.push({\n          batch: new Batch(),\n          callback: callback\n        });\n\n        return this._runPendingChanges()[0];\n      } else {\n        // If this is not the outermost block, just execute the callback.\n        return callback(this._currentWriter);\n      }\n    }\n    /**\n     * The `enqueueChange()` method performs similar task as the {@link #change `change()` method}, with two major differences.\n     *\n     * First, the callback of `enqueueChange()` is executed when all other enqueued changes are done. It might be executed\n     * immediately if it is not nested in any other change block, but if it is nested in another (enqueue)change block,\n     * it will be delayed and executed after the outermost block.\n     *\n     *\t\tmodel.change( writer => {\n     *\t\t\tconsole.log( 1 );\n     *\n     *\t\t\tmodel.enqueueChange( writer => {\n     *\t\t\t\tconsole.log( 2 );\n     *\t\t\t} );\n     *\n     * \t\t\tconsole.log( 3 );\n     *\t\t} ); // Will log: 1, 3, 2.\n     *\n     * Second, it lets you define the {@link module:engine/model/batch~Batch} into which you want to add your changes.\n     * By default, a new batch is created. In the sample above, `change` and `enqueueChange` blocks use a different\n     * batch (and different {@link module:engine/model/writer~Writer} since each of them operates on the separate batch).\n     *\n     * When using the `enqueueChange()` block you can also add some changes to the batch you used before.\n     *\n     *\t\tmodel.enqueueChange( batch, writer => {\n     *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n     *\t\t} );\n     *\n     * The batch instance can be obtained from {@link module:engine/model/writer~Writer#batch the writer}.\n     *\n     * @param {module:engine/model/batch~Batch|'transparent'|'default'} batchOrType Batch or batch type should be used in the callback.\n     * If not defined, a new batch will be created.\n     * @param {Function} callback Callback function which may modify the model.\n     */\n\n  }, {\n    key: \"enqueueChange\",\n    value: function enqueueChange(batchOrType, callback) {\n      if (typeof batchOrType === 'string') {\n        batchOrType = new Batch(batchOrType);\n      } else if (typeof batchOrType == 'function') {\n        callback = batchOrType;\n        batchOrType = new Batch();\n      }\n\n      this._pendingChanges.push({\n        batch: batchOrType,\n        callback: callback\n      });\n\n      if (this._pendingChanges.length == 1) {\n        this._runPendingChanges();\n      }\n    }\n    /**\n     * {@link module:utils/observablemixin~ObservableMixin#decorate Decorated} function for applying\n     * {@link module:engine/model/operation/operation~Operation operations} to the model.\n     *\n     * This is a low-level way of changing the model. It is exposed for very specific use cases (like the undo feature).\n     * Normally, to modify the model, you will want to use {@link module:engine/model/writer~Writer `Writer`}.\n     * See also {@glink framework/guides/architecture/editing-engine#changing-the-model Changing the model} section\n     * of the {@glink framework/guides/architecture/editing-engine Editing architecture} guide.\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation The operation to apply.\n     */\n\n  }, {\n    key: \"applyOperation\",\n    value: function applyOperation(operation) {\n      operation._execute();\n    }\n    /**\n     * Inserts content at the position in the editor specified by the selection, as one would expect the paste\n     * functionality to work.\n     *\n     * This is a high-level method. It takes the {@link #schema schema} into consideration when inserting\n     * the content, clears the given selection's content before inserting nodes and moves the selection\n     * to its target position at the end of the process.\n     * It can split elements, merge them, wrap bare text nodes with paragraphs, etc. &mdash; just like the\n     * pasting feature should do.\n     *\n     * For lower-level methods see {@link module:engine/model/writer~Writer `Writer`}.\n     *\n     * This method, unlike {@link module:engine/model/writer~Writer `Writer`}'s methods, does not have to be used\n     * inside a {@link #change `change()` block}.\n     *\n     * # Conversion and schema\n     *\n     * Inserting elements and text nodes into the model is not enough to make CKEditor 5 render that content\n     * to the user. CKEditor 5 implements a model-view-controller architecture and what `model.insertContent()` does\n     * is only adding nodes to the model. Additionally, you need to define\n     * {@glink framework/guides/architecture/editing-engine#conversion converters} between the model and view\n     * and define those nodes in the {@glink framework/guides/architecture/editing-engine#schema schema}.\n     *\n     * So, while this method may seem similar to CKEditor 4 `editor.insertHtml()` (in fact, both methods\n     * are used for paste-like content insertion), the CKEditor 5 method cannot be use to insert arbitrary HTML\n     * unless converters are defined for all elements and attributes in that HTML.\n     *\n     * # Examples\n     *\n     * Using `insertContent()` with a manually created model structure:\n     *\n     *\t\t// Let's create a document fragment containing such content as:\n     *\t\t//\n     *\t\t// <paragrap>foo</paragraph>\n     *\t\t// <blockQuote>\n     *\t\t//    <paragraph>bar</paragraph>\n     *\t\t// </blockQuote>\n     *\t\tconst docFrag = editor.model.change( writer => {\n     *\t\t\tconst p1 = writer.createElement( 'paragraph' );\n     *\t\t\tconst p2 = writer.createElement( 'paragraph' );\n     *\t\t\tconst blockQuote = writer.createElement( 'blockQuote' );\n     *\t\t\tconst docFrag = writer.createDocumentFragment();\n     *\n     *\t\t\twriter.append( p1, docFrag );\n     *\t\t\twriter.append( blockQuote, docFrag );\n     *\t\t\twriter.append( p2, blockQuote );\n     *\t\t\twriter.insertText( 'foo', p1 );\n     *\t\t\twriter.insertText( 'bar', p2 );\n     *\n     *\t\t\treturn docFrag;\n     *\t\t} );\n     *\n     *\t\t// insertContent() does not have to be used in a change() block. It can, though,\n     *\t\t// so this code could be moved to the callback defined above.\n     *\t\teditor.model.insertContent( docFrag );\n     *\n     * Using `insertContent()` with an HTML string converted to a model document fragment (similar to the pasting mechanism):\n     *\n     *\t\t// You can create your own HtmlDataProcessor instance or use editor.data.processor\n     *\t\t// if you have not overridden the default one (which is the HtmlDataProcessor instance).\n     *\t\tconst htmlDP = new HtmlDataProcessor();\n     *\n     *\t\t// Convert an HTML string to a view document fragment:\n     *\t\tconst viewFragment = htmlDP.toView( htmlString );\n     *\n     *\t\t// Convert the view document fragment to a model document fragment\n     *\t\t// in the context of $root. This conversion takes the schema into\n     *\t\t// account so if, for example, the view document fragment contained a bare text node,\n     *\t\t// this text node cannot be a child of $root, so it will be automatically\n     *\t\t// wrapped with a <paragraph>. You can define the context yourself (in the second parameter),\n     *\t\t// and e.g. convert the content like it would happen in a <paragraph>.\n     *\t\t// Note: The clipboard feature uses a custom context called $clipboardHolder\n     *\t\t// which has a loosened schema.\n     *\t\tconst modelFragment = editor.data.toModel( viewFragment );\n     *\n     *\t\teditor.model.insertContent( modelFragment );\n     *\n     * By default this method will use the document selection but it can also be used with a position, range or selection instance.\n     *\n     *\t\t// Insert text at the current document selection position.\n     *\t\teditor.model.change( writer => {\n     *\t\t\teditor.model.insertContent( writer.createText( 'x' ) );\n     *\t\t} );\n     *\n     *\t\t// Insert text at a given position - the document selection will not be modified.\n     *\t\teditor.model.change( writer => {\n     *\t\t\teditor.model.insertContent( writer.createText( 'x' ), doc.getRoot(), 2 );\n     *\n     *\t\t\t// Which is a shorthand for:\n     *\t\t\teditor.model.insertContent( writer.createText( 'x' ), writer.createPositionAt( doc.getRoot(), 2 ) );\n     *\t\t} );\n     *\n     * If an instance of {@link module:engine/model/selection~Selection} is passed as `selectable`\n     * it will be moved to the target position (where the document selection should be moved after the insertion).\n     *\n     *\t\teditor.model.change( writer => {\n     *\t\t\t// Insert text replacing the given selection instance.\n     *\t\t\tconst selection = writer.createSelection( paragraph, 'in' );\n     *\n     *\t\t\teditor.model.insertContent( writer.createText( 'x' ), selection );\n     *\n     *\t\t\t// insertContent() modifies the passed selection instance so it can be used to set the document selection.\n     *\t\t\t// Note: This is not necessary when you passed the document selection to insertContent().\n     *\t\t\twriter.setSelection( selection );\n     *\t\t} );\n     *\n     * @fires insertContent\n     * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\n     * @param {module:engine/model/selection~Selectable} [selectable=model.document.selection]\n     * The selection into which the content should be inserted. If not provided the current model document selection will be used.\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] To be used when a model item was passed as `selectable`.\n     * This param defines a position in relation to that item.\n     * @returns {module:engine/model/range~Range} Range which contains all the performed changes. This is a range that, if removed,\n     * would return the model to the state before the insertion. If no changes were preformed by `insertContent`, returns a range collapsed\n     * at the insertion position.\n     */\n\n  }, {\n    key: \"insertContent\",\n    value: function insertContent(content, selectable, placeOrOffset) {\n      return _insertContent(this, content, selectable, placeOrOffset);\n    }\n    /**\n     * Deletes content of the selection and merge siblings. The resulting selection is always collapsed.\n     *\n     * **Note:** For the sake of predictability, the resulting selection should always be collapsed.\n     * In cases where a feature wants to modify deleting behavior so selection isn't collapsed\n     * (e.g. a table feature may want to keep row selection after pressing <kbd>Backspace</kbd>),\n     * then that behavior should be implemented in the view's listener. At the same time, the table feature\n     * will need to modify this method's behavior too, e.g. to \"delete contents and then collapse\n     * the selection inside the last selected cell\" or \"delete the row and collapse selection somewhere near\".\n     * That needs to be done in order to ensure that other features which use `deleteContent()` will work well with tables.\n     *\n     * @fires deleteContent\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n     * Selection of which the content should be deleted.\n     * @param {Object} [options]\n     * @param {Boolean} [options.leaveUnmerged=false] Whether to merge elements after removing the content of the selection.\n     *\n     * For example `<heading1>x[x</heading1><paragraph>y]y</paragraph>` will become:\n     *\n     * * `<heading1>x^y</heading1>` with the option disabled (`leaveUnmerged == false`)\n     * * `<heading1>x^</heading1><paragraph>y</paragraph>` with enabled (`leaveUnmerged == true`).\n     *\n     * Note: {@link module:engine/model/schema~Schema#isObject object} and {@link module:engine/model/schema~Schema#isLimit limit}\n     * elements will not be merged.\n     *\n     * @param {Boolean} [options.doNotResetEntireContent=false] Whether to skip replacing the entire content with a\n     * paragraph when the entire content was selected.\n     *\n     * For example `<heading1>[x</heading1><paragraph>y]</paragraph>` will become:\n     *\n     * * `<paragraph>^</paragraph>` with the option disabled (`doNotResetEntireContent == false`)\n     * * `<heading1>^</heading1>` with enabled (`doNotResetEntireContent == true`)\n     *\n     * @param {Boolean} [options.doNotAutoparagraph=false] Whether to create a paragraph if after content deletion selection is moved\n     * to a place where text cannot be inserted.\n     *\n     * For example `<paragraph>x</paragraph>[<image src=\"foo.jpg\"></image>]` will become:\n     *\n     * * `<paragraph>x</paragraph><paragraph>[]</paragraph>` with the option disabled (`doNotAutoparagraph == false`)\n     * * `<paragraph>x[]</paragraph>` with the option enabled (`doNotAutoparagraph == true`).\n     *\n     * **Note:** if there is no valid position for the selection, the paragraph will always be created:\n     *\n     * `[<image src=\"foo.jpg\"></image>]` -> `<paragraph>[]</paragraph>`.\n     */\n\n  }, {\n    key: \"deleteContent\",\n    value: function deleteContent(selection, options) {\n      _deleteContent(this, selection, options);\n    }\n    /**\n     * Modifies the selection. Currently, the supported modifications are:\n     *\n     * * Extending. The selection focus is moved in the specified `options.direction` with a step specified in `options.unit`.\n     * Possible values for `unit` are:\n     *  * `'character'` (default) - moves selection by one user-perceived character. In most cases this means moving by one\n     *  character in `String` sense. However, unicode also defines \"combing marks\". These are special symbols, that combines\n     *  with a symbol before it (\"base character\") to create one user-perceived character. For example, `q̣̇` is a normal\n     *  letter `q` with two \"combining marks\": upper dot (`Ux0307`) and lower dot (`Ux0323`). For most actions, i.e. extending\n     *  selection by one position, it is correct to include both \"base character\" and all of it's \"combining marks\". That is\n     *  why `'character'` value is most natural and common method of modifying selection.\n     *  * `'codePoint'` - moves selection by one unicode code point. In contrary to, `'character'` unit, this will insert\n     *  selection between \"base character\" and \"combining mark\", because \"combining marks\" have their own unicode code points.\n     *  However, for technical reasons, unicode code points with values above `UxFFFF` are represented in native `String` by\n     *  two characters, called \"surrogate pairs\". Halves of \"surrogate pairs\" have a meaning only when placed next to each other.\n     *  For example `𨭎` is represented in `String` by `\\uD862\\uDF4E`. Both `\\uD862` and `\\uDF4E` do not have any meaning\n     *  outside the pair (are rendered as ? when alone). Position between them would be incorrect. In this case, selection\n     *  extension will include whole \"surrogate pair\".\n     *  * `'word'` - moves selection by a whole word.\n     *\n     * **Note:** if you extend a forward selection in a backward direction you will in fact shrink it.\n     *\n     * @fires modifySelection\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n     * The selection to modify.\n     * @param {Object} [options]\n     * @param {'forward'|'backward'} [options.direction='forward'] The direction in which the selection should be modified.\n     * @param {'character'|'codePoint'|'word'} [options.unit='character'] The unit by which selection should be modified.\n     */\n\n  }, {\n    key: \"modifySelection\",\n    value: function modifySelection(selection, options) {\n      _modifySelection(this, selection, options);\n    }\n    /**\n     * Gets a clone of the selected content.\n     *\n     * For example, for the following selection:\n     *\n     * ```html\n     * <paragraph>x</paragraph>\n     * <blockQuote>\n     *\t<paragraph>y</paragraph>\n     *\t<heading1>fir[st</heading1>\n     * </blockQuote>\n     * <paragraph>se]cond</paragraph>\n     * <paragraph>z</paragraph>\n     * ```\n     *\n     * It will return a document fragment with such a content:\n     *\n     * ```html\n     * <blockQuote>\n     *\t<heading1>st</heading1>\n     * </blockQuote>\n     * <paragraph>se</paragraph>\n     * ```\n     *\n     * @fires getSelectedContent\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n     * The selection of which content will be returned.\n     * @returns {module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"getSelectedContent\",\n    value: function getSelectedContent(selection) {\n      return _getSelectedContent(this, selection);\n    }\n    /**\n     * Checks whether the given {@link module:engine/model/range~Range range} or\n     * {@link module:engine/model/element~Element element} has any meaningful content.\n     *\n     * Meaningful content is:\n     *\n     * * any text node (`options.ignoreWhitespaces` allows controlling whether this text node must also contain\n     * any non-whitespace characters),\n     * * or any {@link module:engine/model/schema~Schema#isObject object element},\n     * * or any {@link module:engine/model/markercollection~Marker marker} which\n     * {@link module:engine/model/markercollection~Marker#_affectsData affects data}.\n     *\n     * This means that a range containing an empty `<paragraph></paragraph>` is not considered to have a meaningful content.\n     * However, a range containing an `<image></image>` (which would normally be marked in the schema as an object element)\n     * is considered non-empty.\n     *\n     * @param {module:engine/model/range~Range|module:engine/model/element~Element} rangeOrElement Range or element to check.\n     * @param {Object} [options]\n     * @param {Boolean} [options.ignoreWhitespaces] Whether text node with whitespaces only should be considered empty.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"hasContent\",\n    value: function hasContent(rangeOrElement, options) {\n      var range = rangeOrElement instanceof ModelElement ? ModelRange._createIn(rangeOrElement) : rangeOrElement;\n\n      if (range.isCollapsed) {\n        return false;\n      } // Check if there are any markers which affects data in this given range.\n\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.markers.getMarkersIntersectingRange(range)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var intersectingMarker = _step.value;\n\n          if (intersectingMarker.affectsData) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var _ref = options || {},\n          _ref$ignoreWhitespace = _ref.ignoreWhitespaces,\n          ignoreWhitespaces = _ref$ignoreWhitespace === void 0 ? false : _ref$ignoreWhitespace;\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = range.getItems()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n\n          if (item.is('textProxy')) {\n            if (!ignoreWhitespaces) {\n              return true;\n            } else if (item.data.search(/\\S/) !== -1) {\n              return true;\n            }\n          } else if (this.schema.isObject(item)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Creates a position from the given root and path in that root.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createPositionFromPath `Writer#createPositionFromPath()`}.\n     *\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n     * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n     * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n     * See {@link module:engine/model/position~PositionStickiness}.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionFromPath\",\n    value: function createPositionFromPath(root, path, stickiness) {\n      return new ModelPosition(root, path, stickiness);\n    }\n    /**\n     * Creates position at the given location. The location can be specified as:\n     *\n     * * a {@link module:engine/model/position~Position position},\n     * * a parent element and offset in that element,\n     * * a parent element and `'end'` (the position will be set at the end of that element),\n     * * a {@link module:engine/model/item~Item model item} and `'before'` or `'after'`\n     * (the position will be set before or after the given model item).\n     *\n     * This method is a shortcut to other factory methods such as:\n     *\n     * * {@link module:engine/model/model~Model#createPositionBefore `createPositionBefore()`},\n     * * {@link module:engine/model/model~Model#createPositionAfter `createPositionAfter()`}.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createPositionAt `Writer#createPositionAt()`},\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"createPositionAt\",\n    value: function createPositionAt(itemOrPosition, offset) {\n      return ModelPosition._createAt(itemOrPosition, offset);\n    }\n    /**\n     * Creates a new position after the given {@link module:engine/model/item~Item model item}.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createPositionAfter `Writer#createPositionAfter()`}.\n     *\n     * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionAfter\",\n    value: function createPositionAfter(item) {\n      return ModelPosition._createAfter(item);\n    }\n    /**\n     * Creates a new position before the given {@link module:engine/model/item~Item model item}.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createPositionBefore `Writer#createPositionBefore()`}.\n     *\n     * @param {module:engine/model/item~Item} item Item before which the position should be placed.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionBefore\",\n    value: function createPositionBefore(item) {\n      return ModelPosition._createBefore(item);\n    }\n    /**\n     * Creates a range spanning from the `start` position to the `end` position.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createRange `Writer#createRange()`}:\n     *\n     *\t\tmodel.change( writer => {\n     *\t\t\tconst range = writer.createRange( start, end );\n     *\t\t} );\n     *\n     * @param {module:engine/model/position~Position} start Start position.\n     * @param {module:engine/model/position~Position} [end] End position. If not set, the range will be collapsed\n     * to the `start` position.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"createRange\",\n    value: function createRange(start, end) {\n      return new ModelRange(start, end);\n    }\n    /**\n     * Creates a range inside the given element which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createRangeIn `Writer#createRangeIn()`}:\n     *\n     *\t\tmodel.change( writer => {\n     *\t\t\tconst range = writer.createRangeIn( paragraph );\n     *\t\t} );\n     *\n     * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"createRangeIn\",\n    value: function createRangeIn(element) {\n      return ModelRange._createIn(element);\n    }\n    /**\n     * Creates a range that starts before the given {@link module:engine/model/item~Item model item} and ends after it.\n     *\n     * Note: This method is also available on `writer` instance as\n     * {@link module:engine/model/writer~Writer#createRangeOn `Writer.createRangeOn()`}:\n     *\n     *\t\tmodel.change( writer => {\n     *\t\t\tconst range = writer.createRangeOn( paragraph );\n     *\t\t} );\n     *\n     * @param {module:engine/model/item~Item} item\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"createRangeOn\",\n    value: function createRangeOn(item) {\n      return ModelRange._createOn(item);\n    }\n    /**\n     * Creates a new selection instance based on the given {@link module:engine/model/selection~Selectable selectable}\n     * or creates an empty selection if no arguments were passed.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createSelection `Writer#createSelection()`}.\n     *\n     *\t\t// Creates empty selection without ranges.\n     *\t\tconst selection = writer.createSelection();\n     *\n     *\t\t// Creates selection at the given range.\n     *\t\tconst range = writer.createRange( start, end );\n     *\t\tconst selection = writer.createSelection( range );\n     *\n     *\t\t// Creates selection at the given ranges\n     *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n     *\t\tconst selection = writer.createSelection( ranges );\n     *\n     *\t\t// Creates selection from the other selection.\n     *\t\t// Note: It doesn't copies selection attributes.\n     *\t\tconst otherSelection = writer.createSelection();\n     *\t\tconst selection = writer.createSelection( otherSelection );\n     *\n     *\t\t// Creates selection from the given document selection.\n     *\t\t// Note: It doesn't copies selection attributes.\n     *\t\tconst documentSelection = model.document.selection;\n     *\t\tconst selection = writer.createSelection( documentSelection );\n     *\n     *\t\t// Creates selection at the given position.\n     *\t\tconst position = writer.createPositionFromPath( root, path );\n     *\t\tconst selection = writer.createSelection( position );\n     *\n     *\t\t// Creates selection at the given offset in the given element.\n     *\t\tconst paragraph = writer.createElement( 'paragraph' );\n     *\t\tconst selection = writer.createSelection( paragraph, offset );\n     *\n     *\t\t// Creates a range inside an {@link module:engine/model/element~Element element} which starts before the\n     *\t\t// first child of that element and ends after the last child of that element.\n     *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n     *\n     *\t\t// Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends\n     *\t\t// just after the item.\n     *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n     *\n     *\t\t// Additional options (`'backward'`) can be specified as the last argument.\n     *\n     *\t\t// Creates backward selection.\n     *\t\tconst selection = writer.createSelection( range, { backward: true } );\n     *\n     * @param {module:engine/model/selection~Selectable} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     * @returns {module:engine/model/selection~Selection}\n     */\n\n  }, {\n    key: \"createSelection\",\n    value: function createSelection(selectable, placeOrOffset, options) {\n      return new ModelSelection(selectable, placeOrOffset, options);\n    }\n    /**\n     * Creates a {@link module:engine/model/batch~Batch} instance.\n     *\n     * **Note:** In most cases creating a batch instance is not necessary as they are created when using:\n     *\n     * * {@link #change `change()`},\n     * * {@link #enqueueChange `enqueueChange()`}.\n     *\n     * @returns {module:engine/model/batch~Batch}\n     */\n\n  }, {\n    key: \"createBatch\",\n    value: function createBatch() {\n      return new Batch();\n    }\n    /**\n     * Removes all events listeners set by model instance and destroys {@link module:engine/model/document~Document}.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.document.destroy();\n      this.stopListening();\n    }\n    /**\n     * Common part of {@link module:engine/model/model~Model#change} and {@link module:engine/model/model~Model#enqueueChange}\n     * which calls callbacks and returns array of values returned by these callbacks.\n     *\n     * @private\n     * @returns {Array.<*>} Array of values returned by callbacks.\n     */\n\n  }, {\n    key: \"_runPendingChanges\",\n    value: function _runPendingChanges() {\n      var ret = [];\n      this.fire('_beforeChanges');\n\n      while (this._pendingChanges.length) {\n        // Create a new writer using batch instance created for this chain of changes.\n        var currentBatch = this._pendingChanges[0].batch;\n        this._currentWriter = new Writer(this, currentBatch); // Execute changes callback and gather the returned value.\n\n        var callbackReturnValue = this._pendingChanges[0].callback(this._currentWriter);\n\n        ret.push(callbackReturnValue);\n\n        this.document._handleChangeBlock(this._currentWriter);\n\n        this._pendingChanges.shift();\n\n        this._currentWriter = null;\n      }\n\n      this.fire('_afterChanges');\n      return ret;\n    }\n    /**\n     * Fired when entering the outermost {@link module:engine/model/model~Model#enqueueChange} or\n     * {@link module:engine/model/model~Model#change} block.\n     *\n     * @protected\n     * @event _beforeChanges\n     */\n\n    /**\n     * Fired when leaving the outermost {@link module:engine/model/model~Model#enqueueChange} or\n     * {@link module:engine/model/model~Model#change} block.\n     *\n     * @protected\n     * @event _afterChanges\n     */\n\n    /**\n     * Fired every time any {@link module:engine/model/operation/operation~Operation operation} is applied on the model\n     * using {@link #applyOperation}.\n     *\n     * Note that this event is suitable only for very specific use-cases. Use it if you need to listen to every single operation\n     * applied on the document. However, in most cases {@link module:engine/model/document~Document#event:change} should\n     * be used.\n     *\n     * A few callbacks are already added to this event by engine internal classes:\n     *\n     * * with `highest` priority operation is validated,\n     * * with `normal` priority operation is executed,\n     * * with `low` priority the {@link module:engine/model/document~Document} updates its version,\n     * * with `low` priority {@link module:engine/model/liveposition~LivePosition} and {@link module:engine/model/liverange~LiveRange}\n     * update themselves.\n     *\n     * @event applyOperation\n     * @param {Array} args Arguments of the `applyOperation` which is an array with a single element - applied\n     * {@link module:engine/model/operation/operation~Operation operation}.\n     */\n\n    /**\n     * Event fired when {@link #insertContent} method is called.\n     *\n     * The {@link #insertContent default action of that method} is implemented as a\n     * listener to this event so it can be fully customized by the features.\n     *\n     * **Note** The `selectable` parameter for the {@link #insertContent} is optional. When `undefined` value is passed the method uses\n     * `model.document.selection`.\n     *\n     * @event insertContent\n     * @param {Array} args The arguments passed to the original method.\n     */\n\n    /**\n     * Event fired when {@link #deleteContent} method is called.\n     *\n     * The {@link #deleteContent default action of that method} is implemented as a\n     * listener to this event so it can be fully customized by the features.\n     *\n     * @event deleteContent\n     * @param {Array} args The arguments passed to the original method.\n     */\n\n    /**\n     * Event fired when {@link #modifySelection} method is called.\n     *\n     * The {@link #modifySelection default action of that method} is implemented as a\n     * listener to this event so it can be fully customized by the features.\n     *\n     * @event modifySelection\n     * @param {Array} args The arguments passed to the original method.\n     */\n\n    /**\n     * Event fired when {@link #getSelectedContent} method is called.\n     *\n     * The {@link #getSelectedContent default action of that method} is implemented as a\n     * listener to this event so it can be fully customized by the features.\n     *\n     * @event getSelectedContent\n     * @param {Array} args The arguments passed to the original method.\n     */\n\n  }]);\n\n  return Model;\n}();\n\nexport { Model as default };\nmix(Model, ObservableMixin);","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/editingkeystrokehandler\n */\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n/**\n * A keystroke handler for editor editing. Its instance is available\n * in {@link module:core/editor/editor~Editor#keystrokes} so plugins\n * can register their keystrokes.\n *\n * E.g. an undo plugin would do this:\n *\n *\t\teditor.keystrokes.set( 'Ctrl+Z', 'undo' );\n *\t\teditor.keystrokes.set( 'Ctrl+Shift+Z', 'redo' );\n *\t\teditor.keystrokes.set( 'Ctrl+Y', 'redo' );\n *\n * @extends utils/keystrokehandler~KeystrokeHandler\n */\n\nvar EditingKeystrokeHandler =\n/*#__PURE__*/\nfunction (_KeystrokeHandler) {\n  _inherits(EditingKeystrokeHandler, _KeystrokeHandler);\n\n  /**\n   * Creates an instance of the keystroke handler.\n   *\n   * @param {module:core/editor/editor~Editor} editor\n   */\n  function EditingKeystrokeHandler(editor) {\n    var _this;\n\n    _classCallCheck(this, EditingKeystrokeHandler);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditingKeystrokeHandler).call(this));\n    /**\n     * The editor instance.\n     *\n     * @readonly\n     * @member {module:core/editor/editor~Editor}\n     */\n\n    _this.editor = editor;\n    return _this;\n  }\n  /**\n   * Registers a handler for the specified keystroke.\n   *\n   * The handler can be specified as a command name or a callback.\n   *\n   * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\n   * the {@link module:utils/keyboard~parseKeystroke} function.\n   * @param {Function|String} callback If a string is passed, then the keystroke will\n   * {@link module:core/editor/editor~Editor#execute execute a command}.\n   * If a function, then it will be called with the\n   * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\n   * a `cancel()` helper to both `preventDefault()` and `stopPropagation()` of the event.\n   * @param {Object} [options={}] Additional options.\n   * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of the keystroke\n   * callback. The higher the priority value the sooner the callback will be executed. Keystrokes having the same priority\n   * are called in the order they were added.\n   */\n\n\n  _createClass(EditingKeystrokeHandler, [{\n    key: \"set\",\n    value: function set(keystroke, callback) {\n      var _this2 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (typeof callback == 'string') {\n        var commandName = callback;\n\n        callback = function callback(evtData, cancel) {\n          _this2.editor.execute(commandName);\n\n          cancel();\n        };\n      }\n\n      _get(_getPrototypeOf(EditingKeystrokeHandler.prototype), \"set\", this).call(this, keystroke, callback, options);\n    }\n  }]);\n\n  return EditingKeystrokeHandler;\n}(KeystrokeHandler);\n\nexport { EditingKeystrokeHandler as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/editor/editor\n */\nimport Config from '@ckeditor/ckeditor5-utils/src/config';\nimport EditingController from '@ckeditor/ckeditor5-engine/src/controller/editingcontroller';\nimport PluginCollection from '../plugincollection';\nimport CommandCollection from '../commandcollection';\nimport Locale from '@ckeditor/ckeditor5-utils/src/locale';\nimport DataController from '@ckeditor/ckeditor5-engine/src/controller/datacontroller';\nimport Conversion from '@ckeditor/ckeditor5-engine/src/conversion/conversion';\nimport Model from '@ckeditor/ckeditor5-engine/src/model/model';\nimport EditingKeystrokeHandler from '../editingkeystrokehandler';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * Class representing a basic, generic editor.\n *\n * Check out the list of its subclasses to learn about specific editor implementations.\n *\n * All editor implementations (like {@link module:editor-classic/classiceditor~ClassicEditor} or\n * {@link module:editor-inline/inlineeditor~InlineEditor}) should extend this class. They can add their\n * own methods and properties.\n *\n * When you are implementing a plugin, then this editor represents the API\n * which your plugin can expect to get when using its {@link module:core/plugin~Plugin#editor} property.\n *\n * This API should be sufficient in order to implement the \"editing\" part of your feature\n * (schema definition, conversion, commands, keystrokes, etc.).\n * It does not define the editor UI, which is available only if the\n * the specific editor implements also the {@link module:core/editor/editorwithui~EditorWithUI} interface\n * (as most editor implementations do).\n *\n * @abstract\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Editor =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new instance of the Editor class.\n   *\n   * Usually, not to be used directly. See the static {@link module:core/editor/editor~Editor.create `create()`} method.\n   *\n   * @param {Object} [config] The editor config.\n   */\n  function Editor(config) {\n    var _this = this;\n\n    _classCallCheck(this, Editor);\n\n    var availablePlugins = this.constructor.builtinPlugins;\n    /**\n     * Holds all configurations specific to this editor instance.\n     *\n     *\t\teditor.config.get( 'image.toolbar' );\n     *\t\t// -> [ 'imageStyle:full', 'imageStyle:side', '|', 'imageTextAlternative' ]\n     *\n     * @readonly\n     * @member {module:utils/config~Config}\n     */\n\n    this.config = new Config(config, this.constructor.defaultConfig);\n    this.config.define('plugins', availablePlugins);\n    /**\n     * The plugins loaded and in use by this editor instance.\n     *\n     *\t\teditor.plugins.get( 'Clipboard' ); // -> instance of the Clipboard plugin.\n     *\n     * @readonly\n     * @member {module:core/plugincollection~PluginCollection}\n     */\n\n    this.plugins = new PluginCollection(this, availablePlugins);\n    /**\n     * Commands registered to the editor.\n     *\n     * Use the shorthand {@link #execute `editor.execute()`} method to execute commands:\n     *\n     *\t\t// Execute the bold command:\n     *\t\teditor.execute( 'bold' );\n     *\n     *\t\t// Check the state of the bold command:\n     *\t\teditor.commands.get( 'bold' ).value;\n     *\n     * @readonly\n     * @member {module:core/commandcollection~CommandCollection}\n     */\n\n    this.commands = new CommandCollection();\n    /**\n     * @readonly\n     * @member {module:utils/locale~Locale}\n     */\n\n    this.locale = new Locale(this.config.get('language'));\n    /**\n     * Shorthand for {@link module:utils/locale~Locale#t}.\n     *\n     * @see module:utils/locale~Locale#t\n     * @method #t\n     */\n\n    this.t = this.locale.t;\n    /**\n     * Indicates the editor life-cycle state.\n     *\n     * The editor is in one of the following states:\n     *\n     * * `initializing` - during the editor initialization (before {@link module:core/editor/editor~Editor.create `Editor.create()`})\n     * finished its job,\n     * * `ready` - after the promise returned by the {@link module:core/editor/editor~Editor.create `Editor.create()`}\n     * method is resolved,\n     * * `destroyed` - once the {@link #destroy `editor.destroy()`} method was called.\n     *\n     * @observable\n     * @member {'initializing'|'ready'|'destroyed'} #state\n     */\n\n    this.set('state', 'initializing');\n    this.once('ready', function () {\n      return _this.state = 'ready';\n    }, {\n      priority: 'high'\n    });\n    this.once('destroy', function () {\n      return _this.state = 'destroyed';\n    }, {\n      priority: 'high'\n    });\n    /**\n     * Defines whether this editor is in read-only mode.\n     *\n     * In read-only mode the editor {@link #commands commands} are disabled so it is not possible\n     * to modify the document by using them. Also, the editable element(s) become non-editable.\n     *\n     * In order to make the editor read-only, you can set this value directly:\n     *\n     *\t\teditor.isReadOnly = true;\n     *\n     * @observable\n     * @member {Boolean} #isReadOnly\n     */\n\n    this.set('isReadOnly', false);\n    /**\n     * The editor's model.\n     *\n     * The central point of the editor's abstract data model.\n     *\n     * @readonly\n     * @member {module:engine/model/model~Model}\n     */\n\n    this.model = new Model();\n    /**\n     * The {@link module:engine/controller/datacontroller~DataController data controller}.\n     * Used e.g. for setting and retrieving editor data.\n     *\n     * @readonly\n     * @member {module:engine/controller/datacontroller~DataController}\n     */\n\n    this.data = new DataController(this.model);\n    /**\n     * The {@link module:engine/controller/editingcontroller~EditingController editing controller}.\n     * Controls user input and rendering the content for editing.\n     *\n     * @readonly\n     * @member {module:engine/controller/editingcontroller~EditingController}\n     */\n\n    this.editing = new EditingController(this.model);\n    this.editing.view.document.bind('isReadOnly').to(this);\n    /**\n     * Conversion manager through which you can register model to view and view to model converters.\n     *\n     * See {@link module:engine/conversion/conversion~Conversion}'s documentation to learn how to add converters.\n     *\n     * @readonly\n     * @member {module:engine/conversion/conversion~Conversion}\n     */\n\n    this.conversion = new Conversion([this.editing.downcastDispatcher, this.data.downcastDispatcher], this.data.upcastDispatcher);\n    this.conversion.addAlias('dataDowncast', this.data.downcastDispatcher);\n    this.conversion.addAlias('editingDowncast', this.editing.downcastDispatcher);\n    /**\n     * Instance of the {@link module:core/editingkeystrokehandler~EditingKeystrokeHandler}.\n     *\n     * It allows setting simple keystrokes:\n     *\n     *\t\t// Execute the bold command on Ctrl+E:\n     *\t\teditor.keystrokes.set( 'Ctrl+E', 'bold' );\n     *\n     *\t\t// Execute your own callback:\n     *\t\teditor.keystrokes.set( 'Ctrl+E', ( data, cancel ) => {\n     *\t\t\tconsole.log( data.keyCode );\n     *\n     *\t\t\t// Prevent default (native) action and stop the underlying keydown event\n     *\t\t\t// so no other editor feature will interfere.\n     *\t\t\tcancel();\n     *\t\t} );\n     *\n     * Note: Certain, typing oriented keystrokes (like <kbd>Backspace</kbd> or <kbd>Enter</kbd>) are handled\n     * by low level mechanism and trying to listen to them via the keystroke handler will not work reliably.\n     * To handle those specific keystrokes see the events fired by the\n     * {@link module:engine/view/document~Document editing view document} (`editor.editing.view.document`).\n     *\n     * @readonly\n     * @member {module:core/editingkeystrokehandler~EditingKeystrokeHandler}\n     */\n\n    this.keystrokes = new EditingKeystrokeHandler(this);\n    this.keystrokes.listenTo(this.editing.view.document);\n  }\n  /**\n   * Loads and initializes plugins specified in the config.\n   *\n   * @returns {Promise.<module:core/plugin~LoadedPlugins>} A promise which resolves\n   * once the initialization is completed providing an array of loaded plugins.\n   */\n\n\n  _createClass(Editor, [{\n    key: \"initPlugins\",\n    value: function initPlugins() {\n      var config = this.config;\n      var plugins = config.get('plugins') || [];\n      var removePlugins = config.get('removePlugins') || [];\n      var extraPlugins = config.get('extraPlugins') || [];\n      return this.plugins.init(plugins.concat(extraPlugins), removePlugins);\n    }\n    /**\n     * Destroys the editor instance, releasing all resources used by it.\n     *\n     * **Note** The editor cannot be destroyed during the initialization phase so if it is called\n     * while the editor {@link #state is being initialized}, it will wait for the editor initialization before destroying it.\n     *\n     * @fires destroy\n     * @returns {Promise} A promise that resolves once the editor instance is fully destroyed.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this2 = this;\n\n      var readyPromise = Promise.resolve();\n\n      if (this.state == 'initializing') {\n        readyPromise = new Promise(function (resolve) {\n          return _this2.once('ready', resolve);\n        });\n      }\n\n      return readyPromise.then(function () {\n        _this2.fire('destroy');\n\n        _this2.stopListening();\n\n        _this2.commands.destroy();\n      }).then(function () {\n        return _this2.plugins.destroy();\n      }).then(function () {\n        _this2.model.destroy();\n\n        _this2.data.destroy();\n\n        _this2.editing.destroy();\n\n        _this2.keystrokes.destroy();\n      });\n    }\n    /**\n     * Executes specified command with given parameters.\n     *\n     * Shorthand for:\n     *\n     *\t\teditor.commands.get( commandName ).execute( ... );\n     *\n     * @param {String} commandName Name of command to execute.\n     * @param {*} [...commandParams] Command parameters.\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var _this$commands;\n\n      (_this$commands = this.commands).execute.apply(_this$commands, arguments);\n    }\n    /**\n     * Creates and initializes a new editor instance.\n     *\n     * This is an abstract method. Every editor type needs to implement its own initialization logic.\n     *\n     * See the `create()` methods of the existing editor types to learn how to use them:\n     *\n     * * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`}\n     * * {@link module:editor-balloon/ballooneditor~BalloonEditor.create `BalloonEditor.create()`}\n     * * {@link module:editor-decoupled/decouplededitor~DecoupledEditor.create `DecoupledEditor.create()`}\n     * * {@link module:editor-inline/inlineeditor~InlineEditor.create `InlineEditor.create()`}\n     *\n     * @abstract\n     * @method module:core/editor/editor~Editor.create\n     */\n\n  }]);\n\n  return Editor;\n}();\n\nexport { Editor as default };\nmix(Editor, ObservableMixin);\n/**\n * Fired when {@link module:engine/controller/datacontroller~DataController#event:ready data} and all additional\n * editor components are ready.\n *\n * Note: This event is most useful for plugin developers. When integrating the editor with your website or\n * application you do not have to listen to `editor#ready` because when the promise returned by the static\n * {@link module:core/editor/editor~Editor.create `Editor.create()`} event is resolved, the editor is already ready.\n * In fact, since the first moment when the editor instance is available to you is inside `then()`'s callback,\n * you cannot even add a listener to the `editor#ready` event.\n *\n * See also the {@link #state `editor.state`} property.\n *\n * @event ready\n */\n\n/**\n * Fired when this editor instance is destroyed. The editor at this point is not usable and this event should be used to\n * perform the clean-up in any plugin.\n *\n *\n * See also the {@link #state `editor.state`} property.\n *\n * @event destroy\n */\n\n/**\n * An array of plugins built into this editor class.\n * It is used in CKEditor 5 builds to provide a list of plugins which are later automatically initialized\n * during the editor initialization.\n *\n * They will be automatically initialized by the editor, unless listed in `config.removePlugins` and\n * unless `config.plugins` is passed.\n *\n *\t\t// Build some plugins into the editor class first.\n *\t\tClassicEditor.builtinPlugins = [ FooPlugin, BarPlugin ];\n *\n *\t\t// Normally, you need to define config.plugins, but since ClassicEditor.builtinPlugins was\n *\t\t// defined, now you can call create() without any configuration.\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> instance of the Foo plugin\n *\t\t\t\teditor.plugins.get( BarPlugin ); // -> instance of the Bar plugin\n *\t\t\t} );\n *\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement, {\n *\t\t\t\t// Don't initialize this plugins (note: it's defined by a string):\n *\t\t\t\tremovePlugins: [ 'Foo' ]\n *\t\t\t} )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> undefined\n *\t\t\t\teditor.config.get( BarPlugin ); // -> instance of the Bar plugin\n *\t\t\t} );\n *\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement, {\n *\t\t\t\t// Load only this plugin. Can also be define by a string if\n *\t\t\t\t// this plugin was built into the editor class.\n *\t\t\t\tplugins: [ FooPlugin ]\n *\t\t\t} )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> instance of the Foo plugin\n *\t\t\t\teditor.config.get( BarPlugin ); // -> undefined\n *\t\t\t} );\n *\n * See also {@link module:core/editor/editor~Editor.defaultConfig}.\n *\n * @static\n * @member {Array.<Function>} module:core/editor/editor~Editor.builtinPlugins\n */\n\n/**\n * The default config which is built into the editor class.\n * It is used in CKEditor 5 builds to provide the default config options which are later used during editor initialization.\n *\n *\t\tClassicEditor.defaultConfig = {\n *\t\t\tfoo: 1,\n *\t\t\tbar: 2\n *\t\t};\n *\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.config.get( 'foo' ); // -> 1\n *\t\t\t\teditor.config.get( 'bar' ); // -> 2\n *\t\t\t} );\n *\n *\t\t// The default options can be overridden by the config passed to create().\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement, { bar: 3 } )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.config.get( 'foo' ); // -> 1\n *\t\t\t\teditor.config.get( 'bar' ); // -> 3\n *\t\t\t} );\n *\n * See also {@link module:core/editor/editor~Editor.builtinPlugins}.\n *\n * @static\n * @member {Object} module:core/editor/editor~Editor.defaultConfig\n */","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/editor/utils/dataapimixin\n */\n\n/**\n * Implementation of the {@link module:core/editor/utils/dataapimixin~DataApi}.\n *\n * @mixin DataApiMixin\n * @implements module:core/editor/utils/dataapimixin~DataApi\n */\nvar DataApiMixin = {\n  /**\n   * @inheritDoc\n   */\n  setData: function setData(data) {\n    this.data.set(data);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  getData: function getData(options) {\n    return this.data.get(options);\n  }\n};\nexport default DataApiMixin;\n/**\n * Interface defining editor methods for setting and getting data to and from the editor's main root element\n * using the {@link module:core/editor/editor~Editor#data data pipeline}.\n *\n * This interface is not a part of the {@link module:core/editor/editor~Editor} class because one may want to implement\n * an editor with multiple root elements, in which case the methods for setting and getting data will need to be implemented\n * differently.\n *\n * @interface DataApi\n */\n\n/**\n * Sets the data in the editor.\n *\n *\t\teditor.setData( '<p>This is editor!</p>' );\n *\n * By default the editor accepts HTML. This can be controlled by injecting a different data processor.\n * See the {@glink features/markdown Markdown output} guide for more details.\n *\n * Note: Not only is the format of the data configurable, but the type of the `setData()`'s parameter does not\n * have to be a string either. You can e.g. accept an object or a DOM `DocumentFragment` if you consider this\n * the right format for you.\n *\n * @method #setData\n * @param {String} data Input data.\n */\n\n/**\n * Gets the data from the editor.\n *\n *\t\teditor.getData(); // -> '<p>This is editor!</p>'\n *\n * By default the editor outputs HTML. This can be controlled by injecting a different data processor.\n * See the {@glink features/markdown Markdown output} guide for more details.\n *\n * Note: Not only is the format of the data configurable, but the type of the `getData()`'s return value does not\n * have to be a string either. You can e.g. return an object or a DOM `DocumentFragment` if you consider this\n * the right format for you.\n *\n * @method #getData\n * @param {Object} [options]\n * @param {String} [options.rootName='main'] Root name.\n * @param {String} [options.trim='empty'] Whether returned data should be trimmed. This option is set to `'empty'` by default,\n * which means that whenever editor content is considered empty, an empty string is returned. To turn off trimming\n * use `'none'`. In such cases exact content will be returned (for example `'<p>&nbsp;</p>'` for an empty editor).\n * @returns {String} Output data.\n */","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport setDataInElement from '@ckeditor/ckeditor5-utils/src/dom/setdatainelement';\n/**\n * @module core/editor/utils/elementapimixin\n */\n\n/**\n * Implementation of the {@link module:core/editor/utils/elementapimixin~ElementApi}.\n *\n * @mixin ElementApiMixin\n * @implements module:core/editor/utils/elementapimixin~ElementApi\n */\n\nvar ElementApiMixin = {\n  /**\n   * @inheritDoc\n   */\n  updateSourceElement: function updateSourceElement() {\n    if (!this.sourceElement) {\n      /**\n       * Cannot update the source element of a detached editor.\n       *\n       * The {@link ~ElementApi#updateSourceElement `updateSourceElement()`} method cannot be called if you did not\n       * pass an element to `Editor.create()`.\n       *\n       * @error editor-missing-sourceelement\n       */\n      throw new CKEditorError('editor-missing-sourceelement: Cannot update the source element of a detached editor.');\n    }\n\n    setDataInElement(this.sourceElement, this.data.get());\n  }\n};\nexport default ElementApiMixin;\n/**\n * Interface describing an editor that replaced a DOM element (was \"initialized on an element\").\n *\n * Such an editor should provide a method to\n * {@link module:core/editor/utils/elementapimixin~ElementApi#updateSourceElement update the replaced element with the current data}.\n *\n * @interface ElementApi\n */\n\n/**\n * The element on which the editor has been initialized.\n *\n * @readonly\n * @member {HTMLElement} #sourceElement\n */\n\n/**\n * Updates the {@link #sourceElement editor source element}'s content with the data.\n *\n * @method #updateSourceElement\n */","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/setdatainelement\n */\n\n/* globals HTMLTextAreaElement */\n\n/**\n * Sets data in a given element.\n *\n * @param {HTMLElement} el The element in which the data will be set.\n * @param {String} data The data string.\n */\nexport default function setDataInElement(el, data) {\n  if (el instanceof HTMLTextAreaElement) {\n    el.value = data;\n  }\n\n  el.innerHTML = data;\n}","import _regeneratorRuntime from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/componentfactory\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * A helper class implementing the UI component ({@link module:ui/view~View view}) factory.\n *\n * It allows functions producing specific UI components to be registered under their unique names\n * in the factory. A registered component can be then instantiated by providing its name.\n * Note that names are case insensitive.\n *\n *\t\t// The editor provides localization tools for the factory.\n *\t\tconst factory = new ComponentFactory( editor );\n *\n *\t\tfactory.add( 'foo', locale => new FooView( locale ) );\n *\t\tfactory.add( 'bar', locale => new BarView( locale ) );\n *\n *\t\t// An instance of FooView.\n *\t\tconst fooInstance = factory.create( 'foo' );\n *\n *\t\t// Names are case insensitive so this is also allowed:\n *\t\tconst barInstance = factory.create( 'Bar' );\n *\n * The {@link module:core/editor/editor~Editor#locale editor locale} is passed to the factory\n * function when {@link module:ui/componentfactory~ComponentFactory#create} is called.\n */\n\nvar ComponentFactory =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the factory.\n   *\n   * @constructor\n   * @param {module:core/editor/editor~Editor} editor The editor instance.\n   */\n  function ComponentFactory(editor) {\n    _classCallCheck(this, ComponentFactory);\n\n    /**\n     * The editor instance that the factory belongs to.\n     *\n     * @readonly\n     * @member {module:core/editor/editor~Editor}\n     */\n    this.editor = editor;\n    /**\n     * Registered component factories.\n     *\n     * @private\n     * @member {Map}\n     */\n\n    this._components = new Map();\n  }\n  /**\n   * Returns an iterator of registered component names. Names are returned in lower case.\n   *\n   * @returns {Iterable.<String>}\n   */\n\n\n  _createClass(ComponentFactory, [{\n    key: \"names\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function names() {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, value;\n\n      return _regeneratorRuntime.wrap(function names$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context.prev = 3;\n              _iterator = this._components.values()[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context.next = 12;\n                break;\n              }\n\n              value = _step.value;\n              _context.next = 9;\n              return value.originalName;\n\n            case 9:\n              _iteratorNormalCompletion = true;\n              _context.next = 5;\n              break;\n\n            case 12:\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 18:\n              _context.prev = 18;\n              _context.prev = 19;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 21:\n              _context.prev = 21;\n\n              if (!_didIteratorError) {\n                _context.next = 24;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 24:\n              return _context.finish(21);\n\n            case 25:\n              return _context.finish(18);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, names, this, [[3, 14, 18, 26], [19,, 21, 25]]);\n    })\n    /**\n     * Registers a component factory function that will be used by the\n     * {@link #create create} method and called with the\n     * {@link module:core/editor/editor~Editor#locale editor locale} as an argument,\n     * allowing localization of the {@link module:ui/view~View view}.\n     *\n     * @param {String} name The name of the component.\n     * @param {Function} callback The callback that returns the component.\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(name, callback) {\n      if (this.has(name)) {\n        /**\n         * The item already exists in the component factory.\n         *\n         * @error componentfactory-item-exists\n         * @param {String} name The name of the component.\n         */\n        throw new CKEditorError('componentfactory-item-exists: The item already exists in the component factory.', {\n          name: name\n        });\n      }\n\n      this._components.set(getNormalized(name), {\n        callback: callback,\n        originalName: name\n      });\n    }\n    /**\n     * Creates an instance of a component registered in the factory under a specific name.\n     *\n     * When called, the {@link module:core/editor/editor~Editor#locale editor locale} is passed to\n     * the previously {@link #add added} factory function, allowing localization of the\n     * {@link module:ui/view~View view}.\n     *\n     * @param {String} name The name of the component.\n     * @returns {module:ui/view~View} The instantiated component view.\n     */\n\n  }, {\n    key: \"create\",\n    value: function create(name) {\n      if (!this.has(name)) {\n        /**\n         * The required component is not registered in the component factory. Please make sure\n         * the provided name is correct and the component has been correctly\n         * {@link #add added} to the factory.\n         *\n         * @error componentfactory-item-missing\n         * @param {String} name The name of the missing component.\n         */\n        throw new CKEditorError('componentfactory-item-missing: The required component is not registered in the factory.', {\n          name: name\n        });\n      }\n\n      return this._components.get(getNormalized(name)).callback(this.editor.locale);\n    }\n    /**\n     * Checks if a component of a given name is registered in the factory.\n     *\n     * @param {String} name The name of the component.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(name) {\n      return this._components.has(getNormalized(name));\n    }\n  }]);\n\n  return ComponentFactory;\n}(); //\n// Ensures that the component name used as the key in the internal map is in lower case.\n//\n// @private\n// @param {String} name\n// @returns {String}\n\n\nexport { ComponentFactory as default };\n\nfunction getNormalized(name) {\n  return String(name).toLowerCase();\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/editor/editorui\n */\nimport ComponentFactory from '@ckeditor/ckeditor5-ui/src/componentfactory';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * A class providing the minimal interface that is required to successfully bootstrap any editor UI.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar EditorUI =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the editor UI class.\n   *\n   * @param {module:core/editor/editor~Editor} editor The editor instance.\n   */\n  function EditorUI(editor) {\n    var _this = this;\n\n    _classCallCheck(this, EditorUI);\n\n    /**\n     * The editor that the UI belongs to.\n     *\n     * @readonly\n     * @member {module:core/editor/editor~Editor} #editor\n     */\n    this.editor = editor;\n    /**\n     * An instance of the {@link module:ui/componentfactory~ComponentFactory}, a registry used by plugins\n     * to register factories of specific UI components.\n     *\n     * @readonly\n     * @member {module:ui/componentfactory~ComponentFactory} #componentFactory\n     */\n\n    this.componentFactory = new ComponentFactory(editor);\n    /**\n     * Stores the information about the editor UI focus and propagates it so various plugins and components\n     * are unified as a focus group.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker} #focusTracker\n     */\n\n    this.focusTracker = new FocusTracker();\n    /**\n     * Stores all editable elements used by the editor instance.\n     *\n     * @protected\n     * @member {Map.<String,HTMLElement>}\n     */\n\n    this._editableElements = new Map(); // Informs UI components that should be refreshed after layout change.\n\n    this.listenTo(editor.editing.view.document, 'layoutChanged', function () {\n      return _this.update();\n    });\n  }\n  /**\n   * The main (outermost) DOM element of the editor UI.\n   *\n   * For example, in {@link module:editor-classic/classiceditor~ClassicEditor} it is a `<div>` which\n   * wraps the editable element and the toolbar. In {@link module:editor-inline/inlineeditor~InlineEditor}\n   * it is the editable element itself (as there is no other wrapper). However, in\n   * {@link module:editor-decoupled/decouplededitor~DecoupledEditor} it is set to `null` because this editor does not\n   * come with a single \"main\" HTML element (its editable element and toolbar are separate).\n   *\n   * This property can be understood as a shorthand for retrieving the element that a specific editor integration\n   * considers to be its main DOM element.\n   *\n   * @readonly\n   * @member {HTMLElement|null} #element\n   */\n\n\n  _createClass(EditorUI, [{\n    key: \"update\",\n\n    /**\n     * Fires the {@link module:core/editor/editorui~EditorUI#event:update `update`} event.\n     *\n     * This method should be called when the editor UI (e.g. positions of its balloons) needs to be updated due to\n     * some environmental change which CKEditor 5 is not aware of (e.g. resize of a container in which it is used).\n     */\n    value: function update() {\n      this.fire('update');\n    }\n    /**\n     * Destroys the UI.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopListening();\n      this.focusTracker.destroy();\n      this._editableElements = new Map();\n    }\n    /**\n     * Returns the editable editor element with the given name or null if editable does not exist.\n     *\n     * @param {String} [rootName=main] The editable name.\n     * @returns {HTMLElement|undefined}\n     */\n\n  }, {\n    key: \"getEditableElement\",\n    value: function getEditableElement() {\n      var rootName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n      return this._editableElements.get(rootName);\n    }\n    /**\n     * Returns array of names of all editor editable elements.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getEditableElementsNames\",\n    value: function getEditableElementsNames() {\n      return this._editableElements.keys();\n    }\n    /**\n     * Fired when the editor UI is ready.\n     *\n     * Fired before {@link module:engine/controller/datacontroller~DataController#event:ready}.\n     *\n     * @event ready\n     */\n\n    /**\n     * Fired whenever the UI (all related components) should be refreshed.\n     *\n     * **Note:**: The event is fired after each {@link module:engine/view/document~Document#event:layoutChanged}.\n     * It can also be fired manually via the {@link module:core/editor/editorui~EditorUI#update} method.\n     *\n     * @event update\n     */\n\n  }, {\n    key: \"element\",\n    get: function get() {\n      return null;\n    }\n  }]);\n\n  return EditorUI;\n}();\n\nexport { EditorUI as default };\nmix(EditorUI, EmitterMixin);","import _slicedToArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/placeholder\n */\nimport '../../theme/placeholder.css'; // Each document stores information about its placeholder elements and check functions.\n\nvar documentPlaceholders = new WeakMap();\n/**\n * A helper that enables a placeholder on the provided view element (also updates its visibility).\n * The placeholder is a CSS pseudo–element (with a text content) attached to the element.\n *\n * To change the placeholder text, simply call this method again with new options.\n *\n * To disable the placeholder, use {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} helper.\n *\n * @param {Object} [options] Configuration options of the placeholder.\n * @param {module:engine/view/view~View} options.view Editing view instance.\n * @param {module:engine/view/element~Element} options.element Element that will gain a placeholder.\n * See `options.isDirectHost` to learn more.\n * @param {String} options.text Placeholder text.\n * @param {Boolean} [options.isDirectHost=true] If set `false`, the placeholder will not be enabled directly\n * in the passed `element` but in one of its children (selected automatically, i.e. a first empty child element).\n * Useful when attaching placeholders to elements that can host other elements (not just text), for instance,\n * editable root elements.\n */\n\nexport function enablePlaceholder(options) {\n  var view = options.view,\n      element = options.element,\n      text = options.text,\n      _options$isDirectHost = options.isDirectHost,\n      isDirectHost = _options$isDirectHost === void 0 ? true : _options$isDirectHost;\n  var doc = view.document; // Use a single a single post fixer per—document to update all placeholders.\n\n  if (!documentPlaceholders.has(doc)) {\n    documentPlaceholders.set(doc, new Map()); // If a post-fixer callback makes a change, it should return `true` so other post–fixers\n    // can re–evaluate the document again.\n\n    doc.registerPostFixer(function (writer) {\n      return updateDocumentPlaceholders(doc, writer);\n    });\n  } // Store information about the element placeholder under its document.\n\n\n  documentPlaceholders.get(doc).set(element, {\n    text: text,\n    isDirectHost: isDirectHost\n  }); // Update the placeholders right away.\n\n  view.change(function (writer) {\n    return updateDocumentPlaceholders(doc, writer);\n  });\n}\n/**\n * Disables the placeholder functionality from a given element.\n *\n * See {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} to learn more.\n *\n * @param {module:engine/view/view~View} view\n * @param {module:engine/view/element~Element} element\n */\n\nexport function disablePlaceholder(view, element) {\n  var doc = element.document;\n  view.change(function (writer) {\n    if (!documentPlaceholders.has(doc)) {\n      return;\n    }\n\n    var placeholders = documentPlaceholders.get(doc);\n    var config = placeholders.get(element);\n    writer.removeAttribute('data-placeholder', config.hostElement);\n    hidePlaceholder(writer, config.hostElement);\n    placeholders.delete(element);\n  });\n}\n/**\n * Shows a placeholder in the provided element by changing related attributes and CSS classes.\n *\n * **Note**: This helper will not update the placeholder visibility nor manage the\n * it in any way in the future. What it does is a one–time state change of an element. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} and\n * {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} for full\n * placeholder functionality.\n *\n * **Note**: This helper will blindly show the placeholder directly in the root editable element if\n * one is passed, which could result in a visual clash if the editable element has some children\n * (for instance, an empty paragraph). Use {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`}\n * in that case or make sure the correct element is passed to the helper.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean} `true`, if any changes were made to the `element`.\n */\n\nexport function showPlaceholder(writer, element) {\n  if (!element.hasClass('ck-placeholder')) {\n    writer.addClass('ck-placeholder', element);\n    return true;\n  }\n\n  return false;\n}\n/**\n * Hides a placeholder in the element by changing related attributes and CSS classes.\n *\n * **Note**: This helper will not update the placeholder visibility nor manage the\n * it in any way in the future. What it does is a one–time state change of an element. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} and\n * {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} for full\n * placeholder functionality.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean} `true`, if any changes were made to the `element`.\n */\n\nexport function hidePlaceholder(writer, element) {\n  if (element.hasClass('ck-placeholder')) {\n    writer.removeClass('ck-placeholder', element);\n    return true;\n  }\n\n  return false;\n}\n/**\n * Checks if a placeholder should be displayed in the element.\n *\n * **Note**: This helper will blindly check the possibility of showing a placeholder directly in the\n * root editable element if one is passed, which may not be the expected result. If an element can\n * host other elements (not just text), most likely one of its children should be checked instead\n * because it will be the final host for the placeholder. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} in that case or make\n * sure the correct element is passed to the helper.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:engine/view/element~Element} element\n * @param {String} text\n * @returns {Boolean}\n */\n\nexport function needsPlaceholder(element) {\n  var doc = element.document; // The element was removed from document.\n\n  if (!doc) {\n    return false;\n  } // The element is empty only as long as it contains nothing but uiElements.\n\n\n  var isEmptyish = !Array.from(element.getChildren()).some(function (element) {\n    return !element.is('uiElement');\n  }); // If the element is empty and the document is blurred.\n\n  if (!doc.isFocused && isEmptyish) {\n    return true;\n  }\n\n  var viewSelection = doc.selection;\n  var selectionAnchor = viewSelection.anchor; // If document is focused and the element is empty but the selection is not anchored inside it.\n\n  if (isEmptyish && selectionAnchor && selectionAnchor.parent !== element) {\n    return true;\n  }\n\n  return false;\n} // Updates all placeholders associated with a document in a post–fixer callback.\n//\n// @private\n// @param { module:engine/model/document~Document} doc\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @returns {Boolean} True if any changes were made to the view document.\n\nfunction updateDocumentPlaceholders(doc, writer) {\n  var placeholders = documentPlaceholders.get(doc);\n  var wasViewModified = false;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = placeholders[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          element = _step$value[0],\n          config = _step$value[1];\n\n      if (updatePlaceholder(writer, element, config)) {\n        wasViewModified = true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return wasViewModified;\n} // Updates a single placeholder in a post–fixer callback.\n//\n// @private\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @param {module:engine/view/element~Element} element\n// @param {Object} config Configuration of the placeholder\n// @param {String} config.text\n// @param {Boolean} config.isDirectHost\n// @returns {Boolean} True if any changes were made to the view document.\n\n\nfunction updatePlaceholder(writer, element, config) {\n  var text = config.text,\n      isDirectHost = config.isDirectHost;\n  var hostElement = isDirectHost ? element : getChildPlaceholderHostSubstitute(element);\n  var wasViewModified = false; // When not a direct host, it could happen that there is no child element\n  // capable of displaying a placeholder.\n\n  if (!hostElement) {\n    return false;\n  } // Cache the host element. It will be necessary for disablePlaceholder() to know\n  // which element should have class and attribute removed because, depending on\n  // the config.isDirectHost value, it could be the element or one of its descendants.\n\n\n  config.hostElement = hostElement; // This may be necessary when updating the placeholder text to something else.\n\n  if (hostElement.getAttribute('data-placeholder') !== text) {\n    writer.setAttribute('data-placeholder', text, hostElement);\n    wasViewModified = true;\n  }\n\n  if (needsPlaceholder(hostElement)) {\n    if (showPlaceholder(writer, hostElement)) {\n      wasViewModified = true;\n    }\n  } else if (hidePlaceholder(writer, hostElement)) {\n    wasViewModified = true;\n  }\n\n  return wasViewModified;\n} // Gets a child element capable of displaying a placeholder if a parent element can host more\n// than just text (for instance, when it is a root editable element). The child element\n// can then be used in other placeholder helpers as a substitute of its parent.\n//\n// @private\n// @param {module:engine/view/element~Element} parent\n// @returns {module:engine/view/element~Element|null}\n\n\nfunction getChildPlaceholderHostSubstitute(parent) {\n  if (parent.childCount === 1) {\n    var firstChild = parent.getChild(0);\n\n    if (firstChild.is('element') && !firstChild.is('uiElement')) {\n      return firstChild;\n    }\n  }\n\n  return null;\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/elementreplacer\n */\n\n/**\n * Utility class allowing to hide existing HTML elements or replace them with given ones in a way that doesn't remove\n * the original elements from the DOM.\n */\nvar ElementReplacer =\n/*#__PURE__*/\nfunction () {\n  function ElementReplacer() {\n    _classCallCheck(this, ElementReplacer);\n\n    /**\n     * The elements replaced by {@link #replace} and their replacements.\n     *\n     * @private\n     * @member {Array.<Object>}\n     */\n    this._replacedElements = [];\n  }\n  /**\n   * Hides the `element` and, if specified, inserts the the given element next to it.\n   *\n   * The effect of this method can be reverted by {@link #restore}.\n   *\n   * @param {HTMLElement} element The element to replace.\n   * @param {HTMLElement} [newElement] The replacement element. If not passed, then the `element` will just be hidden.\n   */\n\n\n  _createClass(ElementReplacer, [{\n    key: \"replace\",\n    value: function replace(element, newElement) {\n      this._replacedElements.push({\n        element: element,\n        newElement: newElement\n      });\n\n      element.style.display = 'none';\n\n      if (newElement) {\n        element.parentNode.insertBefore(newElement, element.nextSibling);\n      }\n    }\n    /**\n     * Restores what {@link #replace} did.\n     */\n\n  }, {\n    key: \"restore\",\n    value: function restore() {\n      this._replacedElements.forEach(function (_ref) {\n        var element = _ref.element,\n            newElement = _ref.newElement;\n        element.style.display = '';\n\n        if (newElement) {\n          newElement.remove();\n        }\n      });\n\n      this._replacedElements = [];\n    }\n  }]);\n\n  return ElementReplacer;\n}();\n\nexport { ElementReplacer as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module editor-classic/classiceditorui\n */\nimport EditorUI from '@ckeditor/ckeditor5-core/src/editor/editorui';\nimport enableToolbarKeyboardFocus from '@ckeditor/ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus';\nimport normalizeToolbarConfig from '@ckeditor/ckeditor5-ui/src/toolbar/normalizetoolbarconfig';\nimport { enablePlaceholder } from '@ckeditor/ckeditor5-engine/src/view/placeholder';\nimport ElementReplacer from '@ckeditor/ckeditor5-utils/src/elementreplacer';\n/**\n * The classic editor UI class.\n *\n * @extends module:core/editor/editorui~EditorUI\n */\n\nvar ClassicEditorUI =\n/*#__PURE__*/\nfunction (_EditorUI) {\n  _inherits(ClassicEditorUI, _EditorUI);\n\n  /**\n   * Creates an instance of the classic editor UI class.\n   *\n   * @param {module:core/editor/editor~Editor} editor The editor instance.\n   * @param {module:ui/editorui/editoruiview~EditorUIView} view The view of the UI.\n   */\n  function ClassicEditorUI(editor, view) {\n    var _this;\n\n    _classCallCheck(this, ClassicEditorUI);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClassicEditorUI).call(this, editor));\n    /**\n     * The main (top–most) view of the editor UI.\n     *\n     * @readonly\n     * @member {module:ui/editorui/editoruiview~EditorUIView} #view\n     */\n\n    _this.view = view;\n    /**\n     * A normalized `config.toolbar` object.\n     *\n     * @private\n     * @member {Object}\n     */\n\n    _this._toolbarConfig = normalizeToolbarConfig(editor.config.get('toolbar'));\n    /**\n     * The element replacer instance used to hide the editor's source element.\n     *\n     * @protected\n     * @member {module:utils/elementreplacer~ElementReplacer}\n     */\n\n    _this._elementReplacer = new ElementReplacer();\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ClassicEditorUI, [{\n    key: \"init\",\n\n    /**\n     * Initializes the UI.\n     *\n     * @param {HTMLElement|null} replacementElement The DOM element that will be the source for the created editor.\n     */\n    value: function init(replacementElement) {\n      var editor = this.editor;\n      var view = this.view;\n      var editingView = editor.editing.view;\n      var editable = view.editable;\n      var editingRoot = editingView.document.getRoot(); // The editable UI and editing root should share the same name. Then name is used\n      // to recognize the particular editable, for instance in ARIA attributes.\n\n      editable.name = editingRoot.rootName;\n      view.render(); // The editable UI element in DOM is available for sure only after the editor UI view has been rendered.\n      // But it can be available earlier if a DOM element has been passed to BalloonEditor.create().\n\n      var editableElement = editable.element; // Register the editable UI view in the editor. A single editor instance can aggregate multiple\n      // editable areas (roots) but the classic editor has only one.\n\n      this._editableElements.set(editable.name, editableElement); // Let the global focus tracker know that the editable UI element is focusable and\n      // belongs to the editor. From now on, the focus tracker will sustain the editor focus\n      // as long as the editable is focused (e.g. the user is typing).\n\n\n      this.focusTracker.add(editableElement); // Let the editable UI element respond to the changes in the global editor focus\n      // tracker. It has been added to the same tracker a few lines above but, in reality, there are\n      // many focusable areas in the editor, like balloons, toolbars or dropdowns and as long\n      // as they have focus, the editable should act like it is focused too (although technically\n      // it isn't), e.g. by setting the proper CSS class, visually announcing focus to the user.\n      // Doing otherwise will result in editable focus styles disappearing, once e.g. the\n      // toolbar gets focused.\n\n      view.editable.bind('isFocused').to(this.focusTracker); // Bind the editable UI element to the editing view, making it an end– and entry–point\n      // of the editor's engine. This is where the engine meets the UI.\n\n      editingView.attachDomRoot(editableElement); // If an element containing the initial data of the editor was provided, replace it with\n      // an editor instance's UI in DOM until the editor is destroyed. For instance, a <textarea>\n      // can be such element.\n\n      if (replacementElement) {\n        this._elementReplacer.replace(replacementElement, this.element);\n      }\n\n      this._initPlaceholder();\n\n      this._initToolbar();\n\n      this.fire('ready');\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var view = this.view;\n      var editingView = this.editor.editing.view;\n\n      this._elementReplacer.restore();\n\n      editingView.detachDomRoot(view.editable.name);\n      view.destroy();\n\n      _get(_getPrototypeOf(ClassicEditorUI.prototype), \"destroy\", this).call(this);\n    }\n    /**\n     * Initializes the editor toolbar.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_initToolbar\",\n    value: function _initToolbar() {\n      var editor = this.editor;\n      var view = this.view;\n      var editingView = editor.editing.view; // Set–up the sticky panel with toolbar.\n\n      view.stickyPanel.bind('isActive').to(this.focusTracker, 'isFocused');\n      view.stickyPanel.limiterElement = view.element;\n\n      if (this._toolbarConfig.viewportTopOffset) {\n        view.stickyPanel.viewportTopOffset = this._toolbarConfig.viewportTopOffset;\n      }\n\n      view.toolbar.fillFromConfig(this._toolbarConfig.items, this.componentFactory);\n      enableToolbarKeyboardFocus({\n        origin: editingView,\n        originFocusTracker: this.focusTracker,\n        originKeystrokeHandler: editor.keystrokes,\n        toolbar: view.toolbar\n      });\n    }\n    /**\n     * Enable the placeholder text on the editing root, if any was configured.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_initPlaceholder\",\n    value: function _initPlaceholder() {\n      var editor = this.editor;\n      var editingView = editor.editing.view;\n      var editingRoot = editingView.document.getRoot();\n      var sourceElement = editor.sourceElement;\n      var placeholderText = editor.config.get('placeholder') || sourceElement && sourceElement.tagName.toLowerCase() === 'textarea' && sourceElement.getAttribute('placeholder');\n\n      if (placeholderText) {\n        enablePlaceholder({\n          view: editingView,\n          element: editingRoot,\n          text: placeholderText,\n          isDirectHost: false\n        });\n      }\n    }\n  }, {\n    key: \"element\",\n    get: function get() {\n      return this.view.element;\n    }\n  }]);\n\n  return ClassicEditorUI;\n}(EditorUI);\n\nexport { ClassicEditorUI as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/toolbar/normalizetoolbarconfig\n */\n\n/**\n * Normalizes the toolbar configuration (`config.toolbar`), which:\n *\n * * may be defined as an `Array`:\n *\n * \t\ttoolbar: [ 'heading', 'bold', 'italic', 'link', ... ]\n *\n * * or an `Object`:\n *\n *\t\ttoolbar: {\n *\t\t\titems: [ 'heading', 'bold', 'italic', 'link', ... ],\n *\t\t\t...\n *\t\t}\n *\n * * or may not be defined at all (`undefined`)\n *\n * and returns it in the object form.\n *\n * @param {Array|Object|undefined} config The value of `config.toolbar`.\n * @returns {Object} A normalized toolbar config object.\n */\nexport default function normalizeToolbarConfig(config) {\n  if (Array.isArray(config)) {\n    return {\n      items: config\n    };\n  }\n\n  if (!config) {\n    return {\n      items: []\n    };\n  }\n\n  return Object.assign({\n    items: []\n  }, config);\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/toolbar/enabletoolbarkeyboardfocus\n */\n\n/**\n * Enables focus/blur toolbar navigation using `Alt+F10` and `Esc` keystrokes.\n *\n * @param {Object} options Options of the utility.\n * @param {*} options.origin A view to which the focus will return when `Esc` is pressed and\n * `options.toolbar` is focused.\n * @param {module:utils/keystrokehandler~KeystrokeHandler} options.originKeystrokeHandler A keystroke\n * handler to register `Alt+F10` keystroke.\n * @param {module:utils/focustracker~FocusTracker} options.originFocusTracker A focus tracker\n * for `options.origin`.\n * @param {module:ui/toolbar/toolbarview~ToolbarView} options.toolbar A toolbar which is to gain\n * focus when `Alt+F10` is pressed.\n * @param {Function} [options.beforeFocus] A callback executed before the `options.toolbar` gains focus\n * upon the `Alt+F10` keystroke.\n * @param {Function} [options.afterBlur] A callback executed after `options.toolbar` loses focus upon\n * `Esc` keystroke but before the focus goes back to `options.origin`.\n */\nexport default function enableToolbarKeyboardFocus(_ref) {\n  var origin = _ref.origin,\n      originKeystrokeHandler = _ref.originKeystrokeHandler,\n      originFocusTracker = _ref.originFocusTracker,\n      toolbar = _ref.toolbar,\n      beforeFocus = _ref.beforeFocus,\n      afterBlur = _ref.afterBlur;\n  // Because toolbar items can get focus, the overall state of the toolbar must\n  // also be tracked.\n  originFocusTracker.add(toolbar.element); // Focus the toolbar on the keystroke, if not already focused.\n\n  originKeystrokeHandler.set('Alt+F10', function (data, cancel) {\n    if (originFocusTracker.isFocused && !toolbar.focusTracker.isFocused) {\n      if (beforeFocus) {\n        beforeFocus();\n      }\n\n      toolbar.focus();\n      cancel();\n    }\n  }); // Blur the toolbar and bring the focus back to origin.\n\n  toolbar.keystrokes.set('Esc', function (data, cancel) {\n    if (toolbar.focusTracker.isFocused) {\n      origin.focus();\n\n      if (afterBlur) {\n        afterBlur();\n      }\n\n      cancel();\n    }\n  });\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/editorui/editoruiview\n */\n\n/* globals document */\nimport View from '../view';\nimport Template from '../template';\nimport '../../theme/components/editorui/editorui.css';\n/**\n * The editor UI view class. Base class for the editor main views.\n *\n * @extends module:ui/view~View\n */\n\nvar EditorUIView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(EditorUIView, _View);\n\n  /**\n   * Creates an instance of the editor UI view class.\n   *\n   * @param {module:utils/locale~Locale} [locale] The locale instance.\n   */\n  function EditorUIView(locale) {\n    var _this;\n\n    _classCallCheck(this, EditorUIView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditorUIView).call(this, locale));\n    /**\n     * Collection of the child views, detached from the DOM\n     * structure of the editor, like panels, icons etc.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection} #body\n     */\n\n    _this.body = _this.createCollection();\n    /**\n     * The element holding elements of the 'body' region.\n     *\n     * @private\n     * @member {HTMLElement} #_bodyCollectionContainer\n     */\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(EditorUIView, [{\n    key: \"render\",\n    value: function render() {\n      _get(_getPrototypeOf(EditorUIView.prototype), \"render\", this).call(this);\n\n      this._renderBodyCollection();\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._bodyCollectionContainer.remove();\n\n      return _get(_getPrototypeOf(EditorUIView.prototype), \"destroy\", this).call(this);\n    }\n    /**\n     * Creates and appends to `<body>` the {@link #body} collection container.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_renderBodyCollection\",\n    value: function _renderBodyCollection() {\n      var bodyElement = this._bodyCollectionContainer = new Template({\n        tag: 'div',\n        attributes: {\n          class: ['ck', 'ck-reset_all', 'ck-body', 'ck-rounded-corners']\n        },\n        children: this.body\n      }).render();\n      document.body.appendChild(bodyElement);\n    }\n  }]);\n\n  return EditorUIView;\n}(View);\n\nexport { EditorUIView as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/label/labelview\n */\nimport View from '../view';\nimport '../../theme/components/label/label.css';\n/**\n * The label view class.\n *\n * @extends module:ui/view~View\n */\n\nvar LabelView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(LabelView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function LabelView(locale) {\n    var _this;\n\n    _classCallCheck(this, LabelView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LabelView).call(this, locale));\n    /**\n     * The text of the label.\n     *\n     * @observable\n     * @member {String} #text\n     */\n\n    _this.set('text');\n    /**\n     * The `for` attribute of the label (i.e. to pair with an `<input>` element).\n     *\n     * @observable\n     * @member {String} #for\n     */\n\n\n    _this.set('for');\n\n    var bind = _this.bindTemplate;\n\n    _this.setTemplate({\n      tag: 'label',\n      attributes: {\n        class: ['ck', 'ck-label'],\n        for: bind.to('for')\n      },\n      children: [{\n        text: bind.to('text')\n      }]\n    });\n\n    return _this;\n  }\n\n  return LabelView;\n}(View);\n\nexport { LabelView as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/editorui/boxed/boxededitoruiview\n */\nimport EditorUIView from '../../editorui/editoruiview';\nimport LabelView from '../../label/labelview';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\n/**\n * The boxed editor UI view class. This class represents an editor interface\n * consisting of a toolbar and an editable area, enclosed within a box.\n *\n * @extends module:ui/editorui/editoruiview~EditorUIView\n */\n\nvar BoxedEditorUIView =\n/*#__PURE__*/\nfunction (_EditorUIView) {\n  _inherits(BoxedEditorUIView, _EditorUIView);\n\n  /**\n   * Creates an instance of the boxed editor UI view class.\n   *\n   * @param {module:utils/locale~Locale} locale The locale instance..\n   */\n  function BoxedEditorUIView(locale) {\n    var _this;\n\n    _classCallCheck(this, BoxedEditorUIView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BoxedEditorUIView).call(this, locale));\n    var ariaLabelUid = uid();\n    /**\n     * Collection of the child views located in the top (`.ck-editor__top`)\n     * area of the UI.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    _this.top = _this.createCollection();\n    /**\n     * Collection of the child views located in the main (`.ck-editor__main`)\n     * area of the UI.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    _this.main = _this.createCollection();\n    /**\n     * Voice label of the UI.\n     *\n     * @protected\n     * @readonly\n     * @member {module:ui/view~View} #_voiceLabelView\n     */\n\n    _this._voiceLabelView = _this._createVoiceLabel(ariaLabelUid);\n\n    _this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-reset', 'ck-editor', 'ck-rounded-corners'],\n        role: 'application',\n        dir: 'ltr',\n        lang: locale.language,\n        'aria-labelledby': \"ck-editor__aria-label_\".concat(ariaLabelUid)\n      },\n      children: [_this._voiceLabelView, {\n        tag: 'div',\n        attributes: {\n          class: ['ck', 'ck-editor__top', 'ck-reset_all'],\n          role: 'presentation'\n        },\n        children: _this.top\n      }, {\n        tag: 'div',\n        attributes: {\n          class: ['ck', 'ck-editor__main'],\n          role: 'presentation'\n        },\n        children: _this.main\n      }]\n    });\n\n    return _this;\n  }\n  /**\n   * Creates a voice label view instance.\n   *\n   * @private\n   * @returns {module:ui/label/labelview~LabelView}\n   */\n\n\n  _createClass(BoxedEditorUIView, [{\n    key: \"_createVoiceLabel\",\n    value: function _createVoiceLabel(ariaLabelUid) {\n      var t = this.t;\n      var voiceLabel = new LabelView();\n      voiceLabel.text = t('Rich Text Editor');\n      voiceLabel.extendTemplate({\n        attributes: {\n          id: \"ck-editor__aria-label_\".concat(ariaLabelUid),\n          class: 'ck-voice-label'\n        }\n      });\n      return voiceLabel;\n    }\n  }]);\n\n  return BoxedEditorUIView;\n}(EditorUIView);\n\nexport { BoxedEditorUIView as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/editableui/inline/inlineeditableuiview\n */\nimport EditableUIView from '../../editableui/editableuiview';\n/**\n * The inline editable UI class implementing an inline {@link module:ui/editableui/editableuiview~EditableUIView}.\n *\n * @extends module:ui/editableui/editableuiview~EditableUIView\n */\n\nvar InlineEditableUIView =\n/*#__PURE__*/\nfunction (_EditableUIView) {\n  _inherits(InlineEditableUIView, _EditableUIView);\n\n  /**\n   * Creates an instance of the InlineEditableUIView class.\n   *\n   * @param {module:utils/locale~Locale} [locale] The locale instance.\n   * @param {module:engine/view/view~View} editingView The editing view instance the editable is related to.\n   * @param {HTMLElement} [editableElement] The editable element. If not specified, the\n   * {@link module:ui/editableui/editableuiview~EditableUIView}\n   * will create it. Otherwise, the existing element will be used.\n   */\n  function InlineEditableUIView(locale, editingView, editableElement) {\n    var _this;\n\n    _classCallCheck(this, InlineEditableUIView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InlineEditableUIView).call(this, locale, editingView, editableElement));\n\n    _this.extendTemplate({\n      attributes: {\n        role: 'textbox',\n        class: 'ck-editor__editable_inline'\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(InlineEditableUIView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(InlineEditableUIView.prototype), \"render\", this).call(this);\n\n      var editingView = this._editingView;\n      var t = this.t;\n      editingView.change(function (writer) {\n        var viewRoot = editingView.document.getRoot(_this2.name);\n        writer.setAttribute('aria-label', t('Rich Text Editor, %0', [_this2.name]), viewRoot);\n      });\n    }\n  }]);\n\n  return InlineEditableUIView;\n}(EditableUIView);\n\nexport { InlineEditableUIView as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/editableui/editableuiview\n */\nimport View from '../view';\n/**\n * The editable UI view class.\n *\n * @extends module:ui/view~View\n */\n\nvar EditableUIView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(EditableUIView, _View);\n\n  /**\n   * Creates an instance of EditableUIView class.\n   *\n   * @param {module:utils/locale~Locale} [locale] The locale instance.\n   * @param {module:engine/view/view~View} editingView The editing view instance the editable is related to.\n   * @param {HTMLElement} [editableElement] The editable element. If not specified, this view\n   * should create it. Otherwise, the existing element should be used.\n   */\n  function EditableUIView(locale, editingView, editableElement) {\n    var _this;\n\n    _classCallCheck(this, EditableUIView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditableUIView).call(this, locale));\n\n    _this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-content', 'ck-editor__editable', 'ck-rounded-corners']\n      }\n    });\n    /**\n     * The name of the editable UI view.\n     *\n     * @member {String} #name\n     */\n\n\n    _this.name = null;\n    /**\n     * Controls whether the editable is focused, i.e. the user is typing in it.\n     *\n     * @observable\n     * @member {Boolean} #isFocused\n     */\n\n    _this.set('isFocused', false);\n    /**\n     * The element which is the main editable element (usually the one with `contentEditable=\"true\"`).\n     *\n     * @private\n     * @member {HTMLElement} #_editableElement\n     */\n\n\n    _this._editableElement = editableElement;\n    /**\n     * Whether an external {@link #_editableElement} was passed into the constructor, which also means\n     * the view will not render its {@link #template}.\n     *\n     * @private\n     * @member {Boolean} #_hasExternalElement\n     */\n\n    _this._hasExternalElement = !!_this._editableElement;\n    /**\n     * The editing view instance the editable is related to. Editable uses the editing\n     * view to dynamically modify its certain DOM attributes after {@link #render rendering}.\n     *\n     * **Note**: The DOM attributes are performed by the editing view and not UI\n     * {@link module:ui/view~View#bindTemplate template bindings} because once rendered,\n     * the editable DOM element must remain under the full control of the engine to work properly.\n     *\n     * @protected\n     * @member {module:engine/view/view~View} #isFocused\n     */\n\n    _this._editingView = editingView;\n    return _this;\n  }\n  /**\n   * Renders the view by either applying the {@link #template} to the existing\n   * {@link #_editableElement} or assigning {@link #element} as {@link #_editableElement}.\n   */\n\n\n  _createClass(EditableUIView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(EditableUIView.prototype), \"render\", this).call(this);\n\n      if (this._hasExternalElement) {\n        this.template.apply(this.element = this._editableElement);\n      } else {\n        this._editableElement = this.element;\n      }\n\n      this.on('change:isFocused', function () {\n        return _this2._updateIsFocusedClasses();\n      });\n\n      this._updateIsFocusedClasses();\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this._hasExternalElement) {\n        this.template.revert(this._editableElement);\n      }\n\n      _get(_getPrototypeOf(EditableUIView.prototype), \"destroy\", this).call(this);\n    }\n    /**\n     * Updates the `ck-focused` and `ck-blurred` CSS classes on the {@link #element} according to\n     * the {@link #isFocused} property value using the {@link #_editingView editing view} API.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_updateIsFocusedClasses\",\n    value: function _updateIsFocusedClasses() {\n      var editingView = this._editingView;\n\n      if (editingView.isRenderingInProgress) {\n        updateAfterRender(this);\n      } else {\n        update(this);\n      }\n\n      function update(view) {\n        editingView.change(function (writer) {\n          var viewRoot = editingView.document.getRoot(view.name);\n          writer.addClass(view.isFocused ? 'ck-focused' : 'ck-blurred', viewRoot);\n          writer.removeClass(view.isFocused ? 'ck-blurred' : 'ck-focused', viewRoot);\n        });\n      } // In a case of a multi-root editor, a callback will be attached more than once (one callback for each root).\n      // While executing one callback the `isRenderingInProgress` observable is changing what causes executing another\n      // callback and render is called inside the already pending render.\n      // We need to be sure that callback is executed only when the value has changed from `true` to `false`.\n      // See https://github.com/ckeditor/ckeditor5/issues/1676.\n\n\n      function updateAfterRender(view) {\n        editingView.once('change:isRenderingInProgress', function (evt, name, value) {\n          if (!value) {\n            update(view);\n          } else {\n            updateAfterRender(view);\n          }\n        });\n      }\n    }\n  }]);\n\n  return EditableUIView;\n}(View);\n\nexport { EditableUIView as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/tounit\n */\n\n/**\n * Returns a helper function, which adds a desired trailing\n * `unit` to the passed value.\n *\n * @param {String} unit An unit like \"px\" or \"em\".\n * @returns {module:utils/dom/tounit~helper}\n */\nexport default function toUnit(unit) {\n  /**\n   * A function, which adds a pre–defined trailing `unit`\n   * to the passed `value`.\n   *\n   * @function helper\n  \t * @param {*} value A value to be given the unit.\n  \t * @returns {String} A value with the trailing unit.\n   */\n  return function (value) {\n    return value + unit;\n  };\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/panel/sticky/stickypanelview\n */\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport View from '../../view';\nimport Template from '../../template';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport '../../../theme/components/panel/stickypanel.css';\nvar toPx = toUnit('px');\n/**\n * The sticky panel view class.\n */\n\nvar StickyPanelView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(StickyPanelView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function StickyPanelView(locale) {\n    var _this;\n\n    _classCallCheck(this, StickyPanelView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StickyPanelView).call(this, locale));\n    var bind = _this.bindTemplate;\n    /**\n     * Controls whether the sticky panel should be active.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} #isActive\n     */\n\n    _this.set('isActive', false);\n    /**\n     * Controls whether the sticky panel is in the \"sticky\" state.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} #isSticky\n     */\n\n\n    _this.set('isSticky', false);\n    /**\n     * The limiter element for the sticky panel instance. Its bounding rect limits\n     * the \"stickyness\" of the panel, i.e. when the panel reaches the bottom\n     * edge of the limiter, it becomes sticky to that edge and does not float\n     * off the limiter. It is mandatory for the panel to work properly and once\n     * set, it cannot be changed.\n     *\n     * @readonly\n     * @observable\n     * @member {HTMLElement} #limiterElement\n     */\n\n\n    _this.set('limiterElement', null);\n    /**\n     * The offset from the bottom edge of {@link #limiterElement}\n     * which stops the panel from stickying any further to prevent limiter's content\n     * from being completely covered.\n     *\n     * @readonly\n     * @observable\n     * @default 50\n     * @member {Number} #limiterBottomOffset\n     */\n\n\n    _this.set('limiterBottomOffset', 50);\n    /**\n     * The offset from the top edge of the web browser's viewport which makes the\n     * panel become sticky. The default value is `0`, which means the panel becomes\n     * sticky when it's upper edge touches the top of the page viewport.\n     *\n     * This attribute is useful when the web page has UI elements positioned to the top\n     * either using `position: fixed` or `position: sticky`, which would cover the\n     * sticky panel or vice–versa (depending on the `z-index` hierarchy).\n     *\n     * @readonly\n     * @observable\n     * @default 0\n     * @member {Number} #viewportTopOffset\n     */\n\n\n    _this.set('viewportTopOffset', 0);\n    /**\n     * Controls the `margin-left` CSS style of the panel.\n     *\n     * @protected\n     * @readonly\n     * @observable\n     * @member {String} #_marginLeft\n     */\n\n\n    _this.set('_marginLeft', null);\n    /**\n     * Set `true` if the sticky panel reached the bottom edge of the\n     * {@link #limiterElement}.\n     *\n     * @protected\n     * @readonly\n     * @observable\n     * @member {Boolean} #_isStickyToTheLimiter\n     */\n\n\n    _this.set('_isStickyToTheLimiter', false);\n    /**\n     * Set `true` if the sticky panel uses the {@link #viewportTopOffset},\n     * i.e. not {@link #_isStickyToTheLimiter} and the {@link #viewportTopOffset}\n     * is not `0`.\n     *\n     * @protected\n     * @readonly\n     * @observable\n     * @member {Boolean} #_hasViewportTopOffset\n     */\n\n\n    _this.set('_hasViewportTopOffset', false);\n    /**\n     * Collection of the child views which creates balloon panel contents.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n\n    _this.content = _this.createCollection();\n    /**\n     * The DOM bounding client rect of the {@link module:ui/view~View#element} of the panel.\n     *\n     * @protected\n     * @member {Object} #_panelRect\n     */\n\n    /**\n     * The DOM bounding client rect of the {@link #limiterElement}\n     * of the panel.\n     *\n     * @protected\n     * @member {Object} #_limiterRect\n     */\n\n    /**\n     * A dummy element which visually fills the space as long as the\n     * actual panel is sticky. It prevents flickering of the UI.\n     *\n     * @protected\n     * @property {HTMLElement}\n     */\n\n    _this._contentPanelPlaceholder = new Template({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-sticky-panel__placeholder'],\n        style: {\n          display: bind.to('isSticky', function (isSticky) {\n            return isSticky ? 'block' : 'none';\n          }),\n          height: bind.to('isSticky', function (isSticky) {\n            return isSticky ? toPx(_this._panelRect.height) : null;\n          })\n        }\n      }\n    }).render();\n    /**\n     * The panel which accepts children into {@link #content} collection.\n     * Also an element which is positioned when {@link #isSticky}.\n     *\n     * @protected\n     * @property {HTMLElement}\n     */\n\n    _this._contentPanel = new Template({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-sticky-panel__content', // Toggle class of the panel when \"sticky\" state changes in the view.\n        bind.if('isSticky', 'ck-sticky-panel__content_sticky'), bind.if('_isStickyToTheLimiter', 'ck-sticky-panel__content_sticky_bottom-limit')],\n        style: {\n          width: bind.to('isSticky', function (isSticky) {\n            return isSticky ? toPx(_this._contentPanelPlaceholder.getBoundingClientRect().width) : null;\n          }),\n          top: bind.to('_hasViewportTopOffset', function (_hasViewportTopOffset) {\n            return _hasViewportTopOffset ? toPx(_this.viewportTopOffset) : null;\n          }),\n          bottom: bind.to('_isStickyToTheLimiter', function (_isStickyToTheLimiter) {\n            return _isStickyToTheLimiter ? toPx(_this.limiterBottomOffset) : null;\n          }),\n          marginLeft: bind.to('_marginLeft')\n        }\n      },\n      children: _this.content\n    }).render();\n\n    _this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-sticky-panel']\n      },\n      children: [_this._contentPanelPlaceholder, _this._contentPanel]\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(StickyPanelView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(StickyPanelView.prototype), \"render\", this).call(this); // Check if the panel should go into the sticky state immediately.\n\n\n      this._checkIfShouldBeSticky(); // Update sticky state of the panel as the window is being scrolled.\n\n\n      this.listenTo(global.window, 'scroll', function () {\n        _this2._checkIfShouldBeSticky();\n      }); // Synchronize with `model.isActive` because sticking an inactive panel is pointless.\n\n      this.listenTo(this, 'change:isActive', function () {\n        _this2._checkIfShouldBeSticky();\n      });\n    }\n    /**\n     * Analyzes the environment to decide whether the panel should\n     * be sticky or not.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_checkIfShouldBeSticky\",\n    value: function _checkIfShouldBeSticky() {\n      var panelRect = this._panelRect = this._contentPanel.getBoundingClientRect();\n\n      var limiterRect;\n\n      if (!this.limiterElement) {\n        this.isSticky = false;\n      } else {\n        limiterRect = this._limiterRect = this.limiterElement.getBoundingClientRect(); // The panel must be active to become sticky.\n\n        this.isSticky = this.isActive && // The limiter's top edge must be beyond the upper edge of the visible viewport (+the viewportTopOffset).\n        limiterRect.top < this.viewportTopOffset && // The model#limiterElement's height mustn't be smaller than the panel's height and model#limiterBottomOffset.\n        // There's no point in entering the sticky mode if the model#limiterElement is very, very small, because\n        // it would immediately set model#_isStickyToTheLimiter true and, given model#limiterBottomOffset, the panel\n        // would be positioned before the model#limiterElement.\n        this._panelRect.height + this.limiterBottomOffset < limiterRect.height;\n      } // Stick the panel to the top edge of the viewport simulating CSS position:sticky.\n      // TODO: Possibly replaced by CSS in the future http://caniuse.com/#feat=css-sticky\n\n\n      if (this.isSticky) {\n        this._isStickyToTheLimiter = limiterRect.bottom < panelRect.height + this.limiterBottomOffset + this.viewportTopOffset;\n        this._hasViewportTopOffset = !this._isStickyToTheLimiter && !!this.viewportTopOffset;\n        this._marginLeft = this._isStickyToTheLimiter ? null : toPx(-global.window.scrollX);\n      } // Detach the panel from the top edge of the viewport.\n      else {\n          this._isStickyToTheLimiter = false;\n          this._hasViewportTopOffset = false;\n          this._marginLeft = null;\n        }\n    }\n  }]);\n\n  return StickyPanelView;\n}(View);\n\nexport { StickyPanelView as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module editor-classic/classiceditoruiview\n */\nimport BoxedEditorUIView from '@ckeditor/ckeditor5-ui/src/editorui/boxed/boxededitoruiview';\nimport InlineEditableUIView from '@ckeditor/ckeditor5-ui/src/editableui/inline/inlineeditableuiview';\nimport StickyPanelView from '@ckeditor/ckeditor5-ui/src/panel/sticky/stickypanelview';\nimport ToolbarView from '@ckeditor/ckeditor5-ui/src/toolbar/toolbarview';\nimport '../theme/classiceditor.css';\n/**\n * Classic editor UI view. Uses an inline editable and a sticky toolbar, all\n * enclosed in a boxed UI view.\n *\n * @extends module:ui/editorui/boxed/boxededitoruiview~BoxedEditorUIView\n */\n\nvar ClassicEditorUIView =\n/*#__PURE__*/\nfunction (_BoxedEditorUIView) {\n  _inherits(ClassicEditorUIView, _BoxedEditorUIView);\n\n  /**\n   * Creates an instance of the classic editor UI view.\n   *\n   * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n   * @param {module:engine/view/view~View} editingView The editing view instance this view is related to.\n   */\n  function ClassicEditorUIView(locale, editingView) {\n    var _this;\n\n    _classCallCheck(this, ClassicEditorUIView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClassicEditorUIView).call(this, locale));\n    /**\n     * Sticky panel view instance. This is a parent view of a {@link #toolbar}\n     * that makes toolbar sticky.\n     *\n     * @readonly\n     * @member {module:ui/panel/sticky/stickypanelview~StickyPanelView}\n     */\n\n    _this.stickyPanel = new StickyPanelView(locale);\n    /**\n     * Toolbar view instance.\n     *\n     * @readonly\n     * @member {module:ui/toolbar/toolbarview~ToolbarView}\n     */\n\n    _this.toolbar = new ToolbarView(locale);\n    /**\n     * Editable UI view.\n     *\n     * @readonly\n     * @member {module:ui/editableui/inline/inlineeditableuiview~InlineEditableUIView}\n     */\n\n    _this.editable = new InlineEditableUIView(locale, editingView);\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ClassicEditorUIView, [{\n    key: \"render\",\n    value: function render() {\n      _get(_getPrototypeOf(ClassicEditorUIView.prototype), \"render\", this).call(this); // Set toolbar as a child of a stickyPanel and makes toolbar sticky.\n\n\n      this.stickyPanel.content.add(this.toolbar);\n      this.top.add(this.stickyPanel);\n      this.main.add(this.editable);\n    }\n  }]);\n\n  return ClassicEditorUIView;\n}(BoxedEditorUIView);\n\nexport { ClassicEditorUIView as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _assertThisInitialized from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module editor-classic/classiceditor\n */\nimport Editor from '@ckeditor/ckeditor5-core/src/editor/editor';\nimport DataApiMixin from '@ckeditor/ckeditor5-core/src/editor/utils/dataapimixin';\nimport ElementApiMixin from '@ckeditor/ckeditor5-core/src/editor/utils/elementapimixin';\nimport attachToForm from '@ckeditor/ckeditor5-core/src/editor/utils/attachtoform';\nimport HtmlDataProcessor from '@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';\nimport ClassicEditorUI from './classiceditorui';\nimport ClassicEditorUIView from './classiceditoruiview';\nimport getDataFromElement from '@ckeditor/ckeditor5-utils/src/dom/getdatafromelement';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { isElement } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * The {@glink builds/guides/overview#classic-editor classic editor} implementation.\n * It uses an inline editable and a sticky toolbar, all enclosed in a boxed UI.\n * See the {@glink examples/builds/classic-editor demo}.\n *\n * In order to create a classic editor instance, use the static\n * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`} method.\n *\n * # Classic editor and classic build\n *\n * The classic editor can be used directly from source (if you installed the\n * [`@ckeditor/ckeditor5-editor-classic`](https://www.npmjs.com/package/@ckeditor/ckeditor5-editor-classic) package)\n * but it is also available in the {@glink builds/guides/overview#classic-editor classic build}.\n *\n * {@glink builds/guides/overview Builds} are ready-to-use editors with plugins bundled in. When using the editor from\n * source you need to take care of loading all plugins by yourself\n * (through the {@link module:core/editor/editorconfig~EditorConfig#plugins `config.plugins`} option).\n * Using the editor from source gives much better flexibility and allows easier customization.\n *\n * Read more about initializing the editor from source or as a build in\n * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`}.\n *\n * @mixes module:core/editor/utils/dataapimixin~DataApiMixin\n * @mixes module:core/editor/utils/elementapimixin~ElementApiMixin\n * @implements module:core/editor/editorwithui~EditorWithUI\n * @extends module:core/editor/editor~Editor\n */\n\nvar ClassicEditor =\n/*#__PURE__*/\nfunction (_Editor) {\n  _inherits(ClassicEditor, _Editor);\n\n  /**\n   * Creates an instance of the classic editor.\n   *\n   * **Note:** do not use the constructor to create editor instances. Use the static\n   * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`} method instead.\n   *\n   * @protected\n   * @param {HTMLElement|String} sourceElementOrData The DOM element that will be the source for the created editor\n   * or the editor's initial data. For more information see\n   * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`}.\n   * @param {module:core/editor/editorconfig~EditorConfig} config The editor configuration.\n   */\n  function ClassicEditor(sourceElementOrData, config) {\n    var _this;\n\n    _classCallCheck(this, ClassicEditor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClassicEditor).call(this, config));\n\n    if (isElement(sourceElementOrData)) {\n      _this.sourceElement = sourceElementOrData;\n    }\n\n    _this.data.processor = new HtmlDataProcessor();\n\n    _this.model.document.createRoot();\n\n    _this.ui = new ClassicEditorUI(_assertThisInitialized(_this), new ClassicEditorUIView(_this.locale, _this.editing.view));\n    attachToForm(_assertThisInitialized(_this));\n    return _this;\n  }\n  /**\n   * Destroys the editor instance, releasing all resources used by it.\n   *\n   * Updates the editor's source element with the data.\n   *\n   * @returns {Promise}\n   */\n\n\n  _createClass(ClassicEditor, [{\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.sourceElement) {\n        this.updateSourceElement();\n      }\n\n      this.ui.destroy();\n      return _get(_getPrototypeOf(ClassicEditor.prototype), \"destroy\", this).call(this);\n    }\n    /**\n     * Creates a new classic editor instance.\n     *\n     * There are three ways how the editor can be initialized.\n     *\n     * # Replacing a DOM element (and loading data from it)\n     *\n     * You can initialize the editor using an existing DOM element:\n     *\n     *\t\tClassicEditor\n     *\t\t\t.create( document.querySelector( '#editor' ) )\n     *\t\t\t.then( editor => {\n     *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n     *\t\t\t} )\n     *\t\t\t.catch( err => {\n     *\t\t\t\tconsole.error( err.stack );\n     *\t\t\t} );\n     *\n     * The element's content will be used as the editor data and the element will be replaced by the editor UI.\n     *\n     * # Creating a detached editor\n     *\n     * Alternatively, you can initialize the editor by passing the initial data directly as a string.\n     * In this case, the editor will render an element that must be inserted into the DOM:\n     *\n     *\t\tClassicEditor\n     *\t\t\t.create( '<p>Hello world!</p>' )\n     *\t\t\t.then( editor => {\n     *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n     *\n     *\t\t\t\t// Initial data was provided so the editor UI element needs to be added manually to the DOM.\n     *\t\t\t\tdocument.body.appendChild( editor.ui.element );\n     *\t\t\t} )\n     *\t\t\t.catch( err => {\n     *\t\t\t\tconsole.error( err.stack );\n     *\t\t\t} );\n     *\n     * This lets you dynamically append the editor to your web page whenever it is convenient for you. You may use this method if your\n     * web page content is generated on the client-side and the DOM structure is not ready at the moment when you initialize the editor.\n     *\n     * # Replacing a DOM element (and data provided in `config.initialData`)\n     *\n     * You can also mix those two ways by providing a DOM element to be used and passing the initial data through the config:\n     *\n     *\t\tClassicEditor\n     *\t\t\t.create( document.querySelector( '#editor' ), {\n     *\t\t\t\tinitialData: '<h2>Initial data</h2><p>Foo bar.</p>'\n     *\t\t\t} )\n     *\t\t\t.then( editor => {\n     *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n     *\t\t\t} )\n     *\t\t\t.catch( err => {\n     *\t\t\t\tconsole.error( err.stack );\n     *\t\t\t} );\n     *\n     * This method can be used to initialize the editor on an existing element with specified content in case if your integration\n     * makes it difficult to set the content of the source element.\n     *\n     * Note that an error will be thrown if you pass initial data both as the first parameter and also in the config.\n     *\n     * # Configuring the editor\n     *\n     * See the {@link module:core/editor/editorconfig~EditorConfig editor configuration documentation} to learn more about\n     * customizing plugins, toolbar and other.\n     *\n     * # Using the editor from source\n     *\n     * The code samples listed in the previous sections of this documentation assume that you are using an\n     * {@glink builds/guides/overview editor build} (for example – `@ckeditor/ckeditor5-build-classic`).\n     *\n     * If you want to use the classic editor from source (`@ckeditor/ckeditor5-editor-classic/src/classiceditor`),\n     * then you need to define the list of\n     * {@link module:core/editor/editorconfig~EditorConfig#plugins plugins to be initialized} and\n     * {@link module:core/editor/editorconfig~EditorConfig#toolbar toolbar items}. Read more about using the editor from\n     * source in the {@glink builds/guides/integration/advanced-setup \"Advanced setup\" guide}.\n     *\n     * @param {HTMLElement|String} sourceElementOrData The DOM element that will be the source for the created editor\n     * or the editor's initial data.\n     *\n     * If a DOM element is passed, its content will be automatically loaded to the editor upon initialization\n     * and the {@link module:editor-classic/classiceditorui~ClassicEditorUI#element editor element} will replace the passed element\n     * in the DOM (the original one will be hidden and the editor will be injected next to it).\n     *\n     * Moreover, the editor data will be set back to the original element once the editor is destroyed and when a form, in which\n     * this element is contained, is submitted (if the original element is a `<textarea>`). This ensures seamless integration with native\n     * web forms.\n     *\n     * If the initial data is passed, a detached editor will be created. In this case you need to insert it into the DOM manually.\n     * It is available under {@link module:editor-classic/classiceditorui~ClassicEditorUI#element `editor.ui.element`} property.\n     *\n     * @param {module:core/editor/editorconfig~EditorConfig} [config] The editor configuration.\n     * @returns {Promise} A promise resolved once the editor is ready. The promise resolves with the created editor instance.\n     */\n\n  }], [{\n    key: \"create\",\n    value: function create(sourceElementOrData) {\n      var _this2 = this;\n\n      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return new Promise(function (resolve) {\n        var editor = new _this2(sourceElementOrData, config);\n        resolve(editor.initPlugins().then(function () {\n          return editor.ui.init(isElement(sourceElementOrData) ? sourceElementOrData : null);\n        }).then(function () {\n          if (!isElement(sourceElementOrData) && config.initialData) {\n            // Documented in core/editor/editorconfig.jdoc.\n            throw new CKEditorError('editor-create-initial-data: ' + 'The config.initialData option cannot be used together with initial data passed in Editor.create().');\n          }\n\n          var initialData = config.initialData || getInitialData(sourceElementOrData);\n          return editor.data.init(initialData);\n        }).then(function () {\n          return editor.fire('ready');\n        }).then(function () {\n          return editor;\n        }));\n      });\n    }\n  }]);\n\n  return ClassicEditor;\n}(Editor);\n\nexport { ClassicEditor as default };\nmix(ClassicEditor, DataApiMixin);\nmix(ClassicEditor, ElementApiMixin);\n\nfunction getInitialData(sourceElementOrData) {\n  return isElement(sourceElementOrData) ? getDataFromElement(sourceElementOrData) : sourceElementOrData;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\nimport { isFunction } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * @module core/editor/utils/attachtoform\n */\n\n/**\n * Checks if the editor is initialized on a `<textarea>` element that belongs to a form. If yes, it updates the editor's element\n * content before submitting the form.\n *\n * This helper requires the {@link module:core/editor/utils/elementapimixin~ElementApi ElementApi interface}.\n *\n * @param {module:core/editor/editor~Editor} editor Editor instance.\n */\n\nexport default function attachToForm(editor) {\n  if (!isFunction(editor.updateSourceElement)) {\n    /**\n     * The editor passed to `attachToForm()` must implement the\n     * {@link module:core/editor/utils/elementapimixin~ElementApi} interface.\n     *\n     * @error attachtoform-missing-elementapi-interface\n     */\n    throw new CKEditorError('attachtoform-missing-elementapi-interface: Editor passed to attachToForm() must implement ElementApi.');\n  }\n\n  var sourceElement = editor.sourceElement; // Only when replacing a textarea which is inside of a form element.\n\n  if (sourceElement && sourceElement.tagName.toLowerCase() === 'textarea' && sourceElement.form) {\n    var originalSubmit;\n    var form = sourceElement.form;\n\n    var onSubmit = function onSubmit() {\n      return editor.updateSourceElement();\n    }; // Replace the original form#submit() to call a custom submit function first.\n    // Check if #submit is a function because the form might have an input named \"submit\".\n\n\n    if (isFunction(form.submit)) {\n      originalSubmit = form.submit;\n\n      form.submit = function () {\n        onSubmit();\n        originalSubmit.apply(form);\n      };\n    } // Update the replaced textarea with data before each form#submit event.\n\n\n    form.addEventListener('submit', onSubmit); // Remove the submit listener and revert the original submit method on\n    // editor#destroy.\n\n    editor.on('destroy', function () {\n      form.removeEventListener('submit', onSubmit);\n\n      if (originalSubmit) {\n        form.submit = originalSubmit;\n      }\n    });\n  }\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals HTMLTextAreaElement */\n\n/**\n * @module utils/dom/getdatafromelement\n */\n\n/**\n * Gets data from a given source element.\n *\n * @param {HTMLElement} el The element from which the data will be retrieved.\n * @returns {String} The data string.\n */\nexport default function getDataFromElement(el) {\n  if (el instanceof HTMLTextAreaElement) {\n    return el.value;\n  }\n\n  return el.innerHTML;\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/datatransfer\n */\n\n/**\n * Facade over the native [`DataTransfer`](https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer) object.\n */\nvar DataTransfer =\n/*#__PURE__*/\nfunction () {\n  function DataTransfer(nativeDataTransfer) {\n    _classCallCheck(this, DataTransfer);\n\n    /**\n     * The array of files created from the native `DataTransfer#files` or `DataTransfer#items`.\n     *\n     * @readonly\n     * @member {Array.<File>} #files\n     */\n    this.files = getFiles(nativeDataTransfer);\n    /**\n     * The native DataTransfer object.\n     *\n     * @private\n     * @member {DataTransfer} #_native\n     */\n\n    this._native = nativeDataTransfer;\n  }\n  /**\n   * Returns an array of available native content types.\n   *\n   * @returns {Array.<String>}\n   */\n\n\n  _createClass(DataTransfer, [{\n    key: \"getData\",\n\n    /**\n     * Gets data from the data transfer by its mime type.\n     *\n     *\t\tdataTransfer.getData( 'text/plain' );\n     *\n     * @param {String} type The mime type. E.g. `text/html` or `text/plain`.\n     * @returns {String}\n     */\n    value: function getData(type) {\n      return this._native.getData(type);\n    }\n    /**\n     * Sets data in the data transfer.\n     *\n     * @param {String} type The mime type. E.g. `text/html` or `text/plain`.\n     * @param {String} data\n     */\n\n  }, {\n    key: \"setData\",\n    value: function setData(type, data) {\n      this._native.setData(type, data);\n    }\n  }, {\n    key: \"types\",\n    get: function get() {\n      return this._native.types;\n    }\n  }]);\n\n  return DataTransfer;\n}();\n\nexport { DataTransfer as default };\n\nfunction getFiles(nativeDataTransfer) {\n  // DataTransfer.files and items are Array-like and might not have an iterable interface.\n  var files = nativeDataTransfer.files ? Array.from(nativeDataTransfer.files) : [];\n  var items = nativeDataTransfer.items ? Array.from(nativeDataTransfer.items) : [];\n\n  if (files.length) {\n    return files;\n  } // Chrome have empty DataTransfer.files, but let get files through the items interface.\n\n\n  return items.filter(function (item) {\n    return item.kind === 'file';\n  }).map(function (item) {\n    return item.getAsFile();\n  });\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/clipboardobserver\n */\nimport DomEventObserver from '@ckeditor/ckeditor5-engine/src/view/observer/domeventobserver';\nimport EventInfo from '@ckeditor/ckeditor5-utils/src/eventinfo';\nimport DataTransfer from './datatransfer';\n/**\n * Clipboard events observer.\n *\n * Fires the following events:\n *\n * * {@link module:engine/view/document~Document#event:clipboardInput}\n * * {@link module:engine/view/document~Document#event:dragover}\n * * {@link module:engine/view/document~Document#event:drop}\n * * {@link module:engine/view/document~Document#event:paste}\n * * {@link module:engine/view/document~Document#event:copy}\n * * {@link module:engine/view/document~Document#event:cut}\n *\n * Note that this observer is not available by default (it is not added by the engine).\n * To make it available it needs to be added to {@link module:engine/view/document~Document} by\n * the {@link module:engine/view/view~View#addObserver `View#addObserver()`} method. You can also load the\n * {@link module:clipboard/clipboard~Clipboard} plugin which adds this observer automatically (because it uses it).\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\n\nvar ClipboardObserver =\n/*#__PURE__*/\nfunction (_DomEventObserver) {\n  _inherits(ClipboardObserver, _DomEventObserver);\n\n  function ClipboardObserver(view) {\n    var _this;\n\n    _classCallCheck(this, ClipboardObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClipboardObserver).call(this, view));\n    var viewDocument = _this.document;\n    _this.domEventType = ['paste', 'copy', 'cut', 'drop', 'dragover'];\n\n    _this.listenTo(viewDocument, 'paste', handleInput, {\n      priority: 'low'\n    });\n\n    _this.listenTo(viewDocument, 'drop', handleInput, {\n      priority: 'low'\n    });\n\n    function handleInput(evt, data) {\n      data.preventDefault();\n      var targetRanges = data.dropRange ? [data.dropRange] : Array.from(viewDocument.selection.getRanges());\n      var eventInfo = new EventInfo(viewDocument, 'clipboardInput');\n      viewDocument.fire(eventInfo, {\n        dataTransfer: data.dataTransfer,\n        targetRanges: targetRanges\n      }); // If CKEditor handled the input, do not bubble the original event any further.\n      // This helps external integrations recognize that fact and act accordingly.\n      // https://github.com/ckeditor/ckeditor5-upload/issues/92\n\n      if (eventInfo.stop.called) {\n        data.stopPropagation();\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(ClipboardObserver, [{\n    key: \"onDomEvent\",\n    value: function onDomEvent(domEvent) {\n      var evtData = {\n        dataTransfer: new DataTransfer(domEvent.clipboardData ? domEvent.clipboardData : domEvent.dataTransfer)\n      };\n\n      if (domEvent.type == 'drop') {\n        evtData.dropRange = getDropViewRange(this.view, domEvent);\n      }\n\n      this.fire(domEvent.type, domEvent, evtData);\n    }\n  }]);\n\n  return ClipboardObserver;\n}(DomEventObserver);\n\nexport { ClipboardObserver as default };\n\nfunction getDropViewRange(view, domEvent) {\n  var domDoc = domEvent.target.ownerDocument;\n  var x = domEvent.clientX;\n  var y = domEvent.clientY;\n  var domRange; // Webkit & Blink.\n\n  if (domDoc.caretRangeFromPoint && domDoc.caretRangeFromPoint(x, y)) {\n    domRange = domDoc.caretRangeFromPoint(x, y);\n  } // FF.\n  else if (domEvent.rangeParent) {\n      domRange = domDoc.createRange();\n      domRange.setStart(domEvent.rangeParent, domEvent.rangeOffset);\n      domRange.collapse(true);\n    }\n\n  if (domRange) {\n    return view.domConverter.domRangeToView(domRange);\n  } else {\n    return view.document.selection.getFirstRange();\n  }\n}\n/**\n * Fired as a continuation of {@link #event:paste} and {@link #event:drop} events.\n *\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#input-pipeline \"clipboard input pipeline\"}.\n *\n * Fired with a `dataTransfer` which comes from the clipboard and which content should be processed\n * and inserted into the editor.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:engine/view/document~Document#event:clipboardInput\n * @param {Object} data Event data.\n * @param {module:clipboard/datatransfer~DataTransfer} data.dataTransfer Data transfer instance.\n * @param {Array.<module:engine/view/range~Range>} data.targetRanges Ranges which are the target of the operation\n * (usually – into which the content should be inserted).\n * If clipboard input was triggered by a paste operation, then these are the selection ranges. If by a drop operation,\n * then it's the drop position (which can be different than the selection at the moment of drop).\n */\n\n/**\n * Fired when user drags content over one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:dragover\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user dropped content into one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:drop\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n * @param {module:engine/view/range~Range} dropRange The position into which the content is dropped.\n */\n\n/**\n * Fired when user pasted content into one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:paste\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user copied content from one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:copy\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user cut content from one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:cut\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * The value of the {@link module:engine/view/document~Document#event:paste},\n * {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut} events.\n *\n * In order to access clipboard data use `dataTransfer` property.\n *\n * @class module:clipboard/clipboardobserver~ClipboardEventData\n * @extends module:engine/view/observer/domeventdata~DomEventData\n */\n\n/**\n * Data transfer instance.\n *\n * @readonly\n * @member {module:clipboard/datatransfer~DataTransfer} module:clipboard/clipboardobserver~ClipboardEventData#dataTransfer\n */","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/utils/viewtoplaintext\n */\n// Elements which should not have empty-line padding.\n// Most `view.ContainerElement` want to be separate by new-line, but some are creating one structure\n// together (like `<li>`) so it is better to separate them by only one \"\\n\".\nvar smallPaddingElements = ['figcaption', 'li'];\n/**\n * Converts {@link module:engine/view/item~Item view item} and all of its children to plain text.\n *\n * @param {module:engine/view/item~Item} viewItem View item to convert.\n * @returns {String} Plain text representation of `viewItem`.\n */\n\nexport default function viewToPlainText(viewItem) {\n  var text = '';\n\n  if (viewItem.is('text') || viewItem.is('textProxy')) {\n    // If item is `Text` or `TextProxy` simple take its text data.\n    text = viewItem.data;\n  } else if (viewItem.is('img') && viewItem.hasAttribute('alt')) {\n    // Special case for images - use alt attribute if it is provided.\n    text = viewItem.getAttribute('alt');\n  } else {\n    // Other elements are document fragments, attribute elements or container elements.\n    // They don't have their own text value, so convert their children.\n    var prev = null;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = viewItem.getChildren()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var child = _step.value;\n        var childText = viewToPlainText(child); // Separate container element children with one or more new-line characters.\n\n        if (prev && (prev.is('containerElement') || child.is('containerElement'))) {\n          if (smallPaddingElements.includes(prev.name) || smallPaddingElements.includes(child.name)) {\n            text += '\\n';\n          } else {\n            text += '\\n\\n';\n          }\n        }\n\n        text += childText;\n        prev = child;\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n\n  return text;\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/clipboard\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ClipboardObserver from './clipboardobserver';\nimport plainTextToHtml from './utils/plaintexttohtml';\nimport normalizeClipboardHtml from './utils/normalizeclipboarddata';\nimport viewToPlainText from './utils/viewtoplaintext.js';\nimport HtmlDataProcessor from '@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';\n/**\n * The clipboard feature. It is responsible for intercepting the `paste` and `drop` events and\n * passing the pasted content through the clipboard pipeline in order to insert it into the editor's content.\n * It also handles the `cut` and `copy` events to fill the native clipboard with serialized editor's data.\n *\n * Read more about the clipboard integration in {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive} guide.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Clipboard =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Clipboard, _Plugin);\n\n  function Clipboard() {\n    _classCallCheck(this, Clipboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Clipboard).apply(this, arguments));\n  }\n\n  _createClass(Clipboard, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var _this = this;\n\n      var editor = this.editor;\n      var modelDocument = editor.model.document;\n      var view = editor.editing.view;\n      var viewDocument = view.document;\n      /**\n       * Data processor used to convert pasted HTML to a view structure.\n       *\n       * @private\n       * @member {module:engine/dataprocessor/htmldataprocessor~HtmlDataProcessor} #_htmlDataProcessor\n       */\n\n      this._htmlDataProcessor = new HtmlDataProcessor();\n      view.addObserver(ClipboardObserver); // The clipboard paste pipeline.\n      // Pasting and dropping is disabled when editor is read-only.\n      // See: https://github.com/ckeditor/ckeditor5-clipboard/issues/26.\n\n      this.listenTo(viewDocument, 'clipboardInput', function (evt) {\n        if (editor.isReadOnly) {\n          evt.stop();\n        }\n      }, {\n        priority: 'highest'\n      });\n      this.listenTo(viewDocument, 'clipboardInput', function (evt, data) {\n        var dataTransfer = data.dataTransfer;\n        var content = '';\n\n        if (dataTransfer.getData('text/html')) {\n          content = normalizeClipboardHtml(dataTransfer.getData('text/html'));\n        } else if (dataTransfer.getData('text/plain')) {\n          content = plainTextToHtml(dataTransfer.getData('text/plain'));\n        }\n\n        content = _this._htmlDataProcessor.toView(content);\n\n        _this.fire('inputTransformation', {\n          content: content,\n          dataTransfer: dataTransfer\n        });\n\n        view.scrollToTheSelection();\n      }, {\n        priority: 'low'\n      });\n      this.listenTo(this, 'inputTransformation', function (evt, data) {\n        if (!data.content.isEmpty) {\n          var dataController = _this.editor.data;\n          var model = _this.editor.model; // Convert the pasted content to a model document fragment.\n          // Conversion is contextual, but in this case we need an \"all allowed\" context and for that\n          // we use the $clipboardHolder item.\n\n          var modelFragment = dataController.toModel(data.content, '$clipboardHolder');\n\n          if (modelFragment.childCount == 0) {\n            return;\n          }\n\n          model.insertContent(modelFragment);\n        }\n      }, {\n        priority: 'low'\n      }); // The clipboard copy/cut pipeline.\n\n      function onCopyCut(evt, data) {\n        var dataTransfer = data.dataTransfer;\n        data.preventDefault();\n        var content = editor.data.toView(editor.model.getSelectedContent(modelDocument.selection));\n        viewDocument.fire('clipboardOutput', {\n          dataTransfer: dataTransfer,\n          content: content,\n          method: evt.name\n        });\n      }\n\n      this.listenTo(viewDocument, 'copy', onCopyCut, {\n        priority: 'low'\n      });\n      this.listenTo(viewDocument, 'cut', function (evt, data) {\n        // Cutting is disabled when editor is read-only.\n        // See: https://github.com/ckeditor/ckeditor5-clipboard/issues/26.\n        if (editor.isReadOnly) {\n          data.preventDefault();\n        } else {\n          onCopyCut(evt, data);\n        }\n      }, {\n        priority: 'low'\n      });\n      this.listenTo(viewDocument, 'clipboardOutput', function (evt, data) {\n        if (!data.content.isEmpty) {\n          data.dataTransfer.setData('text/html', _this._htmlDataProcessor.toData(data.content));\n          data.dataTransfer.setData('text/plain', viewToPlainText(data.content));\n        }\n\n        if (data.method == 'cut') {\n          editor.model.deleteContent(modelDocument.selection);\n        }\n      }, {\n        priority: 'low'\n      });\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'Clipboard';\n    }\n  }]);\n\n  return Clipboard;\n}(Plugin);\n/**\n * Fired with a `content` and `dataTransfer` objects. The `content` which comes from the clipboard (was pasted or dropped)\n * should be processed in order to be inserted into the editor. The `dataTransfer` object is available\n * in case the transformation functions needs access to a raw clipboard data.\n *\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#input-pipeline \"clipboard input pipeline\"}.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:clipboard/clipboard~Clipboard#event:inputTransformation\n * @param {Object} data Event data.\n * @param {module:engine/view/documentfragment~DocumentFragment} data.content Event data. Content to be inserted into the editor.\n * It can be modified by the event listeners. Read more about the clipboard pipelines in\n * {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive}.\n * @param {module:clipboard/datatransfer~DataTransfer} data.dataTransfer Data transfer instance.\n */\n\n/**\n * Fired on {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut}\n * with a copy of selected content. The content can be processed before it ends up in the clipboard.\n *\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#output-pipeline \"clipboard output pipeline\"}.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:engine/view/document~Document#event:clipboardOutput\n * @param {module:clipboard/clipboard~ClipboardOutputEventData} data Event data.\n */\n\n/**\n * The value of the {@link module:engine/view/document~Document#event:clipboardOutput} event.\n *\n * @class module:clipboard/clipboard~ClipboardOutputEventData\n */\n\n/**\n * Data transfer instance.\n *\n * @readonly\n * @member {module:clipboard/datatransfer~DataTransfer} module:clipboard/clipboard~ClipboardOutputEventData#dataTransfer\n */\n\n/**\n * Content to be put into the clipboard. It can be modified by the event listeners.\n * Read more about the clipboard pipelines in {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive}.\n *\n * @member {module:engine/view/documentfragment~DocumentFragment} module:clipboard/clipboard~ClipboardOutputEventData#content\n */\n\n/**\n * Whether the event was triggered by copy or cut operation.\n *\n * @member {'copy'|'cut'} module:clipboard/clipboard~ClipboardOutputEventData#method\n */\n\n\nexport { Clipboard as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/utils/plaintexttohtml\n */\n\n/**\n * Converts plain text to its HTML-ized version.\n *\n * @param {String} text The plain text to convert.\n * @returns {String} HTML generated from the plain text.\n */\nexport default function plainTextToHtml(text) {\n  text = text // Encode <>.\n  .replace(/</g, '&lt;').replace(/>/g, '&gt;') // Creates paragraphs for double line breaks and change single line breaks to <br>s.\n  .replace(/\\n\\n/g, '</p><p>').replace(/\\n/g, '<br>') // Preserve trailing spaces (only the first and last one – the rest is handled below).\n  .replace(/^\\s/, '&nbsp;').replace(/\\s$/, '&nbsp;') // Preserve other subsequent spaces now.\n  .replace(/\\s\\s/g, ' &nbsp;');\n\n  if (text.indexOf('</p><p>') > -1) {\n    // If we created paragraphs above, add the trailing ones.\n    text = \"<p>\".concat(text, \"</p>\");\n  } // TODO:\n  // * What about '\\nfoo' vs ' foo'?\n\n\n  return text;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/utils/normalizeclipboarddata\n */\n\n/**\n * Removes some popular browser quirks out of the clipboard data (HTML).\n *\n * @param {String} data The HTML data to normalize.\n * @returns {String} Normalized HTML.\n */\nexport default function normalizeClipboardData(data) {\n  return data.replace(/<span(?: class=\"Apple-converted-space\"|)>(\\s+)<\\/span>/g, function (fullMatch, spaces) {\n    // Handle the most popular and problematic case when even a single space becomes an nbsp;.\n    // Decode those to normal spaces. Read more in https://github.com/ckeditor/ckeditor5-clipboard/issues/2.\n    if (spaces.length == 1) {\n      return ' ';\n    }\n\n    return spaces;\n  });\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module enter/entercommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n/**\n * Enter command. It is used by the {@link module:enter/enter~Enter Enter feature} to handle the <kbd>Enter</kbd> key.\n *\n * @extends module:core/command~Command\n */\n\nvar EnterCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(EnterCommand, _Command);\n\n  function EnterCommand() {\n    _classCallCheck(this, EnterCommand);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EnterCommand).apply(this, arguments));\n  }\n\n  _createClass(EnterCommand, [{\n    key: \"execute\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function execute() {\n      var _this = this;\n\n      var model = this.editor.model;\n      var doc = model.document;\n      model.change(function (writer) {\n        enterBlock(_this.editor.model, writer, doc.selection, model.schema);\n\n        _this.fire('afterExecute', {\n          writer: writer\n        });\n      });\n    }\n  }]);\n\n  return EnterCommand;\n}(Command); // Creates a new block in the way that the <kbd>Enter</kbd> key is expected to work.\n//\n// @param {module:engine/model~Model} model\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n// Selection on which the action should be performed.\n// @param {module:engine/model/schema~Schema} schema\n\n\nexport { EnterCommand as default };\n\nfunction enterBlock(model, writer, selection, schema) {\n  var isSelectionEmpty = selection.isCollapsed;\n  var range = selection.getFirstRange();\n  var startElement = range.start.parent;\n  var endElement = range.end.parent; // Don't touch the roots and other limit elements.\n\n  if (schema.isLimit(startElement) || schema.isLimit(endElement)) {\n    // Delete the selected content but only if inside a single limit element.\n    // Abort, when crossing limit elements boundary (e.g. <limit1>x[x</limit1>donttouchme<limit2>y]y</limit2>).\n    // This is an edge case and it's hard to tell what should actually happen because such a selection\n    // is not entirely valid.\n    if (!isSelectionEmpty && startElement == endElement) {\n      model.deleteContent(selection);\n    }\n\n    return;\n  }\n\n  if (isSelectionEmpty) {\n    splitBlock(writer, range.start);\n  } else {\n    var leaveUnmerged = !(range.start.isAtStart && range.end.isAtEnd);\n    var isContainedWithinOneElement = startElement == endElement;\n    model.deleteContent(selection, {\n      leaveUnmerged: leaveUnmerged\n    });\n\n    if (leaveUnmerged) {\n      // Partially selected elements.\n      //\n      // <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x</h><h>^x</h>\n      if (isContainedWithinOneElement) {\n        splitBlock(writer, selection.focus);\n      } // Selection over multiple elements.\n      //\n      // <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\n      else {\n          writer.setSelection(endElement, 0);\n        }\n    }\n  }\n}\n\nfunction splitBlock(writer, splitPos) {\n  writer.split(splitPos);\n  writer.setSelection(splitPos.parent.nextSibling, 0);\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module enter/enterobserver\n */\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\nimport DomEventData from '@ckeditor/ckeditor5-engine/src/view/observer/domeventdata';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n/**\n * Enter observer introduces the {@link module:engine/view/document~Document#event:enter} event.\n *\n * @extends module:engine/view/observer~Observer\n */\n\nvar EnterObserver =\n/*#__PURE__*/\nfunction (_Observer) {\n  _inherits(EnterObserver, _Observer);\n\n  function EnterObserver(view) {\n    var _this;\n\n    _classCallCheck(this, EnterObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EnterObserver).call(this, view));\n    var doc = _this.document;\n    doc.on('keydown', function (evt, data) {\n      if (_this.isEnabled && data.keyCode == keyCodes.enter) {\n        // Save the event object to check later if it was stopped or not.\n        var event;\n        doc.once('enter', function (evt) {\n          return event = evt;\n        }, {\n          priority: 'highest'\n        });\n        doc.fire('enter', new DomEventData(doc, data.domEvent, {\n          isSoft: data.shiftKey\n        })); // Stop `keydown` event if `enter` event was stopped.\n        // https://github.com/ckeditor/ckeditor5/issues/753\n\n        if (event && event.stop.called) {\n          evt.stop();\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(EnterObserver, [{\n    key: \"observe\",\n    value: function observe() {}\n  }]);\n\n  return EnterObserver;\n}(Observer);\n/**\n * Event fired when the user presses the <kbd>Enter</kbd> key.\n *\n * Note: This event is fired by the {@link module:enter/enterobserver~EnterObserver observer}\n * (usually registered by the {@link module:enter/enter~Enter Enter feature} and\n * {@link module:enter/shiftenter~ShiftEnter ShiftEnter feature}).\n *\n * @event module:engine/view/document~Document#event:enter\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n * @param {Boolean} data.isSoft Whether it's a soft enter (<kbd>Shift</kbd>+<kbd>Enter</kbd>) or hard enter (<kbd>Enter</kbd>).\n */\n\n\nexport { EnterObserver as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module enter/enter\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport EnterCommand from './entercommand';\nimport EnterObserver from './enterobserver';\n/**\n * This plugin handles the <kbd>Enter</kbd> key (hard line break) in the editor.\n *\n * See also the {@link module:enter/shiftenter~ShiftEnter} plugin.\n *\n * For more information about this feature see the {@glink api/enter package page}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Enter =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Enter, _Plugin);\n\n  function Enter() {\n    _classCallCheck(this, Enter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Enter).apply(this, arguments));\n  }\n\n  _createClass(Enter, [{\n    key: \"init\",\n    value: function init() {\n      var editor = this.editor;\n      var view = editor.editing.view;\n      var viewDocument = view.document;\n      view.addObserver(EnterObserver);\n      editor.commands.add('enter', new EnterCommand(editor));\n      this.listenTo(viewDocument, 'enter', function (evt, data) {\n        data.preventDefault(); // The soft enter key is handled by the ShiftEnter plugin.\n\n        if (data.isSoft) {\n          return;\n        }\n\n        editor.execute('enter');\n        view.scrollToTheSelection();\n      }, {\n        priority: 'low'\n      });\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'Enter';\n    }\n  }]);\n\n  return Enter;\n}(Plugin);\n\nexport { Enter as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module enter/shiftentercommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n/**\n * ShiftEnter command. It is used by the {@link module:enter/shiftenter~ShiftEnter ShiftEnter feature} to handle\n * the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke.\n *\n * @extends module:core/command~Command\n */\n\nvar ShiftEnterCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(ShiftEnterCommand, _Command);\n\n  function ShiftEnterCommand() {\n    _classCallCheck(this, ShiftEnterCommand);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShiftEnterCommand).apply(this, arguments));\n  }\n\n  _createClass(ShiftEnterCommand, [{\n    key: \"execute\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function execute() {\n      var _this = this;\n\n      var model = this.editor.model;\n      var doc = model.document;\n      model.change(function (writer) {\n        softBreakAction(model, writer, doc.selection);\n\n        _this.fire('afterExecute', {\n          writer: writer\n        });\n      });\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var model = this.editor.model;\n      var doc = model.document;\n      this.isEnabled = isEnabled(model.schema, doc.selection);\n    }\n  }]);\n\n  return ShiftEnterCommand;\n}(Command); // Checks whether the ShiftEnter command should be enabled in the specified selection.\n//\n// @param {module:engine/model/schema~Schema} schema\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n\n\nexport { ShiftEnterCommand as default };\n\nfunction isEnabled(schema, selection) {\n  // At this moment it is okay to support single range selections only.\n  // But in the future we may need to change that.\n  if (selection.rangeCount > 1) {\n    return false;\n  }\n\n  var anchorPos = selection.anchor; // Check whether the break element can be inserted in the current selection anchor.\n\n  if (!anchorPos || !schema.checkChild(anchorPos, 'softBreak')) {\n    return false;\n  }\n\n  var range = selection.getFirstRange();\n  var startElement = range.start.parent;\n  var endElement = range.end.parent; // Do not modify the content if selection is cross-limit elements.\n\n  if ((isInsideLimitElement(startElement, schema) || isInsideLimitElement(endElement, schema)) && startElement !== endElement) {\n    return false;\n  }\n\n  return true;\n} // Creates a break in the way that the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke is expected to work.\n//\n// @param {module:engine/model~Model} model\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n// Selection on which the action should be performed.\n\n\nfunction softBreakAction(model, writer, selection) {\n  var isSelectionEmpty = selection.isCollapsed;\n  var range = selection.getFirstRange();\n  var startElement = range.start.parent;\n  var endElement = range.end.parent;\n  var isContainedWithinOneElement = startElement == endElement;\n\n  if (isSelectionEmpty) {\n    insertBreak(writer, range.end);\n  } else {\n    var leaveUnmerged = !(range.start.isAtStart && range.end.isAtEnd);\n    model.deleteContent(selection, {\n      leaveUnmerged: leaveUnmerged\n    }); // Selection within one element:\n    //\n    // <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x<br>^x</h>\n\n    if (isContainedWithinOneElement) {\n      insertBreak(writer, selection.focus);\n    } // Selection over multiple elements.\n    //\n    // <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\n    //\n    // We chose not to insert a line break in this case because:\n    //\n    // * it's not a very common scenario,\n    // * it actually surprised me when I saw the \"expected behavior\" in real life.\n    //\n    // It's ok if the user will need to be more specific where they want the <br> to be inserted.\n    else {\n        // Move the selection to the 2nd element (last step of the example above).\n        if (leaveUnmerged) {\n          writer.setSelection(endElement, 0);\n        }\n      }\n  }\n}\n\nfunction insertBreak(writer, position) {\n  var breakLineElement = writer.createElement('softBreak');\n  writer.insert(breakLineElement, position);\n  writer.setSelection(breakLineElement, 'after');\n} // Checks whether the specified `element` is a child of the limit element.\n//\n// Checking whether the `<p>` element is inside a limit element:\n//   - <$root><p>Text.</p></$root> => false\n//   - <$root><limitElement><p>Text</p></limitElement></$root> => true\n//\n// @param {module:engine/model/element~Element} element\n// @param {module:engine/schema~Schema} schema\n// @returns {Boolean}\n\n\nfunction isInsideLimitElement(element, schema) {\n  // `$root` is a limit element but in this case is an invalid element.\n  if (element.is('rootElement')) {\n    return false;\n  }\n\n  return schema.isLimit(element) || isInsideLimitElement(element.parent, schema);\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module enter/shiftenter\n */\nimport ShiftEnterCommand from './shiftentercommand';\nimport EnterObserver from './enterobserver';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n/**\n * This plugin handles the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke (soft line break) in the editor.\n *\n * See also the {@link module:enter/enter~Enter} plugin.\n *\n * For more information about this feature see the {@glink api/enter package page}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar ShiftEnter =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(ShiftEnter, _Plugin);\n\n  function ShiftEnter() {\n    _classCallCheck(this, ShiftEnter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShiftEnter).apply(this, arguments));\n  }\n\n  _createClass(ShiftEnter, [{\n    key: \"init\",\n    value: function init() {\n      var editor = this.editor;\n      var schema = editor.model.schema;\n      var conversion = editor.conversion;\n      var view = editor.editing.view;\n      var viewDocument = view.document; // Configure the schema.\n\n      schema.register('softBreak', {\n        allowWhere: '$text',\n        isInline: true\n      }); // Configure converters.\n\n      conversion.for('upcast').elementToElement({\n        model: 'softBreak',\n        view: 'br'\n      });\n      conversion.for('downcast').elementToElement({\n        model: 'softBreak',\n        view: function view(modelElement, viewWriter) {\n          return viewWriter.createEmptyElement('br');\n        }\n      });\n      view.addObserver(EnterObserver);\n      editor.commands.add('shiftEnter', new ShiftEnterCommand(editor));\n      this.listenTo(viewDocument, 'enter', function (evt, data) {\n        data.preventDefault(); // The hard enter key is handled by the Enter plugin.\n\n        if (!data.isSoft) {\n          return;\n        }\n\n        editor.execute('shiftEnter');\n        view.scrollToTheSelection();\n      }, {\n        priority: 'low'\n      });\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'ShiftEnter';\n    }\n  }]);\n\n  return ShiftEnter;\n}(Plugin);\n\nexport { ShiftEnter as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/utils/changebuffer\n */\n\n/**\n * Change buffer allows to group atomic changes (like characters that have been typed) into\n * {@link module:engine/model/batch~Batch batches}.\n *\n * Batches represent single undo steps, hence changes added to one single batch are undone together.\n *\n * The buffer has a configurable limit of atomic changes that it can accommodate. After the limit was\n * exceeded (see {@link ~ChangeBuffer#input}), a new batch is created in {@link ~ChangeBuffer#batch}.\n *\n * To use the change buffer you need to let it know about the number of changes that were added to the batch:\n *\n *\t\tconst buffer = new ChangeBuffer( model, LIMIT );\n *\n *\t\t// Later on in your feature:\n *\t\tbuffer.batch.insert( pos, insertedCharacters );\n *\t\tbuffer.input( insertedCharacters.length );\n *\n */\nvar ChangeBuffer =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new instance of the change buffer.\n   *\n   * @param {module:engine/model/model~Model} model\n   * @param {Number} [limit=20] The maximum number of atomic changes which can be contained in one batch.\n   */\n  function ChangeBuffer(model) {\n    var _this = this;\n\n    var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n\n    _classCallCheck(this, ChangeBuffer);\n\n    /**\n     * The model instance.\n     *\n     * @readonly\n     * @member {module:engine/model/model~Model} #model\n     */\n    this.model = model;\n    /**\n     * The number of atomic changes in the buffer. Once it exceeds the {@link #limit},\n     * the {@link #batch batch} is set to a new one.\n     *\n     * @readonly\n     * @member {Number} #size\n     */\n\n    this.size = 0;\n    /**\n     * The maximum number of atomic changes which can be contained in one batch.\n     *\n     * @readonly\n     * @member {Number} #limit\n     */\n\n    this.limit = limit;\n    /**\n     * Whether the buffer is locked. A locked buffer cannot be reset unless it gets unlocked.\n     *\n     * @readonly\n     * @member {Boolean} #isLocked\n     */\n\n    this.isLocked = false; // The function to be called in order to notify the buffer about batches which appeared in the document.\n    // The callback will check whether it is a new batch and in that case the buffer will be flushed.\n    //\n    // The reason why the buffer needs to be flushed whenever a new batch appears is that the changes added afterwards\n    // should be added to a new batch. For instance, when the  user types, then inserts an image, and then types again,\n    // the characters typed after inserting the image should be added to a different batch than the characters typed before.\n\n    this._changeCallback = function (evt, batch) {\n      if (batch.type != 'transparent' && batch !== _this._batch) {\n        _this._reset(true);\n      }\n    };\n\n    this._selectionChangeCallback = function () {\n      _this._reset();\n    };\n\n    this.model.document.on('change', this._changeCallback);\n    this.model.document.selection.on('change:range', this._selectionChangeCallback);\n    this.model.document.selection.on('change:attribute', this._selectionChangeCallback);\n    /**\n     * The current batch instance.\n     *\n     * @private\n     * @member #_batch\n     */\n\n    /**\n     * The callback to document the change event which later needs to be removed.\n     *\n     * @private\n     * @member #_changeCallback\n     */\n\n    /**\n     * The callback to document selection `change:attribute` and `change:range` events which resets the buffer.\n     *\n     * @private\n     * @member #_selectionChangeCallback\n     */\n  }\n  /**\n   * The current batch to which a feature should add its operations. Once the {@link #size}\n   * is reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\n   *\n   * @type {module:engine/model/batch~Batch}\n   */\n\n\n  _createClass(ChangeBuffer, [{\n    key: \"input\",\n\n    /**\n     * The input number of changes into the buffer. Once the {@link #size} is\n     * reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\n     *\n     * @param {Number} changeCount The number of atomic changes to input.\n     */\n    value: function input(changeCount) {\n      this.size += changeCount;\n\n      if (this.size >= this.limit) {\n        this._reset(true);\n      }\n    }\n    /**\n     * Locks the buffer.\n     */\n\n  }, {\n    key: \"lock\",\n    value: function lock() {\n      this.isLocked = true;\n    }\n    /**\n     * Unlocks the buffer.\n     */\n\n  }, {\n    key: \"unlock\",\n    value: function unlock() {\n      this.isLocked = false;\n    }\n    /**\n     * Destroys the buffer.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.model.document.off('change', this._changeCallback);\n      this.model.document.selection.off('change:range', this._selectionChangeCallback);\n      this.model.document.selection.off('change:attribute', this._selectionChangeCallback);\n    }\n    /**\n     * Resets the change buffer.\n     *\n     * @private\n     * @param {Boolean} [ignoreLock] Whether internal lock {@link #isLocked} should be ignored.\n     */\n\n  }, {\n    key: \"_reset\",\n    value: function _reset(ignoreLock) {\n      if (!this.isLocked || ignoreLock) {\n        this._batch = null;\n        this.size = 0;\n      }\n    }\n  }, {\n    key: \"batch\",\n    get: function get() {\n      if (!this._batch) {\n        this._batch = this.model.createBatch();\n      }\n\n      return this._batch;\n    }\n  }]);\n\n  return ChangeBuffer;\n}();\n\nexport { ChangeBuffer as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/inputcommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport ChangeBuffer from './utils/changebuffer';\n/**\n * The input command. Used by the {@link module:typing/input~Input input feature} to handle typing.\n *\n * @extends module:core/command~Command\n */\n\nvar InputCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(InputCommand, _Command);\n\n  /**\n   * Creates an instance of the command.\n   *\n   * @param {module:core/editor/editor~Editor} editor\n   * @param {Number} undoStepSize The maximum number of atomic changes\n   * which can be contained in one batch in the command buffer.\n   */\n  function InputCommand(editor, undoStepSize) {\n    var _this;\n\n    _classCallCheck(this, InputCommand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InputCommand).call(this, editor));\n    /**\n     * Typing's change buffer used to group subsequent changes into batches.\n     *\n     * @readonly\n     * @private\n     * @member {module:typing/utils/changebuffer~ChangeBuffer} #_buffer\n     */\n\n    _this._buffer = new ChangeBuffer(editor.model, undoStepSize);\n    return _this;\n  }\n  /**\n   * The current change buffer.\n   *\n   * @type {module:typing/utils/changebuffer~ChangeBuffer}\n   */\n\n\n  _createClass(InputCommand, [{\n    key: \"destroy\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function destroy() {\n      _get(_getPrototypeOf(InputCommand.prototype), \"destroy\", this).call(this);\n\n      this._buffer.destroy();\n    }\n    /**\n     * Executes the input command. It replaces the content within the given range with the given text.\n     * Replacing is a two step process, first the content within the range is removed and then the new text is inserted\n     * at the beginning of the range (which after the removal is a collapsed range).\n     *\n     * @fires execute\n     * @param {Object} [options] The command options.\n     * @param {String} [options.text=''] The text to be inserted.\n     * @param {module:engine/model/range~Range} [options.range] The range in which the text is inserted. Defaults\n     * to the first range in the current selection.\n     * @param {module:engine/model/range~Range} [options.resultRange] The range where the selection\n     * should be placed after the insertion. If not specified, the selection will be placed right after\n     * the inserted text.\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var _this2 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var model = this.editor.model;\n      var doc = model.document;\n      var text = options.text || '';\n      var textInsertions = text.length;\n      var range = options.range || doc.selection.getFirstRange();\n      var resultRange = options.resultRange;\n      model.enqueueChange(this._buffer.batch, function (writer) {\n        var isCollapsedRange = range.isCollapsed;\n\n        _this2._buffer.lock();\n\n        if (!isCollapsedRange) {\n          model.deleteContent(model.createSelection(range));\n        }\n\n        if (text) {\n          writer.insertText(text, doc.selection.getAttributes(), range.start);\n        }\n\n        if (resultRange) {\n          writer.setSelection(resultRange);\n        } else if (isCollapsedRange) {\n          // If range was collapsed just shift the selection by the number of inserted characters.\n          writer.setSelection(range.start.getShiftedBy(textInsertions));\n        }\n\n        _this2._buffer.unlock();\n\n        _this2._buffer.input(textInsertions);\n      });\n    }\n  }, {\n    key: \"buffer\",\n    get: function get() {\n      return this._buffer;\n    }\n  }]);\n\n  return InputCommand;\n}(Command);\n\nexport { InputCommand as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/utils/injectunsafekeystrokeshandling\n */\nimport { getCode } from '@ckeditor/ckeditor5-utils/src/keyboard';\n/**\n * Handles keystrokes which are unsafe for typing. This handler's logic is explained\n * in https://github.com/ckeditor/ckeditor5-typing/issues/83#issuecomment-398690251.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\n\nexport default function injectUnsafeKeystrokesHandling(editor) {\n  var latestCompositionSelection = null;\n  var model = editor.model;\n  var view = editor.editing.view;\n  var inputCommand = editor.commands.get('input');\n  view.document.on('keydown', function (evt, evtData) {\n    return handleKeydown(evtData);\n  }, {\n    priority: 'lowest'\n  });\n  view.document.on('compositionstart', handleCompositionStart, {\n    priority: 'lowest'\n  });\n  view.document.on('compositionend', function () {\n    latestCompositionSelection = model.createSelection(model.document.selection);\n  }, {\n    priority: 'lowest'\n  }); // Handles the keydown event. We need to guess whether such keystroke is going to result\n  // in typing. If so, then before character insertion happens, any selected content needs\n  // to be deleted. Otherwise the default browser deletion mechanism would be\n  // triggered, resulting in:\n  //\n  // * Hundreds of mutations which could not be handled.\n  // * But most importantly, loss of control over how the content is being deleted.\n  //\n  // The method is used in a low-priority listener, hence allowing other listeners (e.g. delete or enter features)\n  // to handle the event.\n  //\n  // @param {module:engine/view/observer/keyobserver~KeyEventData} evtData\n\n  function handleKeydown(evtData) {\n    var doc = model.document;\n    var isComposing = view.document.isComposing;\n    var isSelectionUnchanged = latestCompositionSelection && latestCompositionSelection.isEqual(doc.selection); // Reset stored composition selection.\n\n    latestCompositionSelection = null; // By relying on the state of the input command we allow disabling the entire input easily\n    // by just disabling the input command. We could’ve used here the delete command but that\n    // would mean requiring the delete feature which would block loading one without the other.\n    // We could also check the editor.isReadOnly property, but that wouldn't allow to block\n    // the input without blocking other features.\n\n    if (!inputCommand.isEnabled) {\n      return;\n    }\n\n    if (isSafeKeystroke(evtData) || doc.selection.isCollapsed) {\n      return;\n    } // If during composition, deletion should be prevented as it may remove composed sequence (#83).\n\n\n    if (isComposing && evtData.keyCode === 229) {\n      return;\n    } // If there is a `keydown` event fired with '229' keycode it might be related\n    // to recent composition. Check if selection is the same as upon ending recent composition,\n    // if so do not remove selected content as it will remove composed sequence (#83).\n\n\n    if (!isComposing && evtData.keyCode === 229 && isSelectionUnchanged) {\n      return;\n    }\n\n    deleteSelectionContent();\n  } // Handles the `compositionstart` event. It is used only in special cases to remove the contents\n  // of a non-collapsed selection so composition itself does not result in complex mutations.\n  //\n  // The special case mentioned above is a situation in which the `keydown` event is fired after\n  // `compositionstart` event. In such cases {@link #handleKeydown} cannot clear current selection\n  // contents (because it is too late and will break the composition) so the composition handler takes care of it.\n\n\n  function handleCompositionStart() {\n    var doc = model.document;\n    var isFlatSelection = doc.selection.rangeCount === 1 ? doc.selection.getFirstRange().isFlat : true; // If on `compositionstart` there is a non-collapsed selection which start and end have different parents\n    // it means the `handleKeydown()` method did not remove its contents. It happens usually because\n    // of different order of events (`compositionstart` before `keydown` - in Safari). In such cases\n    // we need to remove selection contents on composition start (#83).\n\n    if (doc.selection.isCollapsed || isFlatSelection) {\n      return;\n    }\n\n    deleteSelectionContent();\n  }\n\n  function deleteSelectionContent() {\n    var buffer = inputCommand.buffer;\n    buffer.lock();\n    model.enqueueChange(buffer.batch, function () {\n      model.deleteContent(model.document.selection);\n    });\n    buffer.unlock();\n  }\n}\nvar safeKeycodes = [getCode('arrowUp'), getCode('arrowRight'), getCode('arrowDown'), getCode('arrowLeft'), 9, // Tab\n16, // Shift\n17, // Ctrl\n18, // Alt\n19, // Pause\n20, // CapsLock\n27, // Escape\n33, // PageUp\n34, // PageDown\n35, // Home\n36, // End,\n45, // Insert,\n91, // Windows,\n93, // Menu key,\n144, // NumLock\n145, // ScrollLock,\n173, // Mute/Unmute\n174, // Volume up\n175, // Volume down,\n176, // Next song,\n177, // Previous song,\n178, // Stop,\n179, // Play/Pause,\n255 // Display brightness (increase and decrease)\n]; // Function keys.\n\nfor (var code = 112; code <= 135; code++) {\n  safeKeycodes.push(code);\n} // Returns `true` if a keystroke should not cause any content change caused by \"typing\".\n//\n// Note: This implementation is very simple and will need to be refined with time.\n//\n// @private\n// @param {engine.view.observer.keyObserver.KeyEventData} keyData\n// @returns {Boolean}\n\n\nfunction isSafeKeystroke(keyData) {\n  // Keystrokes which contain Ctrl don't represent typing.\n  if (keyData.ctrlKey) {\n    return true;\n  }\n\n  return safeKeycodes.includes(keyData.keyCode);\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/utils/utils\n */\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport diffToChanges from '@ckeditor/ckeditor5-utils/src/difftochanges';\n/**\n * Returns true if container children have mutated or more than a single text node was changed.\n *\n * @private\n * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n * @returns {Boolean}\n */\n\nexport function containerChildrenMutated(mutations) {\n  if (mutations.length == 0) {\n    return false;\n  } // Check if there is any mutation of `children` type or any mutation that changes more than one text node.\n\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = mutations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var mutation = _step.value;\n\n      if (mutation.type === 'children' && !getSingleTextNodeChange(mutation)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return false;\n}\n/**\n * Returns change made to a single text node.\n *\n * @private\n * @param {module:engine/view/observer/mutationobserver~MutatedText|\n * module:engine/view/observer/mutationobserver~MutatedChildren} mutation\n * @returns {Object|undefined} Change object (see {@link module:utils/difftochanges~diffToChanges} output)\n * or undefined if more than a single text node was changed.\n */\n\nexport function getSingleTextNodeChange(mutation) {\n  // One new node.\n  if (mutation.newChildren.length - mutation.oldChildren.length != 1) {\n    return;\n  } // Which is text.\n\n\n  var diffResult = diff(mutation.oldChildren, mutation.newChildren, compareChildNodes);\n  var changes = diffToChanges(diffResult, mutation.newChildren); // In case of [ delete, insert, insert ] the previous check will not exit.\n\n  if (changes.length > 1) {\n    return;\n  }\n\n  var change = changes[0]; // Which is text.\n\n  if (!(!!change.values[0] && change.values[0].is('text'))) {\n    return;\n  }\n\n  return change;\n}\n/**\n * Checks whether two view nodes are identical, which means they are the same object\n * or contain exactly same data (in case of text nodes).\n *\n * @private\n * @param {module:engine/view/node~Node} oldChild\n * @param {module:engine/view/node~Node} newChild\n * @returns {Boolean}\n */\n\nexport function compareChildNodes(oldChild, newChild) {\n  if (!!oldChild && oldChild.is('text') && !!newChild && newChild.is('text')) {\n    return oldChild.data === newChild.data;\n  } else {\n    return oldChild === newChild;\n  }\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/difftochanges\n */\n\n/**\n * Creates a set of changes which need to be applied to the input in order to transform\n * it into the output. This function can be used with strings or arrays.\n *\n *\t\tconst input = Array.from( 'abc' );\n *\t\tconst output = Array.from( 'xaby' );\n *\t\tconst changes = diffToChanges( diff( input, output ), output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput.splice( change.index, 0, ...change.values );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput.splice( change.index, change.howMany );\n *\t\t\t}\n *\t\t} );\n *\n *\t\tinput.join( '' ) == output.join( '' ); // -> true\n *\n * @param {Array.<'equal'|'insert'|'delete'>} diff Result of {@link module:utils/diff~diff}.\n * @param {String|Array} output The string or array which was passed as diff's output.\n * @returns {Array.<Object>} Set of changes (insert or delete) which need to be applied to the input\n * in order to transform it into the output.\n */\nexport default function diffToChanges(diff, output) {\n  var changes = [];\n  var index = 0;\n  var lastOperation;\n  diff.forEach(function (change) {\n    if (change == 'equal') {\n      pushLast();\n      index++;\n    } else if (change == 'insert') {\n      if (isContinuationOf('insert')) {\n        lastOperation.values.push(output[index]);\n      } else {\n        pushLast();\n        lastOperation = {\n          type: 'insert',\n          index: index,\n          values: [output[index]]\n        };\n      }\n\n      index++;\n    } else\n      /* if ( change == 'delete' ) */\n      {\n        if (isContinuationOf('delete')) {\n          lastOperation.howMany++;\n        } else {\n          pushLast();\n          lastOperation = {\n            type: 'delete',\n            index: index,\n            howMany: 1\n          };\n        }\n      }\n  });\n  pushLast();\n  return changes;\n\n  function pushLast() {\n    if (lastOperation) {\n      changes.push(lastOperation);\n      lastOperation = null;\n    }\n  }\n\n  function isContinuationOf(expected) {\n    return lastOperation && lastOperation.type == expected;\n  }\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/utils/injecttypingmutationshandling\n */\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport DomConverter from '@ckeditor/ckeditor5-engine/src/view/domconverter';\nimport { getSingleTextNodeChange, containerChildrenMutated } from './utils';\n/**\n * Handles mutations caused by normal typing.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\n\nexport default function injectTypingMutationsHandling(editor) {\n  editor.editing.view.document.on('mutations', function (evt, mutations, viewSelection) {\n    new MutationHandler(editor).handle(mutations, viewSelection);\n  });\n}\n/**\n * Helper class for translating DOM mutations into model changes.\n *\n * @private\n */\n\nvar MutationHandler =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the mutation handler.\n   *\n   * @param {module:core/editor/editor~Editor} editor\n   */\n  function MutationHandler(editor) {\n    _classCallCheck(this, MutationHandler);\n\n    /**\n     * Editor instance for which mutations are handled.\n     *\n     * @readonly\n     * @member {module:core/editor/editor~Editor} #editor\n     */\n    this.editor = editor;\n    /**\n     * The editing controller.\n     *\n     * @readonly\n     * @member {module:engine/controller/editingcontroller~EditingController} #editing\n     */\n\n    this.editing = this.editor.editing;\n  }\n  /**\n   * Handles given mutations.\n   *\n   * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n   * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n   * @param {module:engine/view/selection~Selection|null} viewSelection\n   */\n\n\n  _createClass(MutationHandler, [{\n    key: \"handle\",\n    value: function handle(mutations, viewSelection) {\n      if (containerChildrenMutated(mutations)) {\n        this._handleContainerChildrenMutations(mutations, viewSelection);\n      } else {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = mutations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var mutation = _step.value;\n\n            // Fortunately it will never be both.\n            this._handleTextMutation(mutation, viewSelection);\n\n            this._handleTextNodeInsertion(mutation);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Handles situations when container's children mutated during input. This can happen when\n     * the browser is trying to \"fix\" DOM in certain situations. For example, when the user starts to type\n     * in `<p><a href=\"\"><i>Link{}</i></a></p>`, the browser might change the order of elements\n     * to `<p><i><a href=\"\">Link</a>x{}</i></p>`. A similar situation happens when the spell checker\n     * replaces a word wrapped with `<strong>` with a word wrapped with a `<b>` element.\n     *\n     * To handle such situations, the common DOM ancestor of all mutations is converted to the model representation\n     * and then compared with the current model to calculate the proper text change.\n     *\n     * Note: Single text node insertion is handled in {@link #_handleTextNodeInsertion} and text node mutation is handled\n     * in {@link #_handleTextMutation}).\n     *\n     * @private\n     * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n     * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n     * @param {module:engine/view/selection~Selection|null} viewSelection\n     */\n\n  }, {\n    key: \"_handleContainerChildrenMutations\",\n    value: function _handleContainerChildrenMutations(mutations, viewSelection) {\n      // Get common ancestor of all mutations.\n      var mutationsCommonAncestor = getMutationsContainer(mutations); // Quit if there is no common ancestor.\n\n      if (!mutationsCommonAncestor) {\n        return;\n      }\n\n      var domConverter = this.editor.editing.view.domConverter; // Get common ancestor in DOM.\n\n      var domMutationCommonAncestor = domConverter.mapViewToDom(mutationsCommonAncestor); // Create fresh DomConverter so it will not use existing mapping and convert current DOM to model.\n      // This wouldn't be needed if DomConverter would allow to create fresh view without checking any mappings.\n\n      var freshDomConverter = new DomConverter();\n      var modelFromCurrentDom = this.editor.data.toModel(freshDomConverter.domToView(domMutationCommonAncestor)).getChild(0); // Current model.\n\n      var currentModel = this.editor.editing.mapper.toModelElement(mutationsCommonAncestor); // If common ancestor is not mapped, do not do anything. It probably is a parent of another view element.\n      // That means that we would need to diff model elements (see `if` below). Better return early instead of\n      // trying to get a reasonable model ancestor. It will fell into the `if` below anyway.\n      // This situation happens for example for lists. If `<ul>` is a common ancestor, `currentModel` is `undefined`\n      // because `<ul>` is not mapped (`<li>`s are).\n      // See https://github.com/ckeditor/ckeditor5/issues/718.\n\n      if (!currentModel) {\n        return;\n      } // Get children from both ancestors.\n\n\n      var modelFromDomChildren = Array.from(modelFromCurrentDom.getChildren());\n      var currentModelChildren = Array.from(currentModel.getChildren()); // Remove the last `<softBreak>` from the end of `modelFromDomChildren` if there is no `<softBreak>` in current model.\n      // If the described scenario happened, it means that this is a bogus `<br />` added by a browser.\n\n      var lastDomChild = modelFromDomChildren[modelFromDomChildren.length - 1];\n      var lastCurrentChild = currentModelChildren[currentModelChildren.length - 1];\n\n      if (lastDomChild && lastDomChild.is('softBreak') && lastCurrentChild && !lastCurrentChild.is('softBreak')) {\n        modelFromDomChildren.pop();\n      }\n\n      var schema = this.editor.model.schema; // Skip situations when common ancestor has any container elements.\n\n      if (!isSafeForTextMutation(modelFromDomChildren, schema) || !isSafeForTextMutation(currentModelChildren, schema)) {\n        return;\n      } // Replace &nbsp; inserted by the browser with normal space. See comment in `_handleTextMutation`.\n      // Replace non-texts with any character. This is potentially dangerous but passes in manual tests. The thing is\n      // that we need to take care of proper indexes so we cannot simply remove non-text elements from the content.\n      // By inserting a character we keep all the real texts on their indexes.\n\n\n      var newText = modelFromDomChildren.map(function (item) {\n        return item.is('text') ? item.data : '@';\n      }).join('').replace(/\\u00A0/g, ' ');\n      var oldText = currentModelChildren.map(function (item) {\n        return item.is('text') ? item.data : '@';\n      }).join('').replace(/\\u00A0/g, ' '); // Do nothing if mutations created same text.\n\n      if (oldText === newText) {\n        return;\n      }\n\n      var diffResult = diff(oldText, newText);\n\n      var _calculateChanges = calculateChanges(diffResult),\n          firstChangeAt = _calculateChanges.firstChangeAt,\n          insertions = _calculateChanges.insertions,\n          deletions = _calculateChanges.deletions; // Try setting new model selection according to passed view selection.\n\n\n      var modelSelectionRange = null;\n\n      if (viewSelection) {\n        modelSelectionRange = this.editing.mapper.toModelRange(viewSelection.getFirstRange());\n      }\n\n      var insertText = newText.substr(firstChangeAt, insertions);\n      var removeRange = this.editor.model.createRange(this.editor.model.createPositionAt(currentModel, firstChangeAt), this.editor.model.createPositionAt(currentModel, firstChangeAt + deletions));\n      this.editor.execute('input', {\n        text: insertText,\n        range: removeRange,\n        resultRange: modelSelectionRange\n      });\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_handleTextMutation\",\n    value: function _handleTextMutation(mutation, viewSelection) {\n      if (mutation.type != 'text') {\n        return;\n      } // Replace &nbsp; inserted by the browser with normal space.\n      // We want only normal spaces in the model and in the view. Renderer and DOM Converter will be then responsible\n      // for rendering consecutive spaces using &nbsp;, but the model and the view has to be clear.\n      // Other feature may introduce inserting non-breakable space on specific key stroke (for example shift + space).\n      // However then it will be handled outside of mutations, like enter key is.\n      // The replacing is here because it has to be done before `diff` and `diffToChanges` functions, as they\n      // take `newText` and compare it to (cleaned up) view.\n      // It could also be done in mutation observer too, however if any outside plugin would like to\n      // introduce additional events for mutations, they would get already cleaned up version (this may be good or not).\n\n\n      var newText = mutation.newText.replace(/\\u00A0/g, ' '); // To have correct `diffResult`, we also compare view node text data with &nbsp; replaced by space.\n\n      var oldText = mutation.oldText.replace(/\\u00A0/g, ' '); // Do nothing if mutations created same text.\n\n      if (oldText === newText) {\n        return;\n      }\n\n      var diffResult = diff(oldText, newText);\n\n      var _calculateChanges2 = calculateChanges(diffResult),\n          firstChangeAt = _calculateChanges2.firstChangeAt,\n          insertions = _calculateChanges2.insertions,\n          deletions = _calculateChanges2.deletions; // Try setting new model selection according to passed view selection.\n\n\n      var modelSelectionRange = null;\n\n      if (viewSelection) {\n        modelSelectionRange = this.editing.mapper.toModelRange(viewSelection.getFirstRange());\n      } // Get the position in view and model where the changes will happen.\n\n\n      var viewPos = this.editing.view.createPositionAt(mutation.node, firstChangeAt);\n      var modelPos = this.editing.mapper.toModelPosition(viewPos);\n      var removeRange = this.editor.model.createRange(modelPos, modelPos.getShiftedBy(deletions));\n      var insertText = newText.substr(firstChangeAt, insertions);\n      this.editor.execute('input', {\n        text: insertText,\n        range: removeRange,\n        resultRange: modelSelectionRange\n      });\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_handleTextNodeInsertion\",\n    value: function _handleTextNodeInsertion(mutation) {\n      if (mutation.type != 'children') {\n        return;\n      }\n\n      var change = getSingleTextNodeChange(mutation);\n      var viewPos = this.editing.view.createPositionAt(mutation.node, change.index);\n      var modelPos = this.editing.mapper.toModelPosition(viewPos);\n      var insertedText = change.values[0].data;\n      this.editor.execute('input', {\n        // Replace &nbsp; inserted by the browser with normal space.\n        // See comment in `_handleTextMutation`.\n        // In this case we don't need to do this before `diff` because we diff whole nodes.\n        // Just change &nbsp; in case there are some.\n        text: insertedText.replace(/\\u00A0/g, ' '),\n        range: this.editor.model.createRange(modelPos)\n      });\n    }\n  }]);\n\n  return MutationHandler;\n}(); // Returns first common ancestor of all mutations that is either {@link module:engine/view/containerelement~ContainerElement}\n// or {@link module:engine/view/rootelement~RootElement}.\n//\n// @private\n// @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n// module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n// @returns {module:engine/view/containerelement~ContainerElement|engine/view/rootelement~RootElement|undefined}\n\n\nfunction getMutationsContainer(mutations) {\n  var lca = mutations.map(function (mutation) {\n    return mutation.node;\n  }).reduce(function (commonAncestor, node) {\n    return commonAncestor.getCommonAncestor(node, {\n      includeSelf: true\n    });\n  });\n\n  if (!lca) {\n    return;\n  } // We need to look for container and root elements only, so check all LCA's\n  // ancestors (starting from itself).\n\n\n  return lca.getAncestors({\n    includeSelf: true,\n    parentFirst: true\n  }).find(function (element) {\n    return element.is('containerElement') || element.is('rootElement');\n  });\n} // Returns true if provided array contains content that won't be problematic during diffing and text mutation handling.\n//\n// @param {Array.<module:engine/model/node~Node>} children\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\n\n\nfunction isSafeForTextMutation(children, schema) {\n  return children.every(function (child) {\n    return schema.isInline(child);\n  });\n} // Calculates first change index and number of characters that should be inserted and deleted starting from that index.\n//\n// @private\n// @param diffResult\n// @returns {{insertions: number, deletions: number, firstChangeAt: *}}\n\n\nfunction calculateChanges(diffResult) {\n  // Index where the first change happens. Used to set the position from which nodes will be removed and where will be inserted.\n  var firstChangeAt = null; // Index where the last change happens. Used to properly count how many characters have to be removed and inserted.\n\n  var lastChangeAt = null; // Get `firstChangeAt` and `lastChangeAt`.\n\n  for (var i = 0; i < diffResult.length; i++) {\n    var change = diffResult[i];\n\n    if (change != 'equal') {\n      firstChangeAt = firstChangeAt === null ? i : firstChangeAt;\n      lastChangeAt = i;\n    }\n  } // How many characters, starting from `firstChangeAt`, should be removed.\n\n\n  var deletions = 0; // How many characters, starting from `firstChangeAt`, should be inserted.\n\n  var insertions = 0;\n\n  for (var _i = firstChangeAt; _i <= lastChangeAt; _i++) {\n    // If there is no change (equal) or delete, the character is existing in `oldText`. We count it for removing.\n    if (diffResult[_i] != 'insert') {\n      deletions++;\n    } // If there is no change (equal) or insert, the character is existing in `newText`. We count it for inserting.\n\n\n    if (diffResult[_i] != 'delete') {\n      insertions++;\n    }\n  }\n\n  return {\n    insertions: insertions,\n    deletions: deletions,\n    firstChangeAt: firstChangeAt\n  };\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/input\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport InputCommand from './inputcommand';\nimport injectUnsafeKeystrokesHandling from './utils/injectunsafekeystrokeshandling';\nimport injectTypingMutationsHandling from './utils/injecttypingmutationshandling';\n/**\n * Handles text input coming from the keyboard or other input methods.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Input =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Input, _Plugin);\n\n  function Input() {\n    _classCallCheck(this, Input);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Input).apply(this, arguments));\n  }\n\n  _createClass(Input, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var editor = this.editor; // TODO The above default configuration value should be defined using editor.config.define() once it's fixed.\n\n      var inputCommand = new InputCommand(editor, editor.config.get('typing.undoStep') || 20);\n      editor.commands.add('input', inputCommand);\n      injectUnsafeKeystrokesHandling(editor);\n      injectTypingMutationsHandling(editor);\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'Input';\n    }\n  }]);\n\n  return Input;\n}(Plugin);\n\nexport { Input as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/deletecommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport count from '@ckeditor/ckeditor5-utils/src/count';\nimport ChangeBuffer from './utils/changebuffer';\n/**\n * The delete command. Used by the {@link module:typing/delete~Delete delete feature} to handle the <kbd>Delete</kbd> and\n * <kbd>Backspace</kbd> keys.\n *\n * @extends module:core/command~Command\n */\n\nvar DeleteCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(DeleteCommand, _Command);\n\n  /**\n   * Creates an instance of the command.\n   *\n   * @param {module:core/editor/editor~Editor} editor\n   * @param {'forward'|'backward'} direction The directionality of the delete describing in what direction it\n   * should consume the content when the selection is collapsed.\n   */\n  function DeleteCommand(editor, direction) {\n    var _this;\n\n    _classCallCheck(this, DeleteCommand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DeleteCommand).call(this, editor));\n    /**\n     * The directionality of the delete describing in what direction it should\n     * consume the content when the selection is collapsed.\n     *\n     * @readonly\n     * @member {'forward'|'backward'} #direction\n     */\n\n    _this.direction = direction;\n    /**\n     * Delete's change buffer used to group subsequent changes into batches.\n     *\n     * @readonly\n     * @private\n     * @member {typing.ChangeBuffer} #buffer\n     */\n\n    _this._buffer = new ChangeBuffer(editor.model, editor.config.get('typing.undoStep'));\n    return _this;\n  }\n  /**\n   * The current change buffer.\n   *\n   * @type {module:typing/utils/changebuffer~ChangeBuffer}\n   */\n\n\n  _createClass(DeleteCommand, [{\n    key: \"execute\",\n\n    /**\n     * Executes the delete command. Depending on whether the selection is collapsed or not, deletes its content\n     * or a piece of content in the {@link #direction defined direction}.\n     *\n     * @fires execute\n     * @param {Object} [options] The command options.\n     * @param {'character'} [options.unit='character'] See {@link module:engine/model/utils/modifyselection~modifySelection}'s options.\n     * @param {Number} [options.sequence=1] A number describing which subsequent delete event it is without the key being released.\n     * See the {@link module:engine/view/document~Document#event:delete} event data.\n     */\n    value: function execute() {\n      var _this2 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var model = this.editor.model;\n      var doc = model.document;\n      model.enqueueChange(this._buffer.batch, function (writer) {\n        _this2._buffer.lock();\n\n        var selection = writer.createSelection(doc.selection); // Do not replace the whole selected content if selection was collapsed.\n        // This prevents such situation:\n        //\n        // <h1></h1><p>[]</p>\t-->  <h1>[</h1><p>]</p> \t\t-->  <p></p>\n        // starting content\t\t-->   after `modifySelection`\t-->  after `deleteContent`.\n\n        var doNotResetEntireContent = selection.isCollapsed; // Try to extend the selection in the specified direction.\n\n        if (selection.isCollapsed) {\n          model.modifySelection(selection, {\n            direction: _this2.direction,\n            unit: options.unit\n          });\n        } // Check if deleting in an empty editor. See #61.\n\n\n        if (_this2._shouldEntireContentBeReplacedWithParagraph(options.sequence || 1)) {\n          _this2._replaceEntireContentWithParagraph(writer);\n\n          return;\n        } // If selection is still collapsed, then there's nothing to delete.\n\n\n        if (selection.isCollapsed) {\n          return;\n        }\n\n        var changeCount = 0;\n        selection.getFirstRange().getMinimalFlatRanges().forEach(function (range) {\n          changeCount += count(range.getWalker({\n            singleCharacters: true,\n            ignoreElementEnd: true,\n            shallow: true\n          }));\n        });\n        model.deleteContent(selection, {\n          doNotResetEntireContent: doNotResetEntireContent\n        });\n\n        _this2._buffer.input(changeCount);\n\n        writer.setSelection(selection);\n\n        _this2._buffer.unlock();\n      });\n    }\n    /**\n     * If the user keeps <kbd>Backspace</kbd> or <kbd>Delete</kbd> key pressed, the content of the current\n     * editable will be cleared. However, this will not yet lead to resetting the remaining block to a paragraph\n     * (which happens e.g. when the user does <kbd>Ctrl</kbd> + <kbd>A</kbd>, <kbd>Backspace</kbd>).\n     *\n     * But, if the user pressed the key in an empty editable for the first time,\n     * we want to replace the entire content with a paragraph if:\n     *\n     * * the current limit element is empty,\n     * * the paragraph is allowed in the limit element,\n     * * the limit doesn't already have a paragraph inside.\n     *\n     * See https://github.com/ckeditor/ckeditor5-typing/issues/61.\n     *\n     * @private\n     * @param {Number} sequence A number describing which subsequent delete event it is without the key being released.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_shouldEntireContentBeReplacedWithParagraph\",\n    value: function _shouldEntireContentBeReplacedWithParagraph(sequence) {\n      // Does nothing if user pressed and held the \"Backspace\" or \"Delete\" key.\n      if (sequence > 1) {\n        return false;\n      }\n\n      var model = this.editor.model;\n      var doc = model.document;\n      var selection = doc.selection;\n      var limitElement = model.schema.getLimitElement(selection); // If a collapsed selection contains the whole content it means that the content is empty\n      // (from the user perspective).\n\n      var limitElementIsEmpty = selection.isCollapsed && selection.containsEntireContent(limitElement);\n\n      if (!limitElementIsEmpty) {\n        return false;\n      }\n\n      if (!model.schema.checkChild(limitElement, 'paragraph')) {\n        return false;\n      }\n\n      var limitElementFirstChild = limitElement.getChild(0); // Does nothing if the limit element already contains only a paragraph.\n      // We ignore the case when paragraph might have some inline elements (<p><inlineWidget>[]</inlineWidget></p>)\n      // because we don't support such cases yet and it's unclear whether inlineWidget shouldn't be a limit itself.\n\n      if (limitElementFirstChild && limitElementFirstChild.name === 'paragraph') {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * The entire content is replaced with the paragraph. Selection is moved inside the paragraph.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_replaceEntireContentWithParagraph\",\n    value: function _replaceEntireContentWithParagraph(writer) {\n      var model = this.editor.model;\n      var doc = model.document;\n      var selection = doc.selection;\n      var limitElement = model.schema.getLimitElement(selection);\n      var paragraph = writer.createElement('paragraph');\n      writer.remove(writer.createRangeIn(limitElement));\n      writer.insert(paragraph, limitElement);\n      writer.setSelection(paragraph, 0);\n    }\n  }, {\n    key: \"buffer\",\n    get: function get() {\n      return this._buffer;\n    }\n  }]);\n\n  return DeleteCommand;\n}(Command);\n\nexport { DeleteCommand as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/deleteobserver\n */\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\nimport DomEventData from '@ckeditor/ckeditor5-engine/src/view/observer/domeventdata';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n/**\n * Delete observer introduces the {@link module:engine/view/document~Document#event:delete} event.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\n\nvar DeleteObserver =\n/*#__PURE__*/\nfunction (_Observer) {\n  _inherits(DeleteObserver, _Observer);\n\n  function DeleteObserver(view) {\n    var _this;\n\n    _classCallCheck(this, DeleteObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DeleteObserver).call(this, view));\n    var document = view.document;\n    var sequence = 0;\n    document.on('keyup', function (evt, data) {\n      if (data.keyCode == keyCodes.delete || data.keyCode == keyCodes.backspace) {\n        sequence = 0;\n      }\n    });\n    document.on('keydown', function (evt, data) {\n      var deleteData = {};\n\n      if (data.keyCode == keyCodes.delete) {\n        deleteData.direction = 'forward';\n        deleteData.unit = 'character';\n      } else if (data.keyCode == keyCodes.backspace) {\n        deleteData.direction = 'backward';\n        deleteData.unit = 'codePoint';\n      } else {\n        return;\n      }\n\n      var hasWordModifier = env.isMac ? data.altKey : data.ctrlKey;\n      deleteData.unit = hasWordModifier ? 'word' : deleteData.unit;\n      deleteData.sequence = ++sequence; // Save the event object to check later if it was stopped or not.\n\n      var event;\n      document.once('delete', function (evt) {\n        return event = evt;\n      }, {\n        priority: Number.POSITIVE_INFINITY\n      });\n      var domEvtData = new DomEventData(document, data.domEvent, deleteData);\n      document.fire('delete', domEvtData); // Stop `keydown` event if `delete` event was stopped.\n      // https://github.com/ckeditor/ckeditor5/issues/753\n\n      if (event && event.stop.called) {\n        evt.stop();\n      }\n    });\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(DeleteObserver, [{\n    key: \"observe\",\n    value: function observe() {}\n  }]);\n\n  return DeleteObserver;\n}(Observer);\n/**\n * Event fired when the user tries to delete content (e.g. presses <kbd>Delete</kbd> or <kbd>Backspace</kbd>).\n *\n * Note: This event is fired by the {@link module:typing/deleteobserver~DeleteObserver observer}\n * (usually registered by the {@link module:typing/delete~Delete delete feature}).\n *\n * @event module:engine/view/document~Document#event:delete\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n * @param {'forward'|'delete'} data.direction The direction in which the deletion should happen.\n * @param {'character'|'word'} data.unit The \"amount\" of content that should be deleted.\n * @param {Number} data.sequence A number describing which subsequent delete event it is without the key being released.\n * If it's 2 or more it means that the key was pressed and hold.\n */\n\n\nexport { DeleteObserver as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/utils/injectandroidbackspacenutationshandling\n */\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport { containerChildrenMutated } from './utils';\n/**\n * Handles mutations triggered by <kbd>Backspace</kbd> on Android.\n * Due to the fact that on Android `keydown` events don't have the `keyCode` set, we are not able\n * to handle backspacing directly. We need to guess that from mutations which the IME\n * on Android caused.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\n\nexport default function injectAndroidBackspaceMutationsHandling(editor) {\n  var model = editor.model;\n  var view = editor.editing.view;\n  var selectionChangeToleranceMs = 200;\n  var previousSelection = null;\n  var currentSelection = model.createSelection(model.document.selection);\n  var latestSelectionChangeMs = Date.now();\n  model.document.selection.on('change', handleSelectionChange);\n  view.document.on('mutations', handleMutations, {\n    priority: 'highest'\n  }); // Saves current and previous selection when it changes. Saved selections are used\n  // to remove correct piece of content when `Backspace` mutations are detected.\n  //\n  // @param {Object} evt\n\n  function handleSelectionChange(evt) {\n    var newSelection = model.createSelection(evt.source);\n\n    if (!currentSelection.isEqual(newSelection)) {\n      previousSelection = currentSelection;\n      currentSelection = newSelection;\n      latestSelectionChangeMs = Date.now();\n    }\n  } // Handles DOM mutations and checks if they should be processed as block elements removal mutations.\n  //\n  // @param {Object} evt\n  // @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n  // module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n\n\n  function handleMutations(evt, mutations) {\n    if (containerChildrenMutated(mutations) && containsContainersRemoval(mutations)) {\n      handleContainerRemovalMutations(); // Stop mutations event propagation so other mutation handlers are not triggered.\n\n      evt.stop();\n    }\n  } // Handles situations when mutations were generated by container removal.\n  // It happens on Android devices where every typing input has `229` key code\n  // and delete observer will not be triggered. In such cases we need to handle\n  // container removal mutations manually.\n\n\n  function handleContainerRemovalMutations() {\n    if (shouldUsePreviousSelection()) {\n      // If previous selection is used, update model selection in order\n      // to use `delete` command and to make `undo` work correctly.\n      model.enqueueChange(function (writer) {\n        writer.setSelection(previousSelection);\n      });\n    }\n\n    editor.execute('delete');\n  } // Whether previously saved selection should be used instead of the current one to remove content.\n  //\n  // On Android devices when pressing backspace on non-collapsed selection, selection like:\n  //\n  //\t\t`<h1>[Foo</h1><p>Bar]</p>`\n  //\n  // is changed to:\n  //\n  //\t\t`<h1>Foo</h1><p>Bar[]</p>`\n  //\n  // even before `keypress` event, so in such cases we have to rely on previous selection to correctly process selected content.\n  //\n  // Previous selection will be used if:\n  //\n  //\t\t* current selection is collapsed (see example above),\n  //\t\t* previous selection exists, is non-collapsed and has same ending (last position) as the current one,\n  //\t\t* change of the selection happened not earlier than X milliseconds ago (see `selectionChangeToleranceMs`).\n  //\n  // The last check is needed, because user can manually collapse the selection on its current end and then press `Backspace`.\n  // In such situations timing determines if the selection change was caused by the user or browser native behaviour.\n  // However, this happens only if selection was collapsed by the user on the beginning of the paragraph (so mutations\n  // still will show container removal).\n  //\n  // @returns {Boolean}\n\n\n  function shouldUsePreviousSelection() {\n    return Date.now() - latestSelectionChangeMs < selectionChangeToleranceMs && previousSelection && !previousSelection.isCollapsed && currentSelection.isCollapsed && currentSelection.getLastPosition().isEqual(previousSelection.getLastPosition());\n  }\n} // Checks whether mutations array contains mutation generated by container/containers removal.\n// For example mutations generated on Android when pressing `backspace` on the beginning of the line:\n//\n//\t\t<h1>Header1</h1>\n//\t\t<p>{}Paragraph</p>\n//\n// are:\n//\n//\t\t[\n//\t\t\t{ newChildren: [], oldChildren: [ 'Paragraph' ], node: P, type: 'children' },\n//\t\t\t{ newChildren: [ ContainerElement ], oldChildren: [ ContainerElement, ContainerElement ], node: Root, type: 'children' },\n//\t\t\t{ newChildren: [ 'Heading 1Paragraph' ], oldChildren: [ 'Heading 1' ], node: H1, type: 'children' }\n//\t\t]\n//\n// The 1st and 3rd mutations are just changes in a text (1st - text in `p` element was removed, 3rd - text in `h2` was changed)\n// and the 2nd one shows that one `ContainerElement` was removed. We have to recognize if mutations like 2nd one are present.\n// Based on that heuristic mutations are treated as the one removing container element.\n//\n// @private\n// @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n// module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n// @returns {Boolean}\n\nfunction containsContainersRemoval(mutations) {\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = mutations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var mutation = _step.value;\n\n      if (mutation.type !== 'children') {\n        continue;\n      }\n\n      var childrenBefore = mutation.oldChildren;\n      var childrenAfter = mutation.newChildren; // Check if only containers were present before the mutation.\n\n      if (!hasOnlyContainers(childrenBefore)) {\n        continue;\n      }\n\n      var diffResult = diff(childrenBefore, childrenAfter); // Check if there was only removing in that mutation without any insertions.\n\n      var hasDelete = diffResult.some(function (item) {\n        return item === 'delete';\n      });\n      var hasInsert = diffResult.some(function (item) {\n        return item === 'insert';\n      });\n\n      if (hasDelete && !hasInsert) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return false;\n} // Whether provided array contains only nodes of `containerElement` type.\n//\n// @private\n// @param {Array.<module:engine/view/node~Node>} children\n// @returns {Boolean}\n\n\nfunction hasOnlyContainers(children) {\n  return children.every(function (child) {\n    return child.is('containerElement');\n  });\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/delete\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport DeleteCommand from './deletecommand';\nimport DeleteObserver from './deleteobserver';\nimport injectAndroidBackspaceMutationsHandling from './utils/injectandroidbackspacemutationshandling';\n/**\n * The delete and backspace feature. Handles the <kbd>Delete</kbd> and <kbd>Backspace</kbd> keys in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Delete =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Delete, _Plugin);\n\n  function Delete() {\n    _classCallCheck(this, Delete);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Delete).apply(this, arguments));\n  }\n\n  _createClass(Delete, [{\n    key: \"init\",\n    value: function init() {\n      var editor = this.editor;\n      var view = editor.editing.view;\n      var viewDocument = view.document;\n      view.addObserver(DeleteObserver);\n      editor.commands.add('forwardDelete', new DeleteCommand(editor, 'forward'));\n      editor.commands.add('delete', new DeleteCommand(editor, 'backward'));\n      this.listenTo(viewDocument, 'delete', function (evt, data) {\n        editor.execute(data.direction == 'forward' ? 'forwardDelete' : 'delete', {\n          unit: data.unit,\n          sequence: data.sequence\n        });\n        data.preventDefault();\n        view.scrollToTheSelection();\n      });\n      injectAndroidBackspaceMutationsHandling(editor);\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'Delete';\n    }\n  }]);\n\n  return Delete;\n}(Plugin);\n\nexport { Delete as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/typing\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Input from './input';\nimport Delete from './delete';\n/**\n * The typing feature. It handles typing.\n *\n * This is a \"glue\" plugin which loads the {@link module:typing/input~Input} and {@link module:typing/delete~Delete}\n * plugins.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Typing =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Typing, _Plugin);\n\n  function Typing() {\n    _classCallCheck(this, Typing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Typing).apply(this, arguments));\n  }\n\n  _createClass(Typing, null, [{\n    key: \"requires\",\n    get: function get() {\n      return [Input, Delete];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'Typing';\n    }\n  }]);\n\n  return Typing;\n}(Plugin);\n/**\n * The configuration of the typing features. Used by the features from the `@ckeditor/ckeditor5-typing` package.\n *\n * Read more in {@link module:typing/typing~TypingConfig}.\n *\n * @member {module:typing/typing~TypingConfig} module:core/editor/editorconfig~EditorConfig#typing\n */\n\n/**\n * The configuration of the typing features. Used by the typing features in `@ckeditor/ckeditor5-typing` package.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n * \t\t\t\ttyping: ... // Typing feature options.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface TypingConfig\n */\n\n/**\n * The granularity of undo/redo for typing and deleting. The value `20` means (more or less) that a new undo step\n * is created every 20 characters are inserted or deleted.\n *\n * @member {Number} [module:typing/typing~TypingConfig#undoStep=20]\n */\n\n\nexport { Typing as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/nooperation\n */\nimport Operation from './operation';\n/**\n * Operation which is doing nothing (\"empty operation\", \"do-nothing operation\", \"noop\"). This is an operation,\n * which when executed does not change the tree model. It still has some parameters defined for transformation purposes.\n *\n * In most cases this operation is a result of transforming operations. When transformation returns\n * {@link module:engine/model/operation/nooperation~NoOperation} it means that changes done by the transformed operation\n * have already been applied.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar NoOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(NoOperation, _Operation);\n\n  function NoOperation() {\n    _classCallCheck(this, NoOperation);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NoOperation).apply(this, arguments));\n  }\n\n  _createClass(NoOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/nooperation~NoOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new NoOperation(this.baseVersion);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/nooperation~NoOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      return new NoOperation(this.baseVersion + 1);\n    }\n  }, {\n    key: \"_execute\",\n    value: function _execute() {}\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'noop';\n    }\n  }], [{\n    key: \"className\",\n    get: function get() {\n      return 'NoOperation';\n    }\n  }]);\n\n  return NoOperation;\n}(Operation);\n\nexport { NoOperation as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _toConsumableArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\nimport InsertOperation from './insertoperation';\nimport AttributeOperation from './attributeoperation';\nimport RenameOperation from './renameoperation';\nimport MarkerOperation from './markeroperation';\nimport MoveOperation from './moveoperation';\nimport RootAttributeOperation from './rootattributeoperation';\nimport MergeOperation from './mergeoperation';\nimport SplitOperation from './splitoperation';\nimport NoOperation from './nooperation';\nimport Range from '../range';\nimport Position from '../position';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nvar transformations = new Map();\n/**\n * @module engine/model/operation/transform\n */\n\n/**\n * Sets a transformation function to be be used to transform instances of class `OperationA` by instances of class `OperationB`.\n *\n * The `transformationFunction` is passed three parameters:\n *\n * * `a` - operation to be transformed, an instance of `OperationA`,\n * * `b` - operation to be transformed by, an instance of `OperationB`,\n * * {@link module:engine/model/operation/transform~TransformationContext `context`} - object with additional information about\n * transformation context.\n *\n * The `transformationFunction` should return transformation result, which is an array with one or multiple\n * {@link module:engine/model/operation/operation~Operation operation} instances.\n *\n * @protected\n * @param {Function} OperationA\n * @param {Function} OperationB\n * @param {Function} transformationFunction Function to use for transforming.\n */\n\nfunction setTransformation(OperationA, OperationB, transformationFunction) {\n  var aGroup = transformations.get(OperationA);\n\n  if (!aGroup) {\n    aGroup = new Map();\n    transformations.set(OperationA, aGroup);\n  }\n\n  aGroup.set(OperationB, transformationFunction);\n}\n/**\n * Returns a previously set transformation function for transforming an instance of `OperationA` by an instance of `OperationB`.\n *\n * If no transformation was set for given pair of operations, {@link module:engine/model/operation/transform~noUpdateTransformation}\n * is returned. This means that if no transformation was set, the `OperationA` instance will not change when transformed\n * by the `OperationB` instance.\n *\n * @private\n * @param {Function} OperationA\n * @param {Function} OperationB\n * @returns {Function} Function set to transform an instance of `OperationA` by an instance of `OperationB`.\n */\n\n\nfunction getTransformation(OperationA, OperationB) {\n  var aGroup = transformations.get(OperationA);\n\n  if (aGroup && aGroup.has(OperationB)) {\n    return aGroup.get(OperationB);\n  }\n\n  return noUpdateTransformation;\n}\n/**\n * A transformation function that only clones operation to transform, without changing it.\n *\n * @private\n * @param {module:engine/model/operation/operation~Operation} a Operation to transform.\n * @returns {Array.<module:engine/model/operation/operation~Operation>}\n */\n\n\nfunction noUpdateTransformation(a) {\n  return [a];\n}\n/**\n * Transforms operation `a` by operation `b`.\n *\n * @param {module:engine/model/operation/operation~Operation} a Operation to be transformed.\n * @param {module:engine/model/operation/operation~Operation} b Operation to transform by.\n * @param {module:engine/model/operation/transform~TransformationContext} context Transformation context for this transformation.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} Transformation result.\n */\n\n\nexport function transform(a, b) {\n  var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var transformationFunction = getTransformation(a.constructor, b.constructor);\n\n  try {\n    a = a.clone();\n    return transformationFunction(a, b, context);\n  } catch (e) {\n    log.error('Error during operation transformation!', e.message);\n    log.error('Transformed operation', a);\n    log.error('Operation transformed by', b);\n    log.error('context.aIsStrong', context.aIsStrong);\n    log.error('context.aWasUndone', context.aWasUndone);\n    log.error('context.bWasUndone', context.bWasUndone);\n    log.error('context.abRelation', context.abRelation);\n    log.error('context.baRelation', context.baRelation);\n    throw e;\n  }\n}\n/**\n * Performs a transformation of two sets of operations - `operationsA` and `operationsB`. The transformation is two-way -\n * both transformed `operationsA` and transformed `operationsB` are returned.\n *\n * Note, that the first operation in each set should base on the same document state (\n * {@link module:engine/model/document~Document#version document version}).\n *\n * It is assumed that `operationsA` are \"more important\" during conflict resolution between two operations.\n *\n * New copies of both passed arrays and operations inside them are returned. Passed arguments are not altered.\n *\n * Base versions of the transformed operations sets are updated accordingly. For example, assume that base versions are `4`\n * and there are `3` operations in `operationsA` and `5` operations in `operationsB`. Then:\n *\n * * transformed `operationsA` will start from base version `9` (`4` base version + `5` operations B),\n * * transformed `operationsB` will start from base version `7` (`4` base version + `3` operations A).\n *\n * If no operation was broken into two during transformation, then both sets will end up with an operation that bases on version `11`:\n *\n * * transformed `operationsA` start from `9` and there are `3` of them, so the last will have `baseVersion` equal to `11`,\n * * transformed `operationsB` start from `7` and there are `5` of them, so the last will have `baseVersion` equal to `11`.\n *\n * @param {Array.<module:engine/model/operation/operation~Operation>} operationsA\n * @param {Array.<module:engine/model/operation/operation~Operation>} operationsB\n * @param {Object} options Additional transformation options.\n * @param {module:engine/model/document~Document|null} options.document Document which the operations change.\n * @param {Boolean} [options.useRelations=false] Whether during transformation relations should be used (used during undo for\n * better conflict resolution).\n * @param {Boolean} [options.padWithNoOps=false] Whether additional {@link module:engine/model/operation/nooperation~NoOperation}s\n * should be added to the transformation results to force the same last base version for both transformed sets (in case\n * if some operations got broken into multiple operations during transformation).\n * @returns {Object} Transformation result.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} return.operationsA Transformed `operationsA`.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} return.operationsB Transformed `operationsB`.\n */\n\nexport function transformSets(operationsA, operationsB, options) {\n  // Create new arrays so the originally passed arguments are not changed.\n  // No need to clone operations, they are cloned as they are transformed.\n  operationsA = operationsA.slice();\n  operationsB = operationsB.slice(); // If one of sets is empty there is simply nothing to transform, so return sets as they are.\n\n  if (operationsA.length == 0 || operationsB.length == 0) {\n    return {\n      operationsA: operationsA,\n      operationsB: operationsB\n    };\n  } //\n  // Following is a description of transformation process:\n  //\n  // There are `operationsA` and `operationsB` to be transformed, both by both.\n  //\n  // So, suppose we have sets of two operations each: `operationsA` = `[ a1, a2 ]`, `operationsB` = `[ b1, b2 ]`.\n  //\n  // Remember, that we can only transform operations that base on the same context. We assert that `a1` and `b1` base on\n  // the same context and we transform them. Then, we get `a1'` and `b1'`. `a2` bases on a context with `a1` -- `a2`\n  // is an operation that followed `a1`. Similarly, `b2` bases on a context with `b1`.\n  //\n  // However, since `a1'` is a result of transformation by `b1`, `a1'` now also has a context with `b1`. This means that\n  // we can safely transform `a1'` by `b2`. As we finish transforming `a1`, we also transformed all `operationsB`.\n  // All `operationsB` also have context including `a1`. Now, we can properly transform `a2` by those operations.\n  //\n  // The transformation process can be visualized on a transformation diagram (\"diamond diagram\"):\n  //\n  //          [the initial state]\n  //         [common for a1 and b1]\n  //\n  //                   *\n  //                  / \\\n  //                 /   \\\n  //               b1     a1\n  //               /       \\\n  //              /         \\\n  //             *           *\n  //            / \\         / \\\n  //           /   \\       /   \\\n  //         b2    a1'   b1'    a2\n  //         /       \\   /       \\\n  //        /         \\ /         \\\n  //       *           *           *\n  //        \\         / \\         /\n  //         \\       /   \\       /\n  //        a1''   b2'   a2'   b1''\n  //           \\   /       \\   /\n  //            \\ /         \\ /\n  //             *           *\n  //              \\         /\n  //               \\       /\n  //              a2''   b2''\n  //                 \\   /\n  //                  \\ /\n  //                   *\n  //\n  //           [the final state]\n  //\n  // The final state can be reached from the initial state by applying `a1`, `a2`, `b1''` and `b2''`, as well as by\n  // applying `b1`, `b2`, `a1''`, `a2''`. Note how the operations get to a proper common state before each pair is\n  // transformed.\n  //\n  // Another thing to consider is that an operation during transformation can be broken into multiple operations.\n  // Suppose that `a1` * `b1` = `[ a11', a12' ]` (instead of `a1'` that we considered previously).\n  //\n  // In that case, we leave `a12'` for later and we continue transforming `a11'` until it is transformed by all `operationsB`\n  // (in our case it is just `b2`). At this point, `b1` is transformed by \"whole\" `a1`, while `b2` is only transformed\n  // by `a11'`. Similarly, `a12'` is only transformed by `b1`. This leads to a conclusion that we need to start transforming `a12'`\n  // from the moment just after it was broken. So, `a12'` is transformed by `b2`. Now, \"the whole\" `a1` is transformed\n  // by `operationsB`, while all `operationsB` are transformed by \"the whole\" `a1`. This means that we can continue with\n  // following `operationsA` (in our case it is just `a2`).\n  //\n  // Of course, also `operationsB` can be broken. However, since we focus on transforming operation `a` to the end,\n  // the only thing to do is to store both pieces of operation `b`, so that the next transformed operation `a` will\n  // be transformed by both of them.\n  //\n  //                       *\n  //                      / \\\n  //                     /   \\\n  //                    /     \\\n  //                  b1       a1\n  //                  /         \\\n  //                 /           \\\n  //                /             \\\n  //               *               *\n  //              / \\             / \\\n  //             /  a11'         /   \\\n  //            /     \\         /     \\\n  //          b2       *      b1'      a2\n  //          /       / \\     /         \\\n  //         /       /  a12' /           \\\n  //        /       /     \\ /             \\\n  //       *       b2'     *               *\n  //        \\     /       / \\             /\n  //       a11'' /     b21'' \\           /\n  //          \\ /       /     \\         /\n  //           *       *      a2'     b1''\n  //            \\     / \\       \\     /\n  //          a12'' b22''\\       \\   /\n  //              \\ /     \\       \\ /\n  //               *      a2''     *\n  //                \\       \\     /\n  //                 \\       \\  b21'''\n  //                  \\       \\ /\n  //                a2'''      *\n  //                    \\     /\n  //                     \\  b22'''\n  //                      \\ /\n  //                       *\n  //\n  // Note, how `a1` is broken and transformed into `a11'` and `a12'`, while `b2'` got broken and transformed into `b21''` and `b22''`.\n  //\n  // Having all that on mind, here is an outline for the transformation process algorithm:\n  //\n  // 1. We have `operationsA` and `operationsB` array, which we dynamically update as the transformation process goes.\n  //\n  // 2. We take next (or first) operation from `operationsA` and check from which operation `b` we need to start transforming it.\n  // All original `operationsA` are set to be transformed starting from the first operation `b`.\n  //\n  // 3. We take operations from `operationsB`, one by one, starting from the correct one, and transform operation `a`\n  // by operation `b` (and vice versa). We update `operationsA` and `operationsB` by replacing the original operations\n  // with the transformation results.\n  //\n  // 4. If operation is broken into multiple operations, we save all the new operations in the place of the\n  // original operation.\n  //\n  // 5. Additionally, if operation `a` was broken, for the \"new\" operation, we remember from which operation `b` it should\n  // be transformed by.\n  //\n  // 6. We continue transforming \"current\" operation `a` until it is transformed by all `operationsB`. Then, go to 2.\n  // unless the last operation `a` was transformed.\n  //\n  // The actual implementation of the above algorithm is slightly different, as only one loop (while) is used.\n  // The difference is that we have \"current\" `a` operation to transform and we store the index of the next `b` operation\n  // to transform by. Each loop operates on two indexes then: index pointing to currently processed `a` operation and\n  // index pointing to next `b` operation. Each loop is just one `a * b` + `b * a` transformation. After each loop\n  // operation `b` index is updated. If all `b` operations were visited for the current `a` operation, we change\n  // current `a` operation index to the next one.\n  //\n  // For each operation `a`, keeps information what is the index in `operationsB` from which the transformation should start.\n\n\n  var nextTransformIndex = new WeakMap(); // For all the original `operationsA`, set that they should be transformed starting from the first of `operationsB`.\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = operationsA[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var op = _step.value;\n      nextTransformIndex.set(op, 0);\n    } // Additional data that is used for some postprocessing after the main transformation process is done.\n\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var data = {\n    nextBaseVersionA: operationsA[operationsA.length - 1].baseVersion + 1,\n    nextBaseVersionB: operationsB[operationsB.length - 1].baseVersion + 1,\n    originalOperationsACount: operationsA.length,\n    originalOperationsBCount: operationsB.length\n  };\n  var contextFactory = new ContextFactory(options.document, options.useRelations, options.forceWeakRemove);\n  contextFactory.setOriginalOperations(operationsA);\n  contextFactory.setOriginalOperations(operationsB); // Index of currently transformed operation `a`.\n\n  var i = 0; // While not all `operationsA` are transformed...\n\n  while (i < operationsA.length) {\n    var _operationsA, _operationsB;\n\n    // Get \"current\" operation `a`.\n    var opA = operationsA[i]; // For the \"current\" operation `a`, get the index of the next operation `b` to transform by.\n\n    var indexB = nextTransformIndex.get(opA); // If operation `a` was already transformed by every operation `b`, change \"current\" operation `a` to the next one.\n\n    if (indexB == operationsB.length) {\n      i++;\n      continue;\n    }\n\n    var opB = operationsB[indexB]; // Transform `a` by `b` and `b` by `a`.\n\n    var newOpsA = transform(opA, opB, contextFactory.getContext(opA, opB, true));\n    var newOpsB = transform(opB, opA, contextFactory.getContext(opB, opA, false)); // As a result we get one or more `newOpsA` and one or more `newOpsB` operations.\n    // Update contextual information about operations.\n\n    contextFactory.updateRelation(opA, opB);\n    contextFactory.setOriginalOperations(newOpsA, opA);\n    contextFactory.setOriginalOperations(newOpsB, opB); // For new `a` operations, update their index of the next operation `b` to transform them by.\n    //\n    // This is needed even if there was only one result (`a` was not broken) because that information is used\n    // at the beginning of this loop every time.\n\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = newOpsA[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var newOpA = _step2.value;\n        // Acknowledge, that operation `b` also might be broken into multiple operations.\n        //\n        // This is why we raise `indexB` not just by 1. If `newOpsB` are multiple operations, they will be\n        // spliced in the place of `opB`. So we need to change `transformBy` accordingly, so that an operation won't\n        // be transformed by the same operation (part of it) again.\n        nextTransformIndex.set(newOpA, indexB + newOpsB.length);\n      } // Update `operationsA` and `operationsB` with the transformed versions.\n\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    (_operationsA = operationsA).splice.apply(_operationsA, [i, 1].concat(_toConsumableArray(newOpsA)));\n\n    (_operationsB = operationsB).splice.apply(_operationsB, [indexB, 1].concat(_toConsumableArray(newOpsB)));\n  }\n\n  if (options.padWithNoOps) {\n    // If no-operations padding is enabled, count how many extra `a` and `b` operations were generated.\n    var brokenOperationsACount = operationsA.length - data.originalOperationsACount;\n    var brokenOperationsBCount = operationsB.length - data.originalOperationsBCount; // Then, if that number is not the same, pad `operationsA` or `operationsB` with correct number of no-ops so\n    // that the base versions are equalled.\n    //\n    // Note that only one array will be updated, as only one of those subtractions can be greater than zero.\n\n    padWithNoOps(operationsA, brokenOperationsBCount - brokenOperationsACount);\n    padWithNoOps(operationsB, brokenOperationsACount - brokenOperationsBCount);\n  } // Finally, update base versions of transformed operations.\n\n\n  updateBaseVersions(operationsA, data.nextBaseVersionB);\n  updateBaseVersions(operationsB, data.nextBaseVersionA);\n  return {\n    operationsA: operationsA,\n    operationsB: operationsB\n  };\n} // Gathers additional data about operations processed during transformation. Can be used to obtain contextual information\n// about two operations that are about to be transformed. This contextual information can be used for better conflict resolution.\n\nvar ContextFactory =\n/*#__PURE__*/\nfunction () {\n  // Creates `ContextFactory` instance.\n  //\n  // @param {module:engine/model/document~Document} document Document which the operations change.\n  // @param {Boolean} useRelations Whether during transformation relations should be used (used during undo for\n  // better conflict resolution).\n  // @param {Boolean} [forceWeakRemove=false] If set to `false`, remove operation will be always stronger than move operation,\n  // so the removed nodes won't end up back in the document root. When set to `true`, context data will be used.\n  function ContextFactory(document, useRelations) {\n    var forceWeakRemove = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    _classCallCheck(this, ContextFactory);\n\n    // `model.History` instance which information about undone operations will be taken from.\n    this._history = document.history; // Whether additional context should be used.\n\n    this._useRelations = useRelations;\n    this._forceWeakRemove = !!forceWeakRemove; // For each operation that is created during transformation process, we keep a reference to the original operation\n    // which it comes from. The original operation works as a kind of \"identifier\". Every contextual information\n    // gathered during transformation that we want to save for given operation, is actually saved for the original operation.\n    // This way no matter if operation `a` is cloned, then transformed, even breaks, we still have access to the previously\n    // gathered data through original operation reference.\n\n    this._originalOperations = new Map(); // Relations is a double-map structure (maps in map) where for two operations we store how those operations were related\n    // to each other. Those relations are evaluated during transformation process. For every transformated pair of operations\n    // we keep relations between them.\n\n    this._relations = new Map();\n  } // Sets \"original operation\" for given operations.\n  //\n  // During transformation process, operations are cloned, then changed, then processed again, sometimes broken into two\n  // or multiple operations. When gathering additional data it is important that all operations can be somehow linked\n  // so a cloned and transformed \"version\" still kept track of the data assigned earlier to it.\n  //\n  // The original operation object will be used as such an universal linking id. Throughout the transformation process\n  // all cloned operations will refer to \"the original operation\" when storing and reading additional data.\n  //\n  // If `takeFrom` is not set, each operation from `operations` array will be assigned itself as \"the original operation\".\n  // This should be used as an initialization step.\n  //\n  // If `takeFrom` is set, each operation from `operations` will be assigned the same original operation as assigned\n  // for `takeFrom` operation. This should be used to update original operations. It should be used in a way that\n  // `operations` are the result of `takeFrom` transformation to ensure proper \"original operation propagation\".\n  //\n  // @param {Array.<module:engine/model/operation/operation~Operation>} operations\n  // @param {module:engine/model/operation/operation~Operation|null} [takeFrom=null]\n\n\n  _createClass(ContextFactory, [{\n    key: \"setOriginalOperations\",\n    value: function setOriginalOperations(operations) {\n      var takeFrom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var originalOperation = takeFrom ? this._originalOperations.get(takeFrom) : null;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = operations[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var operation = _step3.value;\n\n          this._originalOperations.set(operation, originalOperation || operation);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    } // Saves a relation between operations `opA` and `opB`.\n    //\n    // Relations are then later used to help solve conflicts when operations are transformed.\n    //\n    // @param {module:engine/model/operation/operation~Operation} opA\n    // @param {module:engine/model/operation/operation~Operation} opB\n\n  }, {\n    key: \"updateRelation\",\n    value: function updateRelation(opA, opB) {\n      // The use of relations is described in a bigger detail in transformation functions.\n      //\n      // In brief, this function, for specified pairs of operation types, checks how positions defined in those operations relate.\n      // Then those relations are saved. For example, for two move operations, it is saved if one of those operations target\n      // position is before the other operation source position. This kind of information gives contextual information when\n      // transformation is used during undo. Similar checks are done for other pairs of operations.\n      //\n      switch (opA.constructor) {\n        case MoveOperation:\n          {\n            switch (opB.constructor) {\n              case MergeOperation:\n                {\n                  if (opA.targetPosition.isEqual(opB.sourcePosition) || opB.movedRange.containsPosition(opA.targetPosition)) {\n                    this._setRelation(opA, opB, 'insertAtSource');\n                  } else if (opA.targetPosition.isEqual(opB.deletionPosition)) {\n                    this._setRelation(opA, opB, 'insertBetween');\n                  } else if (opA.targetPosition.isAfter(opB.sourcePosition)) {\n                    this._setRelation(opA, opB, 'moveTargetAfter');\n                  }\n\n                  break;\n                }\n\n              case MoveOperation:\n                {\n                  if (opA.targetPosition.isEqual(opB.sourcePosition) || opA.targetPosition.isBefore(opB.sourcePosition)) {\n                    this._setRelation(opA, opB, 'insertBefore');\n                  } else {\n                    this._setRelation(opA, opB, 'insertAfter');\n                  }\n\n                  break;\n                }\n            }\n\n            break;\n          }\n\n        case SplitOperation:\n          {\n            switch (opB.constructor) {\n              case MergeOperation:\n                {\n                  if (opA.splitPosition.isBefore(opB.sourcePosition)) {\n                    this._setRelation(opA, opB, 'splitBefore');\n                  }\n\n                  break;\n                }\n\n              case MoveOperation:\n                {\n                  if (opA.splitPosition.isEqual(opB.sourcePosition) || opA.splitPosition.isBefore(opB.sourcePosition)) {\n                    this._setRelation(opA, opB, 'splitBefore');\n                  }\n\n                  break;\n                }\n            }\n\n            break;\n          }\n\n        case MergeOperation:\n          {\n            switch (opB.constructor) {\n              case MergeOperation:\n                {\n                  if (!opA.targetPosition.isEqual(opB.sourcePosition)) {\n                    this._setRelation(opA, opB, 'mergeTargetNotMoved');\n                  }\n\n                  if (opA.sourcePosition.isEqual(opB.targetPosition)) {\n                    this._setRelation(opA, opB, 'mergeSourceNotMoved');\n                  }\n\n                  if (opA.sourcePosition.isEqual(opB.sourcePosition)) {\n                    this._setRelation(opA, opB, 'mergeSameElement');\n                  }\n\n                  break;\n                }\n\n              case SplitOperation:\n                {\n                  if (opA.sourcePosition.isEqual(opB.splitPosition)) {\n                    this._setRelation(opA, opB, 'splitAtSource');\n                  }\n                }\n            }\n\n            break;\n          }\n\n        case MarkerOperation:\n          {\n            var markerRange = opA.newRange;\n\n            if (!markerRange) {\n              return;\n            }\n\n            switch (opB.constructor) {\n              case MoveOperation:\n                {\n                  var movedRange = Range._createFromPositionAndShift(opB.sourcePosition, opB.howMany);\n\n                  var affectedLeft = movedRange.containsPosition(markerRange.start) || movedRange.start.isEqual(markerRange.start);\n                  var affectedRight = movedRange.containsPosition(markerRange.end) || movedRange.end.isEqual(markerRange.end);\n\n                  if ((affectedLeft || affectedRight) && !movedRange.containsRange(markerRange)) {\n                    this._setRelation(opA, opB, {\n                      side: affectedLeft ? 'left' : 'right',\n                      path: affectedLeft ? markerRange.start.path.slice() : markerRange.end.path.slice()\n                    });\n                  }\n\n                  break;\n                }\n\n              case MergeOperation:\n                {\n                  var wasInLeftElement = markerRange.start.isEqual(opB.targetPosition);\n                  var wasStartBeforeMergedElement = markerRange.start.isEqual(opB.deletionPosition);\n                  var wasEndBeforeMergedElement = markerRange.end.isEqual(opB.deletionPosition);\n                  var wasInRightElement = markerRange.end.isEqual(opB.sourcePosition);\n\n                  if (wasInLeftElement || wasStartBeforeMergedElement || wasEndBeforeMergedElement || wasInRightElement) {\n                    this._setRelation(opA, opB, {\n                      wasInLeftElement: wasInLeftElement,\n                      wasStartBeforeMergedElement: wasStartBeforeMergedElement,\n                      wasEndBeforeMergedElement: wasEndBeforeMergedElement,\n                      wasInRightElement: wasInRightElement\n                    });\n                  }\n\n                  break;\n                }\n            }\n\n            break;\n          }\n      }\n    } // Evaluates and returns contextual information about two given operations `opA` and `opB` which are about to be transformed.\n    //\n    // @param {module:engine/model/operation/operation~Operation} opA\n    // @param {module:engine/model/operation/operation~Operation} opB\n    // @returns {module:engine/model/operation/transform~TransformationContext}\n\n  }, {\n    key: \"getContext\",\n    value: function getContext(opA, opB, aIsStrong) {\n      return {\n        aIsStrong: aIsStrong,\n        aWasUndone: this._wasUndone(opA),\n        bWasUndone: this._wasUndone(opB),\n        abRelation: this._useRelations ? this._getRelation(opA, opB) : null,\n        baRelation: this._useRelations ? this._getRelation(opB, opA) : null,\n        forceWeakRemove: this._forceWeakRemove\n      };\n    } // Returns whether given operation `op` has already been undone.\n    //\n    // Information whether an operation was undone gives more context when making a decision when two operations are in conflict.\n    //\n    // @param {module:engine/model/operation/operation~Operation} op\n    // @returns {Boolean}\n\n  }, {\n    key: \"_wasUndone\",\n    value: function _wasUndone(op) {\n      // For `op`, get its original operation. After all, if `op` is a clone (or even transformed clone) of another\n      // operation, literally `op` couldn't be undone. It was just generated. If anything, it was the operation it origins\n      // from which was undone. So get that original operation.\n      var originalOp = this._originalOperations.get(op); // And check with the document if the original operation was undone.\n\n\n      return originalOp.wasUndone || this._history.isUndoneOperation(originalOp);\n    } // Returns a relation between `opA` and an operation which is undone by `opB`. This can be `String` value if a relation\n    // was set earlier or `null` if there was no relation between those operations.\n    //\n    // This is a little tricky to understand, so let's compare it to `ContextFactory#_wasUndone`.\n    //\n    // When `wasUndone( opB )` is used, we check if the `opB` has already been undone. It is obvious, that the\n    // undoing operation must happen after the undone operation. So, essentially, we have `opB`, we take document history,\n    // we look forward in the future and ask if in that future `opB` was undone.\n    //\n    // Relations is a backward process to `wasUndone()`.\n    //\n    // Long story short - using relations is asking what happened in the past. Looking back. This time we have an undoing\n    // operation `opB` which has undone some other operation. When there is a transformation `opA` x `opB` and there is\n    // a conflict to solve and `opB` is an undoing operation, we can look back in the history and see what was a relation\n    // between `opA` and the operation which `opB` undone. Basing on that relation from the past, we can now make\n    // a better decision when resolving a conflict between two operations, because we know more about the context of\n    // those two operations.\n    //\n    // This is why this function does not return a relation directly between `opA` and `opB` because we need to look\n    // back to search for a meaningful contextual information.\n    //\n    // @param {module:engine/model/operation/operation~Operation} opA\n    // @param {module:engine/model/operation/operation~Operation} opB\n    // @returns {String|null}\n\n  }, {\n    key: \"_getRelation\",\n    value: function _getRelation(opA, opB) {\n      // Get the original operation. Similarly as in `wasUndone()` it is used as an universal identifier for stored data.\n      var origB = this._originalOperations.get(opB);\n\n      var undoneB = this._history.getUndoneOperation(origB); // If `opB` is not undoing any operation, there is no relation.\n\n\n      if (!undoneB) {\n        return null;\n      }\n\n      var origA = this._originalOperations.get(opA);\n\n      var relationsA = this._relations.get(origA); // Get all relations for `opA`, and check if there is a relation with `opB`-undone-counterpart. If so, return it.\n\n\n      if (relationsA) {\n        return relationsA.get(undoneB) || null;\n      }\n\n      return null;\n    } // Helper function for `ContextFactory#updateRelations`.\n    //\n    // @private\n    // @param {module:engine/model/operation/operation~Operation} opA\n    // @param {module:engine/model/operation/operation~Operation} opB\n    // @param {String} relation\n\n  }, {\n    key: \"_setRelation\",\n    value: function _setRelation(opA, opB, relation) {\n      // As always, setting is for original operations, not the clones/transformed operations.\n      var origA = this._originalOperations.get(opA);\n\n      var origB = this._originalOperations.get(opB);\n\n      var relationsA = this._relations.get(origA);\n\n      if (!relationsA) {\n        relationsA = new Map();\n\n        this._relations.set(origA, relationsA);\n      }\n\n      relationsA.set(origB, relation);\n    }\n  }]);\n\n  return ContextFactory;\n}();\n/**\n * Holds additional contextual information about a transformed pair of operations (`a` and `b`). Those information\n * can be used for better conflict resolving.\n *\n * @typedef {Object} module:engine/model/operation/transform~TransformationContext\n *\n * @property {Boolean} aIsStrong Whether `a` is strong operation in this transformation, or weak.\n * @property {Boolean} aWasUndone Whether `a` operation was undone.\n * @property {Boolean} bWasUndone Whether `b` operation was undone.\n * @property {String|null} abRelation The relation between `a` operation and an operation undone by `b` operation.\n * @property {String|null} baRelation The relation between `b` operation and an operation undone by `a` operation.\n */\n\n/**\n * An utility function that updates {@link module:engine/model/operation/operation~Operation#baseVersion base versions}\n * of passed operations.\n *\n * The function simply sets `baseVersion` as a base version of the first passed operation and then increments it for\n * each following operation in `operations`.\n *\n * @private\n * @param {Array.<module:engine/model/operation/operation~Operation>} operations Operations to update.\n * @param {Number} baseVersion Base version to set for the first operation in `operations`.\n */\n\n\nfunction updateBaseVersions(operations, baseVersion) {\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = operations[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var operation = _step4.value;\n      operation.baseVersion = baseVersion++;\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n}\n/**\n * Adds `howMany` instances of {@link module:engine/model/operation/nooperation~NoOperation} to `operations` set.\n *\n * @private\n * @param {Array.<module:engine/model/operation/operation~Operation>} operations\n * @param {Number} howMany\n */\n\n\nfunction padWithNoOps(operations, howMany) {\n  for (var i = 0; i < howMany; i++) {\n    operations.push(new NoOperation(0));\n  }\n} // -----------------------\n\n\nsetTransformation(AttributeOperation, AttributeOperation, function (a, b, context) {\n  if (a.key === b.key) {\n    // If operations attributes are in conflict, check if their ranges intersect and manage them properly.\n    // First, we want to apply change to the part of a range that has not been changed by the other operation.\n    var operations = a.range.getDifference(b.range).map(function (range) {\n      return new AttributeOperation(range, a.key, a.oldValue, a.newValue, 0);\n    }); // Then we take care of the common part of ranges.\n\n    var common = a.range.getIntersection(b.range);\n\n    if (common) {\n      // If this operation is more important, we also want to apply change to the part of the\n      // original range that has already been changed by the other operation. Since that range\n      // got changed we also have to update `oldValue`.\n      if (context.aIsStrong) {\n        operations.push(new AttributeOperation(common, b.key, b.newValue, a.newValue, 0));\n      }\n    }\n\n    if (operations.length == 0) {\n      return [new NoOperation(0)];\n    }\n\n    return operations;\n  } else {\n    // If operations don't conflict, simply return an array containing just a clone of this operation.\n    return [a];\n  }\n});\nsetTransformation(AttributeOperation, InsertOperation, function (a, b) {\n  // Case 1:\n  //\n  // The attribute operation range includes the position where nodes were inserted.\n  // There are two possible scenarios: the inserted nodes were text and they should receive attributes or\n  // the inserted nodes were elements and they should not receive attributes.\n  //\n  if (a.range.start.hasSameParentAs(b.position) && a.range.containsPosition(b.position)) {\n    // If new nodes should not receive attributes, two separated ranges will be returned.\n    // Otherwise, one expanded range will be returned.\n    var range = a.range._getTransformedByInsertion(b.position, b.howMany, !b.shouldReceiveAttributes);\n\n    var result = range.map(function (r) {\n      return new AttributeOperation(r, a.key, a.oldValue, a.newValue, a.baseVersion);\n    });\n\n    if (b.shouldReceiveAttributes) {\n      // `AttributeOperation#range` includes some newly inserted text.\n      // The operation should also change the attribute of that text. An example:\n      //\n      // Bold should be applied on the following range:\n      // <p>Fo[zb]ar</p>\n      //\n      // In meantime, new text is typed:\n      // <p>Fozxxbar</p>\n      //\n      // Bold should be applied also on the new text:\n      // <p>Fo[zxxb]ar</p>\n      // <p>Fo<$text bold=\"true\">zxxb</$text>ar</p>\n      //\n      // There is a special case to consider here to consider.\n      //\n      // Consider setting an attribute with multiple possible values, for example `highlight`. The inserted text might\n      // have already an attribute value applied and the `oldValue` property of the attribute operation might be wrong:\n      //\n      // Attribute `highlight=\"yellow\"` should be applied on the following range:\n      // <p>Fo[zb]ar<p>\n      //\n      // In meantime, character `x` with `highlight=\"red\"` is typed:\n      // <p>Fo[z<$text highlight=\"red\">x</$text>b]ar</p>\n      //\n      // In this case we cannot simply apply operation changing the attribute value from `null` to `\"yellow\"` for the whole range\n      // because that would lead to an exception (`oldValue` is incorrect for `x`).\n      //\n      // We also cannot break the original range as this would mess up a scenario when there are multiple following\n      // insert operations, because then only the first inserted character is included in those ranges:\n      // <p>Fo[z][x][b]ar</p>   -->   <p>Fo[z][x]x[b]ar</p>   -->   <p>Fo[z][x]xx[b]ar</p>\n      //\n      // So, the attribute range needs be expanded, no matter what attributes are set on the inserted nodes:\n      //\n      // <p>Fo[z<$text highlight=\"red\">x</$text>b]ar</p>      <--- Change from `null` to `yellow`, throwing an exception.\n      //\n      // But before that operation would be applied, we will add an additional attribute operation that will change\n      // attributes on the inserted nodes in a way which would make the original operation correct:\n      //\n      // <p>Fo[z{<$text highlight=\"red\">}x</$text>b]ar</p>    <--- Change range `{}` from `red` to `null`.\n      // <p>Fo[zxb]ar</p>                                     <--- Now change from `null` to `yellow` is completely fine.\n      //\n      // Generate complementary attribute operation. Be sure to add it before the original operation.\n      var op = _getComplementaryAttributeOperations(b, a.key, a.oldValue);\n\n      if (op) {\n        result.unshift(op);\n      }\n    } // If nodes should not receive new attribute, we are done here.\n\n\n    return result;\n  } // If insert operation is not expanding the attribute operation range, simply transform the range.\n\n\n  a.range = a.range._getTransformedByInsertion(b.position, b.howMany, false)[0];\n  return [a];\n});\n/**\n * Helper function for `AttributeOperation` x `InsertOperation` (and reverse) transformation.\n *\n * For given `insertOperation` it checks the inserted node if it has an attribute `key` set to a value different\n * than `newValue`. If so, it generates an `AttributeOperation` which changes the value of `key` attribute to `newValue`.\n *\n * @private\n * @param {module:engine/model/operation/insertoperation~InsertOperation} insertOperation\n * @param {String} key\n * @param {*} newValue\n * @returns {module:engine/model/operation/attributeoperation~AttributeOperation|null}\n */\n\nfunction _getComplementaryAttributeOperations(insertOperation, key, newValue) {\n  var nodes = insertOperation.nodes; // At the beginning we store the attribute value from the first node.\n\n  var insertValue = nodes.getNode(0).getAttribute(key);\n\n  if (insertValue == newValue) {\n    return null;\n  }\n\n  var range = new Range(insertOperation.position, insertOperation.position.getShiftedBy(insertOperation.howMany));\n  return new AttributeOperation(range, key, insertValue, newValue, 0);\n}\n\nsetTransformation(AttributeOperation, MergeOperation, function (a, b) {\n  var ranges = []; // Case 1:\n  //\n  // Attribute change on the merged element. In this case, the merged element was moved to the graveyard.\n  // An additional attribute operation that will change the (re)moved element needs to be generated.\n  //\n\n  if (a.range.start.hasSameParentAs(b.deletionPosition)) {\n    if (a.range.containsPosition(b.deletionPosition) || a.range.start.isEqual(b.deletionPosition)) {\n      ranges.push(Range._createFromPositionAndShift(b.graveyardPosition, 1));\n    }\n  }\n\n  var range = a.range._getTransformedByMergeOperation(b); // Do not add empty (collapsed) ranges to the result. `range` may be collapsed if it contained only the merged element.\n\n\n  if (!range.isCollapsed) {\n    ranges.push(range);\n  } // Create `AttributeOperation`s out of the ranges.\n\n\n  return ranges.map(function (range) {\n    return new AttributeOperation(range, a.key, a.oldValue, a.newValue, a.baseVersion);\n  });\n});\nsetTransformation(AttributeOperation, MoveOperation, function (a, b) {\n  var ranges = _breakRangeByMoveOperation(a.range, b); // Create `AttributeOperation`s out of the ranges.\n\n\n  return ranges.map(function (range) {\n    return new AttributeOperation(range, a.key, a.oldValue, a.newValue, a.baseVersion);\n  });\n}); // Helper function for `AttributeOperation` x `MoveOperation` transformation.\n//\n// Takes the passed `range` and transforms it by move operation `moveOp` in a specific way. Only top-level nodes of `range`\n// are considered to be in the range. If move operation moves nodes deep from inside of the range, those nodes won't\n// be included in the result. In other words, top-level nodes of the ranges from the result are exactly the same as\n// top-level nodes of the original `range`.\n//\n// This is important for `AttributeOperation` because, for its range, it changes only the top-level nodes. So we need to\n// track only how those nodes have been affected by `MoveOperation`.\n//\n// @private\n// @param {module:engine/model/range~Range} range\n// @param {module:engine/model/operation/moveoperation~MoveOperation} moveOp\n// @returns {Array.<module:engine/model/range~Range>}\n\nfunction _breakRangeByMoveOperation(range, moveOp) {\n  var moveRange = Range._createFromPositionAndShift(moveOp.sourcePosition, moveOp.howMany); // We are transforming `range` (original range) by `moveRange` (range moved by move operation). As usual when it comes to\n  // transforming a ranges, we may have a common part of the ranges and we may have a difference part (zero to two ranges).\n\n\n  var common = null;\n  var difference = []; // Let's compare the ranges.\n\n  if (moveRange.containsRange(range, true)) {\n    // If the whole original range is moved, treat it whole as a common part. There's also no difference part.\n    common = range;\n  } else if (range.start.hasSameParentAs(moveRange.start)) {\n    // If the ranges are \"on the same level\" (in the same parent) then move operation may move exactly those nodes\n    // that are changed by the attribute operation. In this case we get common part and difference part in the usual way.\n    difference = range.getDifference(moveRange);\n    common = range.getIntersection(moveRange);\n  } else {\n    // In any other situation we assume that original range is different than move range, that is that move operation\n    // moves other nodes that attribute operation change. Even if the moved range is deep inside in the original range.\n    //\n    // Note that this is different than in `.getIntersection` (we would get a common part in that case) and different\n    // than `.getDifference` (we would get two ranges).\n    difference = [range];\n  }\n\n  var result = []; // The default behaviour of `_getTransformedByMove` might get wrong results for difference part, though, so\n  // we do it by hand.\n\n  var _iteratorNormalCompletion5 = true;\n  var _didIteratorError5 = false;\n  var _iteratorError5 = undefined;\n\n  try {\n    for (var _iterator5 = difference[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n      var diff = _step5.value;\n      // First, transform the range by removing moved nodes. Since this is a difference, this is safe, `null` won't be returned\n      // as the range is different than the moved range.\n      diff = diff._getTransformedByDeletion(moveOp.sourcePosition, moveOp.howMany); // Transform also `targetPosition`.\n\n      var targetPosition = moveOp.getMovedRangeStart(); // Spread the range only if moved nodes are inserted only between the top-level nodes of the `diff` range.\n\n      var spread = diff.start.hasSameParentAs(targetPosition); // Transform by insertion of moved nodes.\n\n      diff = diff._getTransformedByInsertion(targetPosition, moveOp.howMany, spread);\n      result.push.apply(result, _toConsumableArray(diff));\n    } // Common part can be simply transformed by the move operation. This is because move operation will not target to\n    // that common part (the operation would have to target inside its own moved range).\n\n  } catch (err) {\n    _didIteratorError5 = true;\n    _iteratorError5 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n        _iterator5.return();\n      }\n    } finally {\n      if (_didIteratorError5) {\n        throw _iteratorError5;\n      }\n    }\n  }\n\n  if (common) {\n    result.push(common._getTransformedByMove(moveOp.sourcePosition, moveOp.targetPosition, moveOp.howMany, false)[0]);\n  }\n\n  return result;\n}\n\nsetTransformation(AttributeOperation, SplitOperation, function (a, b) {\n  // Case 1:\n  //\n  // Split node is the last node in `AttributeOperation#range`.\n  // `AttributeOperation#range` needs to be expanded to include the new (split) node.\n  //\n  // Attribute `type` to be changed to `numbered` but the `listItem` is split.\n  // <listItem type=\"bulleted\">foobar</listItem>\n  //\n  // After split:\n  // <listItem type=\"bulleted\">foo</listItem><listItem type=\"bulleted\">bar</listItem>\n  //\n  // After attribute change:\n  // <listItem type=\"numbered\">foo</listItem><listItem type=\"numbered\">foo</listItem>\n  //\n  if (a.range.end.isEqual(b.insertionPosition)) {\n    if (!b.graveyardPosition) {\n      a.range.end.offset++;\n    }\n\n    return [a];\n  } // Case 2:\n  //\n  // Split position is inside `AttributeOperation#range`, at the same level, so the nodes to change are\n  // not going to make a flat range.\n  //\n  // Content with range-to-change and split position:\n  // <p>Fo[zb^a]r</p>\n  //\n  // After split:\n  // <p>Fozb</p><p>ar</p>\n  //\n  // Make two separate ranges containing all nodes to change:\n  // <p>Fo[zb]</p><p>[a]r</p>\n  //\n\n\n  if (a.range.start.hasSameParentAs(b.splitPosition) && a.range.containsPosition(b.splitPosition)) {\n    var secondPart = a.clone();\n    secondPart.range = new Range(b.moveTargetPosition.clone(), a.range.end._getCombined(b.splitPosition, b.moveTargetPosition));\n    a.range.end = b.splitPosition.clone();\n    a.range.end.stickiness = 'toPrevious';\n    return [a, secondPart];\n  } // The default case.\n  //\n\n\n  a.range = a.range._getTransformedBySplitOperation(b);\n  return [a];\n});\nsetTransformation(InsertOperation, AttributeOperation, function (a, b) {\n  var result = [a]; // Case 1:\n  //\n  // The attribute operation range includes the position where nodes were inserted.\n  // There are two possible scenarios: the inserted nodes were text and they should receive attributes or\n  // the inserted nodes were elements and they should not receive attributes.\n  //\n  // This is a mirror scenario to the one described in `AttributeOperation` x `InsertOperation` transformation,\n  // although this case is a little less complicated. In this case we simply need to change attributes of the\n  // inserted nodes and that's it.\n  //\n\n  if (a.shouldReceiveAttributes && a.position.hasSameParentAs(b.range.start) && b.range.containsPosition(a.position)) {\n    var op = _getComplementaryAttributeOperations(a, b.key, b.newValue);\n\n    if (op) {\n      result.push(op);\n    }\n  } // The default case is: do nothing.\n  // `AttributeOperation` does not change the model tree structure so `InsertOperation` does not need to be changed.\n  //\n\n\n  return result;\n});\nsetTransformation(InsertOperation, InsertOperation, function (a, b, context) {\n  // Case 1:\n  //\n  // Two insert operations insert nodes at the same position. Since they are the same, it needs to be decided\n  // what will be the order of inserted nodes. However, there is no additional information to help in that\n  // decision. Also, when `b` will be transformed by `a`, the same order must be maintained.\n  //\n  // To achieve that, we will check if the operation is strong.\n  // If it is, it won't get transformed. If it is not, it will be moved.\n  //\n  if (a.position.isEqual(b.position) && context.aIsStrong) {\n    return [a];\n  } // The default case.\n  //\n\n\n  a.position = a.position._getTransformedByInsertOperation(b);\n  return [a];\n});\nsetTransformation(InsertOperation, MoveOperation, function (a, b) {\n  // The default case.\n  //\n  a.position = a.position._getTransformedByMoveOperation(b);\n  return [a];\n});\nsetTransformation(InsertOperation, SplitOperation, function (a, b) {\n  // The default case.\n  //\n  a.position = a.position._getTransformedBySplitOperation(b);\n  return [a];\n});\nsetTransformation(InsertOperation, MergeOperation, function (a, b) {\n  a.position = a.position._getTransformedByMergeOperation(b);\n  return [a];\n}); // -----------------------\n\nsetTransformation(MarkerOperation, InsertOperation, function (a, b) {\n  if (a.oldRange) {\n    a.oldRange = a.oldRange._getTransformedByInsertOperation(b)[0];\n  }\n\n  if (a.newRange) {\n    a.newRange = a.newRange._getTransformedByInsertOperation(b)[0];\n  }\n\n  return [a];\n});\nsetTransformation(MarkerOperation, MarkerOperation, function (a, b, context) {\n  if (a.name == b.name) {\n    if (context.aIsStrong) {\n      a.oldRange = b.newRange ? b.newRange.clone() : null;\n    } else {\n      return [new NoOperation(0)];\n    }\n  }\n\n  return [a];\n});\nsetTransformation(MarkerOperation, MergeOperation, function (a, b) {\n  if (a.oldRange) {\n    a.oldRange = a.oldRange._getTransformedByMergeOperation(b);\n  }\n\n  if (a.newRange) {\n    a.newRange = a.newRange._getTransformedByMergeOperation(b);\n  }\n\n  return [a];\n});\nsetTransformation(MarkerOperation, MoveOperation, function (a, b, context) {\n  if (a.oldRange) {\n    a.oldRange = Range._createFromRanges(a.oldRange._getTransformedByMoveOperation(b));\n  }\n\n  if (a.newRange) {\n    if (context.abRelation) {\n      var aNewRange = Range._createFromRanges(a.newRange._getTransformedByMoveOperation(b));\n\n      if (context.abRelation.side == 'left' && b.targetPosition.isEqual(a.newRange.start)) {\n        a.newRange.start.path = context.abRelation.path;\n        a.newRange.end = aNewRange.end;\n        return [a];\n      } else if (context.abRelation.side == 'right' && b.targetPosition.isEqual(a.newRange.end)) {\n        a.newRange.start = aNewRange.start;\n        a.newRange.end.path = context.abRelation.path;\n        return [a];\n      }\n    }\n\n    a.newRange = Range._createFromRanges(a.newRange._getTransformedByMoveOperation(b));\n  }\n\n  return [a];\n});\nsetTransformation(MarkerOperation, SplitOperation, function (a, b, context) {\n  if (a.oldRange) {\n    a.oldRange = a.oldRange._getTransformedBySplitOperation(b);\n  }\n\n  if (a.newRange) {\n    if (context.abRelation) {\n      var aNewRange = a.newRange._getTransformedBySplitOperation(b);\n\n      if (a.newRange.start.isEqual(b.splitPosition) && context.abRelation.wasStartBeforeMergedElement) {\n        a.newRange.start = Position._createAt(b.insertionPosition);\n      } else if (a.newRange.start.isEqual(b.splitPosition) && !context.abRelation.wasInLeftElement) {\n        a.newRange.start = Position._createAt(b.moveTargetPosition);\n      }\n\n      if (a.newRange.end.isEqual(b.splitPosition) && context.abRelation.wasInRightElement) {\n        a.newRange.end = Position._createAt(b.moveTargetPosition);\n      } else if (a.newRange.end.isEqual(b.splitPosition) && context.abRelation.wasEndBeforeMergedElement) {\n        a.newRange.end = Position._createAt(b.insertionPosition);\n      } else {\n        a.newRange.end = aNewRange.end;\n      }\n\n      return [a];\n    }\n\n    a.newRange = a.newRange._getTransformedBySplitOperation(b);\n  }\n\n  return [a];\n}); // -----------------------\n\nsetTransformation(MergeOperation, InsertOperation, function (a, b) {\n  if (a.sourcePosition.hasSameParentAs(b.position)) {\n    a.howMany += b.howMany;\n  }\n\n  a.sourcePosition = a.sourcePosition._getTransformedByInsertOperation(b);\n  a.targetPosition = a.targetPosition._getTransformedByInsertOperation(b);\n  return [a];\n});\nsetTransformation(MergeOperation, MergeOperation, function (a, b, context) {\n  // Case 1:\n  //\n  // Same merge operations.\n  //\n  // Both operations have same source and target positions. So the element already got merged and there is\n  // theoretically nothing to do.\n  //\n  if (a.sourcePosition.isEqual(b.sourcePosition) && a.targetPosition.isEqual(b.targetPosition)) {\n    // There are two ways that we can provide a do-nothing operation.\n    //\n    // First is simply a NoOperation instance. We will use it if `b` operation was not undone.\n    //\n    // Second is a merge operation that has the source operation in the merged element - in the graveyard -\n    // same target position and `howMany` equal to `0`. So it is basically merging an empty element from graveyard\n    // which is almost the same as NoOperation.\n    //\n    // This way the merge operation can be later transformed by split operation\n    // to provide correct undo. This will be used if `b` operation was undone (only then it is correct).\n    //\n    if (!context.bWasUndone) {\n      return [new NoOperation(0)];\n    } else {\n      var path = b.graveyardPosition.path.slice();\n      path.push(0);\n      a.sourcePosition = new Position(b.graveyardPosition.root, path);\n      a.howMany = 0;\n      return [a];\n    }\n  } // Case 2:\n  //\n  // Same merge source position but different target position.\n  //\n  // This can happen during collaboration. For example, if one client merged a paragraph to the previous paragraph\n  // and the other person removed that paragraph and merged the same paragraph to something before:\n  //\n  // Client A:\n  // <p>Foo</p><p>Bar</p><p>[]Xyz</p>\n  // <p>Foo</p><p>BarXyz</p>\n  //\n  // Client B:\n  // <p>Foo</p>[<p>Bar</p>]<p>Xyz</p>\n  // <p>Foo</p><p>[]Xyz</p>\n  // <p>FooXyz</p>\n  //\n  // In this case we need to decide where finally \"Xyz\" will land:\n  //\n  // <p>FooXyz</p>               graveyard: <p>Bar</p>\n  // <p>Foo</p>                  graveyard: <p>BarXyz</p>\n  //\n  // Let's move it in a way so that a merge operation that does not target to graveyard is more important so that\n  // nodes does not end up in the graveyard. It makes sense. Both for Client A and for Client B \"Xyz\" finally did not\n  // end up in the graveyard (see above).\n  //\n  // If neither or both operations point to graveyard, then let `aIsStrong` decide.\n  //\n\n\n  if (a.sourcePosition.isEqual(b.sourcePosition) && !a.targetPosition.isEqual(b.targetPosition) && !context.bWasUndone && context.abRelation != 'splitAtSource') {\n    var aToGraveyard = a.targetPosition.root.rootName == '$graveyard';\n    var bToGraveyard = b.targetPosition.root.rootName == '$graveyard'; // If `aIsWeak` it means that `a` points to graveyard while `b` doesn't. Don't move nodes then.\n\n    var aIsWeak = aToGraveyard && !bToGraveyard; // If `bIsWeak` it means that `b` points to graveyard while `a` doesn't. Force moving nodes then.\n\n    var bIsWeak = bToGraveyard && !aToGraveyard; // Force move if `b` is weak or neither operation is weak but `a` is stronger through `context.aIsStrong`.\n\n    var forceMove = bIsWeak || !aIsWeak && context.aIsStrong;\n\n    if (forceMove) {\n      var sourcePosition = b.targetPosition._getTransformedByMergeOperation(b);\n\n      var targetPosition = a.targetPosition._getTransformedByMergeOperation(b);\n\n      return [new MoveOperation(sourcePosition, a.howMany, targetPosition, 0)];\n    } else {\n      return [new NoOperation(0)];\n    }\n  } // The default case.\n  //\n\n\n  if (a.sourcePosition.hasSameParentAs(b.targetPosition)) {\n    a.howMany += b.howMany;\n  }\n\n  a.sourcePosition = a.sourcePosition._getTransformedByMergeOperation(b);\n  a.targetPosition = a.targetPosition._getTransformedByMergeOperation(b); // Handle positions in graveyard.\n  // If graveyard positions are same and `a` operation is strong - do not transform.\n\n  if (!a.graveyardPosition.isEqual(b.graveyardPosition) || !context.aIsStrong) {\n    a.graveyardPosition = a.graveyardPosition._getTransformedByMergeOperation(b);\n  }\n\n  return [a];\n});\nsetTransformation(MergeOperation, MoveOperation, function (a, b, context) {\n  // Case 1:\n  //\n  // The element to merge got removed.\n  //\n  // Merge operation does support merging elements which are not siblings. So it would not be a problem\n  // from technical point of view. However, if the element was removed, the intention of the user deleting it\n  // was to have it all deleted, together with its children. From user experience point of view, moving back the\n  // removed nodes might be unexpected. This means that in this scenario we will block the merging.\n  //\n  // The exception of this rule would be if the remove operation was later undone.\n  //\n  var removedRange = Range._createFromPositionAndShift(b.sourcePosition, b.howMany);\n\n  if (b.type == 'remove' && !context.bWasUndone && !context.forceWeakRemove) {\n    if (a.deletionPosition.hasSameParentAs(b.sourcePosition) && removedRange.containsPosition(a.sourcePosition)) {\n      return [new NoOperation(0)];\n    }\n  } // The default case.\n  //\n\n\n  if (a.sourcePosition.hasSameParentAs(b.targetPosition)) {\n    a.howMany += b.howMany;\n  }\n\n  if (a.sourcePosition.hasSameParentAs(b.sourcePosition)) {\n    a.howMany -= b.howMany;\n  }\n\n  a.sourcePosition = a.sourcePosition._getTransformedByMoveOperation(b);\n  a.targetPosition = a.targetPosition._getTransformedByMoveOperation(b); // `MergeOperation` graveyard position is like `MoveOperation` target position. It is a position where element(s) will\n  // be moved. Like in other similar cases, we need to consider the scenario when those positions are same.\n  // Here, we will treat `MergeOperation` like it is always strong (see `InsertOperation` x `InsertOperation` for comparison).\n  // This means that we won't transform graveyard position if it is equal to move operation target position.\n\n  if (!a.graveyardPosition.isEqual(b.targetPosition)) {\n    a.graveyardPosition = a.graveyardPosition._getTransformedByMoveOperation(b);\n  }\n\n  return [a];\n});\nsetTransformation(MergeOperation, SplitOperation, function (a, b, context) {\n  if (b.graveyardPosition) {\n    // If `b` operation defines graveyard position, a node from graveyard will be moved. This means that we need to\n    // transform `a.graveyardPosition` accordingly.\n    a.graveyardPosition = a.graveyardPosition._getTransformedByDeletion(b.graveyardPosition, 1); // This is a scenario foreseen in `MergeOperation` x `MergeOperation`, with two identical merge operations.\n    //\n    // So, there was `MergeOperation` x `MergeOperation` transformation earlier. Now, `a` is a merge operation which\n    // source position is in graveyard. Interestingly, split operation wants to use the node to be merged by `a`. This\n    // means that `b` is undoing that merge operation from earlier, which caused `a` to be in graveyard.\n    //\n    // If that's the case, at this point, we will only \"fix\" `a.howMany`. It was earlier set to `0` in\n    // `MergeOperation` x `MergeOperation` transformation. Later transformations in this function will change other\n    // properties.\n    //\n\n    if (a.deletionPosition.isEqual(b.graveyardPosition)) {\n      a.howMany = b.howMany;\n    }\n  } // Case 1:\n  //\n  // Merge operation moves nodes to the place where split happens.\n  // This is a classic situation when there are two paragraphs, and there is a split (enter) after the first\n  // paragraph and there is a merge (delete) at the beginning of the second paragraph:\n  //\n  // <p>Foo{}</p><p>[]Bar</p>.\n  //\n  // Split is after `Foo`, while merge is from `Bar` to the end of `Foo`.\n  //\n  // State after split:\n  // <p>Foo</p><p></p><p>Bar</p>\n  //\n  // Now, `Bar` should be merged to the new paragraph:\n  // <p>Foo</p><p>Bar</p>\n  //\n  // Instead of merging it to the original paragraph:\n  // <p>FooBar</p><p></p>\n  //\n  // This means that `targetPosition` needs to be transformed. This is the default case though.\n  // For example, if the split would be after `F`, `targetPosition` should also be transformed.\n  //\n  // There are three exceptions, though, when we want to keep `targetPosition` as it was.\n  //\n  // First exception is when the merge target position is inside an element (not at the end, as usual). This\n  // happens when the merge operation earlier was transformed by \"the same\" merge operation. If merge operation\n  // targets inside the element we want to keep the original target position (and not transform it) because\n  // we have additional context telling us that we want to merge to the original element. We can check if the\n  // merge operation points inside element by checking what is `SplitOperation#howMany`. Since merge target position\n  // is same as split position, if `howMany` is non-zero, it means that the merge target position is inside an element.\n  //\n  // Second exception is when the element to merge is in the graveyard and split operation uses it. In that case\n  // if target position would be transformed, the merge operation would target at the source position:\n  //\n  // root: <p>Foo</p>\t\t\t\tgraveyard: <p></p>\n  //\n  // SplitOperation: root [ 0, 3 ] using graveyard [ 0 ] (howMany = 0)\n  // MergeOperation: graveyard [ 0, 0 ] -> root [ 0, 3 ] (howMany = 0)\n  //\n  // Since split operation moves the graveyard node back to the root, the merge operation source position changes.\n  // We would like to merge from the empty <p> to the \"Foo\" <p>:\n  //\n  // root: <p>Foo</p><p></p>\t\t\tgraveyard:\n  //\n  // MergeOperation#sourcePosition = root [ 1, 0 ]\n  //\n  // If `targetPosition` is transformed, it would become root [ 1, 0 ] as well. It has to be kept as it was.\n  //\n  // Third exception is connected with relations. If this happens during undo and we have explicit information\n  // that target position has not been affected by the operation which is undone by this split then this split should\n  // not move the target position either.\n  //\n\n\n  if (a.targetPosition.isEqual(b.splitPosition)) {\n    var mergeInside = b.howMany != 0;\n    var mergeSplittingElement = b.graveyardPosition && a.deletionPosition.isEqual(b.graveyardPosition);\n\n    if (mergeInside || mergeSplittingElement || context.abRelation == 'mergeTargetNotMoved') {\n      a.sourcePosition = a.sourcePosition._getTransformedBySplitOperation(b);\n      return [a];\n    }\n  } // Case 2:\n  //\n  // Merge source is at the same position as split position. This sometimes happen, mostly during undo.\n  // The decision here is mostly to choose whether merge source position should stay where it is (so it will be at the end of the\n  // split element) or should be move to the beginning of the new element.\n  //\n\n\n  if (a.sourcePosition.isEqual(b.splitPosition)) {\n    // Use context to check if `SplitOperation` is not undoing a merge operation, that didn't change the `a` operation.\n    // This scenario happens the undone merge operation moved nodes at the source position of `a` operation.\n    // In that case `a` operation source position should stay where it is.\n    if (context.abRelation == 'mergeSourceNotMoved') {\n      a.howMany = 0;\n      a.targetPosition = a.targetPosition._getTransformedBySplitOperation(b);\n      return [a];\n    } // This merge operation might have been earlier transformed by a merge operation which both merged the same element.\n    // See that case in `MergeOperation` x `MergeOperation` transformation. In that scenario, if the merge operation has been undone,\n    // the special case is not applied.\n    //\n    // Now, the merge operation is transformed by the split which has undone that previous merge operation.\n    // So now we are fixing situation which was skipped in `MergeOperation` x `MergeOperation` case.\n    //\n\n\n    if (context.abRelation == 'mergeSameElement' || a.sourcePosition.offset > 0) {\n      a.sourcePosition = b.moveTargetPosition.clone();\n      a.targetPosition = a.targetPosition._getTransformedBySplitOperation(b);\n      return [a];\n    }\n  } // The default case.\n  //\n\n\n  if (a.sourcePosition.hasSameParentAs(b.splitPosition)) {\n    a.howMany = b.splitPosition.offset;\n  }\n\n  a.sourcePosition = a.sourcePosition._getTransformedBySplitOperation(b);\n  a.targetPosition = a.targetPosition._getTransformedBySplitOperation(b);\n  return [a];\n}); // -----------------------\n\nsetTransformation(MoveOperation, InsertOperation, function (a, b) {\n  var moveRange = Range._createFromPositionAndShift(a.sourcePosition, a.howMany);\n\n  var transformed = moveRange._getTransformedByInsertOperation(b, false)[0];\n\n  a.sourcePosition = transformed.start;\n  a.howMany = transformed.end.offset - transformed.start.offset; // See `InsertOperation` x `MoveOperation` transformation for details on this case.\n  //\n  // In summary, both operations point to the same place, so the order of nodes needs to be decided.\n  // `MoveOperation` is considered weaker, so it is always transformed, unless there was a certain relation\n  // between operations.\n  //\n\n  if (!a.targetPosition.isEqual(b.position)) {\n    a.targetPosition = a.targetPosition._getTransformedByInsertOperation(b);\n  }\n\n  return [a];\n});\nsetTransformation(MoveOperation, MoveOperation, function (a, b, context) {\n  //\n  // Setting and evaluating some variables that will be used in special cases and default algorithm.\n  //\n  // Create ranges from `MoveOperations` properties.\n  var rangeA = Range._createFromPositionAndShift(a.sourcePosition, a.howMany);\n\n  var rangeB = Range._createFromPositionAndShift(b.sourcePosition, b.howMany); // Assign `context.aIsStrong` to a different variable, because the value may change during execution of\n  // this algorithm and we do not want to override original `context.aIsStrong` that will be used in later transformations.\n\n\n  var aIsStrong = context.aIsStrong; // This will be used to decide the order of nodes if both operations target at the same position.\n  // By default, use strong/weak operation mechanism.\n\n  var insertBefore = !context.aIsStrong; // If the relation is set, then use it to decide nodes order.\n\n  if (context.abRelation == 'insertBefore' || context.baRelation == 'insertAfter') {\n    insertBefore = true;\n  } else if (context.abRelation == 'insertAfter' || context.baRelation == 'insertBefore') {\n    insertBefore = false;\n  } // `a.targetPosition` could be affected by the `b` operation. We will transform it.\n\n\n  var newTargetPosition;\n\n  if (a.targetPosition.isEqual(b.targetPosition) && insertBefore) {\n    newTargetPosition = a.targetPosition._getTransformedByDeletion(b.sourcePosition, b.howMany);\n  } else {\n    newTargetPosition = a.targetPosition._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany);\n  } //\n  // Special case #1 + mirror.\n  //\n  // Special case when both move operations' target positions are inside nodes that are\n  // being moved by the other move operation. So in other words, we move ranges into inside of each other.\n  // This case can't be solved reasonably (on the other hand, it should not happen often).\n\n\n  if (_moveTargetIntoMovedRange(a, b) && _moveTargetIntoMovedRange(b, a)) {\n    // Instead of transforming operation, we return a reverse of the operation that we transform by.\n    // So when the results of this \"transformation\" will be applied, `b` MoveOperation will get reversed.\n    return [b.getReversed()];\n  } //\n  // End of special case #1.\n  //\n  //\n  // Special case #2.\n  //\n  // Check if `b` operation targets inside `rangeA`.\n\n\n  var bTargetsToA = rangeA.containsPosition(b.targetPosition); // If `b` targets to `rangeA` and `rangeA` contains `rangeB`, `b` operation has no influence on `a` operation.\n  // You might say that operation `b` is captured inside operation `a`.\n\n  if (bTargetsToA && rangeA.containsRange(rangeB, true)) {\n    // There is a mini-special case here, where `rangeB` is on other level than `rangeA`. That's why\n    // we need to transform `a` operation anyway.\n    rangeA.start = rangeA.start._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany);\n    rangeA.end = rangeA.end._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany);\n    return _makeMoveOperationsFromRanges([rangeA], newTargetPosition);\n  } //\n  // Special case #2 mirror.\n  //\n\n\n  var aTargetsToB = rangeB.containsPosition(a.targetPosition);\n\n  if (aTargetsToB && rangeB.containsRange(rangeA, true)) {\n    // `a` operation is \"moved together\" with `b` operation.\n    // Here, just move `rangeA` \"inside\" `rangeB`.\n    rangeA.start = rangeA.start._getCombined(b.sourcePosition, b.getMovedRangeStart());\n    rangeA.end = rangeA.end._getCombined(b.sourcePosition, b.getMovedRangeStart());\n    return _makeMoveOperationsFromRanges([rangeA], newTargetPosition);\n  } //\n  // End of special case #2.\n  //\n  //\n  // Special case #3 + mirror.\n  //\n  // `rangeA` has a node which is an ancestor of `rangeB`. In other words, `rangeB` is inside `rangeA`\n  // but not on the same tree level. In such case ranges have common part but we have to treat it\n  // differently, because in such case those ranges are not really conflicting and should be treated like\n  // two separate ranges. Also we have to discard two difference parts.\n\n\n  var aCompB = compareArrays(a.sourcePosition.getParentPath(), b.sourcePosition.getParentPath());\n\n  if (aCompB == 'prefix' || aCompB == 'extension') {\n    // Transform `rangeA` by `b` operation and make operation out of it, and that's all.\n    // Note that this is a simplified version of default case, but here we treat the common part (whole `rangeA`)\n    // like a one difference part.\n    rangeA.start = rangeA.start._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany);\n    rangeA.end = rangeA.end._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany);\n    return _makeMoveOperationsFromRanges([rangeA], newTargetPosition);\n  } //\n  // End of special case #3.\n  //\n  //\n  // Default case - ranges are on the same level or are not connected with each other.\n  //\n  // Modifier for default case.\n  // Modifies `aIsStrong` flag in certain conditions.\n  //\n  // If only one of operations is a remove operation, we force remove operation to be the \"stronger\" one\n  // to provide more expected results.\n\n\n  if (a.type == 'remove' && b.type != 'remove' && !context.aWasUndone && !context.forceWeakRemove) {\n    aIsStrong = true;\n  } else if (a.type != 'remove' && b.type == 'remove' && !context.bWasUndone && !context.forceWeakRemove) {\n    aIsStrong = false;\n  } // Handle operation's source ranges - check how `rangeA` is affected by `b` operation.\n  // This will aggregate transformed ranges.\n\n\n  var ranges = []; // Get the \"difference part\" of `a` operation source range.\n  // This is an array with one or two ranges. Two ranges if `rangeB` is inside `rangeA`.\n\n  var difference = rangeA.getDifference(rangeB);\n  var _iteratorNormalCompletion6 = true;\n  var _didIteratorError6 = false;\n  var _iteratorError6 = undefined;\n\n  try {\n    for (var _iterator6 = difference[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n      var range = _step6.value;\n      // Transform those ranges by `b` operation. For example if `b` moved range from before those ranges, fix those ranges.\n      range.start = range.start._getTransformedByDeletion(b.sourcePosition, b.howMany);\n      range.end = range.end._getTransformedByDeletion(b.sourcePosition, b.howMany); // If `b` operation targets into `rangeA` on the same level, spread `rangeA` into two ranges.\n\n      var shouldSpread = compareArrays(range.start.getParentPath(), b.getMovedRangeStart().getParentPath()) == 'same';\n\n      var newRanges = range._getTransformedByInsertion(b.getMovedRangeStart(), b.howMany, shouldSpread);\n\n      ranges.push.apply(ranges, _toConsumableArray(newRanges));\n    } // Then, we have to manage the \"common part\" of both move ranges.\n\n  } catch (err) {\n    _didIteratorError6 = true;\n    _iteratorError6 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n        _iterator6.return();\n      }\n    } finally {\n      if (_didIteratorError6) {\n        throw _iteratorError6;\n      }\n    }\n  }\n\n  var common = rangeA.getIntersection(rangeB);\n\n  if (common !== null && aIsStrong) {\n    // Calculate the new position of that part of original range.\n    common.start = common.start._getCombined(b.sourcePosition, b.getMovedRangeStart());\n    common.end = common.end._getCombined(b.sourcePosition, b.getMovedRangeStart()); // Take care of proper range order.\n    //\n    // Put `common` at appropriate place. Keep in mind that we are interested in original order.\n    // Basically there are only three cases: there is zero, one or two difference ranges.\n    //\n    // If there is zero difference ranges, just push `common` in the array.\n\n    if (ranges.length === 0) {\n      ranges.push(common);\n    } // If there is one difference range, we need to check whether common part was before it or after it.\n    else if (ranges.length == 1) {\n        if (rangeB.start.isBefore(rangeA.start) || rangeB.start.isEqual(rangeA.start)) {\n          ranges.unshift(common);\n        } else {\n          ranges.push(common);\n        }\n      } // If there are more ranges (which means two), put common part between them. This is the only scenario\n      // where there could be two difference ranges so we don't have to make any comparisons.\n      else {\n          ranges.splice(1, 0, common);\n        }\n  }\n\n  if (ranges.length === 0) {\n    // If there are no \"source ranges\", nothing should be changed.\n    // Note that this can happen only if `aIsStrong == false` and `rangeA.isEqual( rangeB )`.\n    return [new NoOperation(a.baseVersion)];\n  }\n\n  return _makeMoveOperationsFromRanges(ranges, newTargetPosition);\n});\nsetTransformation(MoveOperation, SplitOperation, function (a, b, context) {\n  var newTargetPosition = a.targetPosition.clone(); // Do not transform if target position is same as split insertion position and this split comes from undo.\n  // This should be done on relations but it is too much work for now as it would require relations working in collaboration.\n  // We need to make a decision how we will resolve such conflict and this is less harmful way.\n\n  if (!a.targetPosition.isEqual(b.insertionPosition) || !b.graveyardPosition || context.abRelation == 'moveTargetAfter') {\n    newTargetPosition = a.targetPosition._getTransformedBySplitOperation(b);\n  } // Case 1:\n  //\n  // Last element in the moved range got split.\n  //\n  // In this case the default range transformation will not work correctly as the element created by\n  // split operation would be outside the range. The range to move needs to be fixed manually.\n  //\n\n\n  var moveRange = Range._createFromPositionAndShift(a.sourcePosition, a.howMany);\n\n  if (moveRange.end.isEqual(b.insertionPosition)) {\n    // Do it only if this is a \"natural\" split, not a one that comes from undo.\n    // If this is undo split, only `targetPosition` needs to be changed (if the move is a remove).\n    if (!b.graveyardPosition) {\n      a.howMany++;\n    }\n\n    a.targetPosition = newTargetPosition;\n    return [a];\n  } // Case 2:\n  //\n  // Split happened between the moved nodes. In this case two ranges to move need to be generated.\n  //\n  // Characters `ozba` are moved to the end of paragraph `Xyz` but split happened.\n  // <p>F[oz|ba]r</p><p>Xyz</p>\n  //\n  // After split:\n  // <p>F[oz</p><p>ba]r</p><p>Xyz</p>\n  //\n  // Correct ranges:\n  // <p>F[oz]</p><p>[ba]r</p><p>Xyz</p>\n  //\n  // After move:\n  // <p>F</p><p>r</p><p>Xyzozba</p>\n  //\n\n\n  if (moveRange.start.hasSameParentAs(b.splitPosition) && moveRange.containsPosition(b.splitPosition)) {\n    var rightRange = new Range(b.splitPosition, moveRange.end);\n    rightRange = rightRange._getTransformedBySplitOperation(b);\n    var _ranges = [new Range(moveRange.start, b.splitPosition), rightRange];\n    return _makeMoveOperationsFromRanges(_ranges, newTargetPosition);\n  } // Case 3:\n  //\n  // Move operation targets at the split position. We need to decide if the nodes should be inserted\n  // at the end of the split element or at the beginning of the new element.\n  //\n\n\n  if (a.targetPosition.isEqual(b.splitPosition) && context.abRelation == 'insertAtSource') {\n    newTargetPosition = b.moveTargetPosition;\n  } // Case 4:\n  //\n  // Move operation targets just after the split element. We need to decide if the nodes should be inserted\n  // between two parts of split element, or after the new element.\n  //\n  // Split at `|`, while move operation moves `<p>Xyz</p>` and targets at `^`:\n  // <p>Foo|bar</p>^<p>baz</p>\n  // <p>Foo</p>^<p>bar</p><p>baz</p> or <p>Foo</p><p>bar</p>^<p>baz</p>?\n  //\n  // If there is no contextual information between operations (for example, they come from collaborative\n  // editing), we don't want to put some unrelated content (move) between parts of related content (split parts).\n  // However, if the split is from undo, in the past, the moved content might be targeting between the\n  // split parts, meaning that was exactly user's intention:\n  //\n  // <p>Foo</p>^<p>bar</p>\t\t<--- original situation, in \"past\".\n  // <p>Foobar</p>^\t\t\t\t<--- after merge target position is transformed.\n  // <p>Foo|bar</p>^\t\t\t\t<--- then the merge is undone, and split happens, which leads us to current situation.\n  //\n  // In this case it is pretty clear that the intention was to put new paragraph between those nodes,\n  // so we need to transform accordingly. We can detect this scenario thanks to relations.\n  //\n\n\n  if (a.targetPosition.isEqual(b.insertionPosition) && context.abRelation == 'insertBetween') {\n    newTargetPosition = a.targetPosition;\n  } // The default case.\n  //\n\n\n  var transformed = moveRange._getTransformedBySplitOperation(b);\n\n  var ranges = [transformed]; // Case 5:\n  //\n  // Moved range contains graveyard element used by split operation. Add extra move operation to the result.\n  //\n\n  if (b.graveyardPosition) {\n    var movesGraveyardElement = moveRange.start.isEqual(b.graveyardPosition) || moveRange.containsPosition(b.graveyardPosition);\n\n    if (a.howMany > 1 && movesGraveyardElement && !context.aWasUndone) {\n      ranges.push(Range._createFromPositionAndShift(b.insertionPosition, 1));\n    }\n  }\n\n  return _makeMoveOperationsFromRanges(ranges, newTargetPosition);\n});\nsetTransformation(MoveOperation, MergeOperation, function (a, b, context) {\n  var movedRange = Range._createFromPositionAndShift(a.sourcePosition, a.howMany);\n\n  if (b.deletionPosition.hasSameParentAs(a.sourcePosition) && movedRange.containsPosition(b.sourcePosition)) {\n    if (a.type == 'remove' && !context.forceWeakRemove) {\n      // Case 1:\n      //\n      // The element to remove got merged.\n      //\n      // Merge operation does support merging elements which are not siblings. So it would not be a problem\n      // from technical point of view. However, if the element was removed, the intention of the user\n      // deleting it was to have it all deleted. From user experience point of view, moving back the\n      // removed nodes might be unexpected. This means that in this scenario we will reverse merging and remove the element.\n      //\n      if (!context.aWasUndone) {\n        var results = [];\n        var gyMoveSource = b.graveyardPosition.clone();\n\n        var splitNodesMoveSource = b.targetPosition._getTransformedByMergeOperation(b);\n\n        if (a.howMany > 1) {\n          results.push(new MoveOperation(a.sourcePosition, a.howMany - 1, a.targetPosition, 0));\n          gyMoveSource = gyMoveSource._getTransformedByMove(a.sourcePosition, a.targetPosition, a.howMany - 1);\n          splitNodesMoveSource = splitNodesMoveSource._getTransformedByMove(a.sourcePosition, a.targetPosition, a.howMany - 1);\n        }\n\n        var gyMoveTarget = b.deletionPosition._getCombined(a.sourcePosition, a.targetPosition);\n\n        var gyMove = new MoveOperation(gyMoveSource, 1, gyMoveTarget, 0);\n        var splitNodesMoveTargetPath = gyMove.getMovedRangeStart().path.slice();\n        splitNodesMoveTargetPath.push(0);\n        var splitNodesMoveTarget = new Position(gyMove.targetPosition.root, splitNodesMoveTargetPath);\n        splitNodesMoveSource = splitNodesMoveSource._getTransformedByMove(gyMoveSource, gyMoveTarget, 1);\n        var splitNodesMove = new MoveOperation(splitNodesMoveSource, b.howMany, splitNodesMoveTarget, 0);\n        results.push(gyMove);\n        results.push(splitNodesMove);\n        return results;\n      }\n    } else {\n      // Case 2:\n      //\n      // The element to move got merged and it was the only element to move.\n      // In this case just don't do anything, leave the node in the graveyard. Without special case\n      // it would be a move operation that moves 0 nodes, so maybe it is better just to return no-op.\n      //\n      if (a.howMany == 1) {\n        if (!context.bWasUndone) {\n          return [new NoOperation(0)];\n        } else {\n          a.sourcePosition = b.graveyardPosition.clone();\n          a.targetPosition = a.targetPosition._getTransformedByMergeOperation(b);\n          return [a];\n        }\n      }\n    }\n  } // The default case.\n  //\n\n\n  var moveRange = Range._createFromPositionAndShift(a.sourcePosition, a.howMany);\n\n  var transformed = moveRange._getTransformedByMergeOperation(b);\n\n  a.sourcePosition = transformed.start;\n  a.howMany = transformed.end.offset - transformed.start.offset;\n  a.targetPosition = a.targetPosition._getTransformedByMergeOperation(b);\n  return [a];\n}); // -----------------------\n\nsetTransformation(RenameOperation, InsertOperation, function (a, b) {\n  a.position = a.position._getTransformedByInsertOperation(b);\n  return [a];\n});\nsetTransformation(RenameOperation, MergeOperation, function (a, b) {\n  // Case 1:\n  //\n  // Element to rename got merged, so it was moved to `b.graveyardPosition`.\n  //\n  if (a.position.isEqual(b.deletionPosition)) {\n    a.position = b.graveyardPosition.clone();\n    a.position.stickiness = 'toNext';\n    return [a];\n  }\n\n  a.position = a.position._getTransformedByMergeOperation(b);\n  return [a];\n});\nsetTransformation(RenameOperation, MoveOperation, function (a, b) {\n  a.position = a.position._getTransformedByMoveOperation(b);\n  return [a];\n});\nsetTransformation(RenameOperation, RenameOperation, function (a, b, context) {\n  if (a.position.isEqual(b.position)) {\n    if (context.aIsStrong) {\n      a.oldName = b.newName;\n    } else {\n      return [new NoOperation(0)];\n    }\n  }\n\n  return [a];\n});\nsetTransformation(RenameOperation, SplitOperation, function (a, b) {\n  // Case 1:\n  //\n  // The element to rename has been split. In this case, the new element should be also renamed.\n  //\n  // User decides to change the paragraph to a list item:\n  // <paragraph>Foobar</paragraph>\n  //\n  // However, in meantime, split happens:\n  // <paragraph>Foo</paragraph><paragraph>bar</paragraph>\n  //\n  // As a result, rename both elements:\n  // <listItem>Foo</listItem><listItem>bar</listItem>\n  //\n  var renamePath = a.position.path;\n  var splitPath = b.splitPosition.getParentPath();\n\n  if (compareArrays(renamePath, splitPath) == 'same' && !b.graveyardPosition) {\n    var extraRename = new RenameOperation(a.position.getShiftedBy(1), a.oldName, a.newName, 0);\n    return [a, extraRename];\n  } // The default case.\n  //\n\n\n  a.position = a.position._getTransformedBySplitOperation(b);\n  return [a];\n}); // -----------------------\n\nsetTransformation(RootAttributeOperation, RootAttributeOperation, function (a, b, context) {\n  if (a.root === b.root && a.key === b.key) {\n    if (!context.aIsStrong || a.newValue === b.newValue) {\n      return [new NoOperation(0)];\n    } else {\n      a.oldValue = b.newValue;\n    }\n  }\n\n  return [a];\n}); // -----------------------\n\nsetTransformation(SplitOperation, InsertOperation, function (a, b) {\n  // The default case.\n  //\n  if (a.splitPosition.hasSameParentAs(b.position) && a.splitPosition.offset < b.position.offset) {\n    a.howMany += b.howMany;\n  }\n\n  a.splitPosition = a.splitPosition._getTransformedByInsertOperation(b);\n  a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n  return [a];\n});\nsetTransformation(SplitOperation, MergeOperation, function (a, b, context) {\n  // Case 1:\n  //\n  // Split element got merged. If two different elements were merged, clients will have different content.\n  //\n  // Example. Merge at `{}`, split at `[]`:\n  // <heading>Foo</heading>{}<paragraph>B[]ar</paragraph>\n  //\n  // On merge side it will look like this:\n  // <heading>FooB[]ar</heading>\n  // <heading>FooB</heading><heading>ar</heading>\n  //\n  // On split side it will look like this:\n  // <heading>Foo</heading>{}<paragraph>B</paragraph><paragraph>ar</paragraph>\n  // <heading>FooB</heading><paragraph>ar</paragraph>\n  //\n  // Clearly, the second element is different for both clients.\n  //\n  // We could use the removed merge element from graveyard as a split element but then clients would have a different\n  // model state (in graveyard), because the split side client would still have an element in graveyard (removed by merge).\n  //\n  // To overcome this, in `SplitOperation` x `MergeOperation` transformation we will add additional `SplitOperation`\n  // in the graveyard, which will actually clone the merged-and-deleted element. Then, that cloned element will be\n  // used for splitting. Example below.\n  //\n  // Original state:\n  // <heading>Foo</heading>{}<paragraph>B[]ar</paragraph>\n  //\n  // Merge side client:\n  //\n  // After merge:\n  // <heading>FooB[]ar</heading>                                 graveyard: <paragraph></paragraph>\n  //\n  // Extra split:\n  // <heading>FooB[]ar</heading>                                 graveyard: <paragraph></paragraph><paragraph></paragraph>\n  //\n  // Use the \"cloned\" element from graveyard:\n  // <heading>FooB</heading><paragraph>ar</paragraph>            graveyard: <paragraph></paragraph>\n  //\n  // Split side client:\n  //\n  // After split:\n  // <heading>Foo</heading>{}<paragraph>B</paragraph><paragraph>ar</paragraph>\n  //\n  // After merge:\n  // <heading>FooB</heading><paragraph>ar</paragraph>            graveyard: <paragraph></paragraph>\n  //\n  // This special case scenario only applies if the original split operation clones the split element.\n  // If the original split operation has `graveyardPosition` set, it all doesn't have sense because split operation\n  // knows exactly which element it should use. So there would be no original problem with different contents.\n  //\n  // Additionally, the special case applies only if the merge wasn't already undone.\n  //\n  if (!a.graveyardPosition && !context.bWasUndone && a.splitPosition.hasSameParentAs(b.sourcePosition)) {\n    var splitPath = b.graveyardPosition.path.slice();\n    splitPath.push(0);\n    var splitPosition = new Position(b.graveyardPosition.root, splitPath);\n    var insertionPosition = SplitOperation.getInsertionPosition(new Position(b.graveyardPosition.root, splitPath));\n    var additionalSplit = new SplitOperation(splitPosition, 0, null, 0);\n    additionalSplit.insertionPosition = insertionPosition;\n    a.splitPosition = a.splitPosition._getTransformedByMergeOperation(b);\n    a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n    a.graveyardPosition = additionalSplit.insertionPosition.clone();\n    a.graveyardPosition.stickiness = 'toNext';\n    return [additionalSplit, a];\n  } // The default case.\n  //\n\n\n  if (a.splitPosition.hasSameParentAs(b.deletionPosition) && !a.splitPosition.isAfter(b.deletionPosition)) {\n    a.howMany--;\n  }\n\n  if (a.splitPosition.hasSameParentAs(b.targetPosition)) {\n    a.howMany += b.howMany;\n  }\n\n  a.splitPosition = a.splitPosition._getTransformedByMergeOperation(b);\n  a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n\n  if (a.graveyardPosition) {\n    a.graveyardPosition = a.graveyardPosition._getTransformedByMergeOperation(b);\n  }\n\n  return [a];\n});\nsetTransformation(SplitOperation, MoveOperation, function (a, b, context) {\n  var rangeToMove = Range._createFromPositionAndShift(b.sourcePosition, b.howMany);\n\n  if (a.graveyardPosition) {\n    // Case 1:\n    //\n    // Split operation graveyard node was moved. In this case move operation is stronger. Since graveyard element\n    // is already moved to the correct position, we need to only move the nodes after the split position.\n    // This will be done by `MoveOperation` instead of `SplitOperation`.\n    //\n    var gyElementMoved = rangeToMove.start.isEqual(a.graveyardPosition) || rangeToMove.containsPosition(a.graveyardPosition);\n\n    if (!context.bWasUndone && gyElementMoved) {\n      var sourcePosition = a.splitPosition._getTransformedByMoveOperation(b);\n\n      var newParentPosition = a.graveyardPosition._getTransformedByMoveOperation(b);\n\n      var newTargetPath = newParentPosition.path.slice();\n      newTargetPath.push(0);\n      var newTargetPosition = new Position(newParentPosition.root, newTargetPath);\n      var moveOp = new MoveOperation(sourcePosition, a.howMany, newTargetPosition, 0);\n      return [moveOp];\n    }\n\n    a.graveyardPosition = a.graveyardPosition._getTransformedByMoveOperation(b);\n  } // Case 2:\n  //\n  // If the split position is inside the moved range, we need to shift the split position to a proper place.\n  // The position cannot be moved together with moved range because that would result in splitting of an incorrect element.\n  //\n  // Characters `bc` should be moved to the second paragraph while split position is between them:\n  // <paragraph>A[b|c]d</paragraph><paragraph>Xyz</paragraph>\n  //\n  // After move, new split position is incorrect:\n  // <paragraph>Ad</paragraph><paragraph>Xb|cyz</paragraph>\n  //\n  // Correct split position:\n  // <paragraph>A|d</paragraph><paragraph>Xbcyz</paragraph>\n  //\n  // After split:\n  // <paragraph>A</paragraph><paragraph>d</paragraph><paragraph>Xbcyz</paragraph>\n  //\n\n\n  if (a.splitPosition.hasSameParentAs(b.sourcePosition) && rangeToMove.containsPosition(a.splitPosition)) {\n    var howManyRemoved = b.howMany - (a.splitPosition.offset - b.sourcePosition.offset);\n    a.howMany -= howManyRemoved;\n\n    if (a.splitPosition.hasSameParentAs(b.targetPosition) && a.splitPosition.offset < b.targetPosition.offset) {\n      a.howMany += b.howMany;\n    }\n\n    a.splitPosition = b.sourcePosition.clone();\n    a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n    return [a];\n  } // Case 3:\n  //\n  // Split is at a position where nodes were moved.\n  //\n  // This is a scenario described in `MoveOperation` x `SplitOperation` transformation but from the\n  // \"split operation point of view\".\n  //\n\n\n  var splitAtTarget = a.splitPosition.isEqual(b.targetPosition);\n\n  if (splitAtTarget && (context.baRelation == 'insertAtSource' || context.abRelation == 'splitBefore')) {\n    a.howMany += b.howMany;\n    a.splitPosition = a.splitPosition._getTransformedByDeletion(b.sourcePosition, b.howMany);\n    a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n    return [a];\n  } // The default case.\n  // Don't change `howMany` if move operation does not really move anything.\n  //\n\n\n  if (!b.sourcePosition.isEqual(b.targetPosition)) {\n    if (a.splitPosition.hasSameParentAs(b.sourcePosition) && a.splitPosition.offset <= b.sourcePosition.offset) {\n      a.howMany -= b.howMany;\n    }\n\n    if (a.splitPosition.hasSameParentAs(b.targetPosition) && a.splitPosition.offset < b.targetPosition.offset) {\n      a.howMany += b.howMany;\n    }\n  } // Change position stickiness to force a correct transformation.\n\n\n  a.splitPosition.stickiness = 'toNone';\n  a.splitPosition = a.splitPosition._getTransformedByMoveOperation(b);\n  a.splitPosition.stickiness = 'toNext';\n\n  if (a.graveyardPosition) {\n    a.insertionPosition = a.insertionPosition._getTransformedByMoveOperation(b);\n  } else {\n    a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n  }\n\n  return [a];\n});\nsetTransformation(SplitOperation, SplitOperation, function (a, b, context) {\n  // Case 1:\n  //\n  // Split at the same position.\n  //\n  // If there already was a split at the same position as in `a` operation, it means that the intention\n  // conveyed by `a` operation has already been fulfilled and `a` should not do anything (to avoid double split).\n  //\n  // However, there is a difference if these are new splits or splits created by undo. These have different\n  // intentions. Also splits moving back different elements from graveyard have different intentions. They\n  // are just different operations.\n  //\n  // So we cancel split operation only if it was really identical.\n  //\n  // Also, there is additional case, where split operations aren't identical and should not be cancelled, however the\n  // default transformation is incorrect too.\n  //\n  if (a.splitPosition.isEqual(b.splitPosition)) {\n    if (!a.graveyardPosition && !b.graveyardPosition) {\n      return [new NoOperation(0)];\n    }\n\n    if (a.graveyardPosition && b.graveyardPosition && a.graveyardPosition.isEqual(b.graveyardPosition)) {\n      return [new NoOperation(0)];\n    } // Use context to know that the `a.splitPosition` should stay where it is.\n    // This happens during undo when first a merge operation moved nodes to `a.splitPosition` and now `b` operation undoes that merge.\n\n\n    if (context.abRelation == 'splitBefore') {\n      // Since split is at the same position, there are no nodes left to split.\n      a.howMany = 0; // Note: there was `if ( a.graveyardPosition )` here but it was uncovered in tests and I couldn't find any scenarios for now.\n      // That would have to be a `SplitOperation` that didn't come from undo but is transformed by operations that were undone.\n      // It could happen if `context` is enabled in collaboration.\n\n      a.graveyardPosition = a.graveyardPosition._getTransformedBySplitOperation(b);\n      return [a];\n    }\n  } // Case 2:\n  //\n  // Same node is using to split different elements. This happens in undo when previously same element was merged to\n  // two different elements. This is described in `MergeOperation` x `MergeOperation` transformation.\n  //\n  // In this case we will follow the same logic. We will assume that `insertionPosition` is same for both\n  // split operations. This might not always be true but in the real cases that were experienced it was. After all,\n  // if these splits are reverses of merge operations that were merging the same element, then the `insertionPosition`\n  // should be same for both of those splits.\n  //\n  // Again, we will decide which operation is stronger by checking if split happens in graveyard or in non-graveyard root.\n  //\n\n\n  if (a.graveyardPosition && b.graveyardPosition && a.graveyardPosition.isEqual(b.graveyardPosition)) {\n    var aInGraveyard = a.splitPosition.root.rootName == '$graveyard';\n    var bInGraveyard = b.splitPosition.root.rootName == '$graveyard'; // If `aIsWeak` it means that `a` points to graveyard while `b` doesn't. Don't move nodes then.\n\n    var aIsWeak = aInGraveyard && !bInGraveyard; // If `bIsWeak` it means that `b` points to graveyard while `a` doesn't. Force moving nodes then.\n\n    var bIsWeak = bInGraveyard && !aInGraveyard; // Force move if `b` is weak or neither operation is weak but `a` is stronger through `context.aIsStrong`.\n\n    var forceMove = bIsWeak || !aIsWeak && context.aIsStrong;\n\n    if (forceMove) {\n      var result = []; // First we need to move any nodes split by `b` back to where they were.\n      // Do it only if `b` actually moved something.\n\n      if (b.howMany) {\n        result.push(new MoveOperation(b.moveTargetPosition, b.howMany, b.splitPosition, 0));\n      } // Then we need to move nodes from `a` split position to their new element.\n      // Do it only if `a` actually should move something.\n\n\n      if (a.howMany) {\n        result.push(new MoveOperation(a.splitPosition, a.howMany, a.moveTargetPosition, 0));\n      }\n\n      return result;\n    } else {\n      return [new NoOperation(0)];\n    }\n  }\n\n  if (a.graveyardPosition) {\n    a.graveyardPosition = a.graveyardPosition._getTransformedBySplitOperation(b);\n  } // Case 3:\n  //\n  // Position where operation `b` inserted a new node after split is the same as the operation `a` split position.\n  // As in similar cases, there is ambiguity if the split should be before the new node (created by `b`) or after.\n  //\n\n\n  if (a.splitPosition.isEqual(b.insertionPosition) && context.abRelation == 'splitBefore') {\n    a.howMany++;\n    return [a];\n  } // Case 4:\n  //\n  // This is a mirror to the case 2. above.\n  //\n\n\n  if (b.splitPosition.isEqual(a.insertionPosition) && context.baRelation == 'splitBefore') {\n    var newPositionPath = b.insertionPosition.path.slice();\n    newPositionPath.push(0);\n    var newPosition = new Position(b.insertionPosition.root, newPositionPath);\n    var moveOp = new MoveOperation(a.insertionPosition, 1, newPosition, 0);\n    return [a, moveOp];\n  } // The default case.\n  //\n\n\n  if (a.splitPosition.hasSameParentAs(b.splitPosition) && a.splitPosition.offset < b.splitPosition.offset) {\n    a.howMany -= b.howMany;\n  }\n\n  a.splitPosition = a.splitPosition._getTransformedBySplitOperation(b);\n  a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n  return [a];\n}); // Checks whether `MoveOperation` `targetPosition` is inside a node from the moved range of the other `MoveOperation`.\n//\n// @private\n// @param {module:engine/model/operation/moveoperation~MoveOperation} a\n// @param {module:engine/model/operation/moveoperation~MoveOperation} b\n// @returns {Boolean}\n\nfunction _moveTargetIntoMovedRange(a, b) {\n  return a.targetPosition._getTransformedByDeletion(b.sourcePosition, b.howMany) === null;\n} // Helper function for `MoveOperation` x `MoveOperation` transformation. Converts given ranges and target position to\n// move operations and returns them.\n//\n// Ranges and target position will be transformed on-the-fly when generating operations.\n//\n// Given `ranges` should be in the order of how they were in the original transformed operation.\n//\n// Given `targetPosition` is the target position of the first range from `ranges`.\n//\n// @private\n// @param {Array.<module:engine/model/range~Range>} ranges\n// @param {module:engine/model/position~Position} targetPosition\n// @returns {Array.<module:engine/model/operation/moveoperation~MoveOperation>}\n\n\nfunction _makeMoveOperationsFromRanges(ranges, targetPosition) {\n  // At this moment we have some ranges and a target position, to which those ranges should be moved.\n  // Order in `ranges` array is the go-to order of after transformation.\n  //\n  // We are almost done. We have `ranges` and `targetPosition` to make operations from.\n  // Unfortunately, those operations may affect each other. Precisely, first operation after move\n  // may affect source range and target position of second and third operation. Same with second\n  // operation affecting third.\n  //\n  // We need to fix those source ranges and target positions once again, before converting `ranges` to operations.\n  var operations = []; // Keep in mind that nothing will be transformed if there is just one range in `ranges`.\n\n  for (var i = 0; i < ranges.length; i++) {\n    // Create new operation out of a range and target position.\n    var range = ranges[i];\n    var op = new MoveOperation(range.start, range.end.offset - range.start.offset, targetPosition, 0);\n    operations.push(op); // Transform other ranges by the generated operation.\n\n    for (var j = i + 1; j < ranges.length; j++) {\n      // All ranges in `ranges` array should be:\n      //\n      // * non-intersecting (these are part of original operation source range), and\n      // * `targetPosition` does not target into them (opposite would mean that transformed operation targets \"inside itself\").\n      //\n      // This means that the transformation will be \"clean\" and always return one result.\n      ranges[j] = ranges[j]._getTransformedByMove(op.sourcePosition, op.targetPosition, op.howMany)[0];\n    }\n\n    targetPosition = targetPosition._getTransformedByMove(op.sourcePosition, op.targetPosition, op.howMany);\n  }\n\n  return operations;\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module undo/basecommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { transformSets } from '@ckeditor/ckeditor5-engine/src/model/operation/transform';\n/**\n * Base class for undo feature commands: {@link module:undo/undocommand~UndoCommand} and {@link module:undo/redocommand~RedoCommand}.\n *\n * @protected\n * @extends module:core/command~Command\n */\n\nvar BaseCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(BaseCommand, _Command);\n\n  function BaseCommand(editor) {\n    var _this;\n\n    _classCallCheck(this, BaseCommand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BaseCommand).call(this, editor));\n    /**\n     * Stack of items stored by the command. These are pairs of:\n     *\n     * * {@link module:engine/model/batch~Batch batch} saved by the command,\n     * * {@link module:engine/model/selection~Selection selection} state at the moment of saving the batch.\n     *\n     * @protected\n     * @member {Array} #_stack\n     */\n\n    _this._stack = [];\n    /**\n     * Stores all batches that were created by this command.\n     *\n     * @protected\n     * @member {WeakSet.<module:engine/model/batch~Batch>} #_createdBatches\n     */\n\n    _this._createdBatches = new WeakSet(); // Refresh state, so the command is inactive right after initialization.\n\n    _this.refresh();\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(BaseCommand, [{\n    key: \"refresh\",\n    value: function refresh() {\n      this.isEnabled = this._stack.length > 0;\n    }\n    /**\n     * Stores a batch in the command, together with the selection state of the {@link module:engine/model/document~Document document}\n     * created by the editor which this command is registered to.\n     *\n     * @param {module:engine/model/batch~Batch} batch The batch to add.\n     */\n\n  }, {\n    key: \"addBatch\",\n    value: function addBatch(batch) {\n      var docSelection = this.editor.model.document.selection;\n      var selection = {\n        ranges: docSelection.hasOwnRange ? Array.from(docSelection.getRanges()) : [],\n        isBackward: docSelection.isBackward\n      };\n\n      this._stack.push({\n        batch: batch,\n        selection: selection\n      });\n\n      this.refresh();\n    }\n    /**\n     * Removes all items from the stack.\n     */\n\n  }, {\n    key: \"clearStack\",\n    value: function clearStack() {\n      this._stack = [];\n      this.refresh();\n    }\n    /**\n     * Restores the {@link module:engine/model/document~Document#selection document selection} state after a batch was undone.\n     *\n     * @protected\n     * @param {Array.<module:engine/model/range~Range>} ranges Ranges to be restored.\n     * @param {Boolean} isBackward A flag describing whether the restored range was selected forward or backward.\n     * @param {Array.<module:engine/model/operation/operation~Operation>} operations Operations which has been applied\n     * since selection has been stored.\n     */\n\n  }, {\n    key: \"_restoreSelection\",\n    value: function _restoreSelection(ranges, isBackward, operations) {\n      var model = this.editor.model;\n      var document = model.document; // This will keep the transformed selection ranges.\n\n      var selectionRanges = []; // Transform all ranges from the restored selection.\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var range = _step.value;\n          var transformed = transformSelectionRange(range, operations); // For each `range` from `ranges`, we take only one transformed range.\n          // This is because we want to prevent situation where single-range selection\n          // got transformed to multi-range selection. We will take the first range that\n          // is not in the graveyard.\n\n          var newRange = transformed.find(function (range) {\n            return range.start.root != document.graveyard;\n          }); // `transformedRange` might be `undefined` if transformed range ended up in graveyard.\n\n          if (newRange) {\n            selectionRanges.push(newRange);\n          }\n        } // `selectionRanges` may be empty if all ranges ended up in graveyard. If that is the case, do not restore selection.\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (selectionRanges.length) {\n        model.change(function (writer) {\n          writer.setSelection(selectionRanges, {\n            backward: isBackward\n          });\n        });\n      }\n    }\n    /**\n     * Undoes a batch by reversing that batch, transforming reversed batch and finally applying it.\n     * This is a helper method for {@link #execute}.\n     *\n     * @protected\n     * @param {module:engine/model/batch~Batch} batchToUndo The batch to be undone.\n     * @param {module:engine/model/batch~Batch} undoingBatch The batch that will contain undoing changes.\n     */\n\n  }, {\n    key: \"_undo\",\n    value: function _undo(batchToUndo, undoingBatch) {\n      var model = this.editor.model;\n      var document = model.document; // All changes done by the command execution will be saved as one batch.\n\n      this._createdBatches.add(undoingBatch);\n\n      var operationsToUndo = batchToUndo.operations.slice().filter(function (operation) {\n        return operation.isDocumentOperation;\n      });\n      operationsToUndo.reverse(); // We will process each operation from `batchToUndo`, in reverse order. If there were operations A, B and C in undone batch,\n      // we need to revert them in reverse order, so first C' (reversed C), then B', then A'.\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = operationsToUndo[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var operationToUndo = _step2.value;\n          var nextBaseVersion = operationToUndo.baseVersion + 1;\n          var historyOperations = Array.from(document.history.getOperations(nextBaseVersion));\n          var transformedSets = transformSets([operationToUndo.getReversed()], historyOperations, {\n            useRelations: true,\n            document: this.editor.model.document,\n            padWithNoOps: false,\n            forceWeakRemove: true\n          });\n          var reversedOperations = transformedSets.operationsA; // After reversed operation has been transformed by all history operations, apply it.\n\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = reversedOperations[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var operation = _step3.value;\n              // Before applying, add the operation to the `undoingBatch`.\n              undoingBatch.addOperation(operation);\n              model.applyOperation(operation);\n              document.history.setOperationAsUndone(operationToUndo, operation);\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }]);\n\n  return BaseCommand;\n}(Command); // Transforms given range `range` by given `operations`.\n// Returns an array containing one or more ranges, which are result of the transformation.\n\n\nexport { BaseCommand as default };\n\nfunction transformSelectionRange(range, operations) {\n  var transformed = range.getTransformedByOperations(operations); // After `range` got transformed, we have an array of ranges. Some of those\n  // ranges may be \"touching\" -- they can be next to each other and could be merged.\n  // First, we have to sort those ranges to assure that they are in order.\n\n  transformed.sort(function (a, b) {\n    return a.start.isBefore(b.start) ? -1 : 1;\n  }); // Then, we check if two consecutive ranges are touching.\n\n  for (var i = 1; i < transformed.length; i++) {\n    var a = transformed[i - 1];\n    var b = transformed[i];\n\n    if (a.end.isTouching(b.start)) {\n      // And join them together if they are.\n      a.end = b.end;\n      transformed.splice(i, 1);\n      i--;\n    }\n  }\n\n  return transformed;\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module undo/undocommand\n */\nimport BaseCommand from './basecommand';\n/**\n * The undo command stores {@link module:engine/model/batch~Batch batches} applied to the\n * {@link module:engine/model/document~Document document} and is able to undo a batch by reversing it and transforming by\n * batches from {@link module:engine/model/document~Document#history history} that happened after the reversed batch.\n *\n * The undo command also takes care of restoring the {@link module:engine/model/document~Document#selection document selection}.\n *\n * @extends module:undo/basecommand~BaseCommand\n */\n\nvar UndoCommand =\n/*#__PURE__*/\nfunction (_BaseCommand) {\n  _inherits(UndoCommand, _BaseCommand);\n\n  function UndoCommand() {\n    _classCallCheck(this, UndoCommand);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UndoCommand).apply(this, arguments));\n  }\n\n  _createClass(UndoCommand, [{\n    key: \"execute\",\n\n    /**\n     * Executes the command. This method reverts a {@link module:engine/model/batch~Batch batch} added to the command's stack, transforms\n     * and applies the reverted version on the {@link module:engine/model/document~Document document} and removes the batch from the stack.\n     * Then, it restores the {@link module:engine/model/document~Document#selection document selection}.\n     *\n     * @fires execute\n     * @fires revert\n     * @param {module:engine/model/batch~Batch} [batch] A batch that should be undone. If not set, the last added batch will be undone.\n     */\n    value: function execute() {\n      var _this = this;\n\n      var batch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      // If batch is not given, set `batchIndex` to the last index in command stack.\n      var batchIndex = batch ? this._stack.findIndex(function (a) {\n        return a.batch == batch;\n      }) : this._stack.length - 1;\n\n      var item = this._stack.splice(batchIndex, 1)[0];\n\n      var undoingBatch = this.editor.model.createBatch(); // All changes has to be done in one `enqueueChange` callback so other listeners will not\n      // step between consecutive operations, or won't do changes to the document before selection is properly restored.\n\n      this.editor.model.enqueueChange(undoingBatch, function () {\n        _this._undo(item.batch, undoingBatch);\n\n        var operations = _this.editor.model.document.history.getOperations(item.batch.baseVersion);\n\n        _this._restoreSelection(item.selection.ranges, item.selection.isBackward, operations);\n\n        _this.fire('revert', item.batch, undoingBatch);\n      });\n      this.refresh();\n    }\n  }]);\n\n  return UndoCommand;\n}(BaseCommand);\n/**\n * Fired when execution of the command reverts some batch.\n *\n * @event revert\n */\n\n\nexport { UndoCommand as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module undo/redocommand\n */\nimport BaseCommand from './basecommand';\n/**\n * The redo command stores {@link module:engine/model/batch~Batch batches} that were used to undo a batch by\n * {@link module:undo/undocommand~UndoCommand}. It is able to redo a previously undone batch by reversing the undoing\n * batches created by `UndoCommand`. The reversed batch is transformed by all the batches from\n * {@link module:engine/model/document~Document#history history} that happened after the reversed undo batch.\n *\n * The redo command also takes care of restoring the {@link module:engine/model/document~Document#selection document selection}.\n *\n * @extends module:undo/basecommand~BaseCommand\n */\n\nvar RedoCommand =\n/*#__PURE__*/\nfunction (_BaseCommand) {\n  _inherits(RedoCommand, _BaseCommand);\n\n  function RedoCommand() {\n    _classCallCheck(this, RedoCommand);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RedoCommand).apply(this, arguments));\n  }\n\n  _createClass(RedoCommand, [{\n    key: \"execute\",\n\n    /**\n     * Executes the command. This method reverts the last {@link module:engine/model/batch~Batch batch} added to\n     * the command's stack, applies the reverted and transformed version on the\n     * {@link module:engine/model/document~Document document} and removes the batch from the stack.\n     * Then, it restores the {@link module:engine/model/document~Document#selection document selection}.\n     *\n     * @fires execute\n     */\n    value: function execute() {\n      var _this = this;\n\n      var item = this._stack.pop();\n\n      var redoingBatch = this.editor.model.createBatch(); // All changes have to be done in one `enqueueChange` callback so other listeners will not step between consecutive\n      // operations, or won't do changes to the document before selection is properly restored.\n\n      this.editor.model.enqueueChange(redoingBatch, function () {\n        var lastOperation = item.batch.operations[item.batch.operations.length - 1];\n        var nextBaseVersion = lastOperation.baseVersion + 1;\n\n        var operations = _this.editor.model.document.history.getOperations(nextBaseVersion);\n\n        _this._restoreSelection(item.selection.ranges, item.selection.isBackward, operations);\n\n        _this._undo(item.batch, redoingBatch);\n      });\n      this.refresh();\n    }\n  }]);\n\n  return RedoCommand;\n}(BaseCommand);\n\nexport { RedoCommand as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module undo/undoediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport UndoCommand from './undocommand';\nimport RedoCommand from './redocommand';\n/**\n * The undo engine feature.\n *\n * It introduces the `'undo'` and `'redo'` commands to the editor.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar UndoEditing =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(UndoEditing, _Plugin);\n\n  /**\n   * @inheritDoc\n   */\n  function UndoEditing(editor) {\n    var _this;\n\n    _classCallCheck(this, UndoEditing);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UndoEditing).call(this, editor));\n    /**\n     * The command that manages undo {@link module:engine/model/batch~Batch batches} stack (history).\n     * Created and registered during the {@link #init feature initialization}.\n     *\n     * @private\n     * @member {module:undo/undocommand~UndoCommand} #_undoCommand\n     */\n\n    /**\n     * The command that manages redo {@link module:engine/model/batch~Batch batches} stack (history).\n     * Created and registered during the {@link #init feature initialization}.\n     *\n     * @private\n     * @member {module:undo/undocommand~UndoCommand} #_redoCommand\n     */\n\n    /**\n     * Keeps track of which batches were registered in undo.\n     *\n     * @private\n     * @member {WeakSet.<module:engine/model/batch~Batch>}\n     */\n\n    _this._batchRegistry = new WeakSet();\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(UndoEditing, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n\n      var editor = this.editor; // Create commands.\n\n      this._undoCommand = new UndoCommand(editor);\n      this._redoCommand = new RedoCommand(editor); // Register command to the editor.\n\n      editor.commands.add('undo', this._undoCommand);\n      editor.commands.add('redo', this._redoCommand);\n      this.listenTo(editor.model, 'applyOperation', function (evt, args) {\n        var operation = args[0]; // Do not register batch if the operation is not a document operation.\n        // This prevents from creating empty undo steps, where all operations where non-document operations.\n        // Non-document operations creates and alters content in detached tree fragments (for example, document fragments).\n        // Most of time this is preparing data before it is inserted into actual tree (for example during copy & paste).\n        // Such operations should not be reversed.\n\n        if (!operation.isDocumentOperation) {\n          return;\n        }\n\n        var batch = operation.batch; // If changes are not a part of a batch or this is not a new batch, omit those changes.\n\n        if (_this2._batchRegistry.has(batch) || batch.type == 'transparent') {\n          return;\n        } else {\n          if (_this2._redoCommand._createdBatches.has(batch)) {\n            // If this batch comes from `redoCommand`, add it to `undoCommand` stack.\n            _this2._undoCommand.addBatch(batch);\n          } else if (!_this2._undoCommand._createdBatches.has(batch)) {\n            // A default batch - these are new changes in the document, not introduced by undo feature.\n            // Add them to `undoCommand` stack and clear `redoCommand` stack.\n            _this2._undoCommand.addBatch(batch);\n\n            _this2._redoCommand.clearStack();\n          }\n        } // Add the batch to the registry so it will not be processed again.\n\n\n        _this2._batchRegistry.add(batch);\n      }, {\n        priority: 'highest'\n      });\n      this.listenTo(this._undoCommand, 'revert', function (evt, undoneBatch, undoingBatch) {\n        _this2._redoCommand.addBatch(undoingBatch);\n      });\n      editor.keystrokes.set('CTRL+Z', 'undo');\n      editor.keystrokes.set('CTRL+Y', 'redo');\n      editor.keystrokes.set('CTRL+SHIFT+Z', 'redo');\n    }\n  }]);\n\n  return UndoEditing;\n}(Plugin);\n\nexport { UndoEditing as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module undo/undoui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport undoIcon from '../theme/icons/undo.svg';\nimport redoIcon from '../theme/icons/redo.svg';\n/**\n * The undo UI feature. It introduces the `'undo'` and `'redo'` buttons to the editor.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar UndoUI =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(UndoUI, _Plugin);\n\n  function UndoUI() {\n    _classCallCheck(this, UndoUI);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UndoUI).apply(this, arguments));\n  }\n\n  _createClass(UndoUI, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var editor = this.editor;\n      var t = editor.t;\n\n      this._addButton('undo', t('Undo'), 'CTRL+Z', undoIcon);\n\n      this._addButton('redo', t('Redo'), 'CTRL+Y', redoIcon);\n    }\n    /**\n     * Creates a button for the specified command.\n     *\n     * @private\n     * @param {String} name Command name.\n     * @param {String} label Button label.\n     * @param {String} keystroke Command keystroke.\n     * @param {String} Icon Source of the icon.\n     */\n\n  }, {\n    key: \"_addButton\",\n    value: function _addButton(name, label, keystroke, Icon) {\n      var _this = this;\n\n      var editor = this.editor;\n      editor.ui.componentFactory.add(name, function (locale) {\n        var command = editor.commands.get(name);\n        var view = new ButtonView(locale);\n        view.set({\n          label: label,\n          icon: Icon,\n          keystroke: keystroke,\n          tooltip: true\n        });\n        view.bind('isEnabled').to(command, 'isEnabled');\n\n        _this.listenTo(view, 'execute', function () {\n          return editor.execute(name);\n        });\n\n        return view;\n      });\n    }\n  }]);\n\n  return UndoUI;\n}(Plugin);\n\nexport { UndoUI as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module undo/undo\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport UndoEditing from './undoediting';\nimport UndoUI from './undoui';\n/**\n * The undo feature.\n *\n * This is a \"glue\" plugin which loads the {@link module:undo/undoediting~UndoEditing undo editing feature}\n * and {@link module:undo/undoui~UndoUI undo UI feature}.\n *\n * Below is the explanation of the undo mechanism working together with {@link module:engine/model/history~History History}:\n *\n * Whenever a {@link module:engine/model/operation/operation~Operation operation} is applied to the\n * {@link module:engine/model/document~Document document}, it is saved to `History` as is.\n * The {@link module:engine/model/batch~Batch batch} that owns that operation is also saved, in\n * {@link module:undo/undocommand~UndoCommand}, together with the selection that was present in the document before the\n * operation was applied. A batch is saved instead of the operation because changes are undone batch-by-batch, not operation-by-operation\n * and a batch is seen as one undo step.\n *\n * After some changes happen to the document, the `History` and `UndoCommand` stack can be represented as follows:\n *\n *\t\t    History                            Undo stack\n *\t\t==============             ==================================\n *\t\t[operation A1]                         [batch A]\n *\t\t[operation B1]                         [batch B]\n *\t\t[operation B2]                         [batch C]\n *\t\t[operation C1]\n *\t\t[operation C2]\n *\t\t[operation B3]\n *\t\t[operation C3]\n *\n * Where operations starting with the same letter are from same batch.\n *\n * Undoing a batch means that a set of operations which will reverse the effects of that batch needs to be generated.\n * For example, if a batch added several letters, undoing the batch should remove them. It is important to apply undoing\n * operations in the reversed order, so if a batch has operation `X`, `Y`, `Z`, reversed operations `Zr`, `Yr` and `Xr`\n * need to be applied. Otherwise reversed operation `Xr` would operate on a wrong document state, because operation `X`\n * does not know that operations `Y` and `Z` happened.\n *\n * After operations from an undone batch got {@link module:engine/model/operation/operation~Operation#getReversed reversed},\n * one needs to make sure if they are ready to be applied. In the scenario above, operation `C3` is the last operation and `C3r`\n * bases on up-to-date document state, so it can be applied to the document.\n *\n *\t\t     History                             Undo stack\n *\t\t=================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]             [   processing undoing batch C   ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\n * Next is operation `C2`, reversed to `C2r`. `C2r` bases on `C2`, so it bases on the wrong document state. It needs to be\n * transformed by operations from history that happened after it, so it \"knows\" about them. Let us assume that `C2' = C2r * B3 * C3 * C3r`,\n * where `*` means \"transformed by\". Rest of operations from that batch are processed in the same fashion.\n *\n *\t\t     History                             Undo stack                                      Redo stack\n *\t\t=================             ==================================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]                                    [ batch Cr ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\t\t[ operation C2' ]\n *\t\t[ operation C1' ]\n *\n * Selective undo works on the same basis, however, instead of undoing the last batch in the undo stack, any batch can be undone.\n * The same algorithm applies: operations from a batch (i.e. `A1`) are reversed and then transformed by operations stored in history.\n *\n * Redo also is very similar to undo. It has its own stack that is filled with undoing (reversed batches). Operations from\n * batch that is re-done are reversed-back, transformed in proper order and applied to the document.\n *\n *\t\t     History                             Undo stack                                      Redo stack\n *\t\t=================             ==================================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]                      [ batch Crr ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\t\t[ operation C2' ]\n *\t\t[ operation C1' ]\n *\t\t[ operation C1'r]\n *\t\t[ operation C2'r]\n *\t\t[ operation C3rr]\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Undo =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Undo, _Plugin);\n\n  function Undo() {\n    _classCallCheck(this, Undo);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Undo).apply(this, arguments));\n  }\n\n  _createClass(Undo, null, [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [UndoEditing, UndoUI];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'Undo';\n    }\n  }]);\n\n  return Undo;\n}(Plugin);\n\nexport { Undo as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module essentials/essentials\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Clipboard from '@ckeditor/ckeditor5-clipboard/src/clipboard';\nimport Enter from '@ckeditor/ckeditor5-enter/src/enter';\nimport ShiftEnter from '@ckeditor/ckeditor5-enter/src/shiftenter';\nimport Typing from '@ckeditor/ckeditor5-typing/src/typing';\nimport Undo from '@ckeditor/ckeditor5-undo/src/undo';\n/**\n * A plugin including all essential editing features. It represents a set of features that enables similar functionalities\n * to a `<textarea>` element.\n *\n * It includes:\n *\n * * {@link module:clipboard/clipboard~Clipboard},\n * * {@link module:enter/enter~Enter},\n * * {@link module:enter/shiftenter~ShiftEnter},\n * * {@link module:typing/typing~Typing},\n * * {@link module:undo/undo~Undo}.\n *\n * This plugin set does not define any block-level containers (such as {@link module:paragraph/paragraph~Paragraph}).\n * If your editor is supposed to handle block content, make sure to include it.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Essentials =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Essentials, _Plugin);\n\n  function Essentials() {\n    _classCallCheck(this, Essentials);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Essentials).apply(this, arguments));\n  }\n\n  _createClass(Essentials, null, [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [Clipboard, Enter, ShiftEnter, Typing, Undo];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'Essentials';\n    }\n  }]);\n\n  return Essentials;\n}(Plugin);\n\nexport { Essentials as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module heading/headingcommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n/**\n * The heading command. It is used by the {@link module:heading/heading~Heading heading feature} to apply headings.\n *\n * @extends module:core/command~Command\n */\n\nvar HeadingCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(HeadingCommand, _Command);\n\n  /**\n   * Creates an instance of the command.\n   *\n   * @param {module:core/editor/editor~Editor} editor Editor instance.\n   * @param {Array.<String>} modelElements Names of the element which this command can apply in the model.\n   */\n  function HeadingCommand(editor, modelElements) {\n    var _this;\n\n    _classCallCheck(this, HeadingCommand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HeadingCommand).call(this, editor));\n    /**\n     * If the selection starts in a heading (which {@link #modelElements is supported by this command})\n     * the value is set to the name of that heading model element.\n     * It is  set to `false` otherwise.\n     *\n     * @observable\n     * @readonly\n     * @member {Boolean|String} #value\n     */\n\n    /**\n     * Set of defined model's elements names that this command support.\n     * See {@link module:heading/heading~HeadingOption}.\n     *\n     * @readonly\n     * @member {Array.<String>}\n     */\n\n    _this.modelElements = modelElements;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(HeadingCommand, [{\n    key: \"refresh\",\n    value: function refresh() {\n      var _this2 = this;\n\n      var block = first(this.editor.model.document.selection.getSelectedBlocks());\n      this.value = !!block && this.modelElements.includes(block.name) && block.name;\n      this.isEnabled = !!block && this.modelElements.some(function (heading) {\n        return checkCanBecomeHeading(block, heading, _this2.editor.model.schema);\n      });\n    }\n    /**\n     * Executes the command. Applies the heading to the selected blocks or, if the first selected\n     * block is a heading already, turns selected headings (of this level only) to paragraphs.\n     *\n     * @param {Object} options\n     * @param {String} options.value Name of the element which this command will apply in the model.\n     * @fires execute\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute(options) {\n      var model = this.editor.model;\n      var document = model.document;\n      var modelElement = options.value;\n      model.change(function (writer) {\n        var blocks = Array.from(document.selection.getSelectedBlocks()).filter(function (block) {\n          return checkCanBecomeHeading(block, modelElement, model.schema);\n        });\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var block = _step.value;\n\n            if (!block.is(modelElement)) {\n              writer.rename(block, modelElement);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      });\n    }\n  }]);\n\n  return HeadingCommand;\n}(Command); // Checks whether the given block can be replaced by a specific heading.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:heading/headingcommand~HeadingCommand#modelElement} heading Command element name in the model.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\n\n\nexport { HeadingCommand as default };\n\nfunction checkCanBecomeHeading(block, heading, schema) {\n  return schema.checkChild(block.parent, heading) && !schema.isObject(block);\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module heading/headingediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\nimport HeadingCommand from './headingcommand';\nimport priorities from '@ckeditor/ckeditor5-utils/src/priorities';\nvar defaultModelElement = 'paragraph';\n/**\n * The headings engine feature. It handles switching between block formats &ndash; headings and paragraph.\n * This class represents the engine part of the heading feature. See also {@link module:heading/heading~Heading}.\n * It introduces `heading1`-`headingN` commands which allow to convert paragraphs into headings.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar HeadingEditing =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(HeadingEditing, _Plugin);\n\n  /**\n   * @inheritDoc\n   */\n  function HeadingEditing(editor) {\n    var _this;\n\n    _classCallCheck(this, HeadingEditing);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HeadingEditing).call(this, editor));\n    editor.config.define('heading', {\n      options: [{\n        model: 'paragraph',\n        title: 'Paragraph',\n        class: 'ck-heading_paragraph'\n      }, {\n        model: 'heading1',\n        view: 'h2',\n        title: 'Heading 1',\n        class: 'ck-heading_heading1'\n      }, {\n        model: 'heading2',\n        view: 'h3',\n        title: 'Heading 2',\n        class: 'ck-heading_heading2'\n      }, {\n        model: 'heading3',\n        view: 'h4',\n        title: 'Heading 3',\n        class: 'ck-heading_heading3'\n      }]\n    });\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(HeadingEditing, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var editor = this.editor;\n      var options = editor.config.get('heading.options');\n      var modelElements = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = options[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var option = _step.value;\n\n          // Skip paragraph - it is defined in required Paragraph feature.\n          if (option.model !== defaultModelElement) {\n            // Schema.\n            editor.model.schema.register(option.model, {\n              inheritAllFrom: '$block'\n            });\n            editor.conversion.elementToElement(option);\n            modelElements.push(option.model);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this._addDefaultH1Conversion(editor); // Register the heading command for this option.\n\n\n      editor.commands.add('heading', new HeadingCommand(editor, modelElements));\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"afterInit\",\n    value: function afterInit() {\n      // If the enter command is added to the editor, alter its behavior.\n      // Enter at the end of a heading element should create a paragraph.\n      var editor = this.editor;\n      var enterCommand = editor.commands.get('enter');\n      var options = editor.config.get('heading.options');\n\n      if (enterCommand) {\n        this.listenTo(enterCommand, 'afterExecute', function (evt, data) {\n          var positionParent = editor.model.document.selection.getFirstPosition().parent;\n          var isHeading = options.some(function (option) {\n            return positionParent.is(option.model);\n          });\n\n          if (isHeading && !positionParent.is(defaultModelElement) && positionParent.childCount === 0) {\n            data.writer.rename(positionParent, defaultModelElement);\n          }\n        });\n      }\n    }\n    /**\n     * Adds default conversion for `h1` -> `heading1` with a low priority.\n     *\n     * @private\n     * @param {module:core/editor/editor~Editor} editor Editor instance on which to add the `h1` conversion.\n     */\n\n  }, {\n    key: \"_addDefaultH1Conversion\",\n    value: function _addDefaultH1Conversion(editor) {\n      editor.conversion.for('upcast').elementToElement({\n        model: 'heading1',\n        view: 'h1',\n        // With a `low` priority, `paragraph` plugin autoparagraphing mechanism is executed. Make sure\n        // this listener is called before it. If not, `h1` will be transformed into a paragraph.\n        converterPriority: priorities.get('low') + 1\n      });\n    }\n  }], [{\n    key: \"requires\",\n    get: function get() {\n      return [Paragraph];\n    }\n  }]);\n\n  return HeadingEditing;\n}(Plugin);\n\nexport { HeadingEditing as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/model\n */\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport { extend } from 'lodash-es';\n/**\n * The base MVC model class.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Model =\n/**\n * Creates a new Model instance.\n *\n * @param {Object} [attributes] The model state attributes to be defined during the instance creation.\n * @param {Object} [properties] The (out of state) properties to be appended to the instance during creation.\n */\nfunction Model(attributes, properties) {\n  _classCallCheck(this, Model);\n\n  // Extend this instance with the additional (out of state) properties.\n  if (properties) {\n    extend(this, properties);\n  } // Initialize the attributes.\n\n\n  if (attributes) {\n    this.set(attributes);\n  }\n};\n\nexport { Model as default };\nmix(Model, ObservableMixin);","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/dropdown/dropdownpanelview\n */\nimport View from '../view';\n/**\n * The dropdown panel view class.\n *\n * See {@link module:ui/dropdown/dropdownview~DropdownView} to learn about the common usage.\n *\n * @extends module:ui/view~View\n */\n\nvar DropdownPanelView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(DropdownPanelView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function DropdownPanelView(locale) {\n    var _this;\n\n    _classCallCheck(this, DropdownPanelView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropdownPanelView).call(this, locale));\n    var bind = _this.bindTemplate;\n    /**\n     * Controls whether the panel is visible.\n     *\n     * @observable\n     * @member {Boolean} #isVisible\n     */\n\n    _this.set('isVisible', false);\n    /**\n     * The position of the panel, relative to the parent.\n     *\n     * This property is reflected in the CSS class set to {@link #element} that controls\n     * the position of the panel.\n     *\n     * @observable\n     * @default 'se'\n     * @member {'se'|'sw'|'ne'|'nw'} #position\n     */\n\n\n    _this.set('position', 'se');\n    /**\n     * Collection of the child views in this panel.\n     *\n     * A common child type is the {@link module:ui/list/listview~ListView} and {@link module:ui/toolbar/toolbarview~ToolbarView}.\n     * See {@link module:ui/dropdown/utils~addListToDropdown} and\n     * {@link module:ui/dropdown/utils~addToolbarToDropdown} to learn more about child views of dropdowns.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n\n    _this.children = _this.createCollection();\n\n    _this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-reset', 'ck-dropdown__panel', bind.to('position', function (value) {\n          return \"ck-dropdown__panel_\".concat(value);\n        }), bind.if('isVisible', 'ck-dropdown__panel-visible')]\n      },\n      children: _this.children,\n      on: {\n        // Drag and drop in the panel should not break the selection in the editor.\n        // https://github.com/ckeditor/ckeditor5-ui/issues/228\n        selectstart: bind.to(function (evt) {\n          return evt.preventDefault();\n        })\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Focuses the view element or first item in view collection on opening dropdown's panel.\n   *\n   * See also {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable}.\n   */\n\n\n  _createClass(DropdownPanelView, [{\n    key: \"focus\",\n    value: function focus() {\n      if (this.children.length) {\n        this.children.first.focus();\n      }\n    }\n    /**\n     * Focuses the view element or last item in view collection on opening dropdown's panel.\n     *\n     * See also {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable}.\n     */\n\n  }, {\n    key: \"focusLast\",\n    value: function focusLast() {\n      if (this.children.length) {\n        var lastChild = this.children.last;\n\n        if (typeof lastChild.focusLast === 'function') {\n          lastChild.focusLast();\n        } else {\n          lastChild.focus();\n        }\n      }\n    }\n  }]);\n\n  return DropdownPanelView;\n}(View);\n\nexport { DropdownPanelView as default };","import _slicedToArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/position\n */\nimport global from './global';\nimport Rect from './rect';\nimport getPositionedAncestor from './getpositionedancestor';\nimport getBorderWidths from './getborderwidths';\nimport { isFunction } from 'lodash-es';\n/**\n * Calculates the `position: absolute` coordinates of a given element so it can be positioned with respect to the\n * target in the visually most efficient way, taking various restrictions like viewport or limiter geometry\n * into consideration.\n *\n *\t\t// The element which is to be positioned.\n *\t\tconst element = document.body.querySelector( '#toolbar' );\n *\n *\t\t// A target to which the element is positioned relatively.\n *\t\tconst target = document.body.querySelector( '#container' );\n *\n *\t\t// Finding the optimal coordinates for the positioning.\n *\t\tconst { left, top, name } = getOptimalPosition( {\n *\t\t\telement: element,\n *\t\t\ttarget: target,\n *\n * \t\t\t// The algorithm will chose among these positions to meet the requirements such\n * \t\t\t// as \"limiter\" element or \"fitInViewport\", set below. The positions are considered\n * \t\t\t// in the order of the array.\n *\t\t\tpositions: [\n *\t\t\t\t//\n *\t\t\t \t//\t[ Target ]\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t|     Element     |\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\n *\t\t\t\ttargetRect => ( {\n *\t\t\t\t\ttop: targetRect.bottom,\n *\t\t\t\t\tleft: targetRect.left,\n *\t\t\t\t\tname: 'mySouthEastPosition'\n *\t\t\t\t} ),\n *\n *\t\t\t\t//\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t|     Element     |\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t[ Target ]\n *\t\t\t\t//\n *\t\t\t\t( targetRect, elementRect ) => ( {\n *\t\t\t\t\ttop: targetRect.top - elementRect.height,\n *\t\t\t\t\tleft: targetRect.left,\n *\t\t\t\t\tname: 'myNorthEastPosition'\n *\t\t\t\t} )\n *\t\t\t],\n *\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of <body>.\n *\t\t\tlimiter: document.body,\n *\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of the browser viewport.\n *\t\t\tfitInViewport: true\n *\t\t} );\n *\n *\t\t// The best position which fits into document.body and the viewport. May be useful\n *\t\t// to set proper class on the `element`.\n *\t\tconsole.log( name ); // -> \"myNorthEastPosition\"\n *\n *\t\t// Using the absolute coordinates which has been found to position the element\n *\t\t// as in the diagram depicting the \"myNorthEastPosition\" position.\n *\t\telement.style.top = top;\n *\t\telement.style.left = left;\n *\n * @param {module:utils/dom/position~Options} options Positioning options object.\n * @returns {module:utils/dom/position~Position}\n */\n\nexport function getOptimalPosition(_ref) {\n  var element = _ref.element,\n      target = _ref.target,\n      positions = _ref.positions,\n      limiter = _ref.limiter,\n      fitInViewport = _ref.fitInViewport;\n\n  // If the {@link module:utils/dom/position~Options#target} is a function, use what it returns.\n  // https://github.com/ckeditor/ckeditor5-utils/issues/157\n  if (isFunction(target)) {\n    target = target();\n  } // If the {@link module:utils/dom/position~Options#limiter} is a function, use what it returns.\n  // https://github.com/ckeditor/ckeditor5-ui/issues/260\n\n\n  if (isFunction(limiter)) {\n    limiter = limiter();\n  }\n\n  var positionedElementAncestor = getPositionedAncestor(element.parentElement);\n  var elementRect = new Rect(element);\n  var targetRect = new Rect(target);\n  var bestPosition;\n  var name; // If there are no limits, just grab the very first position and be done with that drama.\n\n  if (!limiter && !fitInViewport) {\n    var _getPosition = getPosition(positions[0], targetRect, elementRect);\n\n    var _getPosition2 = _slicedToArray(_getPosition, 2);\n\n    name = _getPosition2[0];\n    bestPosition = _getPosition2[1];\n  } else {\n    var limiterRect = limiter && new Rect(limiter).getVisible();\n    var viewportRect = fitInViewport && new Rect(global.window);\n\n    var _ref2 = getBestPosition(positions, targetRect, elementRect, limiterRect, viewportRect) || // If there's no best position found, i.e. when all intersections have no area because\n    // rects have no width or height, then just use the first available position.\n    getPosition(positions[0], targetRect, elementRect);\n\n    var _ref3 = _slicedToArray(_ref2, 2);\n\n    name = _ref3[0];\n    bestPosition = _ref3[1];\n  }\n\n  var _getAbsoluteRectCoord = getAbsoluteRectCoordinates(bestPosition),\n      left = _getAbsoluteRectCoord.left,\n      top = _getAbsoluteRectCoord.top;\n\n  if (positionedElementAncestor) {\n    var ancestorPosition = getAbsoluteRectCoordinates(new Rect(positionedElementAncestor));\n    var ancestorBorderWidths = getBorderWidths(positionedElementAncestor); // (https://github.com/ckeditor/ckeditor5-ui-default/issues/126)\n    // If there's some positioned ancestor of the panel, then its `Rect` must be taken into\n    // consideration. `Rect` is always relative to the viewport while `position: absolute` works\n    // with respect to that positioned ancestor.\n\n    left -= ancestorPosition.left;\n    top -= ancestorPosition.top; // (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n    // If there's some positioned ancestor of the panel, not only its position must be taken into\n    // consideration (see above) but also its internal scrolls. Scroll have an impact here because `Rect`\n    // is relative to the viewport (it doesn't care about scrolling), while `position: absolute`\n    // must compensate that scrolling.\n\n    left += positionedElementAncestor.scrollLeft;\n    top += positionedElementAncestor.scrollTop; // (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n    // If there's some positioned ancestor of the panel, then its `Rect` includes its CSS `borderWidth`\n    // while `position: absolute` positioning does not consider it.\n    // E.g. `{ position: absolute, top: 0, left: 0 }` means upper left corner of the element,\n    // not upper-left corner of its border.\n\n    left -= ancestorBorderWidths.left;\n    top -= ancestorBorderWidths.top;\n  }\n\n  return {\n    left: left,\n    top: top,\n    name: name\n  };\n} // For given position function, returns a corresponding `Rect` instance.\n//\n// @private\n// @param {Function} position A function returning {@link module:utils/dom/position~Position}.\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of positioned element.\n// @returns {Array} An array containing position name and its Rect.\n\nfunction getPosition(position, targetRect, elementRect) {\n  var _position = position(targetRect, elementRect),\n      left = _position.left,\n      top = _position.top,\n      name = _position.name;\n\n  return [name, elementRect.clone().moveTo(left, top)];\n} // For a given array of positioning functions, returns such that provides the best\n// fit of the `elementRect` into the `limiterRect` and `viewportRect`.\n//\n// @private\n// @param {module:utils/dom/position~Options#positions} positions Functions returning\n// {@link module:utils/dom/position~Position} to be checked, in the order of preference.\n// @param {utils/dom/rect~Rect} targetRect A rect of the {@link module:utils/dom/position~Options#target}.\n// @param {utils/dom/rect~Rect} elementRect A rect of positioned {@link module:utils/dom/position~Options#element}.\n// @param {utils/dom/rect~Rect} limiterRect A rect of the {@link module:utils/dom/position~Options#limiter}.\n// @param {utils/dom/rect~Rect} viewportRect A rect of the viewport.\n// @returns {Array} An array containing the name of the position and it's rect.\n\n\nfunction getBestPosition(positions, targetRect, elementRect, limiterRect, viewportRect) {\n  var maxLimiterIntersectArea = 0;\n  var maxViewportIntersectArea = 0;\n  var bestPositionRect;\n  var bestPositionName; // This is when element is fully visible.\n\n  var elementRectArea = elementRect.getArea();\n  positions.some(function (position) {\n    var _getPosition3 = getPosition(position, targetRect, elementRect),\n        _getPosition4 = _slicedToArray(_getPosition3, 2),\n        positionName = _getPosition4[0],\n        positionRect = _getPosition4[1];\n\n    var limiterIntersectArea;\n    var viewportIntersectArea;\n\n    if (limiterRect) {\n      if (viewportRect) {\n        // Consider only the part of the limiter which is visible in the viewport. So the limiter is getting limited.\n        var limiterViewportIntersectRect = limiterRect.getIntersection(viewportRect);\n\n        if (limiterViewportIntersectRect) {\n          // If the limiter is within the viewport, then check the intersection between that part of the\n          // limiter and actual position.\n          limiterIntersectArea = limiterViewportIntersectRect.getIntersectionArea(positionRect);\n        } else {\n          limiterIntersectArea = 0;\n        }\n      } else {\n        limiterIntersectArea = limiterRect.getIntersectionArea(positionRect);\n      }\n    }\n\n    if (viewportRect) {\n      viewportIntersectArea = viewportRect.getIntersectionArea(positionRect);\n    } // The only criterion: intersection with the viewport.\n\n\n    if (viewportRect && !limiterRect) {\n      if (viewportIntersectArea > maxViewportIntersectArea) {\n        setBestPosition();\n      }\n    } // The only criterion: intersection with the limiter.\n    else if (!viewportRect && limiterRect) {\n        if (limiterIntersectArea > maxLimiterIntersectArea) {\n          setBestPosition();\n        }\n      } // Two criteria: intersection with the viewport and the limiter visible in the viewport.\n      else {\n          if (viewportIntersectArea > maxViewportIntersectArea && limiterIntersectArea >= maxLimiterIntersectArea) {\n            setBestPosition();\n          } else if (viewportIntersectArea >= maxViewportIntersectArea && limiterIntersectArea > maxLimiterIntersectArea) {\n            setBestPosition();\n          }\n        }\n\n    function setBestPosition() {\n      maxViewportIntersectArea = viewportIntersectArea;\n      maxLimiterIntersectArea = limiterIntersectArea;\n      bestPositionRect = positionRect;\n      bestPositionName = positionName;\n    } // If a such position is found that element is fully container by the limiter then, obviously,\n    // there will be no better one, so finishing.\n\n\n    return limiterIntersectArea === elementRectArea;\n  });\n  return bestPositionRect ? [bestPositionName, bestPositionRect] : null;\n} // DOMRect (also Rect) works in a scroll–independent geometry but `position: absolute` doesn't.\n// This function converts Rect to `position: absolute` coordinates.\n//\n// @private\n// @param {utils/dom/rect~Rect} rect A rect to be converted.\n// @returns {Object} Object containing `left` and `top` properties, in absolute coordinates.\n\n\nfunction getAbsoluteRectCoordinates(_ref4) {\n  var left = _ref4.left,\n      top = _ref4.top;\n  var _global$window = global.window,\n      scrollX = _global$window.scrollX,\n      scrollY = _global$window.scrollY;\n  return {\n    left: left + scrollX,\n    top: top + scrollY\n  };\n}\n/**\n * The `getOptimalPosition` helper options.\n *\n * @interface module:utils/dom/position~Options\n */\n\n/**\n * Element that is to be positioned.\n *\n * @member {HTMLElement} #element\n */\n\n/**\n * Target with respect to which the `element` is to be positioned.\n *\n * @member {HTMLElement|Range|ClientRect|Rect|Function} #target\n */\n\n/**\n * An array of functions which return {@link module:utils/dom/position~Position} relative\n * to the `target`, in the order of preference.\n *\n * @member {Array.<Function>} #positions\n */\n\n/**\n * When set, the algorithm will chose position which fits the most in the\n * limiter's bounding rect.\n *\n * @member {HTMLElement|Range|ClientRect|Rect|Function} #limiter\n */\n\n/**\n * When set, the algorithm will chose such a position which fits `element`\n * the most inside visible viewport.\n *\n * @member {Boolean} #fitInViewport\n */\n\n/**\n * An object describing a position in `position: absolute` coordinate\n * system, along with position name.\n *\n * @typedef {Object} module:utils/dom/position~Position\n *\n * @property {Number} top Top position offset.\n * @property {Number} left Left position offset.\n * @property {String} name Name of the position.\n */","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/getpositionedancestor\n */\nimport global from './global';\n/**\n * For a given element, returns the nearest ancestor element which CSS position is not \"static\".\n *\n * @param {HTMLElement} element The native DOM element to be checked.\n * @returns {HTMLElement|null}\n */\n\nexport default function getPositionedAncestor(element) {\n  while (element && element.tagName.toLowerCase() != 'html') {\n    if (global.window.getComputedStyle(element).position != 'static') {\n      return element;\n    }\n\n    element = element.parentElement;\n  }\n\n  return null;\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/dropdown/dropdownview\n */\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport '../../theme/components/dropdown/dropdown.css';\nimport { getOptimalPosition } from '@ckeditor/ckeditor5-utils/src/dom/position';\n/**\n * The dropdown view class. It manages the dropdown button and dropdown panel.\n *\n * In most cases, the easiest way to create a dropdown is by using the {@link module:ui/dropdown/utils~createDropdown}\n * util:\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\tdropdown.panelView.element.textContent = 'Content of the panel';\n *\n *\t\t// Will render a dropdown with a panel containing a \"Content of the panel\" text.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * If you want to add a richer content to the dropdown panel, you can use the {@link module:ui/dropdown/utils~addListToDropdown}\n * and {@link module:ui/dropdown/utils~addToolbarToDropdown} helpers. See more examples in\n * {@link module:ui/dropdown/utils~createDropdown} documentation.\n *\n * If you want to create a completely custom dropdown, then you can compose it manually:\n *\n *\t\tconst button = new DropdownButtonView( locale );\n *\t\tconst panel = new DropdownPanelView( locale );\n *\t\tconst dropdown = new DropdownView( locale, button, panel );\n *\n *\t\tbutton.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\tpanel.element.textContent = 'Content of the panel';\n *\n *\t\t// Will render a dropdown with a panel containing a \"Content of the panel\" text.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * However, dropdown created this way will contain little behavior. You will need to implement handlers for actions\n * such as {@link module:ui/bindings/clickoutsidehandler~clickOutsideHandler clicking outside an open dropdown}\n * (which should close it) and support for arrow keys inside the panel. Therefore, unless you really know what\n * you do and you really need to do it, it is recommended to use the {@link module:ui/dropdown/utils~createDropdown} helper.\n *\n * @extends module:ui/view~View\n */\n\nvar DropdownView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(DropdownView, _View);\n\n  /**\n   * Creates an instance of the dropdown.\n   *\n   * Also see {@link #render}.\n   *\n   * @param {module:utils/locale~Locale} [locale] The localization services instance.\n   * @param {module:ui/dropdown/button/dropdownbutton~DropdownButton} buttonView\n   * @param {module:ui/dropdown/dropdownpanelview~DropdownPanelView} panelView\n   */\n  function DropdownView(locale, buttonView, panelView) {\n    var _this;\n\n    _classCallCheck(this, DropdownView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropdownView).call(this, locale));\n    var bind = _this.bindTemplate;\n    /**\n     * Button of the dropdown view. Clicking the button opens the {@link #panelView}.\n     *\n     * @readonly\n     * @member {module:ui/button/buttonview~ButtonView} #buttonView\n     */\n\n    _this.buttonView = buttonView;\n    /**\n     * Panel of the dropdown. It opens when the {@link #buttonView} is\n     * {@link module:ui/button/buttonview~ButtonView#event:execute executed} (i.e. clicked).\n     *\n     * Child views can be added to the panel's `children` collection:\n     *\n     *\t\tdropdown.panelView.children.add( childView );\n     *\n     * See {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#children} and\n     * {@link module:ui/viewcollection~ViewCollection#add}.\n     *\n     * @readonly\n     * @member {module:ui/dropdown/dropdownpanelview~DropdownPanelView} #panelView\n     */\n\n    _this.panelView = panelView;\n    /**\n     * Controls whether the dropdown view is open, i.e. shows or hides the {@link #panelView panel}.\n     *\n     * @observable\n     * @member {Boolean} #isOpen\n     */\n\n    _this.set('isOpen', false);\n    /**\n     * Controls whether the dropdown is enabled, i.e. it can be clicked and execute an action.\n     *\n     * See {@link module:ui/button/buttonview~ButtonView#isEnabled}.\n     *\n     * @observable\n     * @member {Boolean} #isEnabled\n     */\n\n\n    _this.set('isEnabled', true);\n    /**\n     * (Optional) The additional CSS class set on the dropdown {@link #element}.\n     *\n     * @observable\n     * @member {String} #class\n     */\n\n\n    _this.set('class');\n    /**\n     * The position of the panel, relative to the dropdown.\n     *\n     * **Note**: When `'auto'`, the panel will use one of the remaining positions to stay\n     * in the viewport, visible to the user. The positions correspond directly to\n     * {@link module:ui/dropdown/dropdownview~DropdownView.defaultPanelPositions default panel positions}.\n     *\n     * **Note**: This value has an impact on the\n     * {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#position} property\n     * each time the panel becomes {@link #isOpen open}.\n     *\n     * @observable\n     * @default 'auto'\n     * @member {'auto'|'se'|'sw'|'ne'|'nw'} #panelPosition\n     */\n\n\n    _this.set('panelPosition', 'auto');\n    /**\n     * Tracks information about DOM focus in the dropdown.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker}\n     */\n\n\n    _this.focusTracker = new FocusTracker();\n    /**\n     * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n     * keystrokes of the dropdown:\n     *\n     * * <kbd>▼</kbd> opens the dropdown,\n     * * <kbd>◀</kbd> and <kbd>Esc</kbd> closes the dropdown.\n     *\n     * @readonly\n     * @member {module:utils/keystrokehandler~KeystrokeHandler}\n     */\n\n    _this.keystrokes = new KeystrokeHandler();\n\n    _this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-dropdown', bind.to('class'), bind.if('isEnabled', 'ck-disabled', function (value) {\n          return !value;\n        })]\n      },\n      children: [buttonView, panelView]\n    });\n\n    buttonView.extendTemplate({\n      attributes: {\n        class: ['ck-dropdown__button']\n      }\n    });\n    /**\n     * A child {@link module:ui/list/listview~ListView list view} of the dropdown located\n     * in its {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n     *\n     * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}.\n     *\n     * @readonly\n     * @member {module:ui/list/listview~ListView} #listView\n     */\n\n    /**\n     * A child toolbar of the dropdown located in the\n     * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n     *\n     * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addToolbarToDropdown}.\n     *\n     * @readonly\n     * @member {module:ui/toolbar/toolbarview~ToolbarView} #toolbarView\n     */\n\n    /**\n     * Fired when the toolbar button or list item is executed.\n     *\n     * For {@link #listView} It fires when a child of some {@link module:ui/list/listitemview~ListItemView}\n     * fired `execute`.\n     *\n     * For {@link #toolbarView} It fires when one of the buttons has been\n     * {@link module:ui/button/buttonview~ButtonView#event:execute executed}.\n     *\n     * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}\n     * or {@link module:ui/dropdown/utils~addToolbarToDropdown}.\n     *\n     * @event execute\n     */\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(DropdownView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(DropdownView.prototype), \"render\", this).call(this); // Toggle the dropdown when its button has been clicked.\n\n\n      this.listenTo(this.buttonView, 'open', function () {\n        _this2.isOpen = !_this2.isOpen;\n      }); // Toggle the visibility of the panel when the dropdown becomes open.\n\n      this.panelView.bind('isVisible').to(this, 'isOpen'); // Let the dropdown control the position of the panel. The position must\n      // be updated every time the dropdown is open.\n\n      this.on('change:isOpen', function () {\n        if (!_this2.isOpen) {\n          return;\n        } // If \"auto\", find the best position of the panel to fit into the viewport.\n        // Otherwise, simply assign the static position.\n\n\n        if (_this2.panelPosition === 'auto') {\n          var defaultPanelPositions = DropdownView.defaultPanelPositions;\n          _this2.panelView.position = getOptimalPosition({\n            element: _this2.panelView.element,\n            target: _this2.buttonView.element,\n            fitInViewport: true,\n            positions: [defaultPanelPositions.southEast, defaultPanelPositions.southWest, defaultPanelPositions.northEast, defaultPanelPositions.northWest]\n          }).name;\n        } else {\n          _this2.panelView.position = _this2.panelPosition;\n        }\n      }); // Listen for keystrokes coming from within #element.\n\n      this.keystrokes.listenTo(this.element); // Register #element in the focus tracker.\n\n      this.focusTracker.add(this.element);\n\n      var closeDropdown = function closeDropdown(data, cancel) {\n        if (_this2.isOpen) {\n          _this2.buttonView.focus();\n\n          _this2.isOpen = false;\n          cancel();\n        }\n      }; // Open the dropdown panel using the arrow down key, just like with return or space.\n\n\n      this.keystrokes.set('arrowdown', function (data, cancel) {\n        // Don't open if the dropdown is disabled or already open.\n        if (_this2.buttonView.isEnabled && !_this2.isOpen) {\n          _this2.isOpen = true;\n          cancel();\n        }\n      }); // Block the right arrow key (until nested dropdowns are implemented).\n\n      this.keystrokes.set('arrowright', function (data, cancel) {\n        if (_this2.isOpen) {\n          cancel();\n        }\n      }); // Close the dropdown using the arrow left/escape key.\n\n      this.keystrokes.set('arrowleft', closeDropdown);\n      this.keystrokes.set('esc', closeDropdown);\n    }\n    /**\n     * Focuses the {@link #buttonView}.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.buttonView.focus();\n    }\n  }]);\n\n  return DropdownView;\n}(View);\n/**\n * A set of positioning functions used by the dropdown view to determine\n * the optimal position (i.e. fitting into the browser viewport) of its\n * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel} when\n * {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition} is set to 'auto'`.\n *\n * The available positioning functions are as follow:\n *\n * **South**\n *\n * * `southEast`\n *\n *\t\t[ Button ]\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\n * * `southWest`\n *\n *\t\t         [ Button ]\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\n * **North**\n *\n * * `northEast`\n *\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\t\t[ Button ]\n *\n * * `northWest`\n *\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\t\t         [ Button ]\n *\n * Positioning functions are compatible with {@link module:utils/dom/position~Position}.\n *\n * The name that position function returns will be reflected in dropdown panel's class that\n * controls its placement. See {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition}\n * to learn more.\n *\n * @member {Object} module:ui/dropdown/dropdownview~DropdownView.defaultPanelPositions\n */\n\n\nexport { DropdownView as default };\nDropdownView.defaultPanelPositions = {\n  southEast: function southEast(buttonRect) {\n    return {\n      top: buttonRect.bottom,\n      left: buttonRect.left,\n      name: 'se'\n    };\n  },\n  southWest: function southWest(buttonRect, panelRect) {\n    return {\n      top: buttonRect.bottom,\n      left: buttonRect.left - panelRect.width + buttonRect.width,\n      name: 'sw'\n    };\n  },\n  northEast: function northEast(buttonRect, panelRect) {\n    return {\n      top: buttonRect.top - panelRect.height,\n      left: buttonRect.left,\n      name: 'ne'\n    };\n  },\n  northWest: function northWest(buttonRect, panelRect) {\n    return {\n      top: buttonRect.bottom - panelRect.height,\n      left: buttonRect.left - panelRect.width + buttonRect.width,\n      name: 'nw'\n    };\n  }\n};","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _assertThisInitialized from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/dropdown/button/dropdownbuttonview\n */\nimport ButtonView from '../../button/buttonview';\nimport dropdownArrowIcon from '../../../theme/icons/dropdown-arrow.svg';\nimport IconView from '../../icon/iconview';\n/**\n * The default dropdown button view class.\n *\n *\t\tconst view = new DropdownButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * Also see the {@link module:ui/dropdown/utils~createDropdown `createDropdown()` util}.\n *\n * @implements module:ui/dropdown/button/dropdownbutton~DropdownButton\n * @extends module:ui/button/buttonview~ButtonView\n */\n\nvar DropdownButtonView =\n/*#__PURE__*/\nfunction (_ButtonView) {\n  _inherits(DropdownButtonView, _ButtonView);\n\n  /**\n   * @inheritDoc\n   */\n  function DropdownButtonView(locale) {\n    var _this;\n\n    _classCallCheck(this, DropdownButtonView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropdownButtonView).call(this, locale));\n    /**\n     * An icon that displays arrow to indicate a dropdown button.\n     *\n     * @readonly\n     * @member {module:ui/icon/iconview~IconView}\n     */\n\n    _this.arrowView = _this._createArrowView();\n\n    _this.extendTemplate({\n      attributes: {\n        'aria-haspopup': true\n      }\n    }); // The DropdownButton interface expects the open event upon which will open the dropdown.\n\n\n    _this.delegate('execute').to(_assertThisInitialized(_this), 'open');\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(DropdownButtonView, [{\n    key: \"render\",\n    value: function render() {\n      _get(_getPrototypeOf(DropdownButtonView.prototype), \"render\", this).call(this);\n\n      this.children.add(this.arrowView);\n    }\n    /**\n     * Creates a {@link module:ui/icon/iconview~IconView} instance as {@link #arrowView}.\n     *\n     * @private\n     * @returns {module:ui/icon/iconview~IconView}\n     */\n\n  }, {\n    key: \"_createArrowView\",\n    value: function _createArrowView() {\n      var arrowView = new IconView();\n      arrowView.content = dropdownArrowIcon;\n      arrowView.extendTemplate({\n        attributes: {\n          class: 'ck-dropdown__arrow'\n        }\n      });\n      return arrowView;\n    }\n  }]);\n\n  return DropdownButtonView;\n}(ButtonView);\n\nexport { DropdownButtonView as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/list/listview\n */\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport '../../theme/components/list/list.css';\n/**\n * The list view class.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\n\nvar ListView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(ListView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function ListView() {\n    var _this;\n\n    _classCallCheck(this, ListView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListView).call(this));\n    /**\n     * Collection of the child list views.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    _this.items = _this.createCollection();\n    /**\n     * Tracks information about DOM focus in the list.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker}\n     */\n\n    _this.focusTracker = new FocusTracker();\n    /**\n     * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n     *\n     * @readonly\n     * @member {module:utils/keystrokehandler~KeystrokeHandler}\n     */\n\n    _this.keystrokes = new KeystrokeHandler();\n    /**\n     * Helps cycling over focusable {@link #items} in the list.\n     *\n     * @readonly\n     * @protected\n     * @member {module:ui/focuscycler~FocusCycler}\n     */\n\n    _this._focusCycler = new FocusCycler({\n      focusables: _this.items,\n      focusTracker: _this.focusTracker,\n      keystrokeHandler: _this.keystrokes,\n      actions: {\n        // Navigate list items backwards using the arrowup key.\n        focusPrevious: 'arrowup',\n        // Navigate toolbar items forwards using the arrowdown key.\n        focusNext: 'arrowdown'\n      }\n    });\n\n    _this.setTemplate({\n      tag: 'ul',\n      attributes: {\n        class: ['ck', 'ck-reset', 'ck-list']\n      },\n      children: _this.items\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ListView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(ListView.prototype), \"render\", this).call(this); // Items added before rendering should be known to the #focusTracker.\n\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          this.focusTracker.add(item.element);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.items.on('add', function (evt, item) {\n        _this2.focusTracker.add(item.element);\n      });\n      this.items.on('remove', function (evt, item) {\n        _this2.focusTracker.remove(item.element);\n      }); // Start listening for the keystrokes coming from #element.\n\n      this.keystrokes.listenTo(this.element);\n    }\n    /**\n     * Focuses the first focusable in {@link #items}.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this._focusCycler.focusFirst();\n    }\n    /**\n     * Focuses the last focusable in {@link #items}.\n     */\n\n  }, {\n    key: \"focusLast\",\n    value: function focusLast() {\n      this._focusCycler.focusLast();\n    }\n  }]);\n\n  return ListView;\n}(View);\n\nexport { ListView as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/list/listitemview\n */\nimport View from '../view';\n/**\n * The list item view class.\n *\n * @extends module:ui/view~View\n */\n\nvar ListItemView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(ListItemView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function ListItemView(locale) {\n    var _this;\n\n    _classCallCheck(this, ListItemView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListItemView).call(this, locale));\n    /**\n     * Collection of the child views inside of the list item {@link #element}.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    _this.children = _this.createCollection();\n\n    _this.setTemplate({\n      tag: 'li',\n      attributes: {\n        class: ['ck', 'ck-list__item']\n      },\n      children: _this.children\n    });\n\n    return _this;\n  }\n  /**\n   * Focuses the list item.\n   */\n\n\n  _createClass(ListItemView, [{\n    key: \"focus\",\n    value: function focus() {\n      this.children.first.focus();\n    }\n  }]);\n\n  return ListItemView;\n}(View);\n\nexport { ListItemView as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/list/listseparatorview\n */\nimport View from '../view';\n/**\n * The list separator view class.\n *\n * @extends module:ui/view~View\n */\n\nvar ListSeparatorView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(ListSeparatorView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function ListSeparatorView(locale) {\n    var _this;\n\n    _classCallCheck(this, ListSeparatorView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListSeparatorView).call(this, locale));\n\n    _this.setTemplate({\n      tag: 'li',\n      attributes: {\n        class: ['ck', 'ck-list__separator']\n      }\n    });\n\n    return _this;\n  }\n\n  return ListSeparatorView;\n}(View);\n\nexport { ListSeparatorView as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/button/switchbuttonview\n */\nimport View from '../view';\nimport ButtonView from './buttonview';\nimport '../../theme/components/button/switchbutton.css';\n/**\n * The switch button view class.\n *\n *\t\tconst view = new SwitchButtonView();\n *\n *\t\tview.set( {\n *\t\t\twithText: true,\n *\t\t\tlabel: 'Switch me!'\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * @extends module:ui/buttonview~ButtonView\n */\n\nvar SwitchButtonView =\n/*#__PURE__*/\nfunction (_ButtonView) {\n  _inherits(SwitchButtonView, _ButtonView);\n\n  /**\n   * @inheritDoc\n   */\n  function SwitchButtonView(locale) {\n    var _this;\n\n    _classCallCheck(this, SwitchButtonView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SwitchButtonView).call(this, locale));\n    /**\n     * The toggle switch of the button.\n     *\n     * @readonly\n     * @member {module:ui/view~View} #toggleSwitchView\n     */\n\n    _this.toggleSwitchView = _this._createToggleView();\n\n    _this.extendTemplate({\n      attributes: {\n        class: 'ck-switchbutton'\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(SwitchButtonView, [{\n    key: \"render\",\n    value: function render() {\n      _get(_getPrototypeOf(SwitchButtonView.prototype), \"render\", this).call(this);\n\n      this.children.add(this.toggleSwitchView);\n    }\n    /**\n     * Creates a toggle child view.\n     *\n     * @private\n     * @returns {module:ui/view~View}\n     */\n\n  }, {\n    key: \"_createToggleView\",\n    value: function _createToggleView() {\n      var toggleSwitchView = new View();\n      toggleSwitchView.setTemplate({\n        tag: 'span',\n        attributes: {\n          class: ['ck', 'ck-button__toggle']\n        },\n        children: [{\n          tag: 'span',\n          attributes: {\n            class: ['ck', 'ck-button__toggle__inner']\n          }\n        }]\n      });\n      return toggleSwitchView;\n    }\n  }]);\n\n  return SwitchButtonView;\n}(ButtonView);\n\nexport { SwitchButtonView as default };","import _toConsumableArray from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/dropdown/utils\n */\nimport DropdownPanelView from './dropdownpanelview';\nimport DropdownView from './dropdownview';\nimport DropdownButtonView from './button/dropdownbuttonview';\nimport ToolbarView from '../toolbar/toolbarview';\nimport ListView from '../list/listview';\nimport ListItemView from '../list/listitemview';\nimport ListSeparatorView from '../list/listseparatorview';\nimport ButtonView from '../button/buttonview';\nimport SwitchButtonView from '../button/switchbuttonview';\nimport clickOutsideHandler from '../bindings/clickoutsidehandler';\nimport '../../theme/components/dropdown/toolbardropdown.css';\nimport '../../theme/components/dropdown/listdropdown.css';\n/**\n * A helper for creating dropdowns. It creates an instance of a {@link module:ui/dropdown/dropdownview~DropdownView dropdown},\n * with a {@link module:ui/dropdown/button/dropdownbutton~DropdownButton button},\n * {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView panel} and all standard dropdown's behaviors.\n *\n * # Creating dropdowns\n *\n * By default, the default {@link module:ui/dropdown/button/dropdownbuttonview~DropdownButtonView} class is used as\n * definition of the button:\n *\n *\t\tconst dropdown = createDropdown( model );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\t// Will render a dropdown labeled \"A dropdown\" with an empty panel.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * You can also provide other button views (they need to implement the\n * {@link module:ui/dropdown/button/dropdownbutton~DropdownButton} interface). For instance, you can use\n * {@link module:ui/dropdown/button/splitbuttonview~SplitButtonView} to create a dropdown with a split button.\n *\n *\t\tconst dropdown = createDropdown( model, SplitButtonView );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.buttonView.on( 'execute', () => {\n *\t\t\t// Add the behavior of the \"action part\" of the split button.\n *\t\t\t// Split button consists of the \"action part\" and \"arrow part\".\n *\t\t\t// The arrow opens the dropdown while the action part can have some other behavior.\n * \t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\t// Will render a dropdown labeled \"A dropdown\" with an empty panel.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * # Adding content to the dropdown's panel\n *\n * The content of the panel can be inserted directly into the `dropdown.panelView.element`:\n *\n *\t\tdropdown.panelView.element.textContent = 'Content of the panel';\n *\n * However, most of the time you will want to add there either a {@link module:ui/list/listview~ListView list of options}\n * or a list of buttons (i.e. a {@link module:ui/toolbar/toolbarview~ToolbarView toolbar}).\n * To simplify the task, you can use, respectively, {@link module:ui/dropdown/utils~addListToDropdown} or\n * {@link module:ui/dropdown/utils~addToolbarToDropdown} utils.\n *\n * @param {module:utils/locale~Locale} locale The locale instance.\n * @param {Function} ButtonClass The dropdown button view class. Needs to implement the\n * {@link module:ui/dropdown/button/dropdownbutton~DropdownButton} interface.\n * @returns {module:ui/dropdown/dropdownview~DropdownView} The dropdown view instance.\n */\n\nexport function createDropdown(locale) {\n  var ButtonClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DropdownButtonView;\n  var buttonView = new ButtonClass(locale);\n  var panelView = new DropdownPanelView(locale);\n  var dropdownView = new DropdownView(locale, buttonView, panelView);\n  buttonView.bind('isEnabled').to(dropdownView);\n\n  if (buttonView instanceof DropdownButtonView) {\n    buttonView.bind('isOn').to(dropdownView, 'isOpen');\n  } else {\n    buttonView.arrowView.bind('isOn').to(dropdownView, 'isOpen');\n  }\n\n  addDefaultBehavior(dropdownView);\n  return dropdownView;\n}\n/**\n * Adds an instance of {@link module:ui/toolbar/toolbarview~ToolbarView} to a dropdown.\n *\n *\t\tconst buttons = [];\n *\n *\t\t// Either create a new ButtonView instance or create existing.\n *\t\tbuttons.push( new ButtonView() );\n *\t\tbuttons.push( editor.ui.componentFactory.get( 'someButton' ) );\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\taddToolbarToDropdown( dropdown, buttons );\n *\n *\t\tdropdown.toolbarView.isVertical = true;\n *\n *\t\t// Will render a vertical button dropdown labeled \"A button dropdown\"\n *\t\t// with a button group in the panel containing two buttons.\n *\t\tdropdown.render()\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * See {@link module:ui/dropdown/utils~createDropdown} and {@link module:ui/toolbar/toolbarview~ToolbarView}.\n *\n * @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView A dropdown instance to which `ToolbarView` will be added.\n * @param {Iterable.<module:ui/button/buttonview~ButtonView>} buttons\n */\n\nexport function addToolbarToDropdown(dropdownView, buttons) {\n  var toolbarView = dropdownView.toolbarView = new ToolbarView();\n  dropdownView.extendTemplate({\n    attributes: {\n      class: ['ck-toolbar-dropdown']\n    }\n  });\n  buttons.map(function (view) {\n    return toolbarView.items.add(view);\n  });\n  dropdownView.panelView.children.add(toolbarView);\n  toolbarView.items.delegate('execute').to(dropdownView);\n}\n/**\n * Adds an instance of {@link module:ui/list/listview~ListView} to a dropdown.\n *\n *\t\tconst items = new Collection();\n *\n *\t\titems.add( {\n *\t\t\ttype: 'button',\n *\t\t\tmodel: new Model( {\n *\t\t\t\twithText: true,\n *\t\t\t\tlabel: 'First item',\n *\t\t\t\tlabelStyle: 'color: red'\n *\t\t\t} )\n *\t\t} );\n *\n *\t\titems.add( {\n *\t\t\t type: 'button',\n *\t\t\t model: new Model( {\n *\t\t\t\twithText: true,\n *\t\t\t\tlabel: 'Second item',\n *\t\t\t\tlabelStyle: 'color: green',\n *\t\t\t\tclass: 'foo'\n *\t\t\t} )\n *\t\t} );\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\taddListToDropdown( dropdown, items );\n *\n *\t\t// Will render a dropdown with a list in the panel containing two items.\n *\t\tdropdown.render()\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * The `items` collection passed to this methods controls the presence and attributes of respective\n * {@link module:ui/list/listitemview~ListItemView list items}.\n *\n *\n * See {@link module:ui/dropdown/utils~createDropdown} and {@link module:list/list~List}.\n *\n * @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView A dropdown instance to which `ListVIew` will be added.\n * @param {Iterable.<module:ui/dropdown/utils~ListDropdownItemDefinition>} items\n * A collection of the list item definitions to populate the list.\n */\n\nexport function addListToDropdown(dropdownView, items) {\n  var locale = dropdownView.locale;\n  var listView = dropdownView.listView = new ListView(locale);\n  listView.items.bindTo(items).using(function (_ref) {\n    var type = _ref.type,\n        model = _ref.model;\n\n    if (type === 'separator') {\n      return new ListSeparatorView(locale);\n    } else if (type === 'button' || type === 'switchbutton') {\n      var _buttonView;\n\n      var listItemView = new ListItemView(locale);\n      var buttonView;\n\n      if (type === 'button') {\n        buttonView = new ButtonView(locale);\n      } else {\n        buttonView = new SwitchButtonView(locale);\n      } // Bind all model properties to the button view.\n\n\n      (_buttonView = buttonView).bind.apply(_buttonView, _toConsumableArray(Object.keys(model))).to(model);\n\n      buttonView.delegate('execute').to(listItemView);\n      listItemView.children.add(buttonView);\n      return listItemView;\n    }\n  });\n  dropdownView.panelView.children.add(listView);\n  listView.items.delegate('execute').to(dropdownView);\n} // Add a set of default behaviors to dropdown view.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\n\nfunction addDefaultBehavior(dropdownView) {\n  closeDropdownOnBlur(dropdownView);\n  closeDropdownOnExecute(dropdownView);\n  focusDropdownContentsOnArrows(dropdownView);\n} // Adds a behavior to a dropdownView that closes opened dropdown when user clicks outside the dropdown.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\n\n\nfunction closeDropdownOnBlur(dropdownView) {\n  dropdownView.on('render', function () {\n    clickOutsideHandler({\n      emitter: dropdownView,\n      activator: function activator() {\n        return dropdownView.isOpen;\n      },\n      callback: function callback() {\n        dropdownView.isOpen = false;\n      },\n      contextElements: [dropdownView.element]\n    });\n  });\n} // Adds a behavior to a dropdownView that closes the dropdown view on \"execute\" event.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\n\n\nfunction closeDropdownOnExecute(dropdownView) {\n  // Close the dropdown when one of the list items has been executed.\n  dropdownView.on('execute', function (evt) {\n    // Toggling a switch button view should not close the dropdown.\n    if (evt.source instanceof SwitchButtonView) {\n      return;\n    }\n\n    dropdownView.isOpen = false;\n  });\n} // Adds a behavior to a dropdownView that focuses the dropdown's panel view contents on keystrokes.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\n\n\nfunction focusDropdownContentsOnArrows(dropdownView) {\n  // If the dropdown panel is already open, the arrow down key should focus the first child of the #panelView.\n  dropdownView.keystrokes.set('arrowdown', function (data, cancel) {\n    if (dropdownView.isOpen) {\n      dropdownView.panelView.focus();\n      cancel();\n    }\n  }); // If the dropdown panel is already open, the arrow up key should focus the last child of the #panelView.\n\n  dropdownView.keystrokes.set('arrowup', function (data, cancel) {\n    if (dropdownView.isOpen) {\n      dropdownView.panelView.focusLast();\n      cancel();\n    }\n  });\n}\n/**\n * A definition of the list item used by the {@link module:ui/dropdown/utils~addListToDropdown}\n * utility.\n *\n * @typedef {Object} module:ui/dropdown/utils~ListDropdownItemDefinition\n *\n * @property {String} type Either `'separator'`, `'button'` or `'switchbutton'`.\n * @property {module:ui/model~Model} [model] Model of the item (when **not** `'separator'`).\n * Its properties fuel the newly created list item (or its children, depending on the `type`).\n */","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/bindings/clickoutsidehandler\n */\n\n/* global document */\n\n/**\n * Handles clicking **outside** of a specified set of elements, then fires an action.\n *\n * **Note**: Actually, the action is executed upon `mousedown`, not `click`. It prevents\n * certain issues when the user keeps holding the mouse button and the UI cannot react\n * properly.\n *\n * @param {Object} options Configuration options.\n * @param {module:utils/dom/emittermixin~Emitter} options.emitter The emitter to which this behavior\n * should be added.\n * @param {Function} options.activator Function returning a `Boolean`, to determine whether the handler is active.\n * @param {Array.<HTMLElement>} options.contextElements HTML elements that determine the scope of the\n * handler. Clicking any of them or their descendants will **not** fire the callback.\n * @param {Function} options.callback An action executed by the handler.\n */\nexport default function clickOutsideHandler(_ref) {\n  var emitter = _ref.emitter,\n      activator = _ref.activator,\n      callback = _ref.callback,\n      contextElements = _ref.contextElements;\n  emitter.listenTo(document, 'mousedown', function (evt, _ref2) {\n    var target = _ref2.target;\n\n    if (!activator()) {\n      return;\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = contextElements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var contextElement = _step.value;\n\n        if (contextElement.contains(target)) {\n          return;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    callback();\n  });\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module heading/headingui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Model from '@ckeditor/ckeditor5-ui/src/model';\nimport { createDropdown, addListToDropdown } from '@ckeditor/ckeditor5-ui/src/dropdown/utils';\nimport { getLocalizedOptions } from './utils';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport '../theme/heading.css';\n/**\n * The headings UI feature. It introduces the `headings` dropdown.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar HeadingUI =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(HeadingUI, _Plugin);\n\n  function HeadingUI() {\n    _classCallCheck(this, HeadingUI);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HeadingUI).apply(this, arguments));\n  }\n\n  _createClass(HeadingUI, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var _this = this;\n\n      var editor = this.editor;\n      var t = editor.t;\n      var options = getLocalizedOptions(editor);\n      var defaultTitle = t('Choose heading');\n      var dropdownTooltip = t('Heading'); // Register UI component.\n\n      editor.ui.componentFactory.add('heading', function (locale) {\n        var titles = {};\n        var itemDefinitions = new Collection();\n        var headingCommand = editor.commands.get('heading');\n        var paragraphCommand = editor.commands.get('paragraph');\n        var commands = [headingCommand];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          var _loop = function _loop() {\n            var option = _step.value;\n            var def = {\n              type: 'button',\n              model: new Model({\n                label: option.title,\n                class: option.class,\n                withText: true\n              })\n            };\n\n            if (option.model === 'paragraph') {\n              def.model.bind('isOn').to(paragraphCommand, 'value');\n              def.model.set('commandName', 'paragraph');\n              commands.push(paragraphCommand);\n            } else {\n              def.model.bind('isOn').to(headingCommand, 'value', function (value) {\n                return value === option.model;\n              });\n              def.model.set({\n                commandName: 'heading',\n                commandValue: option.model\n              });\n            } // Add the option to the collection.\n\n\n            itemDefinitions.add(def);\n            titles[option.model] = option.title;\n          };\n\n          for (var _iterator = options[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            _loop();\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        var dropdownView = createDropdown(locale);\n        addListToDropdown(dropdownView, itemDefinitions);\n        dropdownView.buttonView.set({\n          isOn: false,\n          withText: true,\n          tooltip: dropdownTooltip\n        });\n        dropdownView.extendTemplate({\n          attributes: {\n            class: ['ck-heading-dropdown']\n          }\n        });\n        dropdownView.bind('isEnabled').toMany(commands, 'isEnabled', function () {\n          for (var _len = arguments.length, areEnabled = new Array(_len), _key = 0; _key < _len; _key++) {\n            areEnabled[_key] = arguments[_key];\n          }\n\n          return areEnabled.some(function (isEnabled) {\n            return isEnabled;\n          });\n        });\n        dropdownView.buttonView.bind('label').to(headingCommand, 'value', paragraphCommand, 'value', function (value, para) {\n          var whichModel = value || para && 'paragraph'; // If none of the commands is active, display default title.\n\n          return titles[whichModel] ? titles[whichModel] : defaultTitle;\n        }); // Execute command when an item from the dropdown is selected.\n\n        _this.listenTo(dropdownView, 'execute', function (evt) {\n          editor.execute(evt.source.commandName, evt.source.commandValue ? {\n            value: evt.source.commandValue\n          } : undefined);\n          editor.editing.view.focus();\n        });\n\n        return dropdownView;\n      });\n    }\n  }]);\n\n  return HeadingUI;\n}(Plugin);\n\nexport { HeadingUI as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * Returns heading options as defined in `config.heading.options` but processed to consider\n * editor localization, i.e. to display {@link module:heading/heading~HeadingOption}\n * in the correct language.\n *\n * Note: The reason behind this method is that there's no way to use {@link module:utils/locale~Locale#t}\n * when the user config is defined because the editor does not exist yet.\n *\n * @param {module:core/editor/editor~Editor} editor\n * @returns {Array.<module:heading/heading~HeadingOption>}.\n */\nexport function getLocalizedOptions(editor) {\n  var t = editor.t;\n  var localizedTitles = {\n    Paragraph: t('Paragraph'),\n    'Heading 1': t('Heading 1'),\n    'Heading 2': t('Heading 2'),\n    'Heading 3': t('Heading 3'),\n    'Heading 4': t('Heading 4'),\n    'Heading 5': t('Heading 5'),\n    'Heading 6': t('Heading 6')\n  };\n  return editor.config.get('heading.options').map(function (option) {\n    var title = localizedTitles[option.title];\n\n    if (title && title != option.title) {\n      option.title = title;\n    }\n\n    return option;\n  });\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module heading/heading\n */\nimport HeadingEditing from './headingediting';\nimport HeadingUI from './headingui';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport '../theme/heading.css';\n/**\n * The headings feature.\n *\n * For a detailed overview, check the {@glink features/headings Headings feature documentation}\n * and the {@glink api/heading package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:heading/headingediting~HeadingEditing heading editing feature}\n * and {@link module:heading/headingui~HeadingUI heading UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Heading =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Heading, _Plugin);\n\n  function Heading() {\n    _classCallCheck(this, Heading);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Heading).apply(this, arguments));\n  }\n\n  _createClass(Heading, null, [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [HeadingEditing, HeadingUI];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'Heading';\n    }\n  }]);\n\n  return Heading;\n}(Plugin);\n/**\n * The configuration of the heading feature. Introduced by the {@link module:heading/headingediting~HeadingEditing} feature.\n *\n * Read more in {@link module:heading/heading~HeadingConfig}.\n *\n * @member {module:heading/heading~HeadingConfig} module:core/editor/editorconfig~EditorConfig#heading\n */\n\n/**\n * The configuration of the heading feature.\n * The option is used by the {@link module:heading/headingediting~HeadingEditing} feature.\n *\n *\t\tClassicEditor\n *\t\t\t.create( {\n * \t\t\t\theading: ... // Heading feature config.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface HeadingConfig\n */\n\n/**\n * The available heading options.\n *\n * The default value is:\n *\n *\t\tconst headingConfig = {\n *\t\t\toptions: [\n *\t\t\t\t{ model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },\n *\t\t\t\t{ model: 'heading1', view: 'h2', title: 'Heading 1', class: 'ck-heading_heading1' },\n *\t\t\t\t{ model: 'heading2', view: 'h3', title: 'Heading 2', class: 'ck-heading_heading2' },\n *\t\t\t\t{ model: 'heading3', view: 'h4', title: 'Heading 3', class: 'ck-heading_heading3' }\n *\t\t\t]\n *\t\t};\n *\n * It defines 3 levels of headings. In the editor model they will use `heading1`, `heading2`, and `heading3` elements.\n * Their respective view elements (so the elements output by the editor) will be: `h2`, `h3`, and `h4`. This means that\n * if you choose \"Heading 1\" in the headings dropdown the editor will turn the current block to `<heading1>` in the model\n * which will result in rendering (and outputting to data) the `<h2>` element.\n *\n * The `title` and `class` properties will be used by the `headings` dropdown to render available options.\n * Usually, the first option in the headings dropdown is the \"Paragraph\" option, hence it's also defined on the list.\n * However, you don't need to define its view representation because it's handled by\n * the {@link module:paragraph/paragraph~Paragraph} feature (which is required by\n * the {@link module:heading/headingediting~HeadingEditing} feature).\n *\n * You can **read more** about configuring heading levels and **see more examples** in\n * the {@glink features/headings Headings} guide.\n *\n * Note: In the model you should always start from `heading1`, regardless of how the headings are represented in the view.\n * That's assumption is used by features like {@link module:autoformat/autoformat~Autoformat} to know which element\n * they should use when applying the first level heading.\n *\n * The defined headings are also available as values passed to the `'heading'` command under their model names.\n * For example, the below code will apply `<heading1>` to the current selection:\n *\n *\t\teditor.execute( 'heading', { value: 'heading1' } );\n *\n * @member {Array.<module:heading/heading~HeadingOption>} module:heading/heading~HeadingConfig#options\n */\n\n/**\n * Heading option descriptor.\n *\n * @typedef {Object} module:heading/heading~HeadingOption\n * @property {String} model Name of the model element to convert.\n * @property {module:engine/view/elementdefinition~ElementDefinition} view Definition of a view element to convert from/to.\n * @property {String} title The user-readable title of the option.\n * @property {String} class The class which will be added to the dropdown item representing this option.\n * @property {String} [icon] Icon used by {@link module:heading/headingbuttonsui~HeadingButtonsUI}. It can be omitted when using\n * the default configuration.\n * @extends module:engine/conversion/conversion~ConverterDefinition\n */\n\n\nexport { Heading as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module basic-styles/bold/boldediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport AttributeCommand from '../attributecommand';\nvar BOLD = 'bold';\n/**\n * The bold editing feature.\n *\n * It registers the `'bold'` command and introduces the `bold` attribute in the model which renders to the view\n * as a `<strong>` element.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar BoldEditing =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(BoldEditing, _Plugin);\n\n  function BoldEditing() {\n    _classCallCheck(this, BoldEditing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BoldEditing).apply(this, arguments));\n  }\n\n  _createClass(BoldEditing, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var editor = this.editor; // Allow bold attribute on text nodes.\n\n      editor.model.schema.extend('$text', {\n        allowAttributes: BOLD\n      });\n      editor.model.schema.setAttributeProperties(BOLD, {\n        isFormatting: true\n      }); // Build converter from model to view for data and editing pipelines.\n\n      editor.conversion.attributeToElement({\n        model: BOLD,\n        view: 'strong',\n        upcastAlso: ['b', {\n          styles: {\n            'font-weight': 'bold'\n          }\n        }]\n      }); // Create bold command.\n\n      editor.commands.add(BOLD, new AttributeCommand(editor, BOLD)); // Set the Ctrl+B keystroke.\n\n      editor.keystrokes.set('CTRL+B', BOLD);\n    }\n  }]);\n\n  return BoldEditing;\n}(Plugin);\n\nexport { BoldEditing as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module basic-styles/bold/boldui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport boldIcon from '../../theme/icons/bold.svg';\nvar BOLD = 'bold';\n/**\n * The bold UI feature. It introduces the Bold button.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar BoldUI =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(BoldUI, _Plugin);\n\n  function BoldUI() {\n    _classCallCheck(this, BoldUI);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BoldUI).apply(this, arguments));\n  }\n\n  _createClass(BoldUI, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var _this = this;\n\n      var editor = this.editor;\n      var t = editor.t; // Add bold button to feature components.\n\n      editor.ui.componentFactory.add(BOLD, function (locale) {\n        var command = editor.commands.get(BOLD);\n        var view = new ButtonView(locale);\n        view.set({\n          label: t('Bold'),\n          icon: boldIcon,\n          keystroke: 'CTRL+B',\n          tooltip: true\n        });\n        view.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled'); // Execute command.\n\n        _this.listenTo(view, 'execute', function () {\n          return editor.execute(BOLD);\n        });\n\n        return view;\n      });\n    }\n  }]);\n\n  return BoldUI;\n}(Plugin);\n\nexport { BoldUI as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module basic-styles/bold\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport BoldEditing from './bold/boldediting';\nimport BoldUI from './bold/boldui';\n/**\n * The bold feature.\n *\n * For a detailed overview check the {@glink features/basic-styles Basic styles feature documentation}\n * and the {@glink api/basic-styles package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:basic-styles/bold/boldediting~BoldEditing bold editing feature}\n * and {@link module:basic-styles/bold/boldui~BoldUI bold UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Bold =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Bold, _Plugin);\n\n  function Bold() {\n    _classCallCheck(this, Bold);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Bold).apply(this, arguments));\n  }\n\n  _createClass(Bold, null, [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [BoldEditing, BoldUI];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'Bold';\n    }\n  }]);\n\n  return Bold;\n}(Plugin);\n\nexport { Bold as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module basic-styles/italic/italicediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport AttributeCommand from '../attributecommand';\nvar ITALIC = 'italic';\n/**\n * The italic editing feature.\n *\n * It registers the `'italic'` command, the <kbd>Ctrl+I</kbd> keystroke and introduces the `italic` attribute in the model\n * which renders to the view as an `<em>` element.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar ItalicEditing =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(ItalicEditing, _Plugin);\n\n  function ItalicEditing() {\n    _classCallCheck(this, ItalicEditing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ItalicEditing).apply(this, arguments));\n  }\n\n  _createClass(ItalicEditing, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var editor = this.editor; // Allow italic attribute on text nodes.\n\n      editor.model.schema.extend('$text', {\n        allowAttributes: ITALIC\n      });\n      editor.model.schema.setAttributeProperties(ITALIC, {\n        isFormatting: true\n      });\n      editor.conversion.attributeToElement({\n        model: ITALIC,\n        view: 'i',\n        upcastAlso: ['em', {\n          styles: {\n            'font-style': 'italic'\n          }\n        }]\n      }); // Create italic command.\n\n      editor.commands.add(ITALIC, new AttributeCommand(editor, ITALIC)); // Set the Ctrl+I keystroke.\n\n      editor.keystrokes.set('CTRL+I', ITALIC);\n    }\n  }]);\n\n  return ItalicEditing;\n}(Plugin);\n\nexport { ItalicEditing as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module basic-styles/italic/italicui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport italicIcon from '../../theme/icons/italic.svg';\nvar ITALIC = 'italic';\n/**\n * The italic UI feature. It introduces the Italic button.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar ItalicUI =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(ItalicUI, _Plugin);\n\n  function ItalicUI() {\n    _classCallCheck(this, ItalicUI);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ItalicUI).apply(this, arguments));\n  }\n\n  _createClass(ItalicUI, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var _this = this;\n\n      var editor = this.editor;\n      var t = editor.t; // Add bold button to feature components.\n\n      editor.ui.componentFactory.add(ITALIC, function (locale) {\n        var command = editor.commands.get(ITALIC);\n        var view = new ButtonView(locale);\n        view.set({\n          label: t('Italic'),\n          icon: italicIcon,\n          keystroke: 'CTRL+I',\n          tooltip: true\n        });\n        view.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled'); // Execute command.\n\n        _this.listenTo(view, 'execute', function () {\n          return editor.execute(ITALIC);\n        });\n\n        return view;\n      });\n    }\n  }]);\n\n  return ItalicUI;\n}(Plugin);\n\nexport { ItalicUI as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module basic-styles/italic\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ItalicEditing from './italic/italicediting';\nimport ItalicUI from './italic/italicui';\n/**\n * The italic feature.\n *\n * For a detailed overview check the {@glink features/basic-styles Basic styles feature documentation}\n * and the {@glink api/basic-styles package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:basic-styles/italic/italicediting~ItalicEditing} and\n * {@link module:basic-styles/italic/italicui~ItalicUI} plugins.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Italic =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Italic, _Plugin);\n\n  function Italic() {\n    _classCallCheck(this, Italic);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Italic).apply(this, arguments));\n  }\n\n  _createClass(Italic, null, [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [ItalicEditing, ItalicUI];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'Italic';\n    }\n  }]);\n\n  return Italic;\n}(Plugin);\n\nexport { Italic as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module autoformat/blockautoformatediting\n */\nimport LiveRange from '@ckeditor/ckeditor5-engine/src/model/liverange';\n/**\n * The block autoformatting engine. It allows to format various block patterns. For example,\n * it can be configured to turn a paragraph starting with `*` and followed by a space into a list item.\n *\n * The autoformatting operation is integrated with the undo manager,\n * so the autoformatting step can be undone if the user's intention was not to format the text.\n *\n * See the constructors documentation to learn how to create custom inline autoformatters. You can also use\n * the {@link module:autoformat/autoformat~Autoformat} feature which enables a set of default autoformatters\n * (lists, headings, bold and italic).\n */\n\nvar BlockAutoformatEditing =\n/**\n * Creates a listener triggered on `change` event in the document.\n * Calls the callback when inserted text matches the regular expression or the command name\n * if provided instead of the callback.\n *\n * Examples of usage:\n *\n * To convert a paragraph to heading 1 when `- ` is typed, using just the command name:\n *\n *\t\tnew BlockAutoformatEditing( editor, /^\\- $/, 'heading1' );\n *\n * To convert a paragraph to heading 1 when `- ` is typed, using just the callback:\n *\n *\t\tnew BlockAutoformatEditing( editor, /^\\- $/, ( context ) => {\n *\t\t\tconst { match } = context;\n *\t\t\tconst headingLevel = match[ 1 ].length;\n *\n *\t\t\teditor.execute( 'heading', {\n *\t\t\t\tformatId: `heading${ headingLevel }`\n *\t\t\t} );\n * \t\t} );\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @param {RegExp} pattern The regular expression to execute on just inserted text.\n * @param {Function|String} callbackOrCommand The callback to execute or the command to run when the text is matched.\n * In case of providing the callback, it receives the following parameter:\n * * {Object} match RegExp.exec() result of matching the pattern to inserted text.\n */\nfunction BlockAutoformatEditing(editor, pattern, callbackOrCommand) {\n  _classCallCheck(this, BlockAutoformatEditing);\n\n  var callback;\n  var command = null;\n\n  if (typeof callbackOrCommand == 'function') {\n    callback = callbackOrCommand;\n  } else {\n    // We assume that the actual command name was provided.\n    command = editor.commands.get(callbackOrCommand);\n\n    callback = function callback() {\n      editor.execute(callbackOrCommand);\n    };\n  }\n\n  editor.model.document.on('change', function (evt, batch) {\n    if (command && !command.isEnabled) {\n      return;\n    }\n\n    if (batch.type == 'transparent') {\n      return;\n    }\n\n    var changes = Array.from(editor.model.document.differ.getChanges());\n    var entry = changes[0]; // Typing is represented by only a single change.\n\n    if (changes.length != 1 || entry.type !== 'insert' || entry.name != '$text' || entry.length != 1) {\n      return;\n    }\n\n    var item = entry.position.textNode || entry.position.nodeAfter;\n\n    if (!item.parent.is('paragraph')) {\n      return;\n    }\n\n    var match = pattern.exec(item.data);\n\n    if (!match) {\n      return;\n    } // Use enqueueChange to create new batch to separate typing batch from the auto-format changes.\n\n\n    editor.model.enqueueChange(function (writer) {\n      // Matched range.\n      var start = writer.createPositionAt(item.parent, 0);\n      var end = writer.createPositionAt(item.parent, match[0].length);\n      var range = new LiveRange(start, end);\n      var wasChanged = callback({\n        match: match\n      }); // Remove matched text.\n\n      if (wasChanged !== false) {\n        writer.remove(range);\n      }\n\n      range.detach();\n    });\n  });\n};\n\nexport { BlockAutoformatEditing as default };","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module autoformat/inlineautoformatediting\n */\n\n/**\n * The inline autoformatting engine. It allows to format various inline patterns. For example,\n * it can be configured to make \"foo\" bold when typed `**foo**` (the `**` markers will be removed).\n *\n * The autoformatting operation is integrated with the undo manager,\n * so the autoformatting step can be undone if the user's intention was not to format the text.\n *\n * See the constructors documentation to learn how to create custom inline autoformatters. You can also use\n * the {@link module:autoformat/autoformat~Autoformat} feature which enables a set of default autoformatters\n * (lists, headings, bold and italic).\n */\nvar InlineAutoformatEditing =\n/**\n * Enables autoformatting mechanism for a given {@link module:core/editor/editor~Editor}.\n *\n * It formats the matched text by applying the given model attribute or by running the provided formatting callback.\n * On every change applied to the model the autoformatting engine checks the text on the left of the selection\n * and executes the provided action if the text matches given criteria (regular expression or callback).\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @param {Function|RegExp} testRegexpOrCallback The regular expression or callback to execute on text.\n * Provided regular expression *must* have three capture groups. The first and the third capture group\n * should match opening and closing delimiters. The second capture group should match the text to format.\n *\n *\t\t// Matches the `**bold text**` pattern.\n *\t\t// There are three capturing groups:\n *\t\t// - The first to match the starting `**` delimiter.\n *\t\t// - The second to match the text to format.\n *\t\t// - The third to match the ending `**` delimiter.\n *\t\tnew InlineAutoformatEditing( editor, /(\\*\\*)([^\\*]+?)(\\*\\*)$/g, 'bold' );\n *\n * When a function is provided instead of the regular expression, it will be executed with the text to match as a parameter.\n * The function should return proper \"ranges\" to delete and format.\n *\n *\t\t{\n *\t\t\tremove: [\n *\t\t\t\t[ 0, 1 ],\t// Remove the first letter from the given text.\n *\t\t\t\t[ 5, 6 ]\t// Remove the 6th letter from the given text.\n *\t\t\t],\n *\t\t\tformat: [\n *\t\t\t\t[ 1, 5 ]\t// Format all letters from 2nd to 5th.\n *\t\t\t]\n *\t\t}\n *\n * @param {Function|String} attributeOrCallback The name of attribute to apply on matching text or a callback for manual\n * formatting. If callback is passed it should return `false` if changes should not be applied (e.g. if a command is disabled).\n *\n *\t\t// Use attribute name:\n *\t\tnew InlineAutoformatEditing( editor, /(\\*\\*)([^\\*]+?)(\\*\\*)$/g, 'bold' );\n *\n *\t\t// Use formatting callback:\n *\t\tnew InlineAutoformatEditing( editor, /(\\*\\*)([^\\*]+?)(\\*\\*)$/g, ( writer, rangesToFormat ) => {\n *\t\t\tconst command = editor.commands.get( 'bold' );\n *\n *\t\t\tif ( !command.isEnabled ) {\n *\t\t\t\treturn false;\n *\t\t\t}\n *\n *\t\t\tconst validRanges = editor.model.schema.getValidRanges( rangesToFormat, 'bold' );\n *\n *\t\t\tfor ( let range of validRanges ) {\n *\t\t\t\twriter.setAttribute( 'bold', true, range );\n *\t\t\t}\n *\t\t} );\n */\nfunction InlineAutoformatEditing(editor, testRegexpOrCallback, attributeOrCallback) {\n  _classCallCheck(this, InlineAutoformatEditing);\n\n  var regExp;\n  var attributeKey;\n  var testCallback;\n  var formatCallback;\n\n  if (testRegexpOrCallback instanceof RegExp) {\n    regExp = testRegexpOrCallback;\n  } else {\n    testCallback = testRegexpOrCallback;\n  }\n\n  if (typeof attributeOrCallback == 'string') {\n    attributeKey = attributeOrCallback;\n  } else {\n    formatCallback = attributeOrCallback;\n  } // A test callback run on changed text.\n\n\n  testCallback = testCallback || function (text) {\n    var result;\n    var remove = [];\n    var format = [];\n\n    while ((result = regExp.exec(text)) !== null) {\n      // There should be full match and 3 capture groups.\n      if (result && result.length < 4) {\n        break;\n      }\n\n      var _result = result,\n          index = _result.index,\n          leftDel = _result['1'],\n          content = _result['2'],\n          rightDel = _result['3']; // Real matched string - there might be some non-capturing groups so we need to recalculate starting index.\n\n      var found = leftDel + content + rightDel;\n      index += result[0].length - found.length; // Start and End offsets of delimiters to remove.\n\n      var delStart = [index, index + leftDel.length];\n      var delEnd = [index + leftDel.length + content.length, index + leftDel.length + content.length + rightDel.length];\n      remove.push(delStart);\n      remove.push(delEnd);\n      format.push([index + leftDel.length, index + leftDel.length + content.length]);\n    }\n\n    return {\n      remove: remove,\n      format: format\n    };\n  }; // A format callback run on matched text.\n\n\n  formatCallback = formatCallback || function (writer, rangesToFormat) {\n    var validRanges = editor.model.schema.getValidRanges(rangesToFormat, attributeKey);\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = validRanges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var range = _step.value;\n        writer.setAttribute(attributeKey, true, range);\n      } // After applying attribute to the text, remove given attribute from the selection.\n      // This way user is able to type a text without attribute used by auto formatter.\n\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    writer.removeSelectionAttribute(attributeKey);\n  };\n\n  editor.model.document.on('change', function (evt, batch) {\n    if (batch.type == 'transparent') {\n      return;\n    }\n\n    var selection = editor.model.document.selection; // Do nothing if selection is not collapsed.\n\n    if (!selection.isCollapsed) {\n      return;\n    }\n\n    var changes = Array.from(editor.model.document.differ.getChanges());\n    var entry = changes[0]; // Typing is represented by only a single change.\n\n    if (changes.length != 1 || entry.type !== 'insert' || entry.name != '$text' || entry.length != 1) {\n      return;\n    }\n\n    var block = selection.focus.parent;\n    var text = getText(block).slice(0, selection.focus.offset);\n    var testOutput = testCallback(text);\n    var rangesToFormat = testOutputToRanges(block, testOutput.format, editor.model);\n    var rangesToRemove = testOutputToRanges(block, testOutput.remove, editor.model);\n\n    if (!(rangesToFormat.length && rangesToRemove.length)) {\n      return;\n    } // Use enqueueChange to create new batch to separate typing batch from the auto-format changes.\n\n\n    editor.model.enqueueChange(function (writer) {\n      // Apply format.\n      var hasChanged = formatCallback(writer, rangesToFormat); // Strict check on `false` to have backward compatibility (when callbacks were returning `undefined`).\n\n      if (hasChanged === false) {\n        return;\n      } // Remove delimiters - use reversed order to not mix the offsets while removing.\n\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = rangesToRemove.reverse()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var range = _step2.value;\n          writer.remove(range);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    });\n  });\n}; // Returns whole text from parent element by adding all data from text nodes together.\n//\n// @private\n// @param {module:engine/model/element~Element} element\n// @returns {String}\n\n\nexport { InlineAutoformatEditing as default };\n\nfunction getText(element) {\n  return Array.from(element.getChildren()).reduce(function (a, b) {\n    return a + b.data;\n  }, '');\n} // Converts output of the test function provided to the InlineAutoformatEditing and converts it to the model ranges\n// inside provided block.\n//\n// @private\n// @param {module:engine/model/element~Element} block\n// @param {Array.<Array>} arrays\n// @param {module:engine/model/model~Model} model\n\n\nfunction testOutputToRanges(block, arrays, model) {\n  return arrays.filter(function (array) {\n    return array[0] !== undefined && array[1] !== undefined;\n  }).map(function (array) {\n    return model.createRange(model.createPositionAt(block, array[0]), model.createPositionAt(block, array[1]));\n  });\n}","import _classCallCheck from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Coding Folder\\\\ideaspace\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module autoformat/autoformat\n */\nimport BlockAutoformatEditing from './blockautoformatediting';\nimport InlineAutoformatEditing from './inlineautoformatediting';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n/**\n * Enables a set of predefined autoformatting actions.\n *\n * For a detailed overview, check the {@glink features/autoformat Autoformatting feature documentation}\n * and the {@glink api/autoformat package page}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Autoformat =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Autoformat, _Plugin);\n\n  function Autoformat() {\n    _classCallCheck(this, Autoformat);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Autoformat).apply(this, arguments));\n  }\n\n  _createClass(Autoformat, [{\n    key: \"afterInit\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function afterInit() {\n      this._addListAutoformats();\n\n      this._addBasicStylesAutoformats();\n\n      this._addHeadingAutoformats();\n\n      this._addBlockQuoteAutoformats();\n    }\n    /**\n     * Adds autoformatting related to the {@link module:list/list~List}.\n     *\n     * When typed:\n     * - `* ` or `- ` &ndash; A paragraph will be changed to a bulleted list.\n     * - `1. ` or `1) ` &ndash; A paragraph will be changed to a numbered list (\"1\" can be any digit or a list of digits).\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_addListAutoformats\",\n    value: function _addListAutoformats() {\n      var commands = this.editor.commands;\n\n      if (commands.get('bulletedList')) {\n        // eslint-disable-next-line no-new\n        new BlockAutoformatEditing(this.editor, /^[*-]\\s$/, 'bulletedList');\n      }\n\n      if (commands.get('numberedList')) {\n        // eslint-disable-next-line no-new\n        new BlockAutoformatEditing(this.editor, /^1[.|)]\\s$/, 'numberedList');\n      }\n    }\n    /**\n     * Adds autoformatting related to the {@link module:basic-styles/bold~Bold},\n     * {@link module:basic-styles/italic~Italic} and {@link module:basic-styles/code~Code}.\n     *\n     * When typed:\n     * - `**foobar**` &ndash; `**` characters are removed and `foobar` is set to bold,\n     * - `__foobar__` &ndash; `__` characters are removed and `foobar` is set to bold,\n     * - `*foobar*` &ndash; `*` characters are removed and `foobar` is set to italic,\n     * - `_foobar_` &ndash; `_` characters are removed and `foobar` is set to italic,\n     * - ``` `foobar` &ndash; ``` ` ``` characters are removed and `foobar` is set to code.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_addBasicStylesAutoformats\",\n    value: function _addBasicStylesAutoformats() {\n      var commands = this.editor.commands;\n\n      if (commands.get('bold')) {\n        /* eslint-disable no-new */\n        var boldCallback = getCallbackFunctionForInlineAutoformat(this.editor, 'bold');\n        new InlineAutoformatEditing(this.editor, /(\\*\\*)([^*]+)(\\*\\*)$/g, boldCallback);\n        new InlineAutoformatEditing(this.editor, /(__)([^_]+)(__)$/g, boldCallback);\n        /* eslint-enable no-new */\n      }\n\n      if (commands.get('italic')) {\n        /* eslint-disable no-new */\n        var italicCallback = getCallbackFunctionForInlineAutoformat(this.editor, 'italic'); // The italic autoformatter cannot be triggered by the bold markers, so we need to check the\n        // text before the pattern (e.g. `(?:^|[^\\*])`).\n\n        new InlineAutoformatEditing(this.editor, /(?:^|[^*])(\\*)([^*_]+)(\\*)$/g, italicCallback);\n        new InlineAutoformatEditing(this.editor, /(?:^|[^_])(_)([^_]+)(_)$/g, italicCallback);\n        /* eslint-enable no-new */\n      }\n\n      if (commands.get('code')) {\n        /* eslint-disable no-new */\n        var codeCallback = getCallbackFunctionForInlineAutoformat(this.editor, 'code');\n        new InlineAutoformatEditing(this.editor, /(`)([^`]+)(`)$/g, codeCallback);\n        /* eslint-enable no-new */\n      }\n    }\n    /**\n     * Adds autoformatting related to {@link module:heading/heading~Heading}.\n     *\n     * It is using a number at the end of the command name to associate it with the proper trigger:\n     *\n     * * `heading` with value `heading1` will be executed when typing `#`,\n     * * `heading` with value `heading2` will be executed when typing `##`,\n     * * ... up to `heading6` and `######`.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_addHeadingAutoformats\",\n    value: function _addHeadingAutoformats() {\n      var _this = this;\n\n      var command = this.editor.commands.get('heading');\n\n      if (command) {\n        command.modelElements.filter(function (name) {\n          return name.match(/^heading[1-6]$/);\n        }).forEach(function (commandValue) {\n          var level = commandValue[7];\n          var pattern = new RegExp(\"^(#{\".concat(level, \"})\\\\s$\")); // eslint-disable-next-line no-new\n\n          new BlockAutoformatEditing(_this.editor, pattern, function () {\n            if (!command.isEnabled) {\n              return false;\n            }\n\n            _this.editor.execute('heading', {\n              value: commandValue\n            });\n          });\n        });\n      }\n    }\n    /**\n     * Adds autoformatting related to {@link module:block-quote/blockquote~BlockQuote}.\n     *\n     * When typed:\n     * * `> ` &ndash; A paragraph will be changed to a block quote.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_addBlockQuoteAutoformats\",\n    value: function _addBlockQuoteAutoformats() {\n      if (this.editor.commands.get('blockQuote')) {\n        // eslint-disable-next-line no-new\n        new BlockAutoformatEditing(this.editor, /^>\\s$/, 'blockQuote');\n      }\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'Autoformat';\n    }\n  }]);\n\n  return Autoformat;\n}(Plugin); // Helper function for getting `InlineAutoformatEditing` callbacks that checks if command is enabled.\n//\n// @param {module:core/editor/editor~Editor} editor\n// @param {String} attributeKey\n// @returns {Function}\n\n\nexport { Autoformat as default };\n\nfunction getCallbackFunctionForInlineAutoformat(editor, attributeKey) {\n  return function (writer, rangesToFormat) {\n    var command = editor.commands.get(attributeKey);\n\n    if (!command.isEnabled) {\n      return false;\n    }\n\n    var validRanges = editor.model.schema.getValidRanges(rangesToFormat, attributeKey);\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = validRanges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var range = _step.value;\n        writer.setAttribute(attributeKey, true, range);\n      } // After applying attribute to the text, remove given attribute from the selection.\n      // This way user is able to type a text without attribute used by auto formatter.\n\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    writer.removeSelectionAttribute(attributeKey);\n  };\n}","import isObjectLike from './isObjectLike.js';\nimport isPlainObject from './isPlainObject.js';\n/**\n * Checks if `value` is likely a DOM element.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n * @example\n *\n * _.isElement(document.body);\n * // => true\n *\n * _.isElement('<body>');\n * // => false\n */\n\nfunction isElement(value) {\n  return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n}\n\nexport default isElement;","/** @license React v16.8.6\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar k = require(\"object-assign\"),\n    n = \"function\" === typeof Symbol && Symbol.for,\n    p = n ? Symbol.for(\"react.element\") : 60103,\n    q = n ? Symbol.for(\"react.portal\") : 60106,\n    r = n ? Symbol.for(\"react.fragment\") : 60107,\n    t = n ? Symbol.for(\"react.strict_mode\") : 60108,\n    u = n ? Symbol.for(\"react.profiler\") : 60114,\n    v = n ? Symbol.for(\"react.provider\") : 60109,\n    w = n ? Symbol.for(\"react.context\") : 60110,\n    x = n ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    y = n ? Symbol.for(\"react.forward_ref\") : 60112,\n    z = n ? Symbol.for(\"react.suspense\") : 60113,\n    aa = n ? Symbol.for(\"react.memo\") : 60115,\n    ba = n ? Symbol.for(\"react.lazy\") : 60116,\n    A = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction ca(a, b, d, c, e, g, h, f) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [d, c, e, g, h, f],\n          m = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[m++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction B(a) {\n  for (var b = arguments.length - 1, d = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, c = 0; c < b; c++) {\n    d += \"&args[]=\" + encodeURIComponent(arguments[c + 1]);\n  }\n\n  ca(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", d);\n}\n\nvar C = {\n  isMounted: function isMounted() {\n    return !1;\n  },\n  enqueueForceUpdate: function enqueueForceUpdate() {},\n  enqueueReplaceState: function enqueueReplaceState() {},\n  enqueueSetState: function enqueueSetState() {}\n},\n    D = {};\n\nfunction E(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nE.prototype.isReactComponent = {};\n\nE.prototype.setState = function (a, b) {\n  \"object\" !== typeof a && \"function\" !== typeof a && null != a ? B(\"85\") : void 0;\n  this.updater.enqueueSetState(this, a, b, \"setState\");\n};\n\nE.prototype.forceUpdate = function (a) {\n  this.updater.enqueueForceUpdate(this, a, \"forceUpdate\");\n};\n\nfunction F() {}\n\nF.prototype = E.prototype;\n\nfunction G(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nvar H = G.prototype = new F();\nH.constructor = G;\nk(H, E.prototype);\nH.isPureReactComponent = !0;\nvar I = {\n  current: null\n},\n    J = {\n  current: null\n},\n    K = Object.prototype.hasOwnProperty,\n    L = {\n  key: !0,\n  ref: !0,\n  __self: !0,\n  __source: !0\n};\n\nfunction M(a, b, d) {\n  var c = void 0,\n      e = {},\n      g = null,\n      h = null;\n  if (null != b) for (c in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (g = \"\" + b.key), b) {\n    K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = b[c]);\n  }\n  var f = arguments.length - 2;\n  if (1 === f) e.children = d;else if (1 < f) {\n    for (var l = Array(f), m = 0; m < f; m++) {\n      l[m] = arguments[m + 2];\n    }\n\n    e.children = l;\n  }\n  if (a && a.defaultProps) for (c in f = a.defaultProps, f) {\n    void 0 === e[c] && (e[c] = f[c]);\n  }\n  return {\n    $$typeof: p,\n    type: a,\n    key: g,\n    ref: h,\n    props: e,\n    _owner: J.current\n  };\n}\n\nfunction da(a, b) {\n  return {\n    $$typeof: p,\n    type: a.type,\n    key: b,\n    ref: a.ref,\n    props: a.props,\n    _owner: a._owner\n  };\n}\n\nfunction N(a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === p;\n}\n\nfunction escape(a) {\n  var b = {\n    \"=\": \"=0\",\n    \":\": \"=2\"\n  };\n  return \"$\" + (\"\" + a).replace(/[=:]/g, function (a) {\n    return b[a];\n  });\n}\n\nvar O = /\\/+/g,\n    P = [];\n\nfunction Q(a, b, d, c) {\n  if (P.length) {\n    var e = P.pop();\n    e.result = a;\n    e.keyPrefix = b;\n    e.func = d;\n    e.context = c;\n    e.count = 0;\n    return e;\n  }\n\n  return {\n    result: a,\n    keyPrefix: b,\n    func: d,\n    context: c,\n    count: 0\n  };\n}\n\nfunction R(a) {\n  a.result = null;\n  a.keyPrefix = null;\n  a.func = null;\n  a.context = null;\n  a.count = 0;\n  10 > P.length && P.push(a);\n}\n\nfunction S(a, b, d, c) {\n  var e = typeof a;\n  if (\"undefined\" === e || \"boolean\" === e) a = null;\n  var g = !1;\n  if (null === a) g = !0;else switch (e) {\n    case \"string\":\n    case \"number\":\n      g = !0;\n      break;\n\n    case \"object\":\n      switch (a.$$typeof) {\n        case p:\n        case q:\n          g = !0;\n      }\n\n  }\n  if (g) return d(c, a, \"\" === b ? \".\" + T(a, 0) : b), 1;\n  g = 0;\n  b = \"\" === b ? \".\" : b + \":\";\n  if (Array.isArray(a)) for (var h = 0; h < a.length; h++) {\n    e = a[h];\n    var f = b + T(e, h);\n    g += S(e, f, d, c);\n  } else if (null === a || \"object\" !== typeof a ? f = null : (f = A && a[A] || a[\"@@iterator\"], f = \"function\" === typeof f ? f : null), \"function\" === typeof f) for (a = f.call(a), h = 0; !(e = a.next()).done;) {\n    e = e.value, f = b + T(e, h++), g += S(e, f, d, c);\n  } else \"object\" === e && (d = \"\" + a, B(\"31\", \"[object Object]\" === d ? \"object with keys {\" + Object.keys(a).join(\", \") + \"}\" : d, \"\"));\n  return g;\n}\n\nfunction U(a, b, d) {\n  return null == a ? 0 : S(a, \"\", b, d);\n}\n\nfunction T(a, b) {\n  return \"object\" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);\n}\n\nfunction ea(a, b) {\n  a.func.call(a.context, b, a.count++);\n}\n\nfunction fa(a, b, d) {\n  var c = a.result,\n      e = a.keyPrefix;\n  a = a.func.call(a.context, b, a.count++);\n  Array.isArray(a) ? V(a, c, d, function (a) {\n    return a;\n  }) : null != a && (N(a) && (a = da(a, e + (!a.key || b && b.key === a.key ? \"\" : (\"\" + a.key).replace(O, \"$&/\") + \"/\") + d)), c.push(a));\n}\n\nfunction V(a, b, d, c, e) {\n  var g = \"\";\n  null != d && (g = (\"\" + d).replace(O, \"$&/\") + \"/\");\n  b = Q(b, g, c, e);\n  U(a, fa, b);\n  R(b);\n}\n\nfunction W() {\n  var a = I.current;\n  null === a ? B(\"321\") : void 0;\n  return a;\n}\n\nvar X = {\n  Children: {\n    map: function map(a, b, d) {\n      if (null == a) return a;\n      var c = [];\n      V(a, c, null, b, d);\n      return c;\n    },\n    forEach: function forEach(a, b, d) {\n      if (null == a) return a;\n      b = Q(null, null, b, d);\n      U(a, ea, b);\n      R(b);\n    },\n    count: function count(a) {\n      return U(a, function () {\n        return null;\n      }, null);\n    },\n    toArray: function toArray(a) {\n      var b = [];\n      V(a, b, null, function (a) {\n        return a;\n      });\n      return b;\n    },\n    only: function only(a) {\n      N(a) ? void 0 : B(\"143\");\n      return a;\n    }\n  },\n  createRef: function createRef() {\n    return {\n      current: null\n    };\n  },\n  Component: E,\n  PureComponent: G,\n  createContext: function createContext(a, b) {\n    void 0 === b && (b = null);\n    a = {\n      $$typeof: w,\n      _calculateChangedBits: b,\n      _currentValue: a,\n      _currentValue2: a,\n      _threadCount: 0,\n      Provider: null,\n      Consumer: null\n    };\n    a.Provider = {\n      $$typeof: v,\n      _context: a\n    };\n    return a.Consumer = a;\n  },\n  forwardRef: function forwardRef(a) {\n    return {\n      $$typeof: y,\n      render: a\n    };\n  },\n  lazy: function lazy(a) {\n    return {\n      $$typeof: ba,\n      _ctor: a,\n      _status: -1,\n      _result: null\n    };\n  },\n  memo: function memo(a, b) {\n    return {\n      $$typeof: aa,\n      type: a,\n      compare: void 0 === b ? null : b\n    };\n  },\n  useCallback: function useCallback(a, b) {\n    return W().useCallback(a, b);\n  },\n  useContext: function useContext(a, b) {\n    return W().useContext(a, b);\n  },\n  useEffect: function useEffect(a, b) {\n    return W().useEffect(a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, d) {\n    return W().useImperativeHandle(a, b, d);\n  },\n  useDebugValue: function useDebugValue() {},\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return W().useLayoutEffect(a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    return W().useMemo(a, b);\n  },\n  useReducer: function useReducer(a, b, d) {\n    return W().useReducer(a, b, d);\n  },\n  useRef: function useRef(a) {\n    return W().useRef(a);\n  },\n  useState: function useState(a) {\n    return W().useState(a);\n  },\n  Fragment: r,\n  StrictMode: t,\n  Suspense: z,\n  createElement: M,\n  cloneElement: function cloneElement(a, b, d) {\n    null === a || void 0 === a ? B(\"267\", a) : void 0;\n    var c = void 0,\n        e = k({}, a.props),\n        g = a.key,\n        h = a.ref,\n        f = a._owner;\n\n    if (null != b) {\n      void 0 !== b.ref && (h = b.ref, f = J.current);\n      void 0 !== b.key && (g = \"\" + b.key);\n      var l = void 0;\n      a.type && a.type.defaultProps && (l = a.type.defaultProps);\n\n      for (c in b) {\n        K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = void 0 === b[c] && void 0 !== l ? l[c] : b[c]);\n      }\n    }\n\n    c = arguments.length - 2;\n    if (1 === c) e.children = d;else if (1 < c) {\n      l = Array(c);\n\n      for (var m = 0; m < c; m++) {\n        l[m] = arguments[m + 2];\n      }\n\n      e.children = l;\n    }\n    return {\n      $$typeof: p,\n      type: a.type,\n      key: g,\n      ref: h,\n      props: e,\n      _owner: f\n    };\n  },\n  createFactory: function createFactory(a) {\n    var b = M.bind(null, a);\n    b.type = a;\n    return b;\n  },\n  isValidElement: N,\n  version: \"16.8.6\",\n  unstable_ConcurrentMode: x,\n  unstable_Profiler: u,\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    ReactCurrentDispatcher: I,\n    ReactCurrentOwner: J,\n    assign: k\n  }\n},\n    Y = {\n  default: X\n},\n    Z = Y && X || Y;\nmodule.exports = Z.default || Z;","/** @license React v16.8.6\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';\n\nvar aa = require(\"react\"),\n    n = require(\"object-assign\"),\n    r = require(\"scheduler\");\n\nfunction ba(a, b, c, d, e, f, g, h) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [c, d, e, f, g, h],\n          k = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[k++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction x(a) {\n  for (var b = arguments.length - 1, c = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, d = 0; d < b; d++) {\n    c += \"&args[]=\" + encodeURIComponent(arguments[d + 1]);\n  }\n\n  ba(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", c);\n}\n\naa ? void 0 : x(\"227\");\n\nfunction ca(a, b, c, d, e, f, g, h, l) {\n  var k = Array.prototype.slice.call(arguments, 3);\n\n  try {\n    b.apply(c, k);\n  } catch (m) {\n    this.onError(m);\n  }\n}\n\nvar da = !1,\n    ea = null,\n    fa = !1,\n    ha = null,\n    ia = {\n  onError: function onError(a) {\n    da = !0;\n    ea = a;\n  }\n};\n\nfunction ja(a, b, c, d, e, f, g, h, l) {\n  da = !1;\n  ea = null;\n  ca.apply(ia, arguments);\n}\n\nfunction ka(a, b, c, d, e, f, g, h, l) {\n  ja.apply(this, arguments);\n\n  if (da) {\n    if (da) {\n      var k = ea;\n      da = !1;\n      ea = null;\n    } else x(\"198\"), k = void 0;\n\n    fa || (fa = !0, ha = k);\n  }\n}\n\nvar la = null,\n    ma = {};\n\nfunction na() {\n  if (la) for (var a in ma) {\n    var b = ma[a],\n        c = la.indexOf(a);\n    -1 < c ? void 0 : x(\"96\", a);\n\n    if (!oa[c]) {\n      b.extractEvents ? void 0 : x(\"97\", a);\n      oa[c] = b;\n      c = b.eventTypes;\n\n      for (var d in c) {\n        var e = void 0;\n        var f = c[d],\n            g = b,\n            h = d;\n        pa.hasOwnProperty(h) ? x(\"99\", h) : void 0;\n        pa[h] = f;\n        var l = f.phasedRegistrationNames;\n\n        if (l) {\n          for (e in l) {\n            l.hasOwnProperty(e) && qa(l[e], g, h);\n          }\n\n          e = !0;\n        } else f.registrationName ? (qa(f.registrationName, g, h), e = !0) : e = !1;\n\n        e ? void 0 : x(\"98\", d, a);\n      }\n    }\n  }\n}\n\nfunction qa(a, b, c) {\n  ra[a] ? x(\"100\", a) : void 0;\n  ra[a] = b;\n  sa[a] = b.eventTypes[c].dependencies;\n}\n\nvar oa = [],\n    pa = {},\n    ra = {},\n    sa = {},\n    ta = null,\n    ua = null,\n    va = null;\n\nfunction wa(a, b, c) {\n  var d = a.type || \"unknown-event\";\n  a.currentTarget = va(c);\n  ka(d, b, void 0, a);\n  a.currentTarget = null;\n}\n\nfunction xa(a, b) {\n  null == b ? x(\"30\") : void 0;\n  if (null == a) return b;\n\n  if (Array.isArray(a)) {\n    if (Array.isArray(b)) return a.push.apply(a, b), a;\n    a.push(b);\n    return a;\n  }\n\n  return Array.isArray(b) ? [a].concat(b) : [a, b];\n}\n\nfunction ya(a, b, c) {\n  Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);\n}\n\nvar za = null;\n\nfunction Aa(a) {\n  if (a) {\n    var b = a._dispatchListeners,\n        c = a._dispatchInstances;\n    if (Array.isArray(b)) for (var d = 0; d < b.length && !a.isPropagationStopped(); d++) {\n      wa(a, b[d], c[d]);\n    } else b && wa(a, b, c);\n    a._dispatchListeners = null;\n    a._dispatchInstances = null;\n    a.isPersistent() || a.constructor.release(a);\n  }\n}\n\nvar Ba = {\n  injectEventPluginOrder: function injectEventPluginOrder(a) {\n    la ? x(\"101\") : void 0;\n    la = Array.prototype.slice.call(a);\n    na();\n  },\n  injectEventPluginsByName: function injectEventPluginsByName(a) {\n    var b = !1,\n        c;\n\n    for (c in a) {\n      if (a.hasOwnProperty(c)) {\n        var d = a[c];\n        ma.hasOwnProperty(c) && ma[c] === d || (ma[c] ? x(\"102\", c) : void 0, ma[c] = d, b = !0);\n      }\n    }\n\n    b && na();\n  }\n};\n\nfunction Ca(a, b) {\n  var c = a.stateNode;\n  if (!c) return null;\n  var d = ta(c);\n  if (!d) return null;\n  c = d[b];\n\n  a: switch (b) {\n    case \"onClick\":\n    case \"onClickCapture\":\n    case \"onDoubleClick\":\n    case \"onDoubleClickCapture\":\n    case \"onMouseDown\":\n    case \"onMouseDownCapture\":\n    case \"onMouseMove\":\n    case \"onMouseMoveCapture\":\n    case \"onMouseUp\":\n    case \"onMouseUpCapture\":\n      (d = !d.disabled) || (a = a.type, d = !(\"button\" === a || \"input\" === a || \"select\" === a || \"textarea\" === a));\n      a = !d;\n      break a;\n\n    default:\n      a = !1;\n  }\n\n  if (a) return null;\n  c && \"function\" !== typeof c ? x(\"231\", b, typeof c) : void 0;\n  return c;\n}\n\nfunction Da(a) {\n  null !== a && (za = xa(za, a));\n  a = za;\n  za = null;\n  if (a && (ya(a, Aa), za ? x(\"95\") : void 0, fa)) throw a = ha, fa = !1, ha = null, a;\n}\n\nvar Ea = Math.random().toString(36).slice(2),\n    Fa = \"__reactInternalInstance$\" + Ea,\n    Ga = \"__reactEventHandlers$\" + Ea;\n\nfunction Ha(a) {\n  if (a[Fa]) return a[Fa];\n\n  for (; !a[Fa];) {\n    if (a.parentNode) a = a.parentNode;else return null;\n  }\n\n  a = a[Fa];\n  return 5 === a.tag || 6 === a.tag ? a : null;\n}\n\nfunction Ia(a) {\n  a = a[Fa];\n  return !a || 5 !== a.tag && 6 !== a.tag ? null : a;\n}\n\nfunction Ja(a) {\n  if (5 === a.tag || 6 === a.tag) return a.stateNode;\n  x(\"33\");\n}\n\nfunction Ka(a) {\n  return a[Ga] || null;\n}\n\nfunction La(a) {\n  do {\n    a = a.return;\n  } while (a && 5 !== a.tag);\n\n  return a ? a : null;\n}\n\nfunction Ma(a, b, c) {\n  if (b = Ca(a, c.dispatchConfig.phasedRegistrationNames[b])) c._dispatchListeners = xa(c._dispatchListeners, b), c._dispatchInstances = xa(c._dispatchInstances, a);\n}\n\nfunction Na(a) {\n  if (a && a.dispatchConfig.phasedRegistrationNames) {\n    for (var b = a._targetInst, c = []; b;) {\n      c.push(b), b = La(b);\n    }\n\n    for (b = c.length; 0 < b--;) {\n      Ma(c[b], \"captured\", a);\n    }\n\n    for (b = 0; b < c.length; b++) {\n      Ma(c[b], \"bubbled\", a);\n    }\n  }\n}\n\nfunction Oa(a, b, c) {\n  a && c && c.dispatchConfig.registrationName && (b = Ca(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = xa(c._dispatchListeners, b), c._dispatchInstances = xa(c._dispatchInstances, a));\n}\n\nfunction Pa(a) {\n  a && a.dispatchConfig.registrationName && Oa(a._targetInst, null, a);\n}\n\nfunction Qa(a) {\n  ya(a, Na);\n}\n\nvar Ra = !(\"undefined\" === typeof window || !window.document || !window.document.createElement);\n\nfunction Sa(a, b) {\n  var c = {};\n  c[a.toLowerCase()] = b.toLowerCase();\n  c[\"Webkit\" + a] = \"webkit\" + b;\n  c[\"Moz\" + a] = \"moz\" + b;\n  return c;\n}\n\nvar Ta = {\n  animationend: Sa(\"Animation\", \"AnimationEnd\"),\n  animationiteration: Sa(\"Animation\", \"AnimationIteration\"),\n  animationstart: Sa(\"Animation\", \"AnimationStart\"),\n  transitionend: Sa(\"Transition\", \"TransitionEnd\")\n},\n    Ua = {},\n    Va = {};\nRa && (Va = document.createElement(\"div\").style, \"AnimationEvent\" in window || (delete Ta.animationend.animation, delete Ta.animationiteration.animation, delete Ta.animationstart.animation), \"TransitionEvent\" in window || delete Ta.transitionend.transition);\n\nfunction Wa(a) {\n  if (Ua[a]) return Ua[a];\n  if (!Ta[a]) return a;\n  var b = Ta[a],\n      c;\n\n  for (c in b) {\n    if (b.hasOwnProperty(c) && c in Va) return Ua[a] = b[c];\n  }\n\n  return a;\n}\n\nvar Xa = Wa(\"animationend\"),\n    Ya = Wa(\"animationiteration\"),\n    Za = Wa(\"animationstart\"),\n    $a = Wa(\"transitionend\"),\n    ab = \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),\n    bb = null,\n    cb = null,\n    db = null;\n\nfunction eb() {\n  if (db) return db;\n  var a,\n      b = cb,\n      c = b.length,\n      d,\n      e = \"value\" in bb ? bb.value : bb.textContent,\n      f = e.length;\n\n  for (a = 0; a < c && b[a] === e[a]; a++) {\n    ;\n  }\n\n  var g = c - a;\n\n  for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {\n    ;\n  }\n\n  return db = e.slice(a, 1 < d ? 1 - d : void 0);\n}\n\nfunction fb() {\n  return !0;\n}\n\nfunction gb() {\n  return !1;\n}\n\nfunction y(a, b, c, d) {\n  this.dispatchConfig = a;\n  this._targetInst = b;\n  this.nativeEvent = c;\n  a = this.constructor.Interface;\n\n  for (var e in a) {\n    a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : \"target\" === e ? this.target = d : this[e] = c[e]);\n  }\n\n  this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? fb : gb;\n  this.isPropagationStopped = gb;\n  return this;\n}\n\nn(y.prototype, {\n  preventDefault: function preventDefault() {\n    this.defaultPrevented = !0;\n    var a = this.nativeEvent;\n    a && (a.preventDefault ? a.preventDefault() : \"unknown\" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = fb);\n  },\n  stopPropagation: function stopPropagation() {\n    var a = this.nativeEvent;\n    a && (a.stopPropagation ? a.stopPropagation() : \"unknown\" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = fb);\n  },\n  persist: function persist() {\n    this.isPersistent = fb;\n  },\n  isPersistent: gb,\n  destructor: function destructor() {\n    var a = this.constructor.Interface,\n        b;\n\n    for (b in a) {\n      this[b] = null;\n    }\n\n    this.nativeEvent = this._targetInst = this.dispatchConfig = null;\n    this.isPropagationStopped = this.isDefaultPrevented = gb;\n    this._dispatchInstances = this._dispatchListeners = null;\n  }\n});\ny.Interface = {\n  type: null,\n  target: null,\n  currentTarget: function currentTarget() {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function timeStamp(a) {\n    return a.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\ny.extend = function (a) {\n  function b() {}\n\n  function c() {\n    return d.apply(this, arguments);\n  }\n\n  var d = this;\n  b.prototype = d.prototype;\n  var e = new b();\n  n(e, c.prototype);\n  c.prototype = e;\n  c.prototype.constructor = c;\n  c.Interface = n({}, d.Interface, a);\n  c.extend = d.extend;\n  hb(c);\n  return c;\n};\n\nhb(y);\n\nfunction ib(a, b, c, d) {\n  if (this.eventPool.length) {\n    var e = this.eventPool.pop();\n    this.call(e, a, b, c, d);\n    return e;\n  }\n\n  return new this(a, b, c, d);\n}\n\nfunction jb(a) {\n  a instanceof this ? void 0 : x(\"279\");\n  a.destructor();\n  10 > this.eventPool.length && this.eventPool.push(a);\n}\n\nfunction hb(a) {\n  a.eventPool = [];\n  a.getPooled = ib;\n  a.release = jb;\n}\n\nvar kb = y.extend({\n  data: null\n}),\n    lb = y.extend({\n  data: null\n}),\n    mb = [9, 13, 27, 32],\n    nb = Ra && \"CompositionEvent\" in window,\n    ob = null;\nRa && \"documentMode\" in document && (ob = document.documentMode);\nvar pb = Ra && \"TextEvent\" in window && !ob,\n    qb = Ra && (!nb || ob && 8 < ob && 11 >= ob),\n    rb = String.fromCharCode(32),\n    sb = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: \"onBeforeInput\",\n      captured: \"onBeforeInputCapture\"\n    },\n    dependencies: [\"compositionend\", \"keypress\", \"textInput\", \"paste\"]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionEnd\",\n      captured: \"onCompositionEndCapture\"\n    },\n    dependencies: \"blur compositionend keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionStart\",\n      captured: \"onCompositionStartCapture\"\n    },\n    dependencies: \"blur compositionstart keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionUpdate\",\n      captured: \"onCompositionUpdateCapture\"\n    },\n    dependencies: \"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")\n  }\n},\n    tb = !1;\n\nfunction ub(a, b) {\n  switch (a) {\n    case \"keyup\":\n      return -1 !== mb.indexOf(b.keyCode);\n\n    case \"keydown\":\n      return 229 !== b.keyCode;\n\n    case \"keypress\":\n    case \"mousedown\":\n    case \"blur\":\n      return !0;\n\n    default:\n      return !1;\n  }\n}\n\nfunction vb(a) {\n  a = a.detail;\n  return \"object\" === typeof a && \"data\" in a ? a.data : null;\n}\n\nvar wb = !1;\n\nfunction xb(a, b) {\n  switch (a) {\n    case \"compositionend\":\n      return vb(b);\n\n    case \"keypress\":\n      if (32 !== b.which) return null;\n      tb = !0;\n      return rb;\n\n    case \"textInput\":\n      return a = b.data, a === rb && tb ? null : a;\n\n    default:\n      return null;\n  }\n}\n\nfunction yb(a, b) {\n  if (wb) return \"compositionend\" === a || !nb && ub(a, b) ? (a = eb(), db = cb = bb = null, wb = !1, a) : null;\n\n  switch (a) {\n    case \"paste\":\n      return null;\n\n    case \"keypress\":\n      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {\n        if (b.char && 1 < b.char.length) return b.char;\n        if (b.which) return String.fromCharCode(b.which);\n      }\n\n      return null;\n\n    case \"compositionend\":\n      return qb && \"ko\" !== b.locale ? null : b.data;\n\n    default:\n      return null;\n  }\n}\n\nvar zb = {\n  eventTypes: sb,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = void 0;\n    var f = void 0;\n    if (nb) b: {\n      switch (a) {\n        case \"compositionstart\":\n          e = sb.compositionStart;\n          break b;\n\n        case \"compositionend\":\n          e = sb.compositionEnd;\n          break b;\n\n        case \"compositionupdate\":\n          e = sb.compositionUpdate;\n          break b;\n      }\n\n      e = void 0;\n    } else wb ? ub(a, c) && (e = sb.compositionEnd) : \"keydown\" === a && 229 === c.keyCode && (e = sb.compositionStart);\n    e ? (qb && \"ko\" !== c.locale && (wb || e !== sb.compositionStart ? e === sb.compositionEnd && wb && (f = eb()) : (bb = d, cb = \"value\" in bb ? bb.value : bb.textContent, wb = !0)), e = kb.getPooled(e, b, c, d), f ? e.data = f : (f = vb(c), null !== f && (e.data = f)), Qa(e), f = e) : f = null;\n    (a = pb ? xb(a, c) : yb(a, c)) ? (b = lb.getPooled(sb.beforeInput, b, c, d), b.data = a, Qa(b)) : b = null;\n    return null === f ? b : null === b ? f : [f, b];\n  }\n},\n    Ab = null,\n    Bb = null,\n    Cb = null;\n\nfunction Db(a) {\n  if (a = ua(a)) {\n    \"function\" !== typeof Ab ? x(\"280\") : void 0;\n    var b = ta(a.stateNode);\n    Ab(a.stateNode, a.type, b);\n  }\n}\n\nfunction Eb(a) {\n  Bb ? Cb ? Cb.push(a) : Cb = [a] : Bb = a;\n}\n\nfunction Fb() {\n  if (Bb) {\n    var a = Bb,\n        b = Cb;\n    Cb = Bb = null;\n    Db(a);\n    if (b) for (a = 0; a < b.length; a++) {\n      Db(b[a]);\n    }\n  }\n}\n\nfunction Gb(a, b) {\n  return a(b);\n}\n\nfunction Hb(a, b, c) {\n  return a(b, c);\n}\n\nfunction Ib() {}\n\nvar Jb = !1;\n\nfunction Kb(a, b) {\n  if (Jb) return a(b);\n  Jb = !0;\n\n  try {\n    return Gb(a, b);\n  } finally {\n    if (Jb = !1, null !== Bb || null !== Cb) Ib(), Fb();\n  }\n}\n\nvar Lb = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  \"datetime-local\": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\n\nfunction Mb(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return \"input\" === b ? !!Lb[a.type] : \"textarea\" === b ? !0 : !1;\n}\n\nfunction Nb(a) {\n  a = a.target || a.srcElement || window;\n  a.correspondingUseElement && (a = a.correspondingUseElement);\n  return 3 === a.nodeType ? a.parentNode : a;\n}\n\nfunction Ob(a) {\n  if (!Ra) return !1;\n  a = \"on\" + a;\n  var b = a in document;\n  b || (b = document.createElement(\"div\"), b.setAttribute(a, \"return;\"), b = \"function\" === typeof b[a]);\n  return b;\n}\n\nfunction Pb(a) {\n  var b = a.type;\n  return (a = a.nodeName) && \"input\" === a.toLowerCase() && (\"checkbox\" === b || \"radio\" === b);\n}\n\nfunction Qb(a) {\n  var b = Pb(a) ? \"checked\" : \"value\",\n      c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),\n      d = \"\" + a[b];\n\n  if (!a.hasOwnProperty(b) && \"undefined\" !== typeof c && \"function\" === typeof c.get && \"function\" === typeof c.set) {\n    var e = c.get,\n        f = c.set;\n    Object.defineProperty(a, b, {\n      configurable: !0,\n      get: function get() {\n        return e.call(this);\n      },\n      set: function set(a) {\n        d = \"\" + a;\n        f.call(this, a);\n      }\n    });\n    Object.defineProperty(a, b, {\n      enumerable: c.enumerable\n    });\n    return {\n      getValue: function getValue() {\n        return d;\n      },\n      setValue: function setValue(a) {\n        d = \"\" + a;\n      },\n      stopTracking: function stopTracking() {\n        a._valueTracker = null;\n        delete a[b];\n      }\n    };\n  }\n}\n\nfunction Rb(a) {\n  a._valueTracker || (a._valueTracker = Qb(a));\n}\n\nfunction Sb(a) {\n  if (!a) return !1;\n  var b = a._valueTracker;\n  if (!b) return !0;\n  var c = b.getValue();\n  var d = \"\";\n  a && (d = Pb(a) ? a.checked ? \"true\" : \"false\" : a.value);\n  a = d;\n  return a !== c ? (b.setValue(a), !0) : !1;\n}\n\nvar Tb = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\nTb.hasOwnProperty(\"ReactCurrentDispatcher\") || (Tb.ReactCurrentDispatcher = {\n  current: null\n});\nvar Ub = /^(.*)[\\\\\\/]/,\n    z = \"function\" === typeof Symbol && Symbol.for,\n    Vb = z ? Symbol.for(\"react.element\") : 60103,\n    Wb = z ? Symbol.for(\"react.portal\") : 60106,\n    Xb = z ? Symbol.for(\"react.fragment\") : 60107,\n    Yb = z ? Symbol.for(\"react.strict_mode\") : 60108,\n    Zb = z ? Symbol.for(\"react.profiler\") : 60114,\n    $b = z ? Symbol.for(\"react.provider\") : 60109,\n    ac = z ? Symbol.for(\"react.context\") : 60110,\n    bc = z ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    cc = z ? Symbol.for(\"react.forward_ref\") : 60112,\n    dc = z ? Symbol.for(\"react.suspense\") : 60113,\n    ec = z ? Symbol.for(\"react.memo\") : 60115,\n    fc = z ? Symbol.for(\"react.lazy\") : 60116,\n    gc = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction hc(a) {\n  if (null === a || \"object\" !== typeof a) return null;\n  a = gc && a[gc] || a[\"@@iterator\"];\n  return \"function\" === typeof a ? a : null;\n}\n\nfunction ic(a) {\n  if (null == a) return null;\n  if (\"function\" === typeof a) return a.displayName || a.name || null;\n  if (\"string\" === typeof a) return a;\n\n  switch (a) {\n    case bc:\n      return \"ConcurrentMode\";\n\n    case Xb:\n      return \"Fragment\";\n\n    case Wb:\n      return \"Portal\";\n\n    case Zb:\n      return \"Profiler\";\n\n    case Yb:\n      return \"StrictMode\";\n\n    case dc:\n      return \"Suspense\";\n  }\n\n  if (\"object\" === typeof a) switch (a.$$typeof) {\n    case ac:\n      return \"Context.Consumer\";\n\n    case $b:\n      return \"Context.Provider\";\n\n    case cc:\n      var b = a.render;\n      b = b.displayName || b.name || \"\";\n      return a.displayName || (\"\" !== b ? \"ForwardRef(\" + b + \")\" : \"ForwardRef\");\n\n    case ec:\n      return ic(a.type);\n\n    case fc:\n      if (a = 1 === a._status ? a._result : null) return ic(a);\n  }\n  return null;\n}\n\nfunction jc(a) {\n  var b = \"\";\n\n  do {\n    a: switch (a.tag) {\n      case 3:\n      case 4:\n      case 6:\n      case 7:\n      case 10:\n      case 9:\n        var c = \"\";\n        break a;\n\n      default:\n        var d = a._debugOwner,\n            e = a._debugSource,\n            f = ic(a.type);\n        c = null;\n        d && (c = ic(d.type));\n        d = f;\n        f = \"\";\n        e ? f = \" (at \" + e.fileName.replace(Ub, \"\") + \":\" + e.lineNumber + \")\" : c && (f = \" (created by \" + c + \")\");\n        c = \"\\n    in \" + (d || \"Unknown\") + f;\n    }\n\n    b += c;\n    a = a.return;\n  } while (a);\n\n  return b;\n}\n\nvar kc = /^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,\n    lc = Object.prototype.hasOwnProperty,\n    mc = {},\n    nc = {};\n\nfunction oc(a) {\n  if (lc.call(nc, a)) return !0;\n  if (lc.call(mc, a)) return !1;\n  if (kc.test(a)) return nc[a] = !0;\n  mc[a] = !0;\n  return !1;\n}\n\nfunction pc(a, b, c, d) {\n  if (null !== c && 0 === c.type) return !1;\n\n  switch (typeof b) {\n    case \"function\":\n    case \"symbol\":\n      return !0;\n\n    case \"boolean\":\n      if (d) return !1;\n      if (null !== c) return !c.acceptsBooleans;\n      a = a.toLowerCase().slice(0, 5);\n      return \"data-\" !== a && \"aria-\" !== a;\n\n    default:\n      return !1;\n  }\n}\n\nfunction qc(a, b, c, d) {\n  if (null === b || \"undefined\" === typeof b || pc(a, b, c, d)) return !0;\n  if (d) return !1;\n  if (null !== c) switch (c.type) {\n    case 3:\n      return !b;\n\n    case 4:\n      return !1 === b;\n\n    case 5:\n      return isNaN(b);\n\n    case 6:\n      return isNaN(b) || 1 > b;\n  }\n  return !1;\n}\n\nfunction C(a, b, c, d, e) {\n  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;\n  this.attributeName = d;\n  this.attributeNamespace = e;\n  this.mustUseProperty = c;\n  this.propertyName = a;\n  this.type = b;\n}\n\nvar D = {};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function (a) {\n  D[a] = new C(a, 0, !1, a, null);\n});\n[[\"acceptCharset\", \"accept-charset\"], [\"className\", \"class\"], [\"htmlFor\", \"for\"], [\"httpEquiv\", \"http-equiv\"]].forEach(function (a) {\n  var b = a[0];\n  D[b] = new C(b, 1, !1, a[1], null);\n});\n[\"contentEditable\", \"draggable\", \"spellCheck\", \"value\"].forEach(function (a) {\n  D[a] = new C(a, 2, !1, a.toLowerCase(), null);\n});\n[\"autoReverse\", \"externalResourcesRequired\", \"focusable\", \"preserveAlpha\"].forEach(function (a) {\n  D[a] = new C(a, 2, !1, a, null);\n});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function (a) {\n  D[a] = new C(a, 3, !1, a.toLowerCase(), null);\n});\n[\"checked\", \"multiple\", \"muted\", \"selected\"].forEach(function (a) {\n  D[a] = new C(a, 3, !0, a, null);\n});\n[\"capture\", \"download\"].forEach(function (a) {\n  D[a] = new C(a, 4, !1, a, null);\n});\n[\"cols\", \"rows\", \"size\", \"span\"].forEach(function (a) {\n  D[a] = new C(a, 6, !1, a, null);\n});\n[\"rowSpan\", \"start\"].forEach(function (a) {\n  D[a] = new C(a, 5, !1, a.toLowerCase(), null);\n});\nvar rc = /[\\-:]([a-z])/g;\n\nfunction sc(a) {\n  return a[1].toUpperCase();\n}\n\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, null);\n});\n\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, \"http://www.w3.org/1999/xlink\");\n});\n[\"xml:base\", \"xml:lang\", \"xml:space\"].forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, \"http://www.w3.org/XML/1998/namespace\");\n});\n[\"tabIndex\", \"crossOrigin\"].forEach(function (a) {\n  D[a] = new C(a, 1, !1, a.toLowerCase(), null);\n});\n\nfunction tc(a, b, c, d) {\n  var e = D.hasOwnProperty(b) ? D[b] : null;\n  var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || \"o\" !== b[0] && \"O\" !== b[0] || \"n\" !== b[1] && \"N\" !== b[1] ? !1 : !0;\n  f || (qc(b, c, e, d) && (c = null), d || null === e ? oc(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, \"\" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : \"\" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? \"\" : \"\" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));\n}\n\nfunction uc(a) {\n  switch (typeof a) {\n    case \"boolean\":\n    case \"number\":\n    case \"object\":\n    case \"string\":\n    case \"undefined\":\n      return a;\n\n    default:\n      return \"\";\n  }\n}\n\nfunction vc(a, b) {\n  var c = b.checked;\n  return n({}, b, {\n    defaultChecked: void 0,\n    defaultValue: void 0,\n    value: void 0,\n    checked: null != c ? c : a._wrapperState.initialChecked\n  });\n}\n\nfunction wc(a, b) {\n  var c = null == b.defaultValue ? \"\" : b.defaultValue,\n      d = null != b.checked ? b.checked : b.defaultChecked;\n  c = uc(null != b.value ? b.value : c);\n  a._wrapperState = {\n    initialChecked: d,\n    initialValue: c,\n    controlled: \"checkbox\" === b.type || \"radio\" === b.type ? null != b.checked : null != b.value\n  };\n}\n\nfunction xc(a, b) {\n  b = b.checked;\n  null != b && tc(a, \"checked\", b, !1);\n}\n\nfunction yc(a, b) {\n  xc(a, b);\n  var c = uc(b.value),\n      d = b.type;\n  if (null != c) {\n    if (\"number\" === d) {\n      if (0 === c && \"\" === a.value || a.value != c) a.value = \"\" + c;\n    } else a.value !== \"\" + c && (a.value = \"\" + c);\n  } else if (\"submit\" === d || \"reset\" === d) {\n    a.removeAttribute(\"value\");\n    return;\n  }\n  b.hasOwnProperty(\"value\") ? zc(a, b.type, c) : b.hasOwnProperty(\"defaultValue\") && zc(a, b.type, uc(b.defaultValue));\n  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);\n}\n\nfunction Ac(a, b, c) {\n  if (b.hasOwnProperty(\"value\") || b.hasOwnProperty(\"defaultValue\")) {\n    var d = b.type;\n    if (!(\"submit\" !== d && \"reset\" !== d || void 0 !== b.value && null !== b.value)) return;\n    b = \"\" + a._wrapperState.initialValue;\n    c || b === a.value || (a.value = b);\n    a.defaultValue = b;\n  }\n\n  c = a.name;\n  \"\" !== c && (a.name = \"\");\n  a.defaultChecked = !a.defaultChecked;\n  a.defaultChecked = !!a._wrapperState.initialChecked;\n  \"\" !== c && (a.name = c);\n}\n\nfunction zc(a, b, c) {\n  if (\"number\" !== b || a.ownerDocument.activeElement !== a) null == c ? a.defaultValue = \"\" + a._wrapperState.initialValue : a.defaultValue !== \"\" + c && (a.defaultValue = \"\" + c);\n}\n\nvar Bc = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: \"onChange\",\n      captured: \"onChangeCapture\"\n    },\n    dependencies: \"blur change click focus input keydown keyup selectionchange\".split(\" \")\n  }\n};\n\nfunction Cc(a, b, c) {\n  a = y.getPooled(Bc.change, a, b, c);\n  a.type = \"change\";\n  Eb(c);\n  Qa(a);\n  return a;\n}\n\nvar Dc = null,\n    Ec = null;\n\nfunction Fc(a) {\n  Da(a);\n}\n\nfunction Gc(a) {\n  var b = Ja(a);\n  if (Sb(b)) return a;\n}\n\nfunction Hc(a, b) {\n  if (\"change\" === a) return b;\n}\n\nvar Ic = !1;\nRa && (Ic = Ob(\"input\") && (!document.documentMode || 9 < document.documentMode));\n\nfunction Jc() {\n  Dc && (Dc.detachEvent(\"onpropertychange\", Kc), Ec = Dc = null);\n}\n\nfunction Kc(a) {\n  \"value\" === a.propertyName && Gc(Ec) && (a = Cc(Ec, a, Nb(a)), Kb(Fc, a));\n}\n\nfunction Lc(a, b, c) {\n  \"focus\" === a ? (Jc(), Dc = b, Ec = c, Dc.attachEvent(\"onpropertychange\", Kc)) : \"blur\" === a && Jc();\n}\n\nfunction Mc(a) {\n  if (\"selectionchange\" === a || \"keyup\" === a || \"keydown\" === a) return Gc(Ec);\n}\n\nfunction Nc(a, b) {\n  if (\"click\" === a) return Gc(b);\n}\n\nfunction Oc(a, b) {\n  if (\"input\" === a || \"change\" === a) return Gc(b);\n}\n\nvar Pc = {\n  eventTypes: Bc,\n  _isInputEventSupported: Ic,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = b ? Ja(b) : window,\n        f = void 0,\n        g = void 0,\n        h = e.nodeName && e.nodeName.toLowerCase();\n    \"select\" === h || \"input\" === h && \"file\" === e.type ? f = Hc : Mb(e) ? Ic ? f = Oc : (f = Mc, g = Lc) : (h = e.nodeName) && \"input\" === h.toLowerCase() && (\"checkbox\" === e.type || \"radio\" === e.type) && (f = Nc);\n    if (f && (f = f(a, b))) return Cc(f, c, d);\n    g && g(a, e, b);\n    \"blur\" === a && (a = e._wrapperState) && a.controlled && \"number\" === e.type && zc(e, \"number\", e.value);\n  }\n},\n    Qc = y.extend({\n  view: null,\n  detail: null\n}),\n    Rc = {\n  Alt: \"altKey\",\n  Control: \"ctrlKey\",\n  Meta: \"metaKey\",\n  Shift: \"shiftKey\"\n};\n\nfunction Sc(a) {\n  var b = this.nativeEvent;\n  return b.getModifierState ? b.getModifierState(a) : (a = Rc[a]) ? !!b[a] : !1;\n}\n\nfunction Tc() {\n  return Sc;\n}\n\nvar Uc = 0,\n    Vc = 0,\n    Wc = !1,\n    Xc = !1,\n    Yc = Qc.extend({\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  pageX: null,\n  pageY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: Tc,\n  button: null,\n  buttons: null,\n  relatedTarget: function relatedTarget(a) {\n    return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);\n  },\n  movementX: function movementX(a) {\n    if (\"movementX\" in a) return a.movementX;\n    var b = Uc;\n    Uc = a.screenX;\n    return Wc ? \"mousemove\" === a.type ? a.screenX - b : 0 : (Wc = !0, 0);\n  },\n  movementY: function movementY(a) {\n    if (\"movementY\" in a) return a.movementY;\n    var b = Vc;\n    Vc = a.screenY;\n    return Xc ? \"mousemove\" === a.type ? a.screenY - b : 0 : (Xc = !0, 0);\n  }\n}),\n    Zc = Yc.extend({\n  pointerId: null,\n  width: null,\n  height: null,\n  pressure: null,\n  tangentialPressure: null,\n  tiltX: null,\n  tiltY: null,\n  twist: null,\n  pointerType: null,\n  isPrimary: null\n}),\n    $c = {\n  mouseEnter: {\n    registrationName: \"onMouseEnter\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  mouseLeave: {\n    registrationName: \"onMouseLeave\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  pointerEnter: {\n    registrationName: \"onPointerEnter\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  },\n  pointerLeave: {\n    registrationName: \"onPointerLeave\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  }\n},\n    ad = {\n  eventTypes: $c,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = \"mouseover\" === a || \"pointerover\" === a,\n        f = \"mouseout\" === a || \"pointerout\" === a;\n    if (e && (c.relatedTarget || c.fromElement) || !f && !e) return null;\n    e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView || e.parentWindow : window;\n    f ? (f = b, b = (b = c.relatedTarget || c.toElement) ? Ha(b) : null) : f = null;\n    if (f === b) return null;\n    var g = void 0,\n        h = void 0,\n        l = void 0,\n        k = void 0;\n    if (\"mouseout\" === a || \"mouseover\" === a) g = Yc, h = $c.mouseLeave, l = $c.mouseEnter, k = \"mouse\";else if (\"pointerout\" === a || \"pointerover\" === a) g = Zc, h = $c.pointerLeave, l = $c.pointerEnter, k = \"pointer\";\n    var m = null == f ? e : Ja(f);\n    e = null == b ? e : Ja(b);\n    a = g.getPooled(h, f, c, d);\n    a.type = k + \"leave\";\n    a.target = m;\n    a.relatedTarget = e;\n    c = g.getPooled(l, b, c, d);\n    c.type = k + \"enter\";\n    c.target = e;\n    c.relatedTarget = m;\n    d = b;\n    if (f && d) a: {\n      b = f;\n      e = d;\n      k = 0;\n\n      for (g = b; g; g = La(g)) {\n        k++;\n      }\n\n      g = 0;\n\n      for (l = e; l; l = La(l)) {\n        g++;\n      }\n\n      for (; 0 < k - g;) {\n        b = La(b), k--;\n      }\n\n      for (; 0 < g - k;) {\n        e = La(e), g--;\n      }\n\n      for (; k--;) {\n        if (b === e || b === e.alternate) break a;\n        b = La(b);\n        e = La(e);\n      }\n\n      b = null;\n    } else b = null;\n    e = b;\n\n    for (b = []; f && f !== e;) {\n      k = f.alternate;\n      if (null !== k && k === e) break;\n      b.push(f);\n      f = La(f);\n    }\n\n    for (f = []; d && d !== e;) {\n      k = d.alternate;\n      if (null !== k && k === e) break;\n      f.push(d);\n      d = La(d);\n    }\n\n    for (d = 0; d < b.length; d++) {\n      Oa(b[d], \"bubbled\", a);\n    }\n\n    for (d = f.length; 0 < d--;) {\n      Oa(f[d], \"captured\", c);\n    }\n\n    return [a, c];\n  }\n};\n\nfunction bd(a, b) {\n  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;\n}\n\nvar cd = Object.prototype.hasOwnProperty;\n\nfunction dd(a, b) {\n  if (bd(a, b)) return !0;\n  if (\"object\" !== typeof a || null === a || \"object\" !== typeof b || null === b) return !1;\n  var c = Object.keys(a),\n      d = Object.keys(b);\n  if (c.length !== d.length) return !1;\n\n  for (d = 0; d < c.length; d++) {\n    if (!cd.call(b, c[d]) || !bd(a[c[d]], b[c[d]])) return !1;\n  }\n\n  return !0;\n}\n\nfunction ed(a) {\n  var b = a;\n  if (a.alternate) for (; b.return;) {\n    b = b.return;\n  } else {\n    if (0 !== (b.effectTag & 2)) return 1;\n\n    for (; b.return;) {\n      if (b = b.return, 0 !== (b.effectTag & 2)) return 1;\n    }\n  }\n  return 3 === b.tag ? 2 : 3;\n}\n\nfunction fd(a) {\n  2 !== ed(a) ? x(\"188\") : void 0;\n}\n\nfunction gd(a) {\n  var b = a.alternate;\n  if (!b) return b = ed(a), 3 === b ? x(\"188\") : void 0, 1 === b ? null : a;\n\n  for (var c = a, d = b;;) {\n    var e = c.return,\n        f = e ? e.alternate : null;\n    if (!e || !f) break;\n\n    if (e.child === f.child) {\n      for (var g = e.child; g;) {\n        if (g === c) return fd(e), a;\n        if (g === d) return fd(e), b;\n        g = g.sibling;\n      }\n\n      x(\"188\");\n    }\n\n    if (c.return !== d.return) c = e, d = f;else {\n      g = !1;\n\n      for (var h = e.child; h;) {\n        if (h === c) {\n          g = !0;\n          c = e;\n          d = f;\n          break;\n        }\n\n        if (h === d) {\n          g = !0;\n          d = e;\n          c = f;\n          break;\n        }\n\n        h = h.sibling;\n      }\n\n      if (!g) {\n        for (h = f.child; h;) {\n          if (h === c) {\n            g = !0;\n            c = f;\n            d = e;\n            break;\n          }\n\n          if (h === d) {\n            g = !0;\n            d = f;\n            c = e;\n            break;\n          }\n\n          h = h.sibling;\n        }\n\n        g ? void 0 : x(\"189\");\n      }\n    }\n    c.alternate !== d ? x(\"190\") : void 0;\n  }\n\n  3 !== c.tag ? x(\"188\") : void 0;\n  return c.stateNode.current === c ? a : b;\n}\n\nfunction hd(a) {\n  a = gd(a);\n  if (!a) return null;\n\n  for (var b = a;;) {\n    if (5 === b.tag || 6 === b.tag) return b;\n    if (b.child) b.child.return = b, b = b.child;else {\n      if (b === a) break;\n\n      for (; !b.sibling;) {\n        if (!b.return || b.return === a) return null;\n        b = b.return;\n      }\n\n      b.sibling.return = b.return;\n      b = b.sibling;\n    }\n  }\n\n  return null;\n}\n\nvar id = y.extend({\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    jd = y.extend({\n  clipboardData: function clipboardData(a) {\n    return \"clipboardData\" in a ? a.clipboardData : window.clipboardData;\n  }\n}),\n    kd = Qc.extend({\n  relatedTarget: null\n});\n\nfunction ld(a) {\n  var b = a.keyCode;\n  \"charCode\" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;\n  10 === a && (a = 13);\n  return 32 <= a || 13 === a ? a : 0;\n}\n\nvar md = {\n  Esc: \"Escape\",\n  Spacebar: \" \",\n  Left: \"ArrowLeft\",\n  Up: \"ArrowUp\",\n  Right: \"ArrowRight\",\n  Down: \"ArrowDown\",\n  Del: \"Delete\",\n  Win: \"OS\",\n  Menu: \"ContextMenu\",\n  Apps: \"ContextMenu\",\n  Scroll: \"ScrollLock\",\n  MozPrintableKey: \"Unidentified\"\n},\n    nd = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  12: \"Clear\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  19: \"Pause\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  45: \"Insert\",\n  46: \"Delete\",\n  112: \"F1\",\n  113: \"F2\",\n  114: \"F3\",\n  115: \"F4\",\n  116: \"F5\",\n  117: \"F6\",\n  118: \"F7\",\n  119: \"F8\",\n  120: \"F9\",\n  121: \"F10\",\n  122: \"F11\",\n  123: \"F12\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  224: \"Meta\"\n},\n    od = Qc.extend({\n  key: function key(a) {\n    if (a.key) {\n      var b = md[a.key] || a.key;\n      if (\"Unidentified\" !== b) return b;\n    }\n\n    return \"keypress\" === a.type ? (a = ld(a), 13 === a ? \"Enter\" : String.fromCharCode(a)) : \"keydown\" === a.type || \"keyup\" === a.type ? nd[a.keyCode] || \"Unidentified\" : \"\";\n  },\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: Tc,\n  charCode: function charCode(a) {\n    return \"keypress\" === a.type ? ld(a) : 0;\n  },\n  keyCode: function keyCode(a) {\n    return \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  },\n  which: function which(a) {\n    return \"keypress\" === a.type ? ld(a) : \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  }\n}),\n    pd = Yc.extend({\n  dataTransfer: null\n}),\n    qd = Qc.extend({\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: Tc\n}),\n    rd = y.extend({\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    sd = Yc.extend({\n  deltaX: function deltaX(a) {\n    return \"deltaX\" in a ? a.deltaX : \"wheelDeltaX\" in a ? -a.wheelDeltaX : 0;\n  },\n  deltaY: function deltaY(a) {\n    return \"deltaY\" in a ? a.deltaY : \"wheelDeltaY\" in a ? -a.wheelDeltaY : \"wheelDelta\" in a ? -a.wheelDelta : 0;\n  },\n  deltaZ: null,\n  deltaMode: null\n}),\n    td = [[\"abort\", \"abort\"], [Xa, \"animationEnd\"], [Ya, \"animationIteration\"], [Za, \"animationStart\"], [\"canplay\", \"canPlay\"], [\"canplaythrough\", \"canPlayThrough\"], [\"drag\", \"drag\"], [\"dragenter\", \"dragEnter\"], [\"dragexit\", \"dragExit\"], [\"dragleave\", \"dragLeave\"], [\"dragover\", \"dragOver\"], [\"durationchange\", \"durationChange\"], [\"emptied\", \"emptied\"], [\"encrypted\", \"encrypted\"], [\"ended\", \"ended\"], [\"error\", \"error\"], [\"gotpointercapture\", \"gotPointerCapture\"], [\"load\", \"load\"], [\"loadeddata\", \"loadedData\"], [\"loadedmetadata\", \"loadedMetadata\"], [\"loadstart\", \"loadStart\"], [\"lostpointercapture\", \"lostPointerCapture\"], [\"mousemove\", \"mouseMove\"], [\"mouseout\", \"mouseOut\"], [\"mouseover\", \"mouseOver\"], [\"playing\", \"playing\"], [\"pointermove\", \"pointerMove\"], [\"pointerout\", \"pointerOut\"], [\"pointerover\", \"pointerOver\"], [\"progress\", \"progress\"], [\"scroll\", \"scroll\"], [\"seeking\", \"seeking\"], [\"stalled\", \"stalled\"], [\"suspend\", \"suspend\"], [\"timeupdate\", \"timeUpdate\"], [\"toggle\", \"toggle\"], [\"touchmove\", \"touchMove\"], [$a, \"transitionEnd\"], [\"waiting\", \"waiting\"], [\"wheel\", \"wheel\"]],\n    ud = {},\n    vd = {};\n\nfunction wd(a, b) {\n  var c = a[0];\n  a = a[1];\n  var d = \"on\" + (a[0].toUpperCase() + a.slice(1));\n  b = {\n    phasedRegistrationNames: {\n      bubbled: d,\n      captured: d + \"Capture\"\n    },\n    dependencies: [c],\n    isInteractive: b\n  };\n  ud[a] = b;\n  vd[c] = b;\n}\n\n[[\"blur\", \"blur\"], [\"cancel\", \"cancel\"], [\"click\", \"click\"], [\"close\", \"close\"], [\"contextmenu\", \"contextMenu\"], [\"copy\", \"copy\"], [\"cut\", \"cut\"], [\"auxclick\", \"auxClick\"], [\"dblclick\", \"doubleClick\"], [\"dragend\", \"dragEnd\"], [\"dragstart\", \"dragStart\"], [\"drop\", \"drop\"], [\"focus\", \"focus\"], [\"input\", \"input\"], [\"invalid\", \"invalid\"], [\"keydown\", \"keyDown\"], [\"keypress\", \"keyPress\"], [\"keyup\", \"keyUp\"], [\"mousedown\", \"mouseDown\"], [\"mouseup\", \"mouseUp\"], [\"paste\", \"paste\"], [\"pause\", \"pause\"], [\"play\", \"play\"], [\"pointercancel\", \"pointerCancel\"], [\"pointerdown\", \"pointerDown\"], [\"pointerup\", \"pointerUp\"], [\"ratechange\", \"rateChange\"], [\"reset\", \"reset\"], [\"seeked\", \"seeked\"], [\"submit\", \"submit\"], [\"touchcancel\", \"touchCancel\"], [\"touchend\", \"touchEnd\"], [\"touchstart\", \"touchStart\"], [\"volumechange\", \"volumeChange\"]].forEach(function (a) {\n  wd(a, !0);\n});\ntd.forEach(function (a) {\n  wd(a, !1);\n});\nvar xd = {\n  eventTypes: ud,\n  isInteractiveTopLevelEventType: function isInteractiveTopLevelEventType(a) {\n    a = vd[a];\n    return void 0 !== a && !0 === a.isInteractive;\n  },\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = vd[a];\n    if (!e) return null;\n\n    switch (a) {\n      case \"keypress\":\n        if (0 === ld(c)) return null;\n\n      case \"keydown\":\n      case \"keyup\":\n        a = od;\n        break;\n\n      case \"blur\":\n      case \"focus\":\n        a = kd;\n        break;\n\n      case \"click\":\n        if (2 === c.button) return null;\n\n      case \"auxclick\":\n      case \"dblclick\":\n      case \"mousedown\":\n      case \"mousemove\":\n      case \"mouseup\":\n      case \"mouseout\":\n      case \"mouseover\":\n      case \"contextmenu\":\n        a = Yc;\n        break;\n\n      case \"drag\":\n      case \"dragend\":\n      case \"dragenter\":\n      case \"dragexit\":\n      case \"dragleave\":\n      case \"dragover\":\n      case \"dragstart\":\n      case \"drop\":\n        a = pd;\n        break;\n\n      case \"touchcancel\":\n      case \"touchend\":\n      case \"touchmove\":\n      case \"touchstart\":\n        a = qd;\n        break;\n\n      case Xa:\n      case Ya:\n      case Za:\n        a = id;\n        break;\n\n      case $a:\n        a = rd;\n        break;\n\n      case \"scroll\":\n        a = Qc;\n        break;\n\n      case \"wheel\":\n        a = sd;\n        break;\n\n      case \"copy\":\n      case \"cut\":\n      case \"paste\":\n        a = jd;\n        break;\n\n      case \"gotpointercapture\":\n      case \"lostpointercapture\":\n      case \"pointercancel\":\n      case \"pointerdown\":\n      case \"pointermove\":\n      case \"pointerout\":\n      case \"pointerover\":\n      case \"pointerup\":\n        a = Zc;\n        break;\n\n      default:\n        a = y;\n    }\n\n    b = a.getPooled(e, b, c, d);\n    Qa(b);\n    return b;\n  }\n},\n    yd = xd.isInteractiveTopLevelEventType,\n    zd = [];\n\nfunction Ad(a) {\n  var b = a.targetInst,\n      c = b;\n\n  do {\n    if (!c) {\n      a.ancestors.push(c);\n      break;\n    }\n\n    var d;\n\n    for (d = c; d.return;) {\n      d = d.return;\n    }\n\n    d = 3 !== d.tag ? null : d.stateNode.containerInfo;\n    if (!d) break;\n    a.ancestors.push(c);\n    c = Ha(d);\n  } while (c);\n\n  for (c = 0; c < a.ancestors.length; c++) {\n    b = a.ancestors[c];\n    var e = Nb(a.nativeEvent);\n    d = a.topLevelType;\n\n    for (var f = a.nativeEvent, g = null, h = 0; h < oa.length; h++) {\n      var l = oa[h];\n      l && (l = l.extractEvents(d, b, f, e)) && (g = xa(g, l));\n    }\n\n    Da(g);\n  }\n}\n\nvar Bd = !0;\n\nfunction E(a, b) {\n  if (!b) return null;\n  var c = (yd(a) ? Cd : Dd).bind(null, a);\n  b.addEventListener(a, c, !1);\n}\n\nfunction Ed(a, b) {\n  if (!b) return null;\n  var c = (yd(a) ? Cd : Dd).bind(null, a);\n  b.addEventListener(a, c, !0);\n}\n\nfunction Cd(a, b) {\n  Hb(Dd, a, b);\n}\n\nfunction Dd(a, b) {\n  if (Bd) {\n    var c = Nb(b);\n    c = Ha(c);\n    null === c || \"number\" !== typeof c.tag || 2 === ed(c) || (c = null);\n\n    if (zd.length) {\n      var d = zd.pop();\n      d.topLevelType = a;\n      d.nativeEvent = b;\n      d.targetInst = c;\n      a = d;\n    } else a = {\n      topLevelType: a,\n      nativeEvent: b,\n      targetInst: c,\n      ancestors: []\n    };\n\n    try {\n      Kb(Ad, a);\n    } finally {\n      a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, 10 > zd.length && zd.push(a);\n    }\n  }\n}\n\nvar Fd = {},\n    Gd = 0,\n    Hd = \"_reactListenersID\" + (\"\" + Math.random()).slice(2);\n\nfunction Id(a) {\n  Object.prototype.hasOwnProperty.call(a, Hd) || (a[Hd] = Gd++, Fd[a[Hd]] = {});\n  return Fd[a[Hd]];\n}\n\nfunction Jd(a) {\n  a = a || (\"undefined\" !== typeof document ? document : void 0);\n  if (\"undefined\" === typeof a) return null;\n\n  try {\n    return a.activeElement || a.body;\n  } catch (b) {\n    return a.body;\n  }\n}\n\nfunction Kd(a) {\n  for (; a && a.firstChild;) {\n    a = a.firstChild;\n  }\n\n  return a;\n}\n\nfunction Ld(a, b) {\n  var c = Kd(a);\n  a = 0;\n\n  for (var d; c;) {\n    if (3 === c.nodeType) {\n      d = a + c.textContent.length;\n      if (a <= b && d >= b) return {\n        node: c,\n        offset: b - a\n      };\n      a = d;\n    }\n\n    a: {\n      for (; c;) {\n        if (c.nextSibling) {\n          c = c.nextSibling;\n          break a;\n        }\n\n        c = c.parentNode;\n      }\n\n      c = void 0;\n    }\n\n    c = Kd(c);\n  }\n}\n\nfunction Md(a, b) {\n  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Md(a, b.parentNode) : \"contains\" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;\n}\n\nfunction Nd() {\n  for (var a = window, b = Jd(); b instanceof a.HTMLIFrameElement;) {\n    try {\n      var c = \"string\" === typeof b.contentWindow.location.href;\n    } catch (d) {\n      c = !1;\n    }\n\n    if (c) a = b.contentWindow;else break;\n    b = Jd(a.document);\n  }\n\n  return b;\n}\n\nfunction Od(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return b && (\"input\" === b && (\"text\" === a.type || \"search\" === a.type || \"tel\" === a.type || \"url\" === a.type || \"password\" === a.type) || \"textarea\" === b || \"true\" === a.contentEditable);\n}\n\nfunction Pd() {\n  var a = Nd();\n\n  if (Od(a)) {\n    if (\"selectionStart\" in a) var b = {\n      start: a.selectionStart,\n      end: a.selectionEnd\n    };else a: {\n      b = (b = a.ownerDocument) && b.defaultView || window;\n      var c = b.getSelection && b.getSelection();\n\n      if (c && 0 !== c.rangeCount) {\n        b = c.anchorNode;\n        var d = c.anchorOffset,\n            e = c.focusNode;\n        c = c.focusOffset;\n\n        try {\n          b.nodeType, e.nodeType;\n        } catch (A) {\n          b = null;\n          break a;\n        }\n\n        var f = 0,\n            g = -1,\n            h = -1,\n            l = 0,\n            k = 0,\n            m = a,\n            p = null;\n\n        b: for (;;) {\n          for (var t;;) {\n            m !== b || 0 !== d && 3 !== m.nodeType || (g = f + d);\n            m !== e || 0 !== c && 3 !== m.nodeType || (h = f + c);\n            3 === m.nodeType && (f += m.nodeValue.length);\n            if (null === (t = m.firstChild)) break;\n            p = m;\n            m = t;\n          }\n\n          for (;;) {\n            if (m === a) break b;\n            p === b && ++l === d && (g = f);\n            p === e && ++k === c && (h = f);\n            if (null !== (t = m.nextSibling)) break;\n            m = p;\n            p = m.parentNode;\n          }\n\n          m = t;\n        }\n\n        b = -1 === g || -1 === h ? null : {\n          start: g,\n          end: h\n        };\n      } else b = null;\n    }\n    b = b || {\n      start: 0,\n      end: 0\n    };\n  } else b = null;\n\n  return {\n    focusedElem: a,\n    selectionRange: b\n  };\n}\n\nfunction Qd(a) {\n  var b = Nd(),\n      c = a.focusedElem,\n      d = a.selectionRange;\n\n  if (b !== c && c && c.ownerDocument && Md(c.ownerDocument.documentElement, c)) {\n    if (null !== d && Od(c)) if (b = d.start, a = d.end, void 0 === a && (a = b), \"selectionStart\" in c) c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);else if (a = (b = c.ownerDocument || document) && b.defaultView || window, a.getSelection) {\n      a = a.getSelection();\n      var e = c.textContent.length,\n          f = Math.min(d.start, e);\n      d = void 0 === d.end ? f : Math.min(d.end, e);\n      !a.extend && f > d && (e = d, d = f, f = e);\n      e = Ld(c, f);\n      var g = Ld(c, d);\n      e && g && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && (b = b.createRange(), b.setStart(e.node, e.offset), a.removeAllRanges(), f > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a.addRange(b)));\n    }\n    b = [];\n\n    for (a = c; a = a.parentNode;) {\n      1 === a.nodeType && b.push({\n        element: a,\n        left: a.scrollLeft,\n        top: a.scrollTop\n      });\n    }\n\n    \"function\" === typeof c.focus && c.focus();\n\n    for (c = 0; c < b.length; c++) {\n      a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;\n    }\n  }\n}\n\nvar Rd = Ra && \"documentMode\" in document && 11 >= document.documentMode,\n    Sd = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: \"onSelect\",\n      captured: \"onSelectCapture\"\n    },\n    dependencies: \"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")\n  }\n},\n    Td = null,\n    Ud = null,\n    Vd = null,\n    Wd = !1;\n\nfunction Xd(a, b) {\n  var c = b.window === b ? b.document : 9 === b.nodeType ? b : b.ownerDocument;\n  if (Wd || null == Td || Td !== Jd(c)) return null;\n  c = Td;\n  \"selectionStart\" in c && Od(c) ? c = {\n    start: c.selectionStart,\n    end: c.selectionEnd\n  } : (c = (c.ownerDocument && c.ownerDocument.defaultView || window).getSelection(), c = {\n    anchorNode: c.anchorNode,\n    anchorOffset: c.anchorOffset,\n    focusNode: c.focusNode,\n    focusOffset: c.focusOffset\n  });\n  return Vd && dd(Vd, c) ? null : (Vd = c, a = y.getPooled(Sd.select, Ud, a, b), a.type = \"select\", a.target = Td, Qa(a), a);\n}\n\nvar Yd = {\n  eventTypes: Sd,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument,\n        f;\n\n    if (!(f = !e)) {\n      a: {\n        e = Id(e);\n        f = sa.onSelect;\n\n        for (var g = 0; g < f.length; g++) {\n          var h = f[g];\n\n          if (!e.hasOwnProperty(h) || !e[h]) {\n            e = !1;\n            break a;\n          }\n        }\n\n        e = !0;\n      }\n\n      f = !e;\n    }\n\n    if (f) return null;\n    e = b ? Ja(b) : window;\n\n    switch (a) {\n      case \"focus\":\n        if (Mb(e) || \"true\" === e.contentEditable) Td = e, Ud = b, Vd = null;\n        break;\n\n      case \"blur\":\n        Vd = Ud = Td = null;\n        break;\n\n      case \"mousedown\":\n        Wd = !0;\n        break;\n\n      case \"contextmenu\":\n      case \"mouseup\":\n      case \"dragend\":\n        return Wd = !1, Xd(c, d);\n\n      case \"selectionchange\":\n        if (Rd) break;\n\n      case \"keydown\":\n      case \"keyup\":\n        return Xd(c, d);\n    }\n\n    return null;\n  }\n};\nBa.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\nta = Ka;\nua = Ia;\nva = Ja;\nBa.injectEventPluginsByName({\n  SimpleEventPlugin: xd,\n  EnterLeaveEventPlugin: ad,\n  ChangeEventPlugin: Pc,\n  SelectEventPlugin: Yd,\n  BeforeInputEventPlugin: zb\n});\n\nfunction Zd(a) {\n  var b = \"\";\n  aa.Children.forEach(a, function (a) {\n    null != a && (b += a);\n  });\n  return b;\n}\n\nfunction $d(a, b) {\n  a = n({\n    children: void 0\n  }, b);\n  if (b = Zd(b.children)) a.children = b;\n  return a;\n}\n\nfunction ae(a, b, c, d) {\n  a = a.options;\n\n  if (b) {\n    b = {};\n\n    for (var e = 0; e < c.length; e++) {\n      b[\"$\" + c[e]] = !0;\n    }\n\n    for (c = 0; c < a.length; c++) {\n      e = b.hasOwnProperty(\"$\" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);\n    }\n  } else {\n    c = \"\" + uc(c);\n    b = null;\n\n    for (e = 0; e < a.length; e++) {\n      if (a[e].value === c) {\n        a[e].selected = !0;\n        d && (a[e].defaultSelected = !0);\n        return;\n      }\n\n      null !== b || a[e].disabled || (b = a[e]);\n    }\n\n    null !== b && (b.selected = !0);\n  }\n}\n\nfunction be(a, b) {\n  null != b.dangerouslySetInnerHTML ? x(\"91\") : void 0;\n  return n({}, b, {\n    value: void 0,\n    defaultValue: void 0,\n    children: \"\" + a._wrapperState.initialValue\n  });\n}\n\nfunction ce(a, b) {\n  var c = b.value;\n  null == c && (c = b.defaultValue, b = b.children, null != b && (null != c ? x(\"92\") : void 0, Array.isArray(b) && (1 >= b.length ? void 0 : x(\"93\"), b = b[0]), c = b), null == c && (c = \"\"));\n  a._wrapperState = {\n    initialValue: uc(c)\n  };\n}\n\nfunction de(a, b) {\n  var c = uc(b.value),\n      d = uc(b.defaultValue);\n  null != c && (c = \"\" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));\n  null != d && (a.defaultValue = \"\" + d);\n}\n\nfunction ee(a) {\n  var b = a.textContent;\n  b === a._wrapperState.initialValue && (a.value = b);\n}\n\nvar fe = {\n  html: \"http://www.w3.org/1999/xhtml\",\n  mathml: \"http://www.w3.org/1998/Math/MathML\",\n  svg: \"http://www.w3.org/2000/svg\"\n};\n\nfunction ge(a) {\n  switch (a) {\n    case \"svg\":\n      return \"http://www.w3.org/2000/svg\";\n\n    case \"math\":\n      return \"http://www.w3.org/1998/Math/MathML\";\n\n    default:\n      return \"http://www.w3.org/1999/xhtml\";\n  }\n}\n\nfunction he(a, b) {\n  return null == a || \"http://www.w3.org/1999/xhtml\" === a ? ge(b) : \"http://www.w3.org/2000/svg\" === a && \"foreignObject\" === b ? \"http://www.w3.org/1999/xhtml\" : a;\n}\n\nvar ie = void 0,\n    je = function (a) {\n  return \"undefined\" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {\n    MSApp.execUnsafeLocalFunction(function () {\n      return a(b, c, d, e);\n    });\n  } : a;\n}(function (a, b) {\n  if (a.namespaceURI !== fe.svg || \"innerHTML\" in a) a.innerHTML = b;else {\n    ie = ie || document.createElement(\"div\");\n    ie.innerHTML = \"<svg>\" + b + \"</svg>\";\n\n    for (b = ie.firstChild; a.firstChild;) {\n      a.removeChild(a.firstChild);\n    }\n\n    for (; b.firstChild;) {\n      a.appendChild(b.firstChild);\n    }\n  }\n});\n\nfunction ke(a, b) {\n  if (b) {\n    var c = a.firstChild;\n\n    if (c && c === a.lastChild && 3 === c.nodeType) {\n      c.nodeValue = b;\n      return;\n    }\n  }\n\n  a.textContent = b;\n}\n\nvar le = {\n  animationIterationCount: !0,\n  borderImageOutset: !0,\n  borderImageSlice: !0,\n  borderImageWidth: !0,\n  boxFlex: !0,\n  boxFlexGroup: !0,\n  boxOrdinalGroup: !0,\n  columnCount: !0,\n  columns: !0,\n  flex: !0,\n  flexGrow: !0,\n  flexPositive: !0,\n  flexShrink: !0,\n  flexNegative: !0,\n  flexOrder: !0,\n  gridArea: !0,\n  gridRow: !0,\n  gridRowEnd: !0,\n  gridRowSpan: !0,\n  gridRowStart: !0,\n  gridColumn: !0,\n  gridColumnEnd: !0,\n  gridColumnSpan: !0,\n  gridColumnStart: !0,\n  fontWeight: !0,\n  lineClamp: !0,\n  lineHeight: !0,\n  opacity: !0,\n  order: !0,\n  orphans: !0,\n  tabSize: !0,\n  widows: !0,\n  zIndex: !0,\n  zoom: !0,\n  fillOpacity: !0,\n  floodOpacity: !0,\n  stopOpacity: !0,\n  strokeDasharray: !0,\n  strokeDashoffset: !0,\n  strokeMiterlimit: !0,\n  strokeOpacity: !0,\n  strokeWidth: !0\n},\n    me = [\"Webkit\", \"ms\", \"Moz\", \"O\"];\nObject.keys(le).forEach(function (a) {\n  me.forEach(function (b) {\n    b = b + a.charAt(0).toUpperCase() + a.substring(1);\n    le[b] = le[a];\n  });\n});\n\nfunction ne(a, b, c) {\n  return null == b || \"boolean\" === typeof b || \"\" === b ? \"\" : c || \"number\" !== typeof b || 0 === b || le.hasOwnProperty(a) && le[a] ? (\"\" + b).trim() : b + \"px\";\n}\n\nfunction oe(a, b) {\n  a = a.style;\n\n  for (var c in b) {\n    if (b.hasOwnProperty(c)) {\n      var d = 0 === c.indexOf(\"--\"),\n          e = ne(c, b[c], d);\n      \"float\" === c && (c = \"cssFloat\");\n      d ? a.setProperty(c, e) : a[c] = e;\n    }\n  }\n}\n\nvar pe = n({\n  menuitem: !0\n}, {\n  area: !0,\n  base: !0,\n  br: !0,\n  col: !0,\n  embed: !0,\n  hr: !0,\n  img: !0,\n  input: !0,\n  keygen: !0,\n  link: !0,\n  meta: !0,\n  param: !0,\n  source: !0,\n  track: !0,\n  wbr: !0\n});\n\nfunction qe(a, b) {\n  b && (pe[a] && (null != b.children || null != b.dangerouslySetInnerHTML ? x(\"137\", a, \"\") : void 0), null != b.dangerouslySetInnerHTML && (null != b.children ? x(\"60\") : void 0, \"object\" === typeof b.dangerouslySetInnerHTML && \"__html\" in b.dangerouslySetInnerHTML ? void 0 : x(\"61\")), null != b.style && \"object\" !== typeof b.style ? x(\"62\", \"\") : void 0);\n}\n\nfunction re(a, b) {\n  if (-1 === a.indexOf(\"-\")) return \"string\" === typeof b.is;\n\n  switch (a) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return !1;\n\n    default:\n      return !0;\n  }\n}\n\nfunction se(a, b) {\n  a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;\n  var c = Id(a);\n  b = sa[b];\n\n  for (var d = 0; d < b.length; d++) {\n    var e = b[d];\n\n    if (!c.hasOwnProperty(e) || !c[e]) {\n      switch (e) {\n        case \"scroll\":\n          Ed(\"scroll\", a);\n          break;\n\n        case \"focus\":\n        case \"blur\":\n          Ed(\"focus\", a);\n          Ed(\"blur\", a);\n          c.blur = !0;\n          c.focus = !0;\n          break;\n\n        case \"cancel\":\n        case \"close\":\n          Ob(e) && Ed(e, a);\n          break;\n\n        case \"invalid\":\n        case \"submit\":\n        case \"reset\":\n          break;\n\n        default:\n          -1 === ab.indexOf(e) && E(e, a);\n      }\n\n      c[e] = !0;\n    }\n  }\n}\n\nfunction te() {}\n\nvar ue = null,\n    ve = null;\n\nfunction we(a, b) {\n  switch (a) {\n    case \"button\":\n    case \"input\":\n    case \"select\":\n    case \"textarea\":\n      return !!b.autoFocus;\n  }\n\n  return !1;\n}\n\nfunction xe(a, b) {\n  return \"textarea\" === a || \"option\" === a || \"noscript\" === a || \"string\" === typeof b.children || \"number\" === typeof b.children || \"object\" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;\n}\n\nvar ye = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    ze = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    Ae = r.unstable_scheduleCallback,\n    Be = r.unstable_cancelCallback;\n\nfunction Ce(a, b, c, d, e) {\n  a[Ga] = e;\n  \"input\" === c && \"radio\" === e.type && null != e.name && xc(a, e);\n  re(c, d);\n  d = re(c, e);\n\n  for (var f = 0; f < b.length; f += 2) {\n    var g = b[f],\n        h = b[f + 1];\n    \"style\" === g ? oe(a, h) : \"dangerouslySetInnerHTML\" === g ? je(a, h) : \"children\" === g ? ke(a, h) : tc(a, g, h, d);\n  }\n\n  switch (c) {\n    case \"input\":\n      yc(a, e);\n      break;\n\n    case \"textarea\":\n      de(a, e);\n      break;\n\n    case \"select\":\n      b = a._wrapperState.wasMultiple, a._wrapperState.wasMultiple = !!e.multiple, c = e.value, null != c ? ae(a, !!e.multiple, c, !1) : b !== !!e.multiple && (null != e.defaultValue ? ae(a, !!e.multiple, e.defaultValue, !0) : ae(a, !!e.multiple, e.multiple ? [] : \"\", !1));\n  }\n}\n\nfunction De(a) {\n  for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nfunction Ee(a) {\n  for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nnew Set();\nvar Fe = [],\n    Ge = -1;\n\nfunction F(a) {\n  0 > Ge || (a.current = Fe[Ge], Fe[Ge] = null, Ge--);\n}\n\nfunction G(a, b) {\n  Ge++;\n  Fe[Ge] = a.current;\n  a.current = b;\n}\n\nvar He = {},\n    H = {\n  current: He\n},\n    I = {\n  current: !1\n},\n    Ie = He;\n\nfunction Je(a, b) {\n  var c = a.type.contextTypes;\n  if (!c) return He;\n  var d = a.stateNode;\n  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;\n  var e = {},\n      f;\n\n  for (f in c) {\n    e[f] = b[f];\n  }\n\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);\n  return e;\n}\n\nfunction J(a) {\n  a = a.childContextTypes;\n  return null !== a && void 0 !== a;\n}\n\nfunction Ke(a) {\n  F(I, a);\n  F(H, a);\n}\n\nfunction Le(a) {\n  F(I, a);\n  F(H, a);\n}\n\nfunction Me(a, b, c) {\n  H.current !== He ? x(\"168\") : void 0;\n  G(H, b, a);\n  G(I, c, a);\n}\n\nfunction Ne(a, b, c) {\n  var d = a.stateNode;\n  a = b.childContextTypes;\n  if (\"function\" !== typeof d.getChildContext) return c;\n  d = d.getChildContext();\n\n  for (var e in d) {\n    e in a ? void 0 : x(\"108\", ic(b) || \"Unknown\", e);\n  }\n\n  return n({}, c, d);\n}\n\nfunction Oe(a) {\n  var b = a.stateNode;\n  b = b && b.__reactInternalMemoizedMergedChildContext || He;\n  Ie = H.current;\n  G(H, b, a);\n  G(I, I.current, a);\n  return !0;\n}\n\nfunction Pe(a, b, c) {\n  var d = a.stateNode;\n  d ? void 0 : x(\"169\");\n  c ? (b = Ne(a, b, Ie), d.__reactInternalMemoizedMergedChildContext = b, F(I, a), F(H, a), G(H, b, a)) : F(I, a);\n  G(I, c, a);\n}\n\nvar Qe = null,\n    Re = null;\n\nfunction Se(a) {\n  return function (b) {\n    try {\n      return a(b);\n    } catch (c) {}\n  };\n}\n\nfunction Te(a) {\n  if (\"undefined\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;\n  var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (b.isDisabled || !b.supportsFiber) return !0;\n\n  try {\n    var c = b.inject(a);\n    Qe = Se(function (a) {\n      return b.onCommitFiberRoot(c, a);\n    });\n    Re = Se(function (a) {\n      return b.onCommitFiberUnmount(c, a);\n    });\n  } catch (d) {}\n\n  return !0;\n}\n\nfunction Ue(a, b, c, d) {\n  this.tag = a;\n  this.key = c;\n  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;\n  this.index = 0;\n  this.ref = null;\n  this.pendingProps = b;\n  this.contextDependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;\n  this.mode = d;\n  this.effectTag = 0;\n  this.lastEffect = this.firstEffect = this.nextEffect = null;\n  this.childExpirationTime = this.expirationTime = 0;\n  this.alternate = null;\n}\n\nfunction K(a, b, c, d) {\n  return new Ue(a, b, c, d);\n}\n\nfunction Ve(a) {\n  a = a.prototype;\n  return !(!a || !a.isReactComponent);\n}\n\nfunction We(a) {\n  if (\"function\" === typeof a) return Ve(a) ? 1 : 0;\n\n  if (void 0 !== a && null !== a) {\n    a = a.$$typeof;\n    if (a === cc) return 11;\n    if (a === ec) return 14;\n  }\n\n  return 2;\n}\n\nfunction Xe(a, b) {\n  var c = a.alternate;\n  null === c ? (c = K(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.effectTag = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);\n  c.childExpirationTime = a.childExpirationTime;\n  c.expirationTime = a.expirationTime;\n  c.child = a.child;\n  c.memoizedProps = a.memoizedProps;\n  c.memoizedState = a.memoizedState;\n  c.updateQueue = a.updateQueue;\n  c.contextDependencies = a.contextDependencies;\n  c.sibling = a.sibling;\n  c.index = a.index;\n  c.ref = a.ref;\n  return c;\n}\n\nfunction Ye(a, b, c, d, e, f) {\n  var g = 2;\n  d = a;\n  if (\"function\" === typeof a) Ve(a) && (g = 1);else if (\"string\" === typeof a) g = 5;else a: switch (a) {\n    case Xb:\n      return Ze(c.children, e, f, b);\n\n    case bc:\n      return $e(c, e | 3, f, b);\n\n    case Yb:\n      return $e(c, e | 2, f, b);\n\n    case Zb:\n      return a = K(12, c, b, e | 4), a.elementType = Zb, a.type = Zb, a.expirationTime = f, a;\n\n    case dc:\n      return a = K(13, c, b, e), a.elementType = dc, a.type = dc, a.expirationTime = f, a;\n\n    default:\n      if (\"object\" === typeof a && null !== a) switch (a.$$typeof) {\n        case $b:\n          g = 10;\n          break a;\n\n        case ac:\n          g = 9;\n          break a;\n\n        case cc:\n          g = 11;\n          break a;\n\n        case ec:\n          g = 14;\n          break a;\n\n        case fc:\n          g = 16;\n          d = null;\n          break a;\n      }\n      x(\"130\", null == a ? a : typeof a, \"\");\n  }\n  b = K(g, c, b, e);\n  b.elementType = a;\n  b.type = d;\n  b.expirationTime = f;\n  return b;\n}\n\nfunction Ze(a, b, c, d) {\n  a = K(7, a, d, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction $e(a, b, c, d) {\n  a = K(8, a, d, b);\n  b = 0 === (b & 1) ? Yb : bc;\n  a.elementType = b;\n  a.type = b;\n  a.expirationTime = c;\n  return a;\n}\n\nfunction af(a, b, c) {\n  a = K(6, a, null, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction bf(a, b, c) {\n  b = K(4, null !== a.children ? a.children : [], a.key, b);\n  b.expirationTime = c;\n  b.stateNode = {\n    containerInfo: a.containerInfo,\n    pendingChildren: null,\n    implementation: a.implementation\n  };\n  return b;\n}\n\nfunction cf(a, b) {\n  a.didError = !1;\n  var c = a.earliestPendingTime;\n  0 === c ? a.earliestPendingTime = a.latestPendingTime = b : c < b ? a.earliestPendingTime = b : a.latestPendingTime > b && (a.latestPendingTime = b);\n  df(b, a);\n}\n\nfunction ef(a, b) {\n  a.didError = !1;\n  if (0 === b) a.earliestPendingTime = 0, a.latestPendingTime = 0, a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0;else {\n    b < a.latestPingedTime && (a.latestPingedTime = 0);\n    var c = a.latestPendingTime;\n    0 !== c && (c > b ? a.earliestPendingTime = a.latestPendingTime = 0 : a.earliestPendingTime > b && (a.earliestPendingTime = a.latestPendingTime));\n    c = a.earliestSuspendedTime;\n    0 === c ? cf(a, b) : b < a.latestSuspendedTime ? (a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0, cf(a, b)) : b > c && cf(a, b);\n  }\n  df(0, a);\n}\n\nfunction ff(a, b) {\n  a.didError = !1;\n  a.latestPingedTime >= b && (a.latestPingedTime = 0);\n  var c = a.earliestPendingTime,\n      d = a.latestPendingTime;\n  c === b ? a.earliestPendingTime = d === b ? a.latestPendingTime = 0 : d : d === b && (a.latestPendingTime = c);\n  c = a.earliestSuspendedTime;\n  d = a.latestSuspendedTime;\n  0 === c ? a.earliestSuspendedTime = a.latestSuspendedTime = b : c < b ? a.earliestSuspendedTime = b : d > b && (a.latestSuspendedTime = b);\n  df(b, a);\n}\n\nfunction gf(a, b) {\n  var c = a.earliestPendingTime;\n  a = a.earliestSuspendedTime;\n  c > b && (b = c);\n  a > b && (b = a);\n  return b;\n}\n\nfunction df(a, b) {\n  var c = b.earliestSuspendedTime,\n      d = b.latestSuspendedTime,\n      e = b.earliestPendingTime,\n      f = b.latestPingedTime;\n  e = 0 !== e ? e : f;\n  0 === e && (0 === a || d < a) && (e = d);\n  a = e;\n  0 !== a && c > a && (a = c);\n  b.nextExpirationTimeToWorkOn = e;\n  b.expirationTime = a;\n}\n\nfunction L(a, b) {\n  if (a && a.defaultProps) {\n    b = n({}, b);\n    a = a.defaultProps;\n\n    for (var c in a) {\n      void 0 === b[c] && (b[c] = a[c]);\n    }\n  }\n\n  return b;\n}\n\nfunction hf(a) {\n  var b = a._result;\n\n  switch (a._status) {\n    case 1:\n      return b;\n\n    case 2:\n      throw b;\n\n    case 0:\n      throw b;\n\n    default:\n      a._status = 0;\n      b = a._ctor;\n      b = b();\n      b.then(function (b) {\n        0 === a._status && (b = b.default, a._status = 1, a._result = b);\n      }, function (b) {\n        0 === a._status && (a._status = 2, a._result = b);\n      });\n\n      switch (a._status) {\n        case 1:\n          return a._result;\n\n        case 2:\n          throw a._result;\n      }\n\n      a._result = b;\n      throw b;\n  }\n}\n\nvar jf = new aa.Component().refs;\n\nfunction kf(a, b, c, d) {\n  b = a.memoizedState;\n  c = c(d, b);\n  c = null === c || void 0 === c ? b : n({}, b, c);\n  a.memoizedState = c;\n  d = a.updateQueue;\n  null !== d && 0 === a.expirationTime && (d.baseState = c);\n}\n\nvar tf = {\n  isMounted: function isMounted(a) {\n    return (a = a._reactInternalFiber) ? 2 === ed(a) : !1;\n  },\n  enqueueSetState: function enqueueSetState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = lf();\n    d = mf(d, a);\n    var e = nf(d);\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    of();\n    pf(a, e);\n    qf(a, d);\n  },\n  enqueueReplaceState: function enqueueReplaceState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = lf();\n    d = mf(d, a);\n    var e = nf(d);\n    e.tag = rf;\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    of();\n    pf(a, e);\n    qf(a, d);\n  },\n  enqueueForceUpdate: function enqueueForceUpdate(a, b) {\n    a = a._reactInternalFiber;\n    var c = lf();\n    c = mf(c, a);\n    var d = nf(c);\n    d.tag = sf;\n    void 0 !== b && null !== b && (d.callback = b);\n    of();\n    pf(a, d);\n    qf(a, c);\n  }\n};\n\nfunction uf(a, b, c, d, e, f, g) {\n  a = a.stateNode;\n  return \"function\" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !dd(c, d) || !dd(e, f) : !0;\n}\n\nfunction vf(a, b, c) {\n  var d = !1,\n      e = He;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? f = M(f) : (e = J(b) ? Ie : H.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Je(a, e) : He);\n  b = new b(c, f);\n  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;\n  b.updater = tf;\n  a.stateNode = b;\n  b._reactInternalFiber = a;\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);\n  return b;\n}\n\nfunction wf(a, b, c, d) {\n  a = b.state;\n  \"function\" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);\n  \"function\" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);\n  b.state !== a && tf.enqueueReplaceState(b, b.state, null);\n}\n\nfunction xf(a, b, c, d) {\n  var e = a.stateNode;\n  e.props = c;\n  e.state = a.memoizedState;\n  e.refs = jf;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? e.context = M(f) : (f = J(b) ? Ie : H.current, e.context = Je(a, f));\n  f = a.updateQueue;\n  null !== f && (yf(a, f, c, e, d), e.state = a.memoizedState);\n  f = b.getDerivedStateFromProps;\n  \"function\" === typeof f && (kf(a, b, f, c), e.state = a.memoizedState);\n  \"function\" === typeof b.getDerivedStateFromProps || \"function\" === typeof e.getSnapshotBeforeUpdate || \"function\" !== typeof e.UNSAFE_componentWillMount && \"function\" !== typeof e.componentWillMount || (b = e.state, \"function\" === typeof e.componentWillMount && e.componentWillMount(), \"function\" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && tf.enqueueReplaceState(e, e.state, null), f = a.updateQueue, null !== f && (yf(a, f, c, e, d), e.state = a.memoizedState));\n  \"function\" === typeof e.componentDidMount && (a.effectTag |= 4);\n}\n\nvar zf = Array.isArray;\n\nfunction Af(a, b, c) {\n  a = c.ref;\n\n  if (null !== a && \"function\" !== typeof a && \"object\" !== typeof a) {\n    if (c._owner) {\n      c = c._owner;\n      var d = void 0;\n      c && (1 !== c.tag ? x(\"309\") : void 0, d = c.stateNode);\n      d ? void 0 : x(\"147\", a);\n      var e = \"\" + a;\n      if (null !== b && null !== b.ref && \"function\" === typeof b.ref && b.ref._stringRef === e) return b.ref;\n\n      b = function b(a) {\n        var b = d.refs;\n        b === jf && (b = d.refs = {});\n        null === a ? delete b[e] : b[e] = a;\n      };\n\n      b._stringRef = e;\n      return b;\n    }\n\n    \"string\" !== typeof a ? x(\"284\") : void 0;\n    c._owner ? void 0 : x(\"290\", a);\n  }\n\n  return a;\n}\n\nfunction Bf(a, b) {\n  \"textarea\" !== a.type && x(\"31\", \"[object Object]\" === Object.prototype.toString.call(b) ? \"object with keys {\" + Object.keys(b).join(\", \") + \"}\" : b, \"\");\n}\n\nfunction Cf(a) {\n  function b(b, c) {\n    if (a) {\n      var d = b.lastEffect;\n      null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;\n      c.nextEffect = null;\n      c.effectTag = 8;\n    }\n  }\n\n  function c(c, d) {\n    if (!a) return null;\n\n    for (; null !== d;) {\n      b(c, d), d = d.sibling;\n    }\n\n    return null;\n  }\n\n  function d(a, b) {\n    for (a = new Map(); null !== b;) {\n      null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;\n    }\n\n    return a;\n  }\n\n  function e(a, b, c) {\n    a = Xe(a, b, c);\n    a.index = 0;\n    a.sibling = null;\n    return a;\n  }\n\n  function f(b, c, d) {\n    b.index = d;\n    if (!a) return c;\n    d = b.alternate;\n    if (null !== d) return d = d.index, d < c ? (b.effectTag = 2, c) : d;\n    b.effectTag = 2;\n    return c;\n  }\n\n  function g(b) {\n    a && null === b.alternate && (b.effectTag = 2);\n    return b;\n  }\n\n  function h(a, b, c, d) {\n    if (null === b || 6 !== b.tag) return b = af(c, a.mode, d), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function l(a, b, c, d) {\n    if (null !== b && b.elementType === c.type) return d = e(b, c.props, d), d.ref = Af(a, b, c), d.return = a, d;\n    d = Ye(c.type, c.key, c.props, null, a.mode, d);\n    d.ref = Af(a, b, c);\n    d.return = a;\n    return d;\n  }\n\n  function k(a, b, c, d) {\n    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = bf(c, a.mode, d), b.return = a, b;\n    b = e(b, c.children || [], d);\n    b.return = a;\n    return b;\n  }\n\n  function m(a, b, c, d, f) {\n    if (null === b || 7 !== b.tag) return b = Ze(c, a.mode, d, f), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function p(a, b, c) {\n    if (\"string\" === typeof b || \"number\" === typeof b) return b = af(\"\" + b, a.mode, c), b.return = a, b;\n\n    if (\"object\" === typeof b && null !== b) {\n      switch (b.$$typeof) {\n        case Vb:\n          return c = Ye(b.type, b.key, b.props, null, a.mode, c), c.ref = Af(a, null, b), c.return = a, c;\n\n        case Wb:\n          return b = bf(b, a.mode, c), b.return = a, b;\n      }\n\n      if (zf(b) || hc(b)) return b = Ze(b, a.mode, c, null), b.return = a, b;\n      Bf(a, b);\n    }\n\n    return null;\n  }\n\n  function t(a, b, c, d) {\n    var e = null !== b ? b.key : null;\n    if (\"string\" === typeof c || \"number\" === typeof c) return null !== e ? null : h(a, b, \"\" + c, d);\n\n    if (\"object\" === typeof c && null !== c) {\n      switch (c.$$typeof) {\n        case Vb:\n          return c.key === e ? c.type === Xb ? m(a, b, c.props.children, d, e) : l(a, b, c, d) : null;\n\n        case Wb:\n          return c.key === e ? k(a, b, c, d) : null;\n      }\n\n      if (zf(c) || hc(c)) return null !== e ? null : m(a, b, c, d, null);\n      Bf(a, c);\n    }\n\n    return null;\n  }\n\n  function A(a, b, c, d, e) {\n    if (\"string\" === typeof d || \"number\" === typeof d) return a = a.get(c) || null, h(b, a, \"\" + d, e);\n\n    if (\"object\" === typeof d && null !== d) {\n      switch (d.$$typeof) {\n        case Vb:\n          return a = a.get(null === d.key ? c : d.key) || null, d.type === Xb ? m(b, a, d.props.children, e, d.key) : l(b, a, d, e);\n\n        case Wb:\n          return a = a.get(null === d.key ? c : d.key) || null, k(b, a, d, e);\n      }\n\n      if (zf(d) || hc(d)) return a = a.get(c) || null, m(b, a, d, e, null);\n      Bf(b, d);\n    }\n\n    return null;\n  }\n\n  function v(e, g, h, k) {\n    for (var l = null, m = null, q = g, u = g = 0, B = null; null !== q && u < h.length; u++) {\n      q.index > u ? (B = q, q = null) : B = q.sibling;\n      var w = t(e, q, h[u], k);\n\n      if (null === w) {\n        null === q && (q = B);\n        break;\n      }\n\n      a && q && null === w.alternate && b(e, q);\n      g = f(w, g, u);\n      null === m ? l = w : m.sibling = w;\n      m = w;\n      q = B;\n    }\n\n    if (u === h.length) return c(e, q), l;\n\n    if (null === q) {\n      for (; u < h.length; u++) {\n        if (q = p(e, h[u], k)) g = f(q, g, u), null === m ? l = q : m.sibling = q, m = q;\n      }\n\n      return l;\n    }\n\n    for (q = d(e, q); u < h.length; u++) {\n      if (B = A(q, e, u, h[u], k)) a && null !== B.alternate && q.delete(null === B.key ? u : B.key), g = f(B, g, u), null === m ? l = B : m.sibling = B, m = B;\n    }\n\n    a && q.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  function R(e, g, h, k) {\n    var l = hc(h);\n    \"function\" !== typeof l ? x(\"150\") : void 0;\n    h = l.call(h);\n    null == h ? x(\"151\") : void 0;\n\n    for (var m = l = null, q = g, u = g = 0, B = null, w = h.next(); null !== q && !w.done; u++, w = h.next()) {\n      q.index > u ? (B = q, q = null) : B = q.sibling;\n      var v = t(e, q, w.value, k);\n\n      if (null === v) {\n        q || (q = B);\n        break;\n      }\n\n      a && q && null === v.alternate && b(e, q);\n      g = f(v, g, u);\n      null === m ? l = v : m.sibling = v;\n      m = v;\n      q = B;\n    }\n\n    if (w.done) return c(e, q), l;\n\n    if (null === q) {\n      for (; !w.done; u++, w = h.next()) {\n        w = p(e, w.value, k), null !== w && (g = f(w, g, u), null === m ? l = w : m.sibling = w, m = w);\n      }\n\n      return l;\n    }\n\n    for (q = d(e, q); !w.done; u++, w = h.next()) {\n      w = A(q, e, u, w.value, k), null !== w && (a && null !== w.alternate && q.delete(null === w.key ? u : w.key), g = f(w, g, u), null === m ? l = w : m.sibling = w, m = w);\n    }\n\n    a && q.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  return function (a, d, f, h) {\n    var k = \"object\" === typeof f && null !== f && f.type === Xb && null === f.key;\n    k && (f = f.props.children);\n    var l = \"object\" === typeof f && null !== f;\n    if (l) switch (f.$$typeof) {\n      case Vb:\n        a: {\n          l = f.key;\n\n          for (k = d; null !== k;) {\n            if (k.key === l) {\n              if (7 === k.tag ? f.type === Xb : k.elementType === f.type) {\n                c(a, k.sibling);\n                d = e(k, f.type === Xb ? f.props.children : f.props, h);\n                d.ref = Af(a, k, f);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, k);\n                break;\n              }\n            } else b(a, k);\n            k = k.sibling;\n          }\n\n          f.type === Xb ? (d = Ze(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = Ye(f.type, f.key, f.props, null, a.mode, h), h.ref = Af(a, d, f), h.return = a, a = h);\n        }\n\n        return g(a);\n\n      case Wb:\n        a: {\n          for (k = f.key; null !== d;) {\n            if (d.key === k) {\n              if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {\n                c(a, d.sibling);\n                d = e(d, f.children || [], h);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, d);\n                break;\n              }\n            } else b(a, d);\n            d = d.sibling;\n          }\n\n          d = bf(f, a.mode, h);\n          d.return = a;\n          a = d;\n        }\n\n        return g(a);\n    }\n    if (\"string\" === typeof f || \"number\" === typeof f) return f = \"\" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f, h), d.return = a, a = d) : (c(a, d), d = af(f, a.mode, h), d.return = a, a = d), g(a);\n    if (zf(f)) return v(a, d, f, h);\n    if (hc(f)) return R(a, d, f, h);\n    l && Bf(a, f);\n    if (\"undefined\" === typeof f && !k) switch (a.tag) {\n      case 1:\n      case 0:\n        h = a.type, x(\"152\", h.displayName || h.name || \"Component\");\n    }\n    return c(a, d);\n  };\n}\n\nvar Df = Cf(!0),\n    Ef = Cf(!1),\n    Ff = {},\n    N = {\n  current: Ff\n},\n    Gf = {\n  current: Ff\n},\n    Hf = {\n  current: Ff\n};\n\nfunction If(a) {\n  a === Ff ? x(\"174\") : void 0;\n  return a;\n}\n\nfunction Jf(a, b) {\n  G(Hf, b, a);\n  G(Gf, a, a);\n  G(N, Ff, a);\n  var c = b.nodeType;\n\n  switch (c) {\n    case 9:\n    case 11:\n      b = (b = b.documentElement) ? b.namespaceURI : he(null, \"\");\n      break;\n\n    default:\n      c = 8 === c ? b.parentNode : b, b = c.namespaceURI || null, c = c.tagName, b = he(b, c);\n  }\n\n  F(N, a);\n  G(N, b, a);\n}\n\nfunction Kf(a) {\n  F(N, a);\n  F(Gf, a);\n  F(Hf, a);\n}\n\nfunction Lf(a) {\n  If(Hf.current);\n  var b = If(N.current);\n  var c = he(b, a.type);\n  b !== c && (G(Gf, a, a), G(N, c, a));\n}\n\nfunction Mf(a) {\n  Gf.current === a && (F(N, a), F(Gf, a));\n}\n\nvar Nf = 0,\n    Of = 2,\n    Pf = 4,\n    Qf = 8,\n    Rf = 16,\n    Sf = 32,\n    Tf = 64,\n    Uf = 128,\n    Vf = Tb.ReactCurrentDispatcher,\n    Wf = 0,\n    Xf = null,\n    O = null,\n    P = null,\n    Yf = null,\n    Q = null,\n    Zf = null,\n    $f = 0,\n    ag = null,\n    bg = 0,\n    cg = !1,\n    dg = null,\n    eg = 0;\n\nfunction fg() {\n  x(\"321\");\n}\n\nfunction gg(a, b) {\n  if (null === b) return !1;\n\n  for (var c = 0; c < b.length && c < a.length; c++) {\n    if (!bd(a[c], b[c])) return !1;\n  }\n\n  return !0;\n}\n\nfunction hg(a, b, c, d, e, f) {\n  Wf = f;\n  Xf = b;\n  P = null !== a ? a.memoizedState : null;\n  Vf.current = null === P ? ig : jg;\n  b = c(d, e);\n\n  if (cg) {\n    do {\n      cg = !1, eg += 1, P = null !== a ? a.memoizedState : null, Zf = Yf, ag = Q = O = null, Vf.current = jg, b = c(d, e);\n    } while (cg);\n\n    dg = null;\n    eg = 0;\n  }\n\n  Vf.current = kg;\n  a = Xf;\n  a.memoizedState = Yf;\n  a.expirationTime = $f;\n  a.updateQueue = ag;\n  a.effectTag |= bg;\n  a = null !== O && null !== O.next;\n  Wf = 0;\n  Zf = Q = Yf = P = O = Xf = null;\n  $f = 0;\n  ag = null;\n  bg = 0;\n  a ? x(\"300\") : void 0;\n  return b;\n}\n\nfunction lg() {\n  Vf.current = kg;\n  Wf = 0;\n  Zf = Q = Yf = P = O = Xf = null;\n  $f = 0;\n  ag = null;\n  bg = 0;\n  cg = !1;\n  dg = null;\n  eg = 0;\n}\n\nfunction mg() {\n  var a = {\n    memoizedState: null,\n    baseState: null,\n    queue: null,\n    baseUpdate: null,\n    next: null\n  };\n  null === Q ? Yf = Q = a : Q = Q.next = a;\n  return Q;\n}\n\nfunction ng() {\n  if (null !== Zf) Q = Zf, Zf = Q.next, O = P, P = null !== O ? O.next : null;else {\n    null === P ? x(\"310\") : void 0;\n    O = P;\n    var a = {\n      memoizedState: O.memoizedState,\n      baseState: O.baseState,\n      queue: O.queue,\n      baseUpdate: O.baseUpdate,\n      next: null\n    };\n    Q = null === Q ? Yf = a : Q.next = a;\n    P = O.next;\n  }\n  return Q;\n}\n\nfunction og(a, b) {\n  return \"function\" === typeof b ? b(a) : b;\n}\n\nfunction pg(a) {\n  var b = ng(),\n      c = b.queue;\n  null === c ? x(\"311\") : void 0;\n  c.lastRenderedReducer = a;\n\n  if (0 < eg) {\n    var d = c.dispatch;\n\n    if (null !== dg) {\n      var e = dg.get(c);\n\n      if (void 0 !== e) {\n        dg.delete(c);\n        var f = b.memoizedState;\n\n        do {\n          f = a(f, e.action), e = e.next;\n        } while (null !== e);\n\n        bd(f, b.memoizedState) || (qg = !0);\n        b.memoizedState = f;\n        b.baseUpdate === c.last && (b.baseState = f);\n        c.lastRenderedState = f;\n        return [f, d];\n      }\n    }\n\n    return [b.memoizedState, d];\n  }\n\n  d = c.last;\n  var g = b.baseUpdate;\n  f = b.baseState;\n  null !== g ? (null !== d && (d.next = null), d = g.next) : d = null !== d ? d.next : null;\n\n  if (null !== d) {\n    var h = e = null,\n        l = d,\n        k = !1;\n\n    do {\n      var m = l.expirationTime;\n      m < Wf ? (k || (k = !0, h = g, e = f), m > $f && ($f = m)) : f = l.eagerReducer === a ? l.eagerState : a(f, l.action);\n      g = l;\n      l = l.next;\n    } while (null !== l && l !== d);\n\n    k || (h = g, e = f);\n    bd(f, b.memoizedState) || (qg = !0);\n    b.memoizedState = f;\n    b.baseUpdate = h;\n    b.baseState = e;\n    c.lastRenderedState = f;\n  }\n\n  return [b.memoizedState, c.dispatch];\n}\n\nfunction rg(a, b, c, d) {\n  a = {\n    tag: a,\n    create: b,\n    destroy: c,\n    deps: d,\n    next: null\n  };\n  null === ag ? (ag = {\n    lastEffect: null\n  }, ag.lastEffect = a.next = a) : (b = ag.lastEffect, null === b ? ag.lastEffect = a.next = a : (c = b.next, b.next = a, a.next = c, ag.lastEffect = a));\n  return a;\n}\n\nfunction sg(a, b, c, d) {\n  var e = mg();\n  bg |= a;\n  e.memoizedState = rg(b, c, void 0, void 0 === d ? null : d);\n}\n\nfunction tg(a, b, c, d) {\n  var e = ng();\n  d = void 0 === d ? null : d;\n  var f = void 0;\n\n  if (null !== O) {\n    var g = O.memoizedState;\n    f = g.destroy;\n\n    if (null !== d && gg(d, g.deps)) {\n      rg(Nf, c, f, d);\n      return;\n    }\n  }\n\n  bg |= a;\n  e.memoizedState = rg(b, c, f, d);\n}\n\nfunction ug(a, b) {\n  if (\"function\" === typeof b) return a = a(), b(a), function () {\n    b(null);\n  };\n  if (null !== b && void 0 !== b) return a = a(), b.current = a, function () {\n    b.current = null;\n  };\n}\n\nfunction vg() {}\n\nfunction wg(a, b, c) {\n  25 > eg ? void 0 : x(\"301\");\n  var d = a.alternate;\n  if (a === Xf || null !== d && d === Xf) {\n    if (cg = !0, a = {\n      expirationTime: Wf,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    }, null === dg && (dg = new Map()), c = dg.get(b), void 0 === c) dg.set(b, a);else {\n      for (b = c; null !== b.next;) {\n        b = b.next;\n      }\n\n      b.next = a;\n    }\n  } else {\n    of();\n    var e = lf();\n    e = mf(e, a);\n    var f = {\n      expirationTime: e,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    },\n        g = b.last;\n    if (null === g) f.next = f;else {\n      var h = g.next;\n      null !== h && (f.next = h);\n      g.next = f;\n    }\n    b.last = f;\n    if (0 === a.expirationTime && (null === d || 0 === d.expirationTime) && (d = b.lastRenderedReducer, null !== d)) try {\n      var l = b.lastRenderedState,\n          k = d(l, c);\n      f.eagerReducer = d;\n      f.eagerState = k;\n      if (bd(k, l)) return;\n    } catch (m) {} finally {}\n    qf(a, e);\n  }\n}\n\nvar kg = {\n  readContext: M,\n  useCallback: fg,\n  useContext: fg,\n  useEffect: fg,\n  useImperativeHandle: fg,\n  useLayoutEffect: fg,\n  useMemo: fg,\n  useReducer: fg,\n  useRef: fg,\n  useState: fg,\n  useDebugValue: fg\n},\n    ig = {\n  readContext: M,\n  useCallback: function useCallback(a, b) {\n    mg().memoizedState = [a, void 0 === b ? null : b];\n    return a;\n  },\n  useContext: M,\n  useEffect: function useEffect(a, b) {\n    return sg(516, Uf | Tf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : null;\n    return sg(4, Pf | Sf, ug.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return sg(4, Pf | Sf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = mg();\n    b = void 0 === b ? null : b;\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: function useReducer(a, b, c) {\n    var d = mg();\n    b = void 0 !== c ? c(b) : b;\n    d.memoizedState = d.baseState = b;\n    a = d.queue = {\n      last: null,\n      dispatch: null,\n      lastRenderedReducer: a,\n      lastRenderedState: b\n    };\n    a = a.dispatch = wg.bind(null, Xf, a);\n    return [d.memoizedState, a];\n  },\n  useRef: function useRef(a) {\n    var b = mg();\n    a = {\n      current: a\n    };\n    return b.memoizedState = a;\n  },\n  useState: function useState(a) {\n    var b = mg();\n    \"function\" === typeof a && (a = a());\n    b.memoizedState = b.baseState = a;\n    a = b.queue = {\n      last: null,\n      dispatch: null,\n      lastRenderedReducer: og,\n      lastRenderedState: a\n    };\n    a = a.dispatch = wg.bind(null, Xf, a);\n    return [b.memoizedState, a];\n  },\n  useDebugValue: vg\n},\n    jg = {\n  readContext: M,\n  useCallback: function useCallback(a, b) {\n    var c = ng();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && gg(b, d[1])) return d[0];\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useContext: M,\n  useEffect: function useEffect(a, b) {\n    return tg(516, Uf | Tf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : null;\n    return tg(4, Pf | Sf, ug.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return tg(4, Pf | Sf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = ng();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && gg(b, d[1])) return d[0];\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: pg,\n  useRef: function useRef() {\n    return ng().memoizedState;\n  },\n  useState: function useState(a) {\n    return pg(og, a);\n  },\n  useDebugValue: vg\n},\n    xg = null,\n    yg = null,\n    zg = !1;\n\nfunction Ag(a, b) {\n  var c = K(5, null, null, 0);\n  c.elementType = \"DELETED\";\n  c.type = \"DELETED\";\n  c.stateNode = b;\n  c.return = a;\n  c.effectTag = 8;\n  null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;\n}\n\nfunction Bg(a, b) {\n  switch (a.tag) {\n    case 5:\n      var c = a.type;\n      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;\n      return null !== b ? (a.stateNode = b, !0) : !1;\n\n    case 6:\n      return b = \"\" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;\n\n    case 13:\n      return !1;\n\n    default:\n      return !1;\n  }\n}\n\nfunction Cg(a) {\n  if (zg) {\n    var b = yg;\n\n    if (b) {\n      var c = b;\n\n      if (!Bg(a, b)) {\n        b = De(c);\n\n        if (!b || !Bg(a, b)) {\n          a.effectTag |= 2;\n          zg = !1;\n          xg = a;\n          return;\n        }\n\n        Ag(xg, c);\n      }\n\n      xg = a;\n      yg = Ee(b);\n    } else a.effectTag |= 2, zg = !1, xg = a;\n  }\n}\n\nfunction Dg(a) {\n  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 18 !== a.tag;) {\n    a = a.return;\n  }\n\n  xg = a;\n}\n\nfunction Eg(a) {\n  if (a !== xg) return !1;\n  if (!zg) return Dg(a), zg = !0, !1;\n  var b = a.type;\n  if (5 !== a.tag || \"head\" !== b && \"body\" !== b && !xe(b, a.memoizedProps)) for (b = yg; b;) {\n    Ag(a, b), b = De(b);\n  }\n  Dg(a);\n  yg = xg ? De(a.stateNode) : null;\n  return !0;\n}\n\nfunction Fg() {\n  yg = xg = null;\n  zg = !1;\n}\n\nvar Gg = Tb.ReactCurrentOwner,\n    qg = !1;\n\nfunction S(a, b, c, d) {\n  b.child = null === a ? Ef(b, null, c, d) : Df(b, a.child, c, d);\n}\n\nfunction Hg(a, b, c, d, e) {\n  c = c.render;\n  var f = b.ref;\n  Ig(b, e);\n  d = hg(a, b, c, d, f, e);\n  if (null !== a && !qg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Jg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, d, e);\n  return b.child;\n}\n\nfunction Kg(a, b, c, d, e, f) {\n  if (null === a) {\n    var g = c.type;\n    if (\"function\" === typeof g && !Ve(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = g, Lg(a, b, g, d, e, f);\n    a = Ye(c.type, null, d, null, b.mode, f);\n    a.ref = b.ref;\n    a.return = b;\n    return b.child = a;\n  }\n\n  g = a.child;\n  if (e < f && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : dd, c(e, d) && a.ref === b.ref)) return Jg(a, b, f);\n  b.effectTag |= 1;\n  a = Xe(g, d, f);\n  a.ref = b.ref;\n  a.return = b;\n  return b.child = a;\n}\n\nfunction Lg(a, b, c, d, e, f) {\n  return null !== a && dd(a.memoizedProps, d) && a.ref === b.ref && (qg = !1, e < f) ? Jg(a, b, f) : Mg(a, b, c, d, f);\n}\n\nfunction Ng(a, b) {\n  var c = b.ref;\n  if (null === a && null !== c || null !== a && a.ref !== c) b.effectTag |= 128;\n}\n\nfunction Mg(a, b, c, d, e) {\n  var f = J(c) ? Ie : H.current;\n  f = Je(b, f);\n  Ig(b, e);\n  c = hg(a, b, c, d, f, e);\n  if (null !== a && !qg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Jg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, c, e);\n  return b.child;\n}\n\nfunction Og(a, b, c, d, e) {\n  if (J(c)) {\n    var f = !0;\n    Oe(b);\n  } else f = !1;\n\n  Ig(b, e);\n  if (null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), vf(b, c, d, e), xf(b, c, d, e), d = !0;else if (null === a) {\n    var g = b.stateNode,\n        h = b.memoizedProps;\n    g.props = h;\n    var l = g.context,\n        k = c.contextType;\n    \"object\" === typeof k && null !== k ? k = M(k) : (k = J(c) ? Ie : H.current, k = Je(b, k));\n    var m = c.getDerivedStateFromProps,\n        p = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate;\n    p || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && wf(b, g, d, k);\n    Pg = !1;\n    var t = b.memoizedState;\n    l = g.state = t;\n    var A = b.updateQueue;\n    null !== A && (yf(b, A, d, g, e), l = b.memoizedState);\n    h !== d || t !== l || I.current || Pg ? (\"function\" === typeof m && (kf(b, c, m, d), l = b.memoizedState), (h = Pg || uf(b, c, h, d, t, l, k)) ? (p || \"function\" !== typeof g.UNSAFE_componentWillMount && \"function\" !== typeof g.componentWillMount || (\"function\" === typeof g.componentWillMount && g.componentWillMount(), \"function\" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), \"function\" === typeof g.componentDidMount && (b.effectTag |= 4)) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), b.memoizedProps = d, b.memoizedState = l), g.props = d, g.state = l, g.context = k, d = h) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), d = !1);\n  } else g = b.stateNode, h = b.memoizedProps, g.props = b.type === b.elementType ? h : L(b.type, h), l = g.context, k = c.contextType, \"object\" === typeof k && null !== k ? k = M(k) : (k = J(c) ? Ie : H.current, k = Je(b, k)), m = c.getDerivedStateFromProps, (p = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate) || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && wf(b, g, d, k), Pg = !1, l = b.memoizedState, t = g.state = l, A = b.updateQueue, null !== A && (yf(b, A, d, g, e), t = b.memoizedState), h !== d || l !== t || I.current || Pg ? (\"function\" === typeof m && (kf(b, c, m, d), t = b.memoizedState), (m = Pg || uf(b, c, h, d, l, t, k)) ? (p || \"function\" !== typeof g.UNSAFE_componentWillUpdate && \"function\" !== typeof g.componentWillUpdate || (\"function\" === typeof g.componentWillUpdate && g.componentWillUpdate(d, t, k), \"function\" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, t, k)), \"function\" === typeof g.componentDidUpdate && (b.effectTag |= 4), \"function\" === typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), b.memoizedProps = d, b.memoizedState = t), g.props = d, g.state = t, g.context = k, d = m) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), d = !1);\n  return Qg(a, b, c, d, f, e);\n}\n\nfunction Qg(a, b, c, d, e, f) {\n  Ng(a, b);\n  var g = 0 !== (b.effectTag & 64);\n  if (!d && !g) return e && Pe(b, c, !1), Jg(a, b, f);\n  d = b.stateNode;\n  Gg.current = b;\n  var h = g && \"function\" !== typeof c.getDerivedStateFromError ? null : d.render();\n  b.effectTag |= 1;\n  null !== a && g ? (b.child = Df(b, a.child, null, f), b.child = Df(b, null, h, f)) : S(a, b, h, f);\n  b.memoizedState = d.state;\n  e && Pe(b, c, !0);\n  return b.child;\n}\n\nfunction Rg(a) {\n  var b = a.stateNode;\n  b.pendingContext ? Me(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Me(a, b.context, !1);\n  Jf(a, b.containerInfo);\n}\n\nfunction Sg(a, b, c) {\n  var d = b.mode,\n      e = b.pendingProps,\n      f = b.memoizedState;\n\n  if (0 === (b.effectTag & 64)) {\n    f = null;\n    var g = !1;\n  } else f = {\n    timedOutAt: null !== f ? f.timedOutAt : 0\n  }, g = !0, b.effectTag &= -65;\n\n  if (null === a) {\n    if (g) {\n      var h = e.fallback;\n      a = Ze(null, d, 0, null);\n      0 === (b.mode & 1) && (a.child = null !== b.memoizedState ? b.child.child : b.child);\n      d = Ze(h, d, c, null);\n      a.sibling = d;\n      c = a;\n      c.return = d.return = b;\n    } else c = d = Ef(b, null, e.children, c);\n  } else null !== a.memoizedState ? (d = a.child, h = d.sibling, g ? (c = e.fallback, e = Xe(d, d.pendingProps, 0), 0 === (b.mode & 1) && (g = null !== b.memoizedState ? b.child.child : b.child, g !== d.child && (e.child = g)), d = e.sibling = Xe(h, c, h.expirationTime), c = e, e.childExpirationTime = 0, c.return = d.return = b) : c = d = Df(b, d.child, e.children, c)) : (h = a.child, g ? (g = e.fallback, e = Ze(null, d, 0, null), e.child = h, 0 === (b.mode & 1) && (e.child = null !== b.memoizedState ? b.child.child : b.child), d = e.sibling = Ze(g, d, c, null), d.effectTag |= 2, c = e, e.childExpirationTime = 0, c.return = d.return = b) : d = c = Df(b, h, e.children, c)), b.stateNode = a.stateNode;\n  b.memoizedState = f;\n  b.child = c;\n  return d;\n}\n\nfunction Jg(a, b, c) {\n  null !== a && (b.contextDependencies = a.contextDependencies);\n  if (b.childExpirationTime < c) return null;\n  null !== a && b.child !== a.child ? x(\"153\") : void 0;\n\n  if (null !== b.child) {\n    a = b.child;\n    c = Xe(a, a.pendingProps, a.expirationTime);\n    b.child = c;\n\n    for (c.return = b; null !== a.sibling;) {\n      a = a.sibling, c = c.sibling = Xe(a, a.pendingProps, a.expirationTime), c.return = b;\n    }\n\n    c.sibling = null;\n  }\n\n  return b.child;\n}\n\nfunction Tg(a, b, c) {\n  var d = b.expirationTime;\n  if (null !== a) {\n    if (a.memoizedProps !== b.pendingProps || I.current) qg = !0;else {\n      if (d < c) {\n        qg = !1;\n\n        switch (b.tag) {\n          case 3:\n            Rg(b);\n            Fg();\n            break;\n\n          case 5:\n            Lf(b);\n            break;\n\n          case 1:\n            J(b.type) && Oe(b);\n            break;\n\n          case 4:\n            Jf(b, b.stateNode.containerInfo);\n            break;\n\n          case 10:\n            Ug(b, b.memoizedProps.value);\n            break;\n\n          case 13:\n            if (null !== b.memoizedState) {\n              d = b.child.childExpirationTime;\n              if (0 !== d && d >= c) return Sg(a, b, c);\n              b = Jg(a, b, c);\n              return null !== b ? b.sibling : null;\n            }\n\n        }\n\n        return Jg(a, b, c);\n      }\n    }\n  } else qg = !1;\n  b.expirationTime = 0;\n\n  switch (b.tag) {\n    case 2:\n      d = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      a = b.pendingProps;\n      var e = Je(b, H.current);\n      Ig(b, c);\n      e = hg(null, b, d, a, e, c);\n      b.effectTag |= 1;\n\n      if (\"object\" === typeof e && null !== e && \"function\" === typeof e.render && void 0 === e.$$typeof) {\n        b.tag = 1;\n        lg();\n\n        if (J(d)) {\n          var f = !0;\n          Oe(b);\n        } else f = !1;\n\n        b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;\n        var g = d.getDerivedStateFromProps;\n        \"function\" === typeof g && kf(b, d, g, a);\n        e.updater = tf;\n        b.stateNode = e;\n        e._reactInternalFiber = b;\n        xf(b, d, a, c);\n        b = Qg(null, b, d, !0, f, c);\n      } else b.tag = 0, S(null, b, e, c), b = b.child;\n\n      return b;\n\n    case 16:\n      e = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      f = b.pendingProps;\n      a = hf(e);\n      b.type = a;\n      e = b.tag = We(a);\n      f = L(a, f);\n      g = void 0;\n\n      switch (e) {\n        case 0:\n          g = Mg(null, b, a, f, c);\n          break;\n\n        case 1:\n          g = Og(null, b, a, f, c);\n          break;\n\n        case 11:\n          g = Hg(null, b, a, f, c);\n          break;\n\n        case 14:\n          g = Kg(null, b, a, L(a.type, f), d, c);\n          break;\n\n        default:\n          x(\"306\", a, \"\");\n      }\n\n      return g;\n\n    case 0:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Mg(a, b, d, e, c);\n\n    case 1:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Og(a, b, d, e, c);\n\n    case 3:\n      Rg(b);\n      d = b.updateQueue;\n      null === d ? x(\"282\") : void 0;\n      e = b.memoizedState;\n      e = null !== e ? e.element : null;\n      yf(b, d, b.pendingProps, null, c);\n      d = b.memoizedState.element;\n      if (d === e) Fg(), b = Jg(a, b, c);else {\n        e = b.stateNode;\n        if (e = (null === a || null === a.child) && e.hydrate) yg = Ee(b.stateNode.containerInfo), xg = b, e = zg = !0;\n        e ? (b.effectTag |= 2, b.child = Ef(b, null, d, c)) : (S(a, b, d, c), Fg());\n        b = b.child;\n      }\n      return b;\n\n    case 5:\n      return Lf(b), null === a && Cg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, xe(d, e) ? g = null : null !== f && xe(d, f) && (b.effectTag |= 16), Ng(a, b), 1 !== c && b.mode & 1 && e.hidden ? (b.expirationTime = b.childExpirationTime = 1, b = null) : (S(a, b, g, c), b = b.child), b;\n\n    case 6:\n      return null === a && Cg(b), null;\n\n    case 13:\n      return Sg(a, b, c);\n\n    case 4:\n      return Jf(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Df(b, null, d, c) : S(a, b, d, c), b.child;\n\n    case 11:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Hg(a, b, d, e, c);\n\n    case 7:\n      return S(a, b, b.pendingProps, c), b.child;\n\n    case 8:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 12:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 10:\n      a: {\n        d = b.type._context;\n        e = b.pendingProps;\n        g = b.memoizedProps;\n        f = e.value;\n        Ug(b, f);\n\n        if (null !== g) {\n          var h = g.value;\n          f = bd(h, f) ? 0 : (\"function\" === typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823) | 0;\n\n          if (0 === f) {\n            if (g.children === e.children && !I.current) {\n              b = Jg(a, b, c);\n              break a;\n            }\n          } else for (h = b.child, null !== h && (h.return = b); null !== h;) {\n            var l = h.contextDependencies;\n\n            if (null !== l) {\n              g = h.child;\n\n              for (var k = l.first; null !== k;) {\n                if (k.context === d && 0 !== (k.observedBits & f)) {\n                  1 === h.tag && (k = nf(c), k.tag = sf, pf(h, k));\n                  h.expirationTime < c && (h.expirationTime = c);\n                  k = h.alternate;\n                  null !== k && k.expirationTime < c && (k.expirationTime = c);\n                  k = c;\n\n                  for (var m = h.return; null !== m;) {\n                    var p = m.alternate;\n                    if (m.childExpirationTime < k) m.childExpirationTime = k, null !== p && p.childExpirationTime < k && (p.childExpirationTime = k);else if (null !== p && p.childExpirationTime < k) p.childExpirationTime = k;else break;\n                    m = m.return;\n                  }\n\n                  l.expirationTime < c && (l.expirationTime = c);\n                  break;\n                }\n\n                k = k.next;\n              }\n            } else g = 10 === h.tag ? h.type === b.type ? null : h.child : h.child;\n\n            if (null !== g) g.return = h;else for (g = h; null !== g;) {\n              if (g === b) {\n                g = null;\n                break;\n              }\n\n              h = g.sibling;\n\n              if (null !== h) {\n                h.return = g.return;\n                g = h;\n                break;\n              }\n\n              g = g.return;\n            }\n            h = g;\n          }\n        }\n\n        S(a, b, e.children, c);\n        b = b.child;\n      }\n\n      return b;\n\n    case 9:\n      return e = b.type, f = b.pendingProps, d = f.children, Ig(b, c), e = M(e, f.unstable_observedBits), d = d(e), b.effectTag |= 1, S(a, b, d, c), b.child;\n\n    case 14:\n      return e = b.type, f = L(e, b.pendingProps), f = L(e.type, f), Kg(a, b, e, f, d, c);\n\n    case 15:\n      return Lg(a, b, b.type, b.pendingProps, d, c);\n\n    case 17:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), b.tag = 1, J(d) ? (a = !0, Oe(b)) : a = !1, Ig(b, c), vf(b, d, e, c), xf(b, d, e, c), Qg(null, b, d, !0, a, c);\n  }\n\n  x(\"156\");\n}\n\nvar Vg = {\n  current: null\n},\n    Wg = null,\n    Xg = null,\n    Yg = null;\n\nfunction Ug(a, b) {\n  var c = a.type._context;\n  G(Vg, c._currentValue, a);\n  c._currentValue = b;\n}\n\nfunction Zg(a) {\n  var b = Vg.current;\n  F(Vg, a);\n  a.type._context._currentValue = b;\n}\n\nfunction Ig(a, b) {\n  Wg = a;\n  Yg = Xg = null;\n  var c = a.contextDependencies;\n  null !== c && c.expirationTime >= b && (qg = !0);\n  a.contextDependencies = null;\n}\n\nfunction M(a, b) {\n  if (Yg !== a && !1 !== b && 0 !== b) {\n    if (\"number\" !== typeof b || 1073741823 === b) Yg = a, b = 1073741823;\n    b = {\n      context: a,\n      observedBits: b,\n      next: null\n    };\n    null === Xg ? (null === Wg ? x(\"308\") : void 0, Xg = b, Wg.contextDependencies = {\n      first: b,\n      expirationTime: 0\n    }) : Xg = Xg.next = b;\n  }\n\n  return a._currentValue;\n}\n\nvar $g = 0,\n    rf = 1,\n    sf = 2,\n    ah = 3,\n    Pg = !1;\n\nfunction bh(a) {\n  return {\n    baseState: a,\n    firstUpdate: null,\n    lastUpdate: null,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction ch(a) {\n  return {\n    baseState: a.baseState,\n    firstUpdate: a.firstUpdate,\n    lastUpdate: a.lastUpdate,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction nf(a) {\n  return {\n    expirationTime: a,\n    tag: $g,\n    payload: null,\n    callback: null,\n    next: null,\n    nextEffect: null\n  };\n}\n\nfunction dh(a, b) {\n  null === a.lastUpdate ? a.firstUpdate = a.lastUpdate = b : (a.lastUpdate.next = b, a.lastUpdate = b);\n}\n\nfunction pf(a, b) {\n  var c = a.alternate;\n\n  if (null === c) {\n    var d = a.updateQueue;\n    var e = null;\n    null === d && (d = a.updateQueue = bh(a.memoizedState));\n  } else d = a.updateQueue, e = c.updateQueue, null === d ? null === e ? (d = a.updateQueue = bh(a.memoizedState), e = c.updateQueue = bh(c.memoizedState)) : d = a.updateQueue = ch(e) : null === e && (e = c.updateQueue = ch(d));\n\n  null === e || d === e ? dh(d, b) : null === d.lastUpdate || null === e.lastUpdate ? (dh(d, b), dh(e, b)) : (dh(d, b), e.lastUpdate = b);\n}\n\nfunction eh(a, b) {\n  var c = a.updateQueue;\n  c = null === c ? a.updateQueue = bh(a.memoizedState) : fh(a, c);\n  null === c.lastCapturedUpdate ? c.firstCapturedUpdate = c.lastCapturedUpdate = b : (c.lastCapturedUpdate.next = b, c.lastCapturedUpdate = b);\n}\n\nfunction fh(a, b) {\n  var c = a.alternate;\n  null !== c && b === c.updateQueue && (b = a.updateQueue = ch(b));\n  return b;\n}\n\nfunction gh(a, b, c, d, e, f) {\n  switch (c.tag) {\n    case rf:\n      return a = c.payload, \"function\" === typeof a ? a.call(f, d, e) : a;\n\n    case ah:\n      a.effectTag = a.effectTag & -2049 | 64;\n\n    case $g:\n      a = c.payload;\n      e = \"function\" === typeof a ? a.call(f, d, e) : a;\n      if (null === e || void 0 === e) break;\n      return n({}, d, e);\n\n    case sf:\n      Pg = !0;\n  }\n\n  return d;\n}\n\nfunction yf(a, b, c, d, e) {\n  Pg = !1;\n  b = fh(a, b);\n\n  for (var f = b.baseState, g = null, h = 0, l = b.firstUpdate, k = f; null !== l;) {\n    var m = l.expirationTime;\n    m < e ? (null === g && (g = l, f = k), h < m && (h = m)) : (k = gh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastEffect ? b.firstEffect = b.lastEffect = l : (b.lastEffect.nextEffect = l, b.lastEffect = l)));\n    l = l.next;\n  }\n\n  m = null;\n\n  for (l = b.firstCapturedUpdate; null !== l;) {\n    var p = l.expirationTime;\n    p < e ? (null === m && (m = l, null === g && (f = k)), h < p && (h = p)) : (k = gh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastCapturedEffect ? b.firstCapturedEffect = b.lastCapturedEffect = l : (b.lastCapturedEffect.nextEffect = l, b.lastCapturedEffect = l)));\n    l = l.next;\n  }\n\n  null === g && (b.lastUpdate = null);\n  null === m ? b.lastCapturedUpdate = null : a.effectTag |= 32;\n  null === g && null === m && (f = k);\n  b.baseState = f;\n  b.firstUpdate = g;\n  b.firstCapturedUpdate = m;\n  a.expirationTime = h;\n  a.memoizedState = k;\n}\n\nfunction hh(a, b, c) {\n  null !== b.firstCapturedUpdate && (null !== b.lastUpdate && (b.lastUpdate.next = b.firstCapturedUpdate, b.lastUpdate = b.lastCapturedUpdate), b.firstCapturedUpdate = b.lastCapturedUpdate = null);\n  ih(b.firstEffect, c);\n  b.firstEffect = b.lastEffect = null;\n  ih(b.firstCapturedEffect, c);\n  b.firstCapturedEffect = b.lastCapturedEffect = null;\n}\n\nfunction ih(a, b) {\n  for (; null !== a;) {\n    var c = a.callback;\n\n    if (null !== c) {\n      a.callback = null;\n      var d = b;\n      \"function\" !== typeof c ? x(\"191\", c) : void 0;\n      c.call(d);\n    }\n\n    a = a.nextEffect;\n  }\n}\n\nfunction jh(a, b) {\n  return {\n    value: a,\n    source: b,\n    stack: jc(b)\n  };\n}\n\nfunction kh(a) {\n  a.effectTag |= 4;\n}\n\nvar lh = void 0,\n    mh = void 0,\n    nh = void 0,\n    oh = void 0;\n\nlh = function lh(a, b) {\n  for (var c = b.child; null !== c;) {\n    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n    if (c === b) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === b) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n};\n\nmh = function mh() {};\n\nnh = function nh(a, b, c, d, e) {\n  var f = a.memoizedProps;\n\n  if (f !== d) {\n    var g = b.stateNode;\n    If(N.current);\n    a = null;\n\n    switch (c) {\n      case \"input\":\n        f = vc(g, f);\n        d = vc(g, d);\n        a = [];\n        break;\n\n      case \"option\":\n        f = $d(g, f);\n        d = $d(g, d);\n        a = [];\n        break;\n\n      case \"select\":\n        f = n({}, f, {\n          value: void 0\n        });\n        d = n({}, d, {\n          value: void 0\n        });\n        a = [];\n        break;\n\n      case \"textarea\":\n        f = be(g, f);\n        d = be(g, d);\n        a = [];\n        break;\n\n      default:\n        \"function\" !== typeof f.onClick && \"function\" === typeof d.onClick && (g.onclick = te);\n    }\n\n    qe(c, d);\n    g = c = void 0;\n    var h = null;\n\n    for (c in f) {\n      if (!d.hasOwnProperty(c) && f.hasOwnProperty(c) && null != f[c]) if (\"style\" === c) {\n        var l = f[c];\n\n        for (g in l) {\n          l.hasOwnProperty(g) && (h || (h = {}), h[g] = \"\");\n        }\n      } else \"dangerouslySetInnerHTML\" !== c && \"children\" !== c && \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && \"autoFocus\" !== c && (ra.hasOwnProperty(c) ? a || (a = []) : (a = a || []).push(c, null));\n    }\n\n    for (c in d) {\n      var k = d[c];\n      l = null != f ? f[c] : void 0;\n      if (d.hasOwnProperty(c) && k !== l && (null != k || null != l)) if (\"style\" === c) {\n        if (l) {\n          for (g in l) {\n            !l.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (h || (h = {}), h[g] = \"\");\n          }\n\n          for (g in k) {\n            k.hasOwnProperty(g) && l[g] !== k[g] && (h || (h = {}), h[g] = k[g]);\n          }\n        } else h || (a || (a = []), a.push(c, h)), h = k;\n      } else \"dangerouslySetInnerHTML\" === c ? (k = k ? k.__html : void 0, l = l ? l.__html : void 0, null != k && l !== k && (a = a || []).push(c, \"\" + k)) : \"children\" === c ? l === k || \"string\" !== typeof k && \"number\" !== typeof k || (a = a || []).push(c, \"\" + k) : \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && (ra.hasOwnProperty(c) ? (null != k && se(e, c), a || l === k || (a = [])) : (a = a || []).push(c, k));\n    }\n\n    h && (a = a || []).push(\"style\", h);\n    e = a;\n    (b.updateQueue = e) && kh(b);\n  }\n};\n\noh = function oh(a, b, c, d) {\n  c !== d && kh(b);\n};\n\nvar ph = \"function\" === typeof WeakSet ? WeakSet : Set;\n\nfunction qh(a, b) {\n  var c = b.source,\n      d = b.stack;\n  null === d && null !== c && (d = jc(c));\n  null !== c && ic(c.type);\n  b = b.value;\n  null !== a && 1 === a.tag && ic(a.type);\n\n  try {\n    console.error(b);\n  } catch (e) {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction rh(a) {\n  var b = a.ref;\n  if (null !== b) if (\"function\" === typeof b) try {\n    b(null);\n  } catch (c) {\n    sh(a, c);\n  } else b.current = null;\n}\n\nfunction th(a, b, c) {\n  c = c.updateQueue;\n  c = null !== c ? c.lastEffect : null;\n\n  if (null !== c) {\n    var d = c = c.next;\n\n    do {\n      if ((d.tag & a) !== Nf) {\n        var e = d.destroy;\n        d.destroy = void 0;\n        void 0 !== e && e();\n      }\n\n      (d.tag & b) !== Nf && (e = d.create, d.destroy = e());\n      d = d.next;\n    } while (d !== c);\n  }\n}\n\nfunction uh(a, b) {\n  for (var c = a;;) {\n    if (5 === c.tag) {\n      var d = c.stateNode;\n      if (b) d.style.display = \"none\";else {\n        d = c.stateNode;\n        var e = c.memoizedProps.style;\n        e = void 0 !== e && null !== e && e.hasOwnProperty(\"display\") ? e.display : null;\n        d.style.display = ne(\"display\", e);\n      }\n    } else if (6 === c.tag) c.stateNode.nodeValue = b ? \"\" : c.memoizedProps;else if (13 === c.tag && null !== c.memoizedState) {\n      d = c.child.sibling;\n      d.return = c;\n      c = d;\n      continue;\n    } else if (null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n\n    if (c === a) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === a) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n}\n\nfunction vh(a) {\n  \"function\" === typeof Re && Re(a);\n\n  switch (a.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      var b = a.updateQueue;\n\n      if (null !== b && (b = b.lastEffect, null !== b)) {\n        var c = b = b.next;\n\n        do {\n          var d = c.destroy;\n\n          if (void 0 !== d) {\n            var e = a;\n\n            try {\n              d();\n            } catch (f) {\n              sh(e, f);\n            }\n          }\n\n          c = c.next;\n        } while (c !== b);\n      }\n\n      break;\n\n    case 1:\n      rh(a);\n      b = a.stateNode;\n      if (\"function\" === typeof b.componentWillUnmount) try {\n        b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount();\n      } catch (f) {\n        sh(a, f);\n      }\n      break;\n\n    case 5:\n      rh(a);\n      break;\n\n    case 4:\n      wh(a);\n  }\n}\n\nfunction xh(a) {\n  return 5 === a.tag || 3 === a.tag || 4 === a.tag;\n}\n\nfunction yh(a) {\n  a: {\n    for (var b = a.return; null !== b;) {\n      if (xh(b)) {\n        var c = b;\n        break a;\n      }\n\n      b = b.return;\n    }\n\n    x(\"160\");\n    c = void 0;\n  }\n\n  var d = b = void 0;\n\n  switch (c.tag) {\n    case 5:\n      b = c.stateNode;\n      d = !1;\n      break;\n\n    case 3:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    case 4:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    default:\n      x(\"161\");\n  }\n\n  c.effectTag & 16 && (ke(b, \"\"), c.effectTag &= -17);\n\n  a: b: for (c = a;;) {\n    for (; null === c.sibling;) {\n      if (null === c.return || xh(c.return)) {\n        c = null;\n        break a;\n      }\n\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n\n    for (c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag;) {\n      if (c.effectTag & 2) continue b;\n      if (null === c.child || 4 === c.tag) continue b;else c.child.return = c, c = c.child;\n    }\n\n    if (!(c.effectTag & 2)) {\n      c = c.stateNode;\n      break a;\n    }\n  }\n\n  for (var e = a;;) {\n    if (5 === e.tag || 6 === e.tag) {\n      if (c) {\n        if (d) {\n          var f = b,\n              g = e.stateNode,\n              h = c;\n          8 === f.nodeType ? f.parentNode.insertBefore(g, h) : f.insertBefore(g, h);\n        } else b.insertBefore(e.stateNode, c);\n      } else d ? (g = b, h = e.stateNode, 8 === g.nodeType ? (f = g.parentNode, f.insertBefore(h, g)) : (f = g, f.appendChild(h)), g = g._reactRootContainer, null !== g && void 0 !== g || null !== f.onclick || (f.onclick = te)) : b.appendChild(e.stateNode);\n    } else if (4 !== e.tag && null !== e.child) {\n      e.child.return = e;\n      e = e.child;\n      continue;\n    }\n    if (e === a) break;\n\n    for (; null === e.sibling;) {\n      if (null === e.return || e.return === a) return;\n      e = e.return;\n    }\n\n    e.sibling.return = e.return;\n    e = e.sibling;\n  }\n}\n\nfunction wh(a) {\n  for (var b = a, c = !1, d = void 0, e = void 0;;) {\n    if (!c) {\n      c = b.return;\n\n      a: for (;;) {\n        null === c ? x(\"160\") : void 0;\n\n        switch (c.tag) {\n          case 5:\n            d = c.stateNode;\n            e = !1;\n            break a;\n\n          case 3:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n\n          case 4:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n        }\n\n        c = c.return;\n      }\n\n      c = !0;\n    }\n\n    if (5 === b.tag || 6 === b.tag) {\n      a: for (var f = b, g = f;;) {\n        if (vh(g), null !== g.child && 4 !== g.tag) g.child.return = g, g = g.child;else {\n          if (g === f) break;\n\n          for (; null === g.sibling;) {\n            if (null === g.return || g.return === f) break a;\n            g = g.return;\n          }\n\n          g.sibling.return = g.return;\n          g = g.sibling;\n        }\n      }\n\n      e ? (f = d, g = b.stateNode, 8 === f.nodeType ? f.parentNode.removeChild(g) : f.removeChild(g)) : d.removeChild(b.stateNode);\n    } else if (4 === b.tag) {\n      if (null !== b.child) {\n        d = b.stateNode.containerInfo;\n        e = !0;\n        b.child.return = b;\n        b = b.child;\n        continue;\n      }\n    } else if (vh(b), null !== b.child) {\n      b.child.return = b;\n      b = b.child;\n      continue;\n    }\n\n    if (b === a) break;\n\n    for (; null === b.sibling;) {\n      if (null === b.return || b.return === a) return;\n      b = b.return;\n      4 === b.tag && (c = !1);\n    }\n\n    b.sibling.return = b.return;\n    b = b.sibling;\n  }\n}\n\nfunction zh(a, b) {\n  switch (b.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      th(Pf, Qf, b);\n      break;\n\n    case 1:\n      break;\n\n    case 5:\n      var c = b.stateNode;\n\n      if (null != c) {\n        var d = b.memoizedProps;\n        a = null !== a ? a.memoizedProps : d;\n        var e = b.type,\n            f = b.updateQueue;\n        b.updateQueue = null;\n        null !== f && Ce(c, f, e, a, d, b);\n      }\n\n      break;\n\n    case 6:\n      null === b.stateNode ? x(\"162\") : void 0;\n      b.stateNode.nodeValue = b.memoizedProps;\n      break;\n\n    case 3:\n      break;\n\n    case 12:\n      break;\n\n    case 13:\n      c = b.memoizedState;\n      d = void 0;\n      a = b;\n      null === c ? d = !1 : (d = !0, a = b.child, 0 === c.timedOutAt && (c.timedOutAt = lf()));\n      null !== a && uh(a, d);\n      c = b.updateQueue;\n\n      if (null !== c) {\n        b.updateQueue = null;\n        var g = b.stateNode;\n        null === g && (g = b.stateNode = new ph());\n        c.forEach(function (a) {\n          var c = Ah.bind(null, b, a);\n          g.has(a) || (g.add(a), a.then(c, c));\n        });\n      }\n\n      break;\n\n    case 17:\n      break;\n\n    default:\n      x(\"163\");\n  }\n}\n\nvar Bh = \"function\" === typeof WeakMap ? WeakMap : Map;\n\nfunction Ch(a, b, c) {\n  c = nf(c);\n  c.tag = ah;\n  c.payload = {\n    element: null\n  };\n  var d = b.value;\n\n  c.callback = function () {\n    Dh(d);\n    qh(a, b);\n  };\n\n  return c;\n}\n\nfunction Eh(a, b, c) {\n  c = nf(c);\n  c.tag = ah;\n  var d = a.type.getDerivedStateFromError;\n\n  if (\"function\" === typeof d) {\n    var e = b.value;\n\n    c.payload = function () {\n      return d(e);\n    };\n  }\n\n  var f = a.stateNode;\n  null !== f && \"function\" === typeof f.componentDidCatch && (c.callback = function () {\n    \"function\" !== typeof d && (null === Fh ? Fh = new Set([this]) : Fh.add(this));\n    var c = b.value,\n        e = b.stack;\n    qh(a, b);\n    this.componentDidCatch(c, {\n      componentStack: null !== e ? e : \"\"\n    });\n  });\n  return c;\n}\n\nfunction Gh(a) {\n  switch (a.tag) {\n    case 1:\n      J(a.type) && Ke(a);\n      var b = a.effectTag;\n      return b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 3:\n      return Kf(a), Le(a), b = a.effectTag, 0 !== (b & 64) ? x(\"285\") : void 0, a.effectTag = b & -2049 | 64, a;\n\n    case 5:\n      return Mf(a), null;\n\n    case 13:\n      return b = a.effectTag, b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 18:\n      return null;\n\n    case 4:\n      return Kf(a), null;\n\n    case 10:\n      return Zg(a), null;\n\n    default:\n      return null;\n  }\n}\n\nvar Hh = Tb.ReactCurrentDispatcher,\n    Ih = Tb.ReactCurrentOwner,\n    Jh = 1073741822,\n    Kh = !1,\n    T = null,\n    Lh = null,\n    U = 0,\n    Mh = -1,\n    Nh = !1,\n    V = null,\n    Oh = !1,\n    Ph = null,\n    Qh = null,\n    Rh = null,\n    Fh = null;\n\nfunction Sh() {\n  if (null !== T) for (var a = T.return; null !== a;) {\n    var b = a;\n\n    switch (b.tag) {\n      case 1:\n        var c = b.type.childContextTypes;\n        null !== c && void 0 !== c && Ke(b);\n        break;\n\n      case 3:\n        Kf(b);\n        Le(b);\n        break;\n\n      case 5:\n        Mf(b);\n        break;\n\n      case 4:\n        Kf(b);\n        break;\n\n      case 10:\n        Zg(b);\n    }\n\n    a = a.return;\n  }\n  Lh = null;\n  U = 0;\n  Mh = -1;\n  Nh = !1;\n  T = null;\n}\n\nfunction Th() {\n  for (; null !== V;) {\n    var a = V.effectTag;\n    a & 16 && ke(V.stateNode, \"\");\n\n    if (a & 128) {\n      var b = V.alternate;\n      null !== b && (b = b.ref, null !== b && (\"function\" === typeof b ? b(null) : b.current = null));\n    }\n\n    switch (a & 14) {\n      case 2:\n        yh(V);\n        V.effectTag &= -3;\n        break;\n\n      case 6:\n        yh(V);\n        V.effectTag &= -3;\n        zh(V.alternate, V);\n        break;\n\n      case 4:\n        zh(V.alternate, V);\n        break;\n\n      case 8:\n        a = V, wh(a), a.return = null, a.child = null, a.memoizedState = null, a.updateQueue = null, a = a.alternate, null !== a && (a.return = null, a.child = null, a.memoizedState = null, a.updateQueue = null);\n    }\n\n    V = V.nextEffect;\n  }\n}\n\nfunction Uh() {\n  for (; null !== V;) {\n    if (V.effectTag & 256) a: {\n      var a = V.alternate,\n          b = V;\n\n      switch (b.tag) {\n        case 0:\n        case 11:\n        case 15:\n          th(Of, Nf, b);\n          break a;\n\n        case 1:\n          if (b.effectTag & 256 && null !== a) {\n            var c = a.memoizedProps,\n                d = a.memoizedState;\n            a = b.stateNode;\n            b = a.getSnapshotBeforeUpdate(b.elementType === b.type ? c : L(b.type, c), d);\n            a.__reactInternalSnapshotBeforeUpdate = b;\n          }\n\n          break a;\n\n        case 3:\n        case 5:\n        case 6:\n        case 4:\n        case 17:\n          break a;\n\n        default:\n          x(\"163\");\n      }\n    }\n    V = V.nextEffect;\n  }\n}\n\nfunction Vh(a, b) {\n  for (; null !== V;) {\n    var c = V.effectTag;\n\n    if (c & 36) {\n      var d = V.alternate,\n          e = V,\n          f = b;\n\n      switch (e.tag) {\n        case 0:\n        case 11:\n        case 15:\n          th(Rf, Sf, e);\n          break;\n\n        case 1:\n          var g = e.stateNode;\n          if (e.effectTag & 4) if (null === d) g.componentDidMount();else {\n            var h = e.elementType === e.type ? d.memoizedProps : L(e.type, d.memoizedProps);\n            g.componentDidUpdate(h, d.memoizedState, g.__reactInternalSnapshotBeforeUpdate);\n          }\n          d = e.updateQueue;\n          null !== d && hh(e, d, g, f);\n          break;\n\n        case 3:\n          d = e.updateQueue;\n\n          if (null !== d) {\n            g = null;\n            if (null !== e.child) switch (e.child.tag) {\n              case 5:\n                g = e.child.stateNode;\n                break;\n\n              case 1:\n                g = e.child.stateNode;\n            }\n            hh(e, d, g, f);\n          }\n\n          break;\n\n        case 5:\n          f = e.stateNode;\n          null === d && e.effectTag & 4 && we(e.type, e.memoizedProps) && f.focus();\n          break;\n\n        case 6:\n          break;\n\n        case 4:\n          break;\n\n        case 12:\n          break;\n\n        case 13:\n          break;\n\n        case 17:\n          break;\n\n        default:\n          x(\"163\");\n      }\n    }\n\n    c & 128 && (e = V.ref, null !== e && (f = V.stateNode, \"function\" === typeof e ? e(f) : e.current = f));\n    c & 512 && (Ph = a);\n    V = V.nextEffect;\n  }\n}\n\nfunction Wh(a, b) {\n  Rh = Qh = Ph = null;\n  var c = W;\n  W = !0;\n\n  do {\n    if (b.effectTag & 512) {\n      var d = !1,\n          e = void 0;\n\n      try {\n        var f = b;\n        th(Uf, Nf, f);\n        th(Nf, Tf, f);\n      } catch (g) {\n        d = !0, e = g;\n      }\n\n      d && sh(b, e);\n    }\n\n    b = b.nextEffect;\n  } while (null !== b);\n\n  W = c;\n  c = a.expirationTime;\n  0 !== c && Xh(a, c);\n  X || W || Yh(1073741823, !1);\n}\n\nfunction of() {\n  null !== Qh && Be(Qh);\n  null !== Rh && Rh();\n}\n\nfunction Zh(a, b) {\n  Oh = Kh = !0;\n  a.current === b ? x(\"177\") : void 0;\n  var c = a.pendingCommitExpirationTime;\n  0 === c ? x(\"261\") : void 0;\n  a.pendingCommitExpirationTime = 0;\n  var d = b.expirationTime,\n      e = b.childExpirationTime;\n  ef(a, e > d ? e : d);\n  Ih.current = null;\n  d = void 0;\n  1 < b.effectTag ? null !== b.lastEffect ? (b.lastEffect.nextEffect = b, d = b.firstEffect) : d = b : d = b.firstEffect;\n  ue = Bd;\n  ve = Pd();\n  Bd = !1;\n\n  for (V = d; null !== V;) {\n    e = !1;\n    var f = void 0;\n\n    try {\n      Uh();\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  for (V = d; null !== V;) {\n    e = !1;\n    f = void 0;\n\n    try {\n      Th();\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  Qd(ve);\n  ve = null;\n  Bd = !!ue;\n  ue = null;\n  a.current = b;\n\n  for (V = d; null !== V;) {\n    e = !1;\n    f = void 0;\n\n    try {\n      Vh(a, c);\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  if (null !== d && null !== Ph) {\n    var g = Wh.bind(null, a, d);\n    Qh = r.unstable_runWithPriority(r.unstable_NormalPriority, function () {\n      return Ae(g);\n    });\n    Rh = g;\n  }\n\n  Kh = Oh = !1;\n  \"function\" === typeof Qe && Qe(b.stateNode);\n  c = b.expirationTime;\n  b = b.childExpirationTime;\n  b = b > c ? b : c;\n  0 === b && (Fh = null);\n  $h(a, b);\n}\n\nfunction ai(a) {\n  for (;;) {\n    var b = a.alternate,\n        c = a.return,\n        d = a.sibling;\n\n    if (0 === (a.effectTag & 1024)) {\n      T = a;\n\n      a: {\n        var e = b;\n        b = a;\n        var f = U;\n        var g = b.pendingProps;\n\n        switch (b.tag) {\n          case 2:\n            break;\n\n          case 16:\n            break;\n\n          case 15:\n          case 0:\n            break;\n\n          case 1:\n            J(b.type) && Ke(b);\n            break;\n\n          case 3:\n            Kf(b);\n            Le(b);\n            g = b.stateNode;\n            g.pendingContext && (g.context = g.pendingContext, g.pendingContext = null);\n            if (null === e || null === e.child) Eg(b), b.effectTag &= -3;\n            mh(b);\n            break;\n\n          case 5:\n            Mf(b);\n            var h = If(Hf.current);\n            f = b.type;\n            if (null !== e && null != b.stateNode) nh(e, b, f, g, h), e.ref !== b.ref && (b.effectTag |= 128);else if (g) {\n              var l = If(N.current);\n\n              if (Eg(b)) {\n                g = b;\n                e = g.stateNode;\n                var k = g.type,\n                    m = g.memoizedProps,\n                    p = h;\n                e[Fa] = g;\n                e[Ga] = m;\n                f = void 0;\n                h = k;\n\n                switch (h) {\n                  case \"iframe\":\n                  case \"object\":\n                    E(\"load\", e);\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (k = 0; k < ab.length; k++) {\n                      E(ab[k], e);\n                    }\n\n                    break;\n\n                  case \"source\":\n                    E(\"error\", e);\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    E(\"error\", e);\n                    E(\"load\", e);\n                    break;\n\n                  case \"form\":\n                    E(\"reset\", e);\n                    E(\"submit\", e);\n                    break;\n\n                  case \"details\":\n                    E(\"toggle\", e);\n                    break;\n\n                  case \"input\":\n                    wc(e, m);\n                    E(\"invalid\", e);\n                    se(p, \"onChange\");\n                    break;\n\n                  case \"select\":\n                    e._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    E(\"invalid\", e);\n                    se(p, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ce(e, m), E(\"invalid\", e), se(p, \"onChange\");\n                }\n\n                qe(h, m);\n                k = null;\n\n                for (f in m) {\n                  m.hasOwnProperty(f) && (l = m[f], \"children\" === f ? \"string\" === typeof l ? e.textContent !== l && (k = [\"children\", l]) : \"number\" === typeof l && e.textContent !== \"\" + l && (k = [\"children\", \"\" + l]) : ra.hasOwnProperty(f) && null != l && se(p, f));\n                }\n\n                switch (h) {\n                  case \"input\":\n                    Rb(e);\n                    Ac(e, m, !0);\n                    break;\n\n                  case \"textarea\":\n                    Rb(e);\n                    ee(e, m);\n                    break;\n\n                  case \"select\":\n                  case \"option\":\n                    break;\n\n                  default:\n                    \"function\" === typeof m.onClick && (e.onclick = te);\n                }\n\n                f = k;\n                g.updateQueue = f;\n                g = null !== f ? !0 : !1;\n                g && kh(b);\n              } else {\n                m = b;\n                p = f;\n                e = g;\n                k = 9 === h.nodeType ? h : h.ownerDocument;\n                l === fe.html && (l = ge(p));\n                l === fe.html ? \"script\" === p ? (e = k.createElement(\"div\"), e.innerHTML = \"<script>\\x3c/script>\", k = e.removeChild(e.firstChild)) : \"string\" === typeof e.is ? k = k.createElement(p, {\n                  is: e.is\n                }) : (k = k.createElement(p), \"select\" === p && (p = k, e.multiple ? p.multiple = !0 : e.size && (p.size = e.size))) : k = k.createElementNS(l, p);\n                e = k;\n                e[Fa] = m;\n                e[Ga] = g;\n                lh(e, b, !1, !1);\n                p = e;\n                k = f;\n                m = g;\n                var t = h,\n                    A = re(k, m);\n\n                switch (k) {\n                  case \"iframe\":\n                  case \"object\":\n                    E(\"load\", p);\n                    h = m;\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (h = 0; h < ab.length; h++) {\n                      E(ab[h], p);\n                    }\n\n                    h = m;\n                    break;\n\n                  case \"source\":\n                    E(\"error\", p);\n                    h = m;\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    E(\"error\", p);\n                    E(\"load\", p);\n                    h = m;\n                    break;\n\n                  case \"form\":\n                    E(\"reset\", p);\n                    E(\"submit\", p);\n                    h = m;\n                    break;\n\n                  case \"details\":\n                    E(\"toggle\", p);\n                    h = m;\n                    break;\n\n                  case \"input\":\n                    wc(p, m);\n                    h = vc(p, m);\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  case \"option\":\n                    h = $d(p, m);\n                    break;\n\n                  case \"select\":\n                    p._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    h = n({}, m, {\n                      value: void 0\n                    });\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ce(p, m);\n                    h = be(p, m);\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  default:\n                    h = m;\n                }\n\n                qe(k, h);\n                l = void 0;\n                var v = k,\n                    R = p,\n                    u = h;\n\n                for (l in u) {\n                  if (u.hasOwnProperty(l)) {\n                    var q = u[l];\n                    \"style\" === l ? oe(R, q) : \"dangerouslySetInnerHTML\" === l ? (q = q ? q.__html : void 0, null != q && je(R, q)) : \"children\" === l ? \"string\" === typeof q ? (\"textarea\" !== v || \"\" !== q) && ke(R, q) : \"number\" === typeof q && ke(R, \"\" + q) : \"suppressContentEditableWarning\" !== l && \"suppressHydrationWarning\" !== l && \"autoFocus\" !== l && (ra.hasOwnProperty(l) ? null != q && se(t, l) : null != q && tc(R, l, q, A));\n                  }\n                }\n\n                switch (k) {\n                  case \"input\":\n                    Rb(p);\n                    Ac(p, m, !1);\n                    break;\n\n                  case \"textarea\":\n                    Rb(p);\n                    ee(p, m);\n                    break;\n\n                  case \"option\":\n                    null != m.value && p.setAttribute(\"value\", \"\" + uc(m.value));\n                    break;\n\n                  case \"select\":\n                    h = p;\n                    h.multiple = !!m.multiple;\n                    p = m.value;\n                    null != p ? ae(h, !!m.multiple, p, !1) : null != m.defaultValue && ae(h, !!m.multiple, m.defaultValue, !0);\n                    break;\n\n                  default:\n                    \"function\" === typeof h.onClick && (p.onclick = te);\n                }\n\n                (g = we(f, g)) && kh(b);\n                b.stateNode = e;\n              }\n\n              null !== b.ref && (b.effectTag |= 128);\n            } else null === b.stateNode ? x(\"166\") : void 0;\n            break;\n\n          case 6:\n            e && null != b.stateNode ? oh(e, b, e.memoizedProps, g) : (\"string\" !== typeof g && (null === b.stateNode ? x(\"166\") : void 0), e = If(Hf.current), If(N.current), Eg(b) ? (g = b, f = g.stateNode, e = g.memoizedProps, f[Fa] = g, (g = f.nodeValue !== e) && kh(b)) : (f = b, g = (9 === e.nodeType ? e : e.ownerDocument).createTextNode(g), g[Fa] = b, f.stateNode = g));\n            break;\n\n          case 11:\n            break;\n\n          case 13:\n            g = b.memoizedState;\n\n            if (0 !== (b.effectTag & 64)) {\n              b.expirationTime = f;\n              T = b;\n              break a;\n            }\n\n            g = null !== g;\n            f = null !== e && null !== e.memoizedState;\n            null !== e && !g && f && (e = e.child.sibling, null !== e && (h = b.firstEffect, null !== h ? (b.firstEffect = e, e.nextEffect = h) : (b.firstEffect = b.lastEffect = e, e.nextEffect = null), e.effectTag = 8));\n            if (g || f) b.effectTag |= 4;\n            break;\n\n          case 7:\n            break;\n\n          case 8:\n            break;\n\n          case 12:\n            break;\n\n          case 4:\n            Kf(b);\n            mh(b);\n            break;\n\n          case 10:\n            Zg(b);\n            break;\n\n          case 9:\n            break;\n\n          case 14:\n            break;\n\n          case 17:\n            J(b.type) && Ke(b);\n            break;\n\n          case 18:\n            break;\n\n          default:\n            x(\"156\");\n        }\n\n        T = null;\n      }\n\n      b = a;\n\n      if (1 === U || 1 !== b.childExpirationTime) {\n        g = 0;\n\n        for (f = b.child; null !== f;) {\n          e = f.expirationTime, h = f.childExpirationTime, e > g && (g = e), h > g && (g = h), f = f.sibling;\n        }\n\n        b.childExpirationTime = g;\n      }\n\n      if (null !== T) return T;\n      null !== c && 0 === (c.effectTag & 1024) && (null === c.firstEffect && (c.firstEffect = a.firstEffect), null !== a.lastEffect && (null !== c.lastEffect && (c.lastEffect.nextEffect = a.firstEffect), c.lastEffect = a.lastEffect), 1 < a.effectTag && (null !== c.lastEffect ? c.lastEffect.nextEffect = a : c.firstEffect = a, c.lastEffect = a));\n    } else {\n      a = Gh(a, U);\n      if (null !== a) return a.effectTag &= 1023, a;\n      null !== c && (c.firstEffect = c.lastEffect = null, c.effectTag |= 1024);\n    }\n\n    if (null !== d) return d;\n    if (null !== c) a = c;else break;\n  }\n\n  return null;\n}\n\nfunction bi(a) {\n  var b = Tg(a.alternate, a, U);\n  a.memoizedProps = a.pendingProps;\n  null === b && (b = ai(a));\n  Ih.current = null;\n  return b;\n}\n\nfunction ci(a, b) {\n  Kh ? x(\"243\") : void 0;\n  of();\n  Kh = !0;\n  var c = Hh.current;\n  Hh.current = kg;\n  var d = a.nextExpirationTimeToWorkOn;\n  if (d !== U || a !== Lh || null === T) Sh(), Lh = a, U = d, T = Xe(Lh.current, null, U), a.pendingCommitExpirationTime = 0;\n  var e = !1;\n\n  do {\n    try {\n      if (b) for (; null !== T && !di();) {\n        T = bi(T);\n      } else for (; null !== T;) {\n        T = bi(T);\n      }\n    } catch (u) {\n      if (Yg = Xg = Wg = null, lg(), null === T) e = !0, Dh(u);else {\n        null === T ? x(\"271\") : void 0;\n        var f = T,\n            g = f.return;\n        if (null === g) e = !0, Dh(u);else {\n          a: {\n            var h = a,\n                l = g,\n                k = f,\n                m = u;\n            g = U;\n            k.effectTag |= 1024;\n            k.firstEffect = k.lastEffect = null;\n\n            if (null !== m && \"object\" === typeof m && \"function\" === typeof m.then) {\n              var p = m;\n              m = l;\n              var t = -1,\n                  A = -1;\n\n              do {\n                if (13 === m.tag) {\n                  var v = m.alternate;\n\n                  if (null !== v && (v = v.memoizedState, null !== v)) {\n                    A = 10 * (1073741822 - v.timedOutAt);\n                    break;\n                  }\n\n                  v = m.pendingProps.maxDuration;\n                  if (\"number\" === typeof v) if (0 >= v) t = 0;else if (-1 === t || v < t) t = v;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = l;\n\n              do {\n                if (v = 13 === m.tag) v = void 0 === m.memoizedProps.fallback ? !1 : null === m.memoizedState;\n\n                if (v) {\n                  l = m.updateQueue;\n                  null === l ? (l = new Set(), l.add(p), m.updateQueue = l) : l.add(p);\n\n                  if (0 === (m.mode & 1)) {\n                    m.effectTag |= 64;\n                    k.effectTag &= -1957;\n                    1 === k.tag && (null === k.alternate ? k.tag = 17 : (g = nf(1073741823), g.tag = sf, pf(k, g)));\n                    k.expirationTime = 1073741823;\n                    break a;\n                  }\n\n                  k = h;\n                  l = g;\n                  var R = k.pingCache;\n                  null === R ? (R = k.pingCache = new Bh(), v = new Set(), R.set(p, v)) : (v = R.get(p), void 0 === v && (v = new Set(), R.set(p, v)));\n                  v.has(l) || (v.add(l), k = ei.bind(null, k, p, l), p.then(k, k));\n                  -1 === t ? h = 1073741823 : (-1 === A && (A = 10 * (1073741822 - gf(h, g)) - 5E3), h = A + t);\n                  0 <= h && Mh < h && (Mh = h);\n                  m.effectTag |= 2048;\n                  m.expirationTime = g;\n                  break a;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = Error((ic(k.type) || \"A React component\") + \" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\" + jc(k));\n            }\n\n            Nh = !0;\n            m = jh(m, k);\n            h = l;\n\n            do {\n              switch (h.tag) {\n                case 3:\n                  h.effectTag |= 2048;\n                  h.expirationTime = g;\n                  g = Ch(h, m, g);\n                  eh(h, g);\n                  break a;\n\n                case 1:\n                  if (t = m, A = h.type, k = h.stateNode, 0 === (h.effectTag & 64) && (\"function\" === typeof A.getDerivedStateFromError || null !== k && \"function\" === typeof k.componentDidCatch && (null === Fh || !Fh.has(k)))) {\n                    h.effectTag |= 2048;\n                    h.expirationTime = g;\n                    g = Eh(h, t, g);\n                    eh(h, g);\n                    break a;\n                  }\n\n              }\n\n              h = h.return;\n            } while (null !== h);\n          }\n\n          T = ai(f);\n          continue;\n        }\n      }\n    }\n\n    break;\n  } while (1);\n\n  Kh = !1;\n  Hh.current = c;\n  Yg = Xg = Wg = null;\n  lg();\n  if (e) Lh = null, a.finishedWork = null;else if (null !== T) a.finishedWork = null;else {\n    c = a.current.alternate;\n    null === c ? x(\"281\") : void 0;\n    Lh = null;\n\n    if (Nh) {\n      e = a.latestPendingTime;\n      f = a.latestSuspendedTime;\n      g = a.latestPingedTime;\n\n      if (0 !== e && e < d || 0 !== f && f < d || 0 !== g && g < d) {\n        ff(a, d);\n        fi(a, c, d, a.expirationTime, -1);\n        return;\n      }\n\n      if (!a.didError && b) {\n        a.didError = !0;\n        d = a.nextExpirationTimeToWorkOn = d;\n        b = a.expirationTime = 1073741823;\n        fi(a, c, d, b, -1);\n        return;\n      }\n    }\n\n    b && -1 !== Mh ? (ff(a, d), b = 10 * (1073741822 - gf(a, d)), b < Mh && (Mh = b), b = 10 * (1073741822 - lf()), b = Mh - b, fi(a, c, d, a.expirationTime, 0 > b ? 0 : b)) : (a.pendingCommitExpirationTime = d, a.finishedWork = c);\n  }\n}\n\nfunction sh(a, b) {\n  for (var c = a.return; null !== c;) {\n    switch (c.tag) {\n      case 1:\n        var d = c.stateNode;\n\n        if (\"function\" === typeof c.type.getDerivedStateFromError || \"function\" === typeof d.componentDidCatch && (null === Fh || !Fh.has(d))) {\n          a = jh(b, a);\n          a = Eh(c, a, 1073741823);\n          pf(c, a);\n          qf(c, 1073741823);\n          return;\n        }\n\n        break;\n\n      case 3:\n        a = jh(b, a);\n        a = Ch(c, a, 1073741823);\n        pf(c, a);\n        qf(c, 1073741823);\n        return;\n    }\n\n    c = c.return;\n  }\n\n  3 === a.tag && (c = jh(b, a), c = Ch(a, c, 1073741823), pf(a, c), qf(a, 1073741823));\n}\n\nfunction mf(a, b) {\n  var c = r.unstable_getCurrentPriorityLevel(),\n      d = void 0;\n  if (0 === (b.mode & 1)) d = 1073741823;else if (Kh && !Oh) d = U;else {\n    switch (c) {\n      case r.unstable_ImmediatePriority:\n        d = 1073741823;\n        break;\n\n      case r.unstable_UserBlockingPriority:\n        d = 1073741822 - 10 * (((1073741822 - a + 15) / 10 | 0) + 1);\n        break;\n\n      case r.unstable_NormalPriority:\n        d = 1073741822 - 25 * (((1073741822 - a + 500) / 25 | 0) + 1);\n        break;\n\n      case r.unstable_LowPriority:\n      case r.unstable_IdlePriority:\n        d = 1;\n        break;\n\n      default:\n        x(\"313\");\n    }\n\n    null !== Lh && d === U && --d;\n  }\n  c === r.unstable_UserBlockingPriority && (0 === gi || d < gi) && (gi = d);\n  return d;\n}\n\nfunction ei(a, b, c) {\n  var d = a.pingCache;\n  null !== d && d.delete(b);\n  if (null !== Lh && U === c) Lh = null;else if (b = a.earliestSuspendedTime, d = a.latestSuspendedTime, 0 !== b && c <= b && c >= d) {\n    a.didError = !1;\n    b = a.latestPingedTime;\n    if (0 === b || b > c) a.latestPingedTime = c;\n    df(c, a);\n    c = a.expirationTime;\n    0 !== c && Xh(a, c);\n  }\n}\n\nfunction Ah(a, b) {\n  var c = a.stateNode;\n  null !== c && c.delete(b);\n  b = lf();\n  b = mf(b, a);\n  a = hi(a, b);\n  null !== a && (cf(a, b), b = a.expirationTime, 0 !== b && Xh(a, b));\n}\n\nfunction hi(a, b) {\n  a.expirationTime < b && (a.expirationTime = b);\n  var c = a.alternate;\n  null !== c && c.expirationTime < b && (c.expirationTime = b);\n  var d = a.return,\n      e = null;\n  if (null === d && 3 === a.tag) e = a.stateNode;else for (; null !== d;) {\n    c = d.alternate;\n    d.childExpirationTime < b && (d.childExpirationTime = b);\n    null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);\n\n    if (null === d.return && 3 === d.tag) {\n      e = d.stateNode;\n      break;\n    }\n\n    d = d.return;\n  }\n  return e;\n}\n\nfunction qf(a, b) {\n  a = hi(a, b);\n  null !== a && (!Kh && 0 !== U && b > U && Sh(), cf(a, b), Kh && !Oh && Lh === a || Xh(a, a.expirationTime), ii > ji && (ii = 0, x(\"185\")));\n}\n\nfunction ki(a, b, c, d, e) {\n  return r.unstable_runWithPriority(r.unstable_ImmediatePriority, function () {\n    return a(b, c, d, e);\n  });\n}\n\nvar li = null,\n    Y = null,\n    mi = 0,\n    ni = void 0,\n    W = !1,\n    oi = null,\n    Z = 0,\n    gi = 0,\n    pi = !1,\n    qi = null,\n    X = !1,\n    ri = !1,\n    si = null,\n    ti = r.unstable_now(),\n    ui = 1073741822 - (ti / 10 | 0),\n    vi = ui,\n    ji = 50,\n    ii = 0,\n    wi = null;\n\nfunction xi() {\n  ui = 1073741822 - ((r.unstable_now() - ti) / 10 | 0);\n}\n\nfunction yi(a, b) {\n  if (0 !== mi) {\n    if (b < mi) return;\n    null !== ni && r.unstable_cancelCallback(ni);\n  }\n\n  mi = b;\n  a = r.unstable_now() - ti;\n  ni = r.unstable_scheduleCallback(zi, {\n    timeout: 10 * (1073741822 - b) - a\n  });\n}\n\nfunction fi(a, b, c, d, e) {\n  a.expirationTime = d;\n  0 !== e || di() ? 0 < e && (a.timeoutHandle = ye(Ai.bind(null, a, b, c), e)) : (a.pendingCommitExpirationTime = c, a.finishedWork = b);\n}\n\nfunction Ai(a, b, c) {\n  a.pendingCommitExpirationTime = c;\n  a.finishedWork = b;\n  xi();\n  vi = ui;\n  Bi(a, c);\n}\n\nfunction $h(a, b) {\n  a.expirationTime = b;\n  a.finishedWork = null;\n}\n\nfunction lf() {\n  if (W) return vi;\n  Ci();\n  if (0 === Z || 1 === Z) xi(), vi = ui;\n  return vi;\n}\n\nfunction Xh(a, b) {\n  null === a.nextScheduledRoot ? (a.expirationTime = b, null === Y ? (li = Y = a, a.nextScheduledRoot = a) : (Y = Y.nextScheduledRoot = a, Y.nextScheduledRoot = li)) : b > a.expirationTime && (a.expirationTime = b);\n  W || (X ? ri && (oi = a, Z = 1073741823, Di(a, 1073741823, !1)) : 1073741823 === b ? Yh(1073741823, !1) : yi(a, b));\n}\n\nfunction Ci() {\n  var a = 0,\n      b = null;\n  if (null !== Y) for (var c = Y, d = li; null !== d;) {\n    var e = d.expirationTime;\n\n    if (0 === e) {\n      null === c || null === Y ? x(\"244\") : void 0;\n\n      if (d === d.nextScheduledRoot) {\n        li = Y = d.nextScheduledRoot = null;\n        break;\n      } else if (d === li) li = e = d.nextScheduledRoot, Y.nextScheduledRoot = e, d.nextScheduledRoot = null;else if (d === Y) {\n        Y = c;\n        Y.nextScheduledRoot = li;\n        d.nextScheduledRoot = null;\n        break;\n      } else c.nextScheduledRoot = d.nextScheduledRoot, d.nextScheduledRoot = null;\n\n      d = c.nextScheduledRoot;\n    } else {\n      e > a && (a = e, b = d);\n      if (d === Y) break;\n      if (1073741823 === a) break;\n      c = d;\n      d = d.nextScheduledRoot;\n    }\n  }\n  oi = b;\n  Z = a;\n}\n\nvar Ei = !1;\n\nfunction di() {\n  return Ei ? !0 : r.unstable_shouldYield() ? Ei = !0 : !1;\n}\n\nfunction zi() {\n  try {\n    if (!di() && null !== li) {\n      xi();\n      var a = li;\n\n      do {\n        var b = a.expirationTime;\n        0 !== b && ui <= b && (a.nextExpirationTimeToWorkOn = ui);\n        a = a.nextScheduledRoot;\n      } while (a !== li);\n    }\n\n    Yh(0, !0);\n  } finally {\n    Ei = !1;\n  }\n}\n\nfunction Yh(a, b) {\n  Ci();\n  if (b) for (xi(), vi = ui; null !== oi && 0 !== Z && a <= Z && !(Ei && ui > Z);) {\n    Di(oi, Z, ui > Z), Ci(), xi(), vi = ui;\n  } else for (; null !== oi && 0 !== Z && a <= Z;) {\n    Di(oi, Z, !1), Ci();\n  }\n  b && (mi = 0, ni = null);\n  0 !== Z && yi(oi, Z);\n  ii = 0;\n  wi = null;\n  if (null !== si) for (a = si, si = null, b = 0; b < a.length; b++) {\n    var c = a[b];\n\n    try {\n      c._onComplete();\n    } catch (d) {\n      pi || (pi = !0, qi = d);\n    }\n  }\n  if (pi) throw a = qi, qi = null, pi = !1, a;\n}\n\nfunction Bi(a, b) {\n  W ? x(\"253\") : void 0;\n  oi = a;\n  Z = b;\n  Di(a, b, !1);\n  Yh(1073741823, !1);\n}\n\nfunction Di(a, b, c) {\n  W ? x(\"245\") : void 0;\n  W = !0;\n\n  if (c) {\n    var d = a.finishedWork;\n    null !== d ? Fi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, ze(d)), ci(a, c), d = a.finishedWork, null !== d && (di() ? a.finishedWork = d : Fi(a, d, b)));\n  } else d = a.finishedWork, null !== d ? Fi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, ze(d)), ci(a, c), d = a.finishedWork, null !== d && Fi(a, d, b));\n\n  W = !1;\n}\n\nfunction Fi(a, b, c) {\n  var d = a.firstBatch;\n\n  if (null !== d && d._expirationTime >= c && (null === si ? si = [d] : si.push(d), d._defer)) {\n    a.finishedWork = b;\n    a.expirationTime = 0;\n    return;\n  }\n\n  a.finishedWork = null;\n  a === wi ? ii++ : (wi = a, ii = 0);\n  r.unstable_runWithPriority(r.unstable_ImmediatePriority, function () {\n    Zh(a, b);\n  });\n}\n\nfunction Dh(a) {\n  null === oi ? x(\"246\") : void 0;\n  oi.expirationTime = 0;\n  pi || (pi = !0, qi = a);\n}\n\nfunction Gi(a, b) {\n  var c = X;\n  X = !0;\n\n  try {\n    return a(b);\n  } finally {\n    (X = c) || W || Yh(1073741823, !1);\n  }\n}\n\nfunction Hi(a, b) {\n  if (X && !ri) {\n    ri = !0;\n\n    try {\n      return a(b);\n    } finally {\n      ri = !1;\n    }\n  }\n\n  return a(b);\n}\n\nfunction Ii(a, b, c) {\n  X || W || 0 === gi || (Yh(gi, !1), gi = 0);\n  var d = X;\n  X = !0;\n\n  try {\n    return r.unstable_runWithPriority(r.unstable_UserBlockingPriority, function () {\n      return a(b, c);\n    });\n  } finally {\n    (X = d) || W || Yh(1073741823, !1);\n  }\n}\n\nfunction Ji(a, b, c, d, e) {\n  var f = b.current;\n\n  a: if (c) {\n    c = c._reactInternalFiber;\n\n    b: {\n      2 === ed(c) && 1 === c.tag ? void 0 : x(\"170\");\n      var g = c;\n\n      do {\n        switch (g.tag) {\n          case 3:\n            g = g.stateNode.context;\n            break b;\n\n          case 1:\n            if (J(g.type)) {\n              g = g.stateNode.__reactInternalMemoizedMergedChildContext;\n              break b;\n            }\n\n        }\n\n        g = g.return;\n      } while (null !== g);\n\n      x(\"171\");\n      g = void 0;\n    }\n\n    if (1 === c.tag) {\n      var h = c.type;\n\n      if (J(h)) {\n        c = Ne(c, h, g);\n        break a;\n      }\n    }\n\n    c = g;\n  } else c = He;\n\n  null === b.context ? b.context = c : b.pendingContext = c;\n  b = e;\n  e = nf(d);\n  e.payload = {\n    element: a\n  };\n  b = void 0 === b ? null : b;\n  null !== b && (e.callback = b);\n  of();\n  pf(f, e);\n  qf(f, d);\n  return d;\n}\n\nfunction Ki(a, b, c, d) {\n  var e = b.current,\n      f = lf();\n  e = mf(f, e);\n  return Ji(a, b, c, e, d);\n}\n\nfunction Li(a) {\n  a = a.current;\n  if (!a.child) return null;\n\n  switch (a.child.tag) {\n    case 5:\n      return a.child.stateNode;\n\n    default:\n      return a.child.stateNode;\n  }\n}\n\nfunction Mi(a, b, c) {\n  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: Wb,\n    key: null == d ? null : \"\" + d,\n    children: a,\n    containerInfo: b,\n    implementation: c\n  };\n}\n\nAb = function Ab(a, b, c) {\n  switch (b) {\n    case \"input\":\n      yc(a, c);\n      b = c.name;\n\n      if (\"radio\" === c.type && null != b) {\n        for (c = a; c.parentNode;) {\n          c = c.parentNode;\n        }\n\n        c = c.querySelectorAll(\"input[name=\" + JSON.stringify(\"\" + b) + '][type=\"radio\"]');\n\n        for (b = 0; b < c.length; b++) {\n          var d = c[b];\n\n          if (d !== a && d.form === a.form) {\n            var e = Ka(d);\n            e ? void 0 : x(\"90\");\n            Sb(d);\n            yc(d, e);\n          }\n        }\n      }\n\n      break;\n\n    case \"textarea\":\n      de(a, c);\n      break;\n\n    case \"select\":\n      b = c.value, null != b && ae(a, !!c.multiple, b, !1);\n  }\n};\n\nfunction Ni(a) {\n  var b = 1073741822 - 25 * (((1073741822 - lf() + 500) / 25 | 0) + 1);\n  b >= Jh && (b = Jh - 1);\n  this._expirationTime = Jh = b;\n  this._root = a;\n  this._callbacks = this._next = null;\n  this._hasChildren = this._didComplete = !1;\n  this._children = null;\n  this._defer = !0;\n}\n\nNi.prototype.render = function (a) {\n  this._defer ? void 0 : x(\"250\");\n  this._hasChildren = !0;\n  this._children = a;\n  var b = this._root._internalRoot,\n      c = this._expirationTime,\n      d = new Oi();\n  Ji(a, b, null, c, d._onCommit);\n  return d;\n};\n\nNi.prototype.then = function (a) {\n  if (this._didComplete) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nNi.prototype.commit = function () {\n  var a = this._root._internalRoot,\n      b = a.firstBatch;\n  this._defer && null !== b ? void 0 : x(\"251\");\n\n  if (this._hasChildren) {\n    var c = this._expirationTime;\n\n    if (b !== this) {\n      this._hasChildren && (c = this._expirationTime = b._expirationTime, this.render(this._children));\n\n      for (var d = null, e = b; e !== this;) {\n        d = e, e = e._next;\n      }\n\n      null === d ? x(\"251\") : void 0;\n      d._next = e._next;\n      this._next = b;\n      a.firstBatch = this;\n    }\n\n    this._defer = !1;\n    Bi(a, c);\n    b = this._next;\n    this._next = null;\n    b = a.firstBatch = b;\n    null !== b && b._hasChildren && b.render(b._children);\n  } else this._next = null, this._defer = !1;\n};\n\nNi.prototype._onComplete = function () {\n  if (!this._didComplete) {\n    this._didComplete = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      (0, a[b])();\n    }\n  }\n};\n\nfunction Oi() {\n  this._callbacks = null;\n  this._didCommit = !1;\n  this._onCommit = this._onCommit.bind(this);\n}\n\nOi.prototype.then = function (a) {\n  if (this._didCommit) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nOi.prototype._onCommit = function () {\n  if (!this._didCommit) {\n    this._didCommit = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      var c = a[b];\n      \"function\" !== typeof c ? x(\"191\", c) : void 0;\n      c();\n    }\n  }\n};\n\nfunction Pi(a, b, c) {\n  b = K(3, null, null, b ? 3 : 0);\n  a = {\n    current: b,\n    containerInfo: a,\n    pendingChildren: null,\n    pingCache: null,\n    earliestPendingTime: 0,\n    latestPendingTime: 0,\n    earliestSuspendedTime: 0,\n    latestSuspendedTime: 0,\n    latestPingedTime: 0,\n    didError: !1,\n    pendingCommitExpirationTime: 0,\n    finishedWork: null,\n    timeoutHandle: -1,\n    context: null,\n    pendingContext: null,\n    hydrate: c,\n    nextExpirationTimeToWorkOn: 0,\n    expirationTime: 0,\n    firstBatch: null,\n    nextScheduledRoot: null\n  };\n  this._internalRoot = b.stateNode = a;\n}\n\nPi.prototype.render = function (a, b) {\n  var c = this._internalRoot,\n      d = new Oi();\n  b = void 0 === b ? null : b;\n  null !== b && d.then(b);\n  Ki(a, c, null, d._onCommit);\n  return d;\n};\n\nPi.prototype.unmount = function (a) {\n  var b = this._internalRoot,\n      c = new Oi();\n  a = void 0 === a ? null : a;\n  null !== a && c.then(a);\n  Ki(null, b, null, c._onCommit);\n  return c;\n};\n\nPi.prototype.legacy_renderSubtreeIntoContainer = function (a, b, c) {\n  var d = this._internalRoot,\n      e = new Oi();\n  c = void 0 === c ? null : c;\n  null !== c && e.then(c);\n  Ki(b, d, a, e._onCommit);\n  return e;\n};\n\nPi.prototype.createBatch = function () {\n  var a = new Ni(this),\n      b = a._expirationTime,\n      c = this._internalRoot,\n      d = c.firstBatch;\n  if (null === d) c.firstBatch = a, a._next = null;else {\n    for (c = null; null !== d && d._expirationTime >= b;) {\n      c = d, d = d._next;\n    }\n\n    a._next = d;\n    null !== c && (c._next = a);\n  }\n  return a;\n};\n\nfunction Qi(a) {\n  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || \" react-mount-point-unstable \" !== a.nodeValue));\n}\n\nGb = Gi;\nHb = Ii;\n\nIb = function Ib() {\n  W || 0 === gi || (Yh(gi, !1), gi = 0);\n};\n\nfunction Ri(a, b) {\n  b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute(\"data-reactroot\")));\n  if (!b) for (var c; c = a.lastChild;) {\n    a.removeChild(c);\n  }\n  return new Pi(a, !1, b);\n}\n\nfunction Si(a, b, c, d, e) {\n  var f = c._reactRootContainer;\n\n  if (f) {\n    if (\"function\" === typeof e) {\n      var g = e;\n\n      e = function e() {\n        var a = Li(f._internalRoot);\n        g.call(a);\n      };\n    }\n\n    null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n  } else {\n    f = c._reactRootContainer = Ri(c, d);\n\n    if (\"function\" === typeof e) {\n      var h = e;\n\n      e = function e() {\n        var a = Li(f._internalRoot);\n        h.call(a);\n      };\n    }\n\n    Hi(function () {\n      null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n    });\n  }\n\n  return Li(f._internalRoot);\n}\n\nfunction Ti(a, b) {\n  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  Qi(b) ? void 0 : x(\"200\");\n  return Mi(a, b, null, c);\n}\n\nvar Vi = {\n  createPortal: Ti,\n  findDOMNode: function findDOMNode(a) {\n    if (null == a) return null;\n    if (1 === a.nodeType) return a;\n    var b = a._reactInternalFiber;\n    void 0 === b && (\"function\" === typeof a.render ? x(\"188\") : x(\"268\", Object.keys(a)));\n    a = hd(b);\n    a = null === a ? null : a.stateNode;\n    return a;\n  },\n  hydrate: function hydrate(a, b, c) {\n    Qi(b) ? void 0 : x(\"200\");\n    return Si(null, a, b, !0, c);\n  },\n  render: function render(a, b, c) {\n    Qi(b) ? void 0 : x(\"200\");\n    return Si(null, a, b, !1, c);\n  },\n  unstable_renderSubtreeIntoContainer: function unstable_renderSubtreeIntoContainer(a, b, c, d) {\n    Qi(c) ? void 0 : x(\"200\");\n    null == a || void 0 === a._reactInternalFiber ? x(\"38\") : void 0;\n    return Si(a, b, c, !1, d);\n  },\n  unmountComponentAtNode: function unmountComponentAtNode(a) {\n    Qi(a) ? void 0 : x(\"40\");\n    return a._reactRootContainer ? (Hi(function () {\n      Si(null, null, a, !1, function () {\n        a._reactRootContainer = null;\n      });\n    }), !0) : !1;\n  },\n  unstable_createPortal: function unstable_createPortal() {\n    return Ti.apply(void 0, arguments);\n  },\n  unstable_batchedUpdates: Gi,\n  unstable_interactiveUpdates: Ii,\n  flushSync: function flushSync(a, b) {\n    W ? x(\"187\") : void 0;\n    var c = X;\n    X = !0;\n\n    try {\n      return ki(a, b);\n    } finally {\n      X = c, Yh(1073741823, !1);\n    }\n  },\n  unstable_createRoot: Ui,\n  unstable_flushControlled: function unstable_flushControlled(a) {\n    var b = X;\n    X = !0;\n\n    try {\n      ki(a);\n    } finally {\n      (X = b) || W || Yh(1073741823, !1);\n    }\n  },\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    Events: [Ia, Ja, Ka, Ba.injectEventPluginsByName, pa, Qa, function (a) {\n      ya(a, Pa);\n    }, Eb, Fb, Dd, Da]\n  }\n};\n\nfunction Ui(a, b) {\n  Qi(a) ? void 0 : x(\"299\", \"unstable_createRoot\");\n  return new Pi(a, !0, null != b && !0 === b.hydrate);\n}\n\n(function (a) {\n  var b = a.findFiberByHostInstance;\n  return Te(n({}, a, {\n    overrideProps: null,\n    currentDispatcherRef: Tb.ReactCurrentDispatcher,\n    findHostInstanceByFiber: function findHostInstanceByFiber(a) {\n      a = hd(a);\n      return null === a ? null : a.stateNode;\n    },\n    findFiberByHostInstance: function findFiberByHostInstance(a) {\n      return b ? b(a) : null;\n    }\n  }));\n})({\n  findFiberByHostInstance: Ha,\n  bundleType: 0,\n  version: \"16.8.6\",\n  rendererPackageName: \"react-dom\"\n});\n\nvar Wi = {\n  default: Vi\n},\n    Xi = Wi && Vi || Wi;\nmodule.exports = Xi.default || Xi;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}","/** @license React v0.13.6\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar d = null,\n    e = !1,\n    g = 3,\n    k = -1,\n    l = -1,\n    m = !1,\n    n = !1;\n\nfunction p() {\n  if (!m) {\n    var a = d.expirationTime;\n    n ? q() : n = !0;\n\n    _r(t, a);\n  }\n}\n\nfunction u() {\n  var a = d,\n      b = d.next;\n  if (d === b) d = null;else {\n    var c = d.previous;\n    d = c.next = b;\n    b.previous = c;\n  }\n  a.next = a.previous = null;\n  c = a.callback;\n  b = a.expirationTime;\n  a = a.priorityLevel;\n  var f = g,\n      Q = l;\n  g = a;\n  l = b;\n\n  try {\n    var h = c();\n  } finally {\n    g = f, l = Q;\n  }\n\n  if (\"function\" === typeof h) if (h = {\n    callback: h,\n    priorityLevel: a,\n    expirationTime: b,\n    next: null,\n    previous: null\n  }, null === d) d = h.next = h.previous = h;else {\n    c = null;\n    a = d;\n\n    do {\n      if (a.expirationTime >= b) {\n        c = a;\n        break;\n      }\n\n      a = a.next;\n    } while (a !== d);\n\n    null === c ? c = d : c === d && (d = h, p());\n    b = c.previous;\n    b.next = c.previous = h;\n    h.next = c;\n    h.previous = b;\n  }\n}\n\nfunction v() {\n  if (-1 === k && null !== d && 1 === d.priorityLevel) {\n    m = !0;\n\n    try {\n      do {\n        u();\n      } while (null !== d && 1 === d.priorityLevel);\n    } finally {\n      m = !1, null !== d ? p() : n = !1;\n    }\n  }\n}\n\nfunction t(a) {\n  m = !0;\n  var b = e;\n  e = a;\n\n  try {\n    if (a) for (; null !== d;) {\n      var c = exports.unstable_now();\n\n      if (d.expirationTime <= c) {\n        do {\n          u();\n        } while (null !== d && d.expirationTime <= c);\n      } else break;\n    } else if (null !== d) {\n      do {\n        u();\n      } while (null !== d && !w());\n    }\n  } finally {\n    m = !1, e = b, null !== d ? p() : n = !1, v();\n  }\n}\n\nvar x = Date,\n    y = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    z = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    A = \"function\" === typeof requestAnimationFrame ? requestAnimationFrame : void 0,\n    B = \"function\" === typeof cancelAnimationFrame ? cancelAnimationFrame : void 0,\n    C,\n    D;\n\nfunction E(a) {\n  C = A(function (b) {\n    z(D);\n    a(b);\n  });\n  D = y(function () {\n    B(C);\n    a(exports.unstable_now());\n  }, 100);\n}\n\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var F = performance;\n\n  exports.unstable_now = function () {\n    return F.now();\n  };\n} else exports.unstable_now = function () {\n  return x.now();\n};\n\nvar _r,\n    q,\n    w,\n    G = null;\n\n\"undefined\" !== typeof window ? G = window : \"undefined\" !== typeof global && (G = global);\n\nif (G && G._schedMock) {\n  var H = G._schedMock;\n  _r = H[0];\n  q = H[1];\n  w = H[2];\n  exports.unstable_now = H[3];\n} else if (\"undefined\" === typeof window || \"function\" !== typeof MessageChannel) {\n  var I = null,\n      J = function J(a) {\n    if (null !== I) try {\n      I(a);\n    } finally {\n      I = null;\n    }\n  };\n\n  _r = function r(a) {\n    null !== I ? setTimeout(_r, 0, a) : (I = a, setTimeout(J, 0, !1));\n  };\n\n  q = function q() {\n    I = null;\n  };\n\n  w = function w() {\n    return !1;\n  };\n} else {\n  \"undefined\" !== typeof console && (\"function\" !== typeof A && console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"), \"function\" !== typeof B && console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));\n  var K = null,\n      L = !1,\n      M = -1,\n      N = !1,\n      O = !1,\n      P = 0,\n      R = 33,\n      S = 33;\n\n  w = function w() {\n    return P <= exports.unstable_now();\n  };\n\n  var T = new MessageChannel(),\n      U = T.port2;\n\n  T.port1.onmessage = function () {\n    L = !1;\n    var a = K,\n        b = M;\n    K = null;\n    M = -1;\n    var c = exports.unstable_now(),\n        f = !1;\n    if (0 >= P - c) if (-1 !== b && b <= c) f = !0;else {\n      N || (N = !0, E(V));\n      K = a;\n      M = b;\n      return;\n    }\n\n    if (null !== a) {\n      O = !0;\n\n      try {\n        a(f);\n      } finally {\n        O = !1;\n      }\n    }\n  };\n\n  var V = function V(a) {\n    if (null !== K) {\n      E(V);\n      var b = a - P + S;\n      b < S && R < S ? (8 > b && (b = 8), S = b < R ? R : b) : R = b;\n      P = a + S;\n      L || (L = !0, U.postMessage(void 0));\n    } else N = !1;\n  };\n\n  _r = function _r(a, b) {\n    K = a;\n    M = b;\n    O || 0 > b ? U.postMessage(void 0) : N || (N = !0, E(V));\n  };\n\n  q = function q() {\n    K = null;\n    L = !1;\n    M = -1;\n  };\n}\n\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_NormalPriority = 3;\nexports.unstable_IdlePriority = 5;\nexports.unstable_LowPriority = 4;\n\nexports.unstable_runWithPriority = function (a, b) {\n  switch (a) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n\n    default:\n      a = 3;\n  }\n\n  var c = g,\n      f = k;\n  g = a;\n  k = exports.unstable_now();\n\n  try {\n    return b();\n  } finally {\n    g = c, k = f, v();\n  }\n};\n\nexports.unstable_next = function (a) {\n  switch (g) {\n    case 1:\n    case 2:\n    case 3:\n      var b = 3;\n      break;\n\n    default:\n      b = g;\n  }\n\n  var c = g,\n      f = k;\n  g = b;\n  k = exports.unstable_now();\n\n  try {\n    return a();\n  } finally {\n    g = c, k = f, v();\n  }\n};\n\nexports.unstable_scheduleCallback = function (a, b) {\n  var c = -1 !== k ? k : exports.unstable_now();\n  if (\"object\" === typeof b && null !== b && \"number\" === typeof b.timeout) b = c + b.timeout;else switch (g) {\n    case 1:\n      b = c + -1;\n      break;\n\n    case 2:\n      b = c + 250;\n      break;\n\n    case 5:\n      b = c + 1073741823;\n      break;\n\n    case 4:\n      b = c + 1E4;\n      break;\n\n    default:\n      b = c + 5E3;\n  }\n  a = {\n    callback: a,\n    priorityLevel: g,\n    expirationTime: b,\n    next: null,\n    previous: null\n  };\n  if (null === d) d = a.next = a.previous = a, p();else {\n    c = null;\n    var f = d;\n\n    do {\n      if (f.expirationTime > b) {\n        c = f;\n        break;\n      }\n\n      f = f.next;\n    } while (f !== d);\n\n    null === c ? c = d : c === d && (d = a, p());\n    b = c.previous;\n    b.next = c.previous = a;\n    a.next = c;\n    a.previous = b;\n  }\n  return a;\n};\n\nexports.unstable_cancelCallback = function (a) {\n  var b = a.next;\n\n  if (null !== b) {\n    if (b === a) d = null;else {\n      a === d && (d = b);\n      var c = a.previous;\n      c.next = b;\n      b.previous = c;\n    }\n    a.next = a.previous = null;\n  }\n};\n\nexports.unstable_wrapCallback = function (a) {\n  var b = g;\n  return function () {\n    var c = g,\n        f = k;\n    g = b;\n    k = exports.unstable_now();\n\n    try {\n      return a.apply(this, arguments);\n    } finally {\n      g = c, k = f, v();\n    }\n  };\n};\n\nexports.unstable_getCurrentPriorityLevel = function () {\n  return g;\n};\n\nexports.unstable_shouldYield = function () {\n  return !e && (null !== d && d.expirationTime < l || w());\n};\n\nexports.unstable_continueExecution = function () {\n  null !== d && p();\n};\n\nexports.unstable_pauseExecution = function () {};\n\nexports.unstable_getFirstCallbackNode = function () {\n  return d;\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nfunction emptyFunctionWithReset() {}\n\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function () {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n\n    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n    err.name = 'Invariant Violation';\n    throw err;\n  }\n\n  ;\n  shim.isRequired = shim;\n\n  function getShim() {\n    return shim;\n  }\n\n  ; // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\nmodule.exports = ReactPropTypesSecret;","/** @license React v16.8.6\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar b = \"function\" === typeof Symbol && Symbol.for,\n    c = b ? Symbol.for(\"react.element\") : 60103,\n    d = b ? Symbol.for(\"react.portal\") : 60106,\n    e = b ? Symbol.for(\"react.fragment\") : 60107,\n    f = b ? Symbol.for(\"react.strict_mode\") : 60108,\n    g = b ? Symbol.for(\"react.profiler\") : 60114,\n    h = b ? Symbol.for(\"react.provider\") : 60109,\n    k = b ? Symbol.for(\"react.context\") : 60110,\n    l = b ? Symbol.for(\"react.async_mode\") : 60111,\n    m = b ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    n = b ? Symbol.for(\"react.forward_ref\") : 60112,\n    p = b ? Symbol.for(\"react.suspense\") : 60113,\n    q = b ? Symbol.for(\"react.memo\") : 60115,\n    r = b ? Symbol.for(\"react.lazy\") : 60116;\n\nfunction t(a) {\n  if (\"object\" === typeof a && null !== a) {\n    var u = a.$$typeof;\n\n    switch (u) {\n      case c:\n        switch (a = a.type, a) {\n          case l:\n          case m:\n          case e:\n          case g:\n          case f:\n          case p:\n            return a;\n\n          default:\n            switch (a = a && a.$$typeof, a) {\n              case k:\n              case n:\n              case h:\n                return a;\n\n              default:\n                return u;\n            }\n\n        }\n\n      case r:\n      case q:\n      case d:\n        return u;\n    }\n  }\n}\n\nfunction v(a) {\n  return t(a) === m;\n}\n\nexports.typeOf = t;\nexports.AsyncMode = l;\nexports.ConcurrentMode = m;\nexports.ContextConsumer = k;\nexports.ContextProvider = h;\nexports.Element = c;\nexports.ForwardRef = n;\nexports.Fragment = e;\nexports.Lazy = r;\nexports.Memo = q;\nexports.Portal = d;\nexports.Profiler = g;\nexports.StrictMode = f;\nexports.Suspense = p;\n\nexports.isValidElementType = function (a) {\n  return \"string\" === typeof a || \"function\" === typeof a || a === e || a === m || a === g || a === f || a === p || \"object\" === typeof a && null !== a && (a.$$typeof === r || a.$$typeof === q || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n);\n};\n\nexports.isAsyncMode = function (a) {\n  return v(a) || t(a) === l;\n};\n\nexports.isConcurrentMode = v;\n\nexports.isContextConsumer = function (a) {\n  return t(a) === k;\n};\n\nexports.isContextProvider = function (a) {\n  return t(a) === h;\n};\n\nexports.isElement = function (a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === c;\n};\n\nexports.isForwardRef = function (a) {\n  return t(a) === n;\n};\n\nexports.isFragment = function (a) {\n  return t(a) === e;\n};\n\nexports.isLazy = function (a) {\n  return t(a) === r;\n};\n\nexports.isMemo = function (a) {\n  return t(a) === q;\n};\n\nexports.isPortal = function (a) {\n  return t(a) === d;\n};\n\nexports.isProfiler = function (a) {\n  return t(a) === g;\n};\n\nexports.isStrictMode = function (a) {\n  return t(a) === f;\n};\n\nexports.isSuspense = function (a) {\n  return t(a) === p;\n};","'use strict';\n\nvar utils = require('./utils');\n\nvar bind = require('./helpers/bind');\n\nvar Axios = require('./core/Axios');\n\nvar defaults = require('./defaults');\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\n\n\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context); // Copy axios.prototype to instance\n\n  utils.extend(instance, Axios.prototype, context); // Copy context to instance\n\n  utils.extend(instance, context);\n  return instance;\n} // Create the default instance to be exported\n\n\nvar axios = createInstance(defaults); // Expose Axios class to allow class inheritance\n\naxios.Axios = Axios; // Factory for creating new instances\n\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n}; // Expose Cancel & CancelToken\n\n\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel'); // Expose all/spread\n\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = require('./helpers/spread');\nmodule.exports = axios; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = axios;","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer);\n};\n\nfunction isBuffer(obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n} // For Node v0.10 support. Remove this eventually.\n\n\nfunction isSlowBuffer(obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0));\n}","'use strict';\n\nvar defaults = require('./../defaults');\n\nvar utils = require('./../utils');\n\nvar InterceptorManager = require('./InterceptorManager');\n\nvar dispatchRequest = require('./dispatchRequest');\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\n\n\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\n\n\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {\n    method: 'get'\n  }, this.defaults, config);\n  config.method = config.method.toLowerCase(); // Hook up interceptors middleware\n\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n}; // Provide aliases for supported request methods\n\n\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function (url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function (url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\nmodule.exports = Axios;","// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};","'use strict';\n\nvar createError = require('./createError');\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\n\n\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus; // Note: status is not exposed by XDomainRequest\n\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError('Request failed with status code ' + response.status, response.config, null, response.request, response));\n  }\n};","'use strict';\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\n\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  return error;\n};","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n}\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\n\n\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};","'use strict';\n\nvar utils = require('./../utils'); // Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\n\n\nvar ignoreDuplicateOf = ['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent'];\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\n\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) {\n    return parsed;\n  }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n  return parsed;\n};","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = utils.isStandardBrowserEnv() ? // Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\nfunction standardBrowserEnv() {\n  var msie = /(msie|trident)/i.test(navigator.userAgent);\n  var urlParsingNode = document.createElement('a');\n  var originURL;\n  /**\n  * Parse a URL to discover it's components\n  *\n  * @param {String} url The URL to be parsed\n  * @returns {Object}\n  */\n\n  function resolveURL(url) {\n    var href = url;\n\n    if (msie) {\n      // IE needs attribute set twice to normalize properties\n      urlParsingNode.setAttribute('href', href);\n      href = urlParsingNode.href;\n    }\n\n    urlParsingNode.setAttribute('href', href); // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n\n    return {\n      href: urlParsingNode.href,\n      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n      host: urlParsingNode.host,\n      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n      hostname: urlParsingNode.hostname,\n      port: urlParsingNode.port,\n      pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname\n    };\n  }\n\n  originURL = resolveURL(window.location.href);\n  /**\n  * Determine if a URL shares the same origin as the current location\n  *\n  * @param {String} requestURL The URL to test\n  * @returns {boolean} True if URL shares the same origin, otherwise false\n  */\n\n  return function isURLSameOrigin(requestURL) {\n    var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;\n    return parsed.protocol === originURL.protocol && parsed.host === originURL.host;\n  };\n}() : // Non standard browser envs (web workers, react-native) lack needed support.\nfunction nonStandardBrowserEnv() {\n  return function isURLSameOrigin() {\n    return true;\n  };\n}();","'use strict'; // btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\n\nE.prototype = new Error();\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n\n  for ( // initialize result and counter\n  var block, charCode, idx = 0, map = chars; // if the next str index does not exist:\n  //   change the mapping table to \"=\"\n  //   check if d has no fractional digits\n  str.charAt(idx | 0) || (map = '=', idx % 1); // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n  output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n\n    block = block << 8 | charCode;\n  }\n\n  return output;\n}\n\nmodule.exports = btoa;","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = utils.isStandardBrowserEnv() ? // Standard browser envs support document.cookie\nfunction standardBrowserEnv() {\n  return {\n    write: function write(name, value, expires, path, domain, secure) {\n      var cookie = [];\n      cookie.push(name + '=' + encodeURIComponent(value));\n\n      if (utils.isNumber(expires)) {\n        cookie.push('expires=' + new Date(expires).toGMTString());\n      }\n\n      if (utils.isString(path)) {\n        cookie.push('path=' + path);\n      }\n\n      if (utils.isString(domain)) {\n        cookie.push('domain=' + domain);\n      }\n\n      if (secure === true) {\n        cookie.push('secure');\n      }\n\n      document.cookie = cookie.join('; ');\n    },\n    read: function read(name) {\n      var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return match ? decodeURIComponent(match[3]) : null;\n    },\n    remove: function remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  };\n}() : // Non standard browser env (web workers, react-native) lack needed support.\nfunction nonStandardBrowserEnv() {\n  return {\n    write: function write() {},\n    read: function read() {\n      return null;\n    },\n    remove: function remove() {}\n  };\n}();","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\n\n\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\n\n\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\n\n\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;","'use strict';\n\nvar utils = require('./../utils');\n\nvar transformData = require('./transformData');\n\nvar isCancel = require('../cancel/isCancel');\n\nvar defaults = require('../defaults');\n\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\n\nvar combineURLs = require('./../helpers/combineURLs');\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\n\n\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\n\n\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config); // Support baseURL config\n\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  } // Ensure headers exist\n\n\n  config.headers = config.headers || {}; // Transform request data\n\n  config.data = transformData(config.data, config.headers, config.transformRequest); // Flatten headers\n\n  config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers || {});\n  utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function cleanHeaderConfig(method) {\n    delete config.headers[method];\n  });\n  var adapter = config.adapter || defaults.adapter;\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config); // Transform response data\n\n    response.data = transformData(response.data, response.headers, config.transformResponse);\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config); // Transform response data\n\n      if (reason && reason.response) {\n        reason.response.data = transformData(reason.response.data, reason.response.headers, config.transformResponse);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};","'use strict';\n\nvar utils = require('./../utils');\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\n\n\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n  return data;\n};","'use strict';\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\n\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};","'use strict';\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\n\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '') : baseURL;\n};","'use strict';\n\nvar Cancel = require('./Cancel');\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\n\n\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\n\n\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\n\n\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;","'use strict';\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\n\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};","'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _gud = require('gud');\n\nvar _gud2 = _interopRequireDefault(_gud);\n\nvar _warning = require('fbjs/lib/warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MAX_SIGNED_31_BIT_INT = 1073741823; // Inlined Object.is polyfill.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\nfunction objectIs(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction createEventEmitter(value) {\n  var handlers = [];\n  return {\n    on: function on(handler) {\n      handlers.push(handler);\n    },\n    off: function off(handler) {\n      handlers = handlers.filter(function (h) {\n        return h !== handler;\n      });\n    },\n    get: function get() {\n      return value;\n    },\n    set: function set(newValue, changedBits) {\n      value = newValue;\n      handlers.forEach(function (handler) {\n        return handler(value, changedBits);\n      });\n    }\n  };\n}\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nfunction createReactContext(defaultValue, calculateChangedBits) {\n  var _Provider$childContex, _Consumer$contextType;\n\n  var contextProp = '__create-react-context-' + (0, _gud2.default)() + '__';\n\n  var Provider = function (_Component) {\n    _inherits(Provider, _Component);\n\n    function Provider() {\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, Provider);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.emitter = createEventEmitter(_this.props.value), _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    Provider.prototype.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[contextProp] = this.emitter, _ref;\n    };\n\n    Provider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        var oldValue = this.props.value;\n        var newValue = nextProps.value;\n        var changedBits = void 0;\n\n        if (objectIs(oldValue, newValue)) {\n          changedBits = 0; // No change\n        } else {\n          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;\n\n          if (process.env.NODE_ENV !== 'production') {\n            (0, _warning2.default)((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits);\n          }\n\n          changedBits |= 0;\n\n          if (changedBits !== 0) {\n            this.emitter.set(nextProps.value, changedBits);\n          }\n        }\n      }\n    };\n\n    Provider.prototype.render = function render() {\n      return this.props.children;\n    };\n\n    return Provider;\n  }(_react.Component);\n\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = _propTypes2.default.object.isRequired, _Provider$childContex);\n\n  var Consumer = function (_Component2) {\n    _inherits(Consumer, _Component2);\n\n    function Consumer() {\n      var _temp2, _this2, _ret2;\n\n      _classCallCheck(this, Consumer);\n\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, _Component2.call.apply(_Component2, [this].concat(args))), _this2), _this2.state = {\n        value: _this2.getValue()\n      }, _this2.onUpdate = function (newValue, changedBits) {\n        var observedBits = _this2.observedBits | 0;\n\n        if ((observedBits & changedBits) !== 0) {\n          _this2.setState({\n            value: _this2.getValue()\n          });\n        }\n      }, _temp2), _possibleConstructorReturn(_this2, _ret2);\n    }\n\n    Consumer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var observedBits = nextProps.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n      : observedBits;\n    };\n\n    Consumer.prototype.componentDidMount = function componentDidMount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].on(this.onUpdate);\n      }\n\n      var observedBits = this.props.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n      : observedBits;\n    };\n\n    Consumer.prototype.componentWillUnmount = function componentWillUnmount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].off(this.onUpdate);\n      }\n    };\n\n    Consumer.prototype.getValue = function getValue() {\n      if (this.context[contextProp]) {\n        return this.context[contextProp].get();\n      } else {\n        return defaultValue;\n      }\n    };\n\n    Consumer.prototype.render = function render() {\n      return onlyChild(this.props.children)(this.state.value);\n    };\n\n    return Consumer;\n  }(_react.Component);\n\n  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = _propTypes2.default.object, _Consumer$contextType);\n  return {\n    Provider: Provider,\n    Consumer: Consumer\n  };\n}\n\nexports.default = createReactContext;\nmodule.exports = exports['default'];","// @flow\n'use strict';\n\nvar key = '__global_unique_id__';\n\nmodule.exports = function () {\n  return global[key] = (global[key] || 0) + 1;\n};","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  var printWarning = function printWarning(format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;","\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\n\n\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\n\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};","/*!\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n!function (e, t) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = t(require(\"react\")) : \"function\" == typeof define && define.amd ? define([\"react\"], t) : \"object\" == typeof exports ? exports.CKEditor = t(require(\"react\")) : e.CKEditor = t(e.React);\n}(window, function (e) {\n  return function (e) {\n    var t = {};\n\n    function n(o) {\n      if (t[o]) return t[o].exports;\n      var r = t[o] = {\n        i: o,\n        l: !1,\n        exports: {}\n      };\n      return e[o].call(r.exports, r, r.exports, n), r.l = !0, r.exports;\n    }\n\n    return n.m = e, n.c = t, n.d = function (e, t, o) {\n      n.o(e, t) || Object.defineProperty(e, t, {\n        enumerable: !0,\n        get: o\n      });\n    }, n.r = function (e) {\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(e, \"__esModule\", {\n        value: !0\n      });\n    }, n.t = function (e, t) {\n      if (1 & t && (e = n(e)), 8 & t) return e;\n      if (4 & t && \"object\" == typeof e && e && e.__esModule) return e;\n      var o = Object.create(null);\n      if (n.r(o), Object.defineProperty(o, \"default\", {\n        enumerable: !0,\n        value: e\n      }), 2 & t && \"string\" != typeof e) for (var r in e) {\n        n.d(o, r, function (t) {\n          return e[t];\n        }.bind(null, r));\n      }\n      return o;\n    }, n.n = function (e) {\n      var t = e && e.__esModule ? function () {\n        return e.default;\n      } : function () {\n        return e;\n      };\n      return n.d(t, \"a\", t), t;\n    }, n.o = function (e, t) {\n      return Object.prototype.hasOwnProperty.call(e, t);\n    }, n.p = \"\", n(n.s = 2);\n  }([function (e, t, n) {\n    e.exports = n(3)();\n  }, function (t, n) {\n    t.exports = e;\n  }, function (e, t, n) {\n    \"use strict\";\n\n    n.r(t), n.d(t, \"default\", function () {\n      return l;\n    });\n    var o = n(1),\n        r = n.n(o),\n        i = n(0),\n        u = n.n(i);\n\n    function a(e) {\n      return (a = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function c(e, t) {\n      for (var n = 0; n < t.length; n++) {\n        var o = t[n];\n        o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, o.key, o);\n      }\n    }\n\n    function f(e, t) {\n      return !t || \"object\" !== a(t) && \"function\" != typeof t ? function (e) {\n        if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        return e;\n      }(e) : t;\n    }\n\n    function s(e) {\n      return (s = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n        return e.__proto__ || Object.getPrototypeOf(e);\n      })(e);\n    }\n\n    function p(e, t) {\n      return (p = Object.setPrototypeOf || function (e, t) {\n        return e.__proto__ = t, e;\n      })(e, t);\n    }\n\n    var l = function (e) {\n      function t(e) {\n        var n;\n        return function (e, t) {\n          if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, t), (n = f(this, s(t).call(this, e))).editor = null, n.domContainer = r.a.createRef(), n;\n      }\n\n      return function (e, t) {\n        if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n        e.prototype = Object.create(t && t.prototype, {\n          constructor: {\n            value: e,\n            writable: !0,\n            configurable: !0\n          }\n        }), t && p(e, t);\n      }(t, r.a.Component), function (e, t, n) {\n        t && c(e.prototype, t), n && c(e, n);\n      }(t, [{\n        key: \"shouldComponentUpdate\",\n        value: function value(e) {\n          return !!this.editor && (this._shouldUpdateContent(e) && this.editor.setData(e.data), \"disabled\" in e && (this.editor.isReadOnly = e.disabled), !1);\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function value() {\n          this._initializeEditor();\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function value() {\n          this._destroyEditor();\n        }\n      }, {\n        key: \"render\",\n        value: function value() {\n          return r.a.createElement(\"div\", {\n            ref: this.domContainer,\n            dangerouslySetInnerHTML: {\n              __html: this.props.data || \"\"\n            }\n          });\n        }\n      }, {\n        key: \"_initializeEditor\",\n        value: function value() {\n          var e = this;\n          this.props.editor.create(this.domContainer.current, this.props.config).then(function (t) {\n            e.editor = t, \"disabled\" in e.props && (t.isReadOnly = e.props.disabled), e.props.onInit && e.props.onInit(t);\n            var n = t.model.document,\n                o = t.editing.view.document;\n            n.on(\"change:data\", function (n) {\n              e.props.onChange && e.props.onChange(n, t);\n            }), o.on(\"focus\", function (n) {\n              e.props.onFocus && e.props.onFocus(n, t);\n            }), o.on(\"blur\", function (n) {\n              e.props.onBlur && e.props.onBlur(n, t);\n            });\n          }).catch(function (e) {\n            console.error(e);\n          });\n        }\n      }, {\n        key: \"_destroyEditor\",\n        value: function value() {\n          var e = this;\n          this.editor && this.editor.destroy().then(function () {\n            e.editor = null;\n          });\n        }\n      }, {\n        key: \"_shouldUpdateContent\",\n        value: function value(e) {\n          return this.props.data !== e.data && this.editor.getData() !== e.data;\n        }\n      }]), t;\n    }();\n\n    l.propTypes = {\n      editor: u.a.func.isRequired,\n      data: u.a.string,\n      config: u.a.object,\n      onChange: u.a.func,\n      onInit: u.a.func,\n      onFocus: u.a.func,\n      onBlur: u.a.func,\n      disabled: u.a.bool\n    }, l.defaultProps = {\n      config: {}\n    };\n  }, function (e, t, n) {\n    \"use strict\";\n\n    var o = n(4);\n\n    function r() {}\n\n    function i() {}\n\n    i.resetWarningCache = r, e.exports = function () {\n      function e(e, t, n, r, i, u) {\n        if (u !== o) {\n          var a = new Error(\"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types\");\n          throw a.name = \"Invariant Violation\", a;\n        }\n      }\n\n      function t() {\n        return e;\n      }\n\n      e.isRequired = e;\n      var n = {\n        array: e,\n        bool: e,\n        func: e,\n        number: e,\n        object: e,\n        string: e,\n        symbol: e,\n        any: e,\n        arrayOf: t,\n        element: e,\n        elementType: e,\n        instanceOf: t,\n        node: e,\n        objectOf: t,\n        oneOf: t,\n        oneOfType: t,\n        shape: t,\n        exact: t,\n        checkPropTypes: i,\n        resetWarningCache: r\n      };\n      return n.PropTypes = n, n;\n    };\n  }, function (e, t, n) {\n    \"use strict\";\n\n    e.exports = \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\";\n  }]).default;\n});","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","var atob = require('./atob');\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {\n    var code = p.charCodeAt(0).toString(16).toUpperCase();\n\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n\n    return '%' + code;\n  }));\n}\n\nmodule.exports = function (str) {\n  var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n\n  switch (output.length % 4) {\n    case 0:\n      break;\n\n    case 2:\n      output += \"==\";\n      break;\n\n    case 3:\n      output += \"=\";\n      break;\n\n    default:\n      throw \"Illegal base64url string!\";\n  }\n\n  try {\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n};","/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction InvalidCharacterError(message) {\n  this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\nfunction polyfill(input) {\n  var str = String(input).replace(/=+$/, '');\n\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n\n  for ( // initialize result and counters\n  var bc = 0, bs, buffer, idx = 0, output = ''; // get next character\n  buffer = str.charAt(idx++); // character found in table? initialize bit storage and add its ascii value;\n  ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, // and if not first of each 4 characters,\n  // convert the first 8 bits to one ascii character\n  bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n\n  return output;\n}\n\nmodule.exports = typeof window !== 'undefined' && window.atob && window.atob.bind(window) || polyfill;","import baseClone from './_baseClone.js';\n/** Used to compose bitmasks for cloning. */\n\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n/**\n * This method is like `_.cloneWith` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the deep cloned value.\n * @see _.cloneWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(true);\n *   }\n * }\n *\n * var el = _.cloneDeepWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 20\n */\n\nfunction cloneDeepWith(value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n}\n\nexport default cloneDeepWith;","import baseClone from './_baseClone.js';\n/** Used to compose bitmasks for cloning. */\n\nvar CLONE_SYMBOLS_FLAG = 4;\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\n\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;"],"sourceRoot":""}